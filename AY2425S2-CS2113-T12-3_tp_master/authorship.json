[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |      Name      |            Github Profile             | Portfolio ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"vihaan27"},"content":"--------|:--------------:|:-------------------------------------:|:---------:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vihaan27"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Vihaan Asthana | [Github](https://github.com/vihaan27) | [Portfolio](docs/team/vihaan27.m)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wongyihao02"},"content":"[](https://via.placeholder.com/100.png?text\u003dPhoto) | XiaoNa | [Github](https://github.com/samst) | [Portfolio](github.com)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Mengyan | [https://github.com/kmnyn](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"display|wong yi hao|https://github.com/wongyihao02|null","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"vihaan27"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"kmnyn":1,"wongyihao02":4,"vihaan27":3,"-":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 17 or above installed.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"* The `TODO_NAME` cannot contain punctuation.  ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"{Give a \u0027cheat sheet\u0027 of taskCommands here}","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"xubin0":1,"-":41}},{"path":"src/main/java/Attendance/AttendanceFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Attendance;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"public class AttendanceFile {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"    ArrayList\u003cAttendanceList\u003e attendanceFile;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    public AttendanceFile(ArrayList\u003cAttendanceList\u003e attendanceList) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"        attendanceFile \u003d attendanceList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    public ArrayList\u003cAttendanceList\u003e getAttendanceList() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"        return attendanceFile;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    public AttendanceList getAttendanceByNameAndWeek(int week, String tutorialName) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        for (AttendanceList list : attendanceFile) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"            boolean equalWeekNumber\u003d list.getWeekNumber() \u003d\u003d week;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"            boolean equalTutorialName\u003dlist.getTutorialClass().getTutorialName().equals(tutorialName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"            if ( equalWeekNumber\u0026\u0026 equalTutorialName) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"                return list;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Attendance file does not contain this attendance list\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wongyihao02"},"content":"    public void addAttendanceList(AttendanceList attendanceList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wongyihao02"},"content":"        attendanceFile.add(attendanceList);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":26,"wongyihao02":4}},{"path":"src/main/java/Attendance/AttendanceList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Attendance;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import students.Student;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class AttendanceList {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    private Map\u003cStudent, String\u003e attendanceMap;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    private int weekNumber;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"    private Map\u003cStudent, ArrayList\u003cString\u003e\u003e commentList;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    private TutorialClass tutorialClass;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    public AttendanceList(TutorialClass tutorialClass, int weekNumber) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        this.tutorialClass \u003d tutorialClass;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        attendanceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wongyihao02"},"content":"        commentList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        for (Student student : tutorialClass.getStudentList().getStudents()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            attendanceMap.put(student, \"Present\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wongyihao02"},"content":"            commentList.put(student, new ArrayList\u003cString\u003e());","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        this.weekNumber \u003d weekNumber;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    public void markPresent(Student student) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        if (attendanceMap.containsKey(student)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"            attendanceMap.put(student, \"Present\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"    public void markAbsent(Student student) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"        if (attendanceMap.containsKey(student)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"            attendanceMap.put(student, \"Absent\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wongyihao02"},"content":"    public void addComments(Student student, ArrayList\u003cString\u003e comments) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wongyihao02"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wongyihao02"},"content":"            if (commentList.containsKey(student)) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wongyihao02"},"content":"                commentList.get(student).addAll(comments);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wongyihao02"},"content":"            } else {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wongyihao02"},"content":"                commentList.put(student, comments);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wongyihao02"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(\"error adding comment : \" + e.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"    public ArrayList\u003cString\u003e getComment(Student student) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wongyihao02"},"content":"        try {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wongyihao02"},"content":"            if (commentList.containsKey(student)) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"                return commentList.get(student);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wongyihao02"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(\"error getting comments : \" + e.getMessage());","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wongyihao02"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"    public boolean isPresent(Student student) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"        return attendanceMap.get(student).equals(\"Present\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wongyihao02"},"content":"    public Map\u003cStudent, ArrayList\u003cString\u003e\u003e getCommentList() { return commentList; }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"    public Map\u003cStudent, String\u003e getAttendanceMap() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xubin0"},"content":"        return attendanceMap;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xubin0"},"content":"    public int getWeekNumber() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"        return weekNumber;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xubin0"},"content":"    public void setWeekNumber(int weekNumber) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"        this.weekNumber \u003d weekNumber;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xubin0"},"content":"    public TutorialClass getTutorialClass() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"        return tutorialClass;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"    public void setTutorialClass(TutorialClass tutorialClass) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"        this.tutorialClass \u003d tutorialClass;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xubin0"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xubin0"},"content":"        return \"weekNumber: \" + weekNumber + tutorialClass.toString()+\"\\n\" +attendanceMap.toString()+\"\\n\" +commentList.toString();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":66,"wongyihao02":28}},{"path":"src/main/java/Command/attendanceListCommands/commentOnStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyihao02"},"content":"package Command.attendanceListCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wongyihao02"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wongyihao02"},"content":"import students.Student;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wongyihao02"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wongyihao02"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wongyihao02"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wongyihao02"},"content":"public class commentOnStudentCommand implements Command\u003cAttendanceFile\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wongyihao02"},"content":"    //parts in format of tutname,week,studentname,matricnum//comments1;comments2              (comments seperated by ;)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wongyihao02"},"content":"    public void execute(String parts, AttendanceFile attendanceList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wongyihao02"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wongyihao02"},"content":"            //if empty input string","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wongyihao02"},"content":"            if (parts \u003d\u003d null || parts.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wongyihao02"},"content":"            String[] partsArray2 \u003d parts.split(\"//\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wongyihao02"},"content":"            //if not all inputs given or too many","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wongyihao02"},"content":"            if (partsArray2.length !\u003d 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wongyihao02"},"content":"            String[] partsArray \u003d partsArray2[0].split(\",\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wongyihao02"},"content":"            String[] commentsArray \u003d partsArray2[1].split(\";\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cString\u003e comments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wongyihao02"},"content":"            for (String comment : commentsArray) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wongyihao02"},"content":"                comments.add(comment.trim());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cAttendanceList\u003e list \u003d attendanceList.getAttendanceList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wongyihao02"},"content":"            AttendanceList theOne \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wongyihao02"},"content":"            for (AttendanceList a : list) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wongyihao02"},"content":"                if (a.getWeekNumber() \u003d\u003d Integer.parseInt(partsArray[1]) \u0026\u0026 a.getTutorialClass().getTutorialName().equals(partsArray[0])) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wongyihao02"},"content":"                    theOne \u003d a;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wongyihao02"},"content":"            //if given tut and week num has no attendanceList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wongyihao02"},"content":"            if (theOne \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cStudent\u003e stdList \u003d theOne.getTutorialClass().getStudentList().getStudents();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wongyihao02"},"content":"            Student derStudent \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wongyihao02"},"content":"            for (Student s : stdList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wongyihao02"},"content":"                if (s.getMatricNumber().equals(partsArray[3]) \u0026\u0026 s.getName().equals(partsArray[2])) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wongyihao02"},"content":"                    derStudent \u003d s;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wongyihao02"},"content":"            //if name and matric num does not match a student in the attendanceList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"            if (derStudent \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wongyihao02"},"content":"            theOne.addComments(derStudent, comments);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wongyihao02"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wongyihao02"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"wongyihao02":71}},{"path":"src/main/java/Command/attendanceListCommands/createNewAttendanceList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyihao02"},"content":"package Command.attendanceListCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wongyihao02"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wongyihao02"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wongyihao02"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"import students.Student;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wongyihao02"},"content":"public class createNewAttendanceList implements Command\u003cArrayList\u003cObject\u003e\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wongyihao02"},"content":"    //parts in tutname,week num","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wongyihao02"},"content":"    public void execute(String parts, ArrayList\u003cObject\u003e tutAtten) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wongyihao02"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wongyihao02"},"content":"            TutorialClassList tutlist \u003d (TutorialClassList) tutAtten.get(0);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wongyihao02"},"content":"            AttendanceFile attendanceFile \u003d (AttendanceFile) tutAtten.get(1);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wongyihao02"},"content":"            if (parts \u003d\u003d null || parts.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidListAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wongyihao02"},"content":"            String[] partsArray \u003d parts.split(\",\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wongyihao02"},"content":"            if (partsArray.length !\u003d 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidListAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wongyihao02"},"content":"            TutorialClass tutClass \u003d tutlist.getByName(partsArray[0]);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wongyihao02"},"content":"            if (tutClass \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidListAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wongyihao02"},"content":"            AttendanceList attenlist \u003d attendanceFile.getAttendanceByNameAndWeek(Integer.parseInt(partsArray[1]), tutClass.getTutorialName());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wongyihao02"},"content":"            if (attenlist \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wongyihao02"},"content":"                attenlist \u003d new AttendanceList(tutClass, Integer.parseInt(partsArray[1]));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wongyihao02"},"content":"                for (Student student : attenlist.getTutorialClass().getStudentList().getStudents()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wongyihao02"},"content":"                    attenlist.markAbsent(student);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wongyihao02"},"content":"                attendanceFile.addAttendanceList(attenlist);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wongyihao02"},"content":"                System.out.println(\"Attendance List created\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wongyihao02"},"content":"            } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wongyihao02"},"content":"                System.out.println(\"Attendance list for the week already exists\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wongyihao02"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wongyihao02"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"wongyihao02":51}},{"path":"src/main/java/Command/attendanceListCommands/deleteStudentComment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyihao02"},"content":"package Command.attendanceListCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wongyihao02"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wongyihao02"},"content":"import students.Student;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wongyihao02"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wongyihao02"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"public class deleteStudentComment implements Command\u003cAttendanceFile\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wongyihao02"},"content":"    //parts in format of tutname,week,studentname,matricnum//commentnum","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wongyihao02"},"content":"    public void execute(String parts, AttendanceFile attendanceList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wongyihao02"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wongyihao02"},"content":"            //if empty input string","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wongyihao02"},"content":"            if (parts \u003d\u003d null || parts.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wongyihao02"},"content":"            String[] partsArray2 \u003d parts.split(\"//\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wongyihao02"},"content":"            //if not all inputs given or too many","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wongyihao02"},"content":"            if (partsArray2.length !\u003d 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wongyihao02"},"content":"            String[] partsArray \u003d partsArray2[0].split(\",\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cAttendanceList\u003e list \u003d attendanceList.getAttendanceList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wongyihao02"},"content":"            AttendanceList theOne \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wongyihao02"},"content":"            for (AttendanceList a : list) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wongyihao02"},"content":"                if (a.getWeekNumber() \u003d\u003d Integer.parseInt(partsArray[1]) \u0026\u0026 a.getTutorialClass().getTutorialName().equals(partsArray[0])) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wongyihao02"},"content":"                    theOne \u003d a;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wongyihao02"},"content":"            //if given tut and week num has no attendanceList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wongyihao02"},"content":"            if (theOne \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cStudent\u003e stdList \u003d theOne.getTutorialClass().getStudentList().getStudents();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wongyihao02"},"content":"            Student derStudent \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wongyihao02"},"content":"            for (Student s : stdList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wongyihao02"},"content":"                if (s.getMatricNumber().equals(partsArray[3]) \u0026\u0026 s.getName().equals(partsArray[2])) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wongyihao02"},"content":"                    derStudent \u003d s;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wongyihao02"},"content":"            //if name and matric num does not match a student in the attendanceList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wongyihao02"},"content":"            if (derStudent \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wongyihao02"},"content":"            Map\u003cStudent, ArrayList\u003cString\u003e\u003e commentlist \u003d theOne.getCommentList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wongyihao02"},"content":"            if (commentlist.containsKey(derStudent)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wongyihao02"},"content":"                if (Integer.parseInt(partsArray[1]) - 1 \u003e\u003d 0 \u0026\u0026 Integer.parseInt(partsArray[1]) - 1 \u003c\u003d commentlist.get(derStudent).size()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"                    commentlist.get(derStudent).remove(Integer.parseInt(partsArray[1]) - 1);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wongyihao02"},"content":"                    System.out.println(\"Comment deleted\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wongyihao02"},"content":"                } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wongyihao02"},"content":"                    System.out.println(\"Comment to be deleted was not present\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wongyihao02"},"content":"            } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wongyihao02"},"content":"                System.out.println(\"student has no comments\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wongyihao02"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wongyihao02"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"wongyihao02":76}},{"path":"src/main/java/Command/attendanceListCommands/markStudentAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyihao02"},"content":"package Command.attendanceListCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wongyihao02"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wongyihao02"},"content":"import students.Student;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wongyihao02"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wongyihao02"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"public class markStudentAttendanceCommand implements Command\u003cAttendanceFile\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wongyihao02"},"content":"    //parts in form of tutname,weeknum,name,matricnumber","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wongyihao02"},"content":"    public void execute(String parts, AttendanceFile attendanceList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wongyihao02"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wongyihao02"},"content":"            //if empty input string","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wongyihao02"},"content":"            if (parts \u003d\u003d null || parts.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wongyihao02"},"content":"            String[] partsArray \u003d parts.split(\",\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wongyihao02"},"content":"            //if not all inputs given or too many","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wongyihao02"},"content":"            if (partsArray.length !\u003d 4) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cAttendanceList\u003e list \u003d attendanceList.getAttendanceList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wongyihao02"},"content":"            AttendanceList theOne \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wongyihao02"},"content":"            for (AttendanceList a : list) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wongyihao02"},"content":"                if (a.getWeekNumber() \u003d\u003d Integer.parseInt(partsArray[1]) \u0026\u0026 a.getTutorialClass().getTutorialName().equals(partsArray[0])) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wongyihao02"},"content":"                    theOne \u003d a;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wongyihao02"},"content":"            //if given tut and week num has no attendanceList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wongyihao02"},"content":"            if (theOne \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cStudent\u003e stdList \u003d theOne.getTutorialClass().getStudentList().getStudents();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wongyihao02"},"content":"            Student derStudent \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wongyihao02"},"content":"            for (Student s : stdList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wongyihao02"},"content":"                if (s.getMatricNumber().equals(partsArray[3]) \u0026\u0026 s.getName().equals(partsArray[2])) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wongyihao02"},"content":"                    derStudent \u003d s;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wongyihao02"},"content":"            //if name and matric num does not match a student in the attendanceList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wongyihao02"},"content":"            if (derStudent \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wongyihao02"},"content":"            Map\u003cStudent, String\u003e attendanceMap \u003d theOne.getAttendanceMap();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wongyihao02"},"content":"            attendanceMap.replace(derStudent, \"Present\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wongyihao02"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"wongyihao02":62}},{"path":"src/main/java/Command/attendanceListCommands/showAttendanceListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyihao02"},"content":"package Command.attendanceListCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wongyihao02"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wongyihao02"},"content":"import students.Student;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wongyihao02"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wongyihao02"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"public class showAttendanceListCommand implements Command\u003cAttendanceFile\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wongyihao02"},"content":"    //parts in format of tutname,week","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wongyihao02"},"content":"    public void execute(String parts, AttendanceFile attendanceList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wongyihao02"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wongyihao02"},"content":"            //if empty input string","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wongyihao02"},"content":"            if (parts \u003d\u003d null || parts.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidListAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wongyihao02"},"content":"            String[] partsArray \u003d parts.split(\",\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wongyihao02"},"content":"            //if not all inputs given or too many","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wongyihao02"},"content":"            if (partsArray.length !\u003d 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidListAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cAttendanceList\u003e list \u003d attendanceList.getAttendanceList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wongyihao02"},"content":"            AttendanceList theOne \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wongyihao02"},"content":"            for (AttendanceList a : list) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wongyihao02"},"content":"                if (a.getWeekNumber() \u003d\u003d Integer.parseInt(partsArray[1]) \u0026\u0026 a.getTutorialClass().getTutorialName().equals(partsArray[0])) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wongyihao02"},"content":"                    theOne \u003d a;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wongyihao02"},"content":"            //if given tut and week num has no attendanceList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wongyihao02"},"content":"            if (theOne \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidListAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wongyihao02"},"content":"            Map\u003cStudent, String\u003e attendanceMap \u003d theOne.getAttendanceMap();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(\"Attendance List for tutorial \" + theOne.getTutorialClass().getTutorialName() + \" week \" + theOne.getWeekNumber() + \":\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wongyihao02"},"content":"            if (attendanceMap.isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wongyihao02"},"content":"                System.out.println(\"No student in attendance list\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wongyihao02"},"content":"            } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wongyihao02"},"content":"                for (Map.Entry\u003cStudent, String\u003e entry : attendanceMap.entrySet()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wongyihao02"},"content":"                    Student student \u003d entry.getKey();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wongyihao02"},"content":"                    String attendance \u003d entry.getValue();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wongyihao02"},"content":"                    System.out.println(student.getName() + \"(\" + student.getMatricNumber() + \"): \" + attendance);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wongyihao02"},"content":"                System.out.println(\"end of list\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wongyihao02"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wongyihao02"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"wongyihao02":63}},{"path":"src/main/java/Command/attendanceListCommands/unMarkStudentAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyihao02"},"content":"package Command.attendanceListCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wongyihao02"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wongyihao02"},"content":"import students.Student;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wongyihao02"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wongyihao02"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"public class unMarkStudentAttendanceCommand implements Command\u003cAttendanceFile\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wongyihao02"},"content":"    public void execute(String parts, AttendanceFile attendanceList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wongyihao02"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wongyihao02"},"content":"            //if empty input string","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wongyihao02"},"content":"            if (parts \u003d\u003d null || parts.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wongyihao02"},"content":"            String[] partsArray \u003d parts.split(\",\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wongyihao02"},"content":"            //if not all inputs given or too many","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wongyihao02"},"content":"            if (partsArray.length !\u003d 4) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cAttendanceList\u003e list \u003d attendanceList.getAttendanceList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wongyihao02"},"content":"            AttendanceList theOne \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wongyihao02"},"content":"            for (AttendanceList a : list) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wongyihao02"},"content":"                if (a.getWeekNumber() \u003d\u003d Integer.parseInt(partsArray[1]) \u0026\u0026 a.getTutorialClass().getTutorialName().equals(partsArray[0])) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wongyihao02"},"content":"                    theOne \u003d a;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wongyihao02"},"content":"            //if given tut and week num has no attendanceList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wongyihao02"},"content":"            if (theOne \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cStudent\u003e stdList \u003d theOne.getTutorialClass().getStudentList().getStudents();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wongyihao02"},"content":"            Student derStudent \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wongyihao02"},"content":"            for (Student s : stdList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wongyihao02"},"content":"                if (s.getMatricNumber().equals(partsArray[3]) \u0026\u0026 s.getName().equals(partsArray[2])) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wongyihao02"},"content":"                    derStudent \u003d s;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wongyihao02"},"content":"            //if name and matric num does not match a student in the attendanceList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wongyihao02"},"content":"            if (derStudent \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wongyihao02"},"content":"            Map\u003cStudent, String\u003e attendanceMap \u003d theOne.getAttendanceMap();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wongyihao02"},"content":"            attendanceMap.replace(derStudent, \"Absent\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wongyihao02"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"wongyihao02":60}},{"path":"src/main/java/Command/attendanceListCommands/viewStudentCommentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyihao02"},"content":"package Command.attendanceListCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wongyihao02"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wongyihao02"},"content":"import students.Student;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wongyihao02"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wongyihao02"},"content":"public class viewStudentCommentsCommand implements Command\u003cAttendanceFile\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"    //parts in format of tutname,week,studentname,matricnum","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wongyihao02"},"content":"    public void execute(String parts, AttendanceFile attendanceList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wongyihao02"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wongyihao02"},"content":"            //if empty input string","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wongyihao02"},"content":"            if (parts \u003d\u003d null || parts.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wongyihao02"},"content":"            String[] partsArray \u003d parts.split(\",\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wongyihao02"},"content":"            //if not all inputs given or too many","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wongyihao02"},"content":"            if (partsArray.length !\u003d 4) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cAttendanceList\u003e list \u003d attendanceList.getAttendanceList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wongyihao02"},"content":"            AttendanceList theOne \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wongyihao02"},"content":"            for (AttendanceList a : list) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wongyihao02"},"content":"                if (a.getWeekNumber() \u003d\u003d Integer.parseInt(partsArray[1]) \u0026\u0026 a.getTutorialClass().getTutorialName().equals(partsArray[0])) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wongyihao02"},"content":"                    theOne \u003d a;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wongyihao02"},"content":"            //if given tut and week num has no attendanceList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wongyihao02"},"content":"            if (theOne \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cStudent\u003e stdList \u003d theOne.getTutorialClass().getStudentList().getStudents();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wongyihao02"},"content":"            Student derStudent \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wongyihao02"},"content":"            for (Student s : stdList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wongyihao02"},"content":"                if (s.getMatricNumber().equals(partsArray[3]) \u0026\u0026 s.getName().equals(partsArray[2])) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wongyihao02"},"content":"                    derStudent \u003d s;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wongyihao02"},"content":"            //if name and matric num does not match a student in the attendanceList","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wongyihao02"},"content":"            if (derStudent \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidmarkAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wongyihao02"},"content":"            if (theOne.getCommentList().containsKey(derStudent)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wongyihao02"},"content":"                ArrayList\u003cString\u003e comments \u003d theOne.getCommentList().get(derStudent);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"                System.out.println(\"List of comments: \");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wongyihao02"},"content":"                for (int i \u003d 0; i \u003c comments.size(); i++) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wongyihao02"},"content":"                    System.out.println((i + 1) + \". \" + comments.get(i));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wongyihao02"},"content":"            } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wongyihao02"},"content":"                System.out.println(\"Selected student has no comments given to them\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wongyihao02"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wongyihao02"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"wongyihao02":70}},{"path":"src/main/java/Command/commandHandler/CommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.commandHandler;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wongyihao02"},"content":"import Command.attendanceListCommands.*;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Command.studentcommands.*;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.*;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import Command.tutorialCommands.DeleteTutorialCommand;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import Command.tutorialCommands.ListTutorialStudentsCommand;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import Command.tutorialCommands.ListUpcomingTutorialsCommand;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"import Command.tutorialCommands.NewTutorialCommand;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"import task.TaskType;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"import Util.CommandListPrinter;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":" * The CommandFactory class is responsible for creating the appropriate Command object based on the","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":" * command string passed to it. This class is used to instantiate the correct command type for a given user input.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":" * Example:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":" * If the input is \"TODO\", the factory will create a TodoCommand.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":" * The factory method ensures that the correct command is created, so that it can be executed in the CommandHandler.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"public class CommandFactory {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"     * Creates the appropriate Command object based on the provided command string.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"     * This method matches the command string with a predefined set of valid commands","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"     * and returns the corresponding Command object.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"     * @param commandString The command string to match and create the corresponding Command object.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"     * @return A Command object corresponding to the provided command string.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"     * Returns null if the command is invalid.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"    public static Command createCommand(String commandString) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"        String[] parts \u003d commandString.split(\"\\\\s+\", 3); // Split into command, type, and rest of input","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"Invalid command format. Please use: /add -[type] [task details]\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"            return null;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"        // Remove the leading \u0027/\u0027 and convert the command to uppercase","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"        String command \u003d parts[0].toUpperCase();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"        String taskTypeShortcut \u003d parts[1];","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"        String listType \u003d parts[1];","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"        if (\"HELP\".equals(command)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samstt"},"content":"           CommandListPrinter.printCommands();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"           return null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"        if (\"ADD\".equals(command)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"            TaskType taskType \u003d TaskType.fromShortcut(taskTypeShortcut);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"            if (taskType \u003d\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"                System.out.println(\"Invalid task type. Use -c (Consultation), -pt (Todo), -pe (Event), -pd (Deadline)\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"                return null;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"            switch (taskType) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wongyihao02"},"content":"                case TODO : return new TodoCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wongyihao02"},"content":"                case EVENT : return new EventCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"                case DEADLINE : return new DeadlineCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wongyihao02"},"content":"                case CONSULTATION : return new ConsultationCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kmnyn"},"content":"        // Handle TaskList commands","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kmnyn"},"content":"        if (listType.equalsIgnoreCase(\"-p\")) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kmnyn"},"content":"            switch (command) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kmnyn"},"content":"            case \"DELETE\":","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kmnyn"},"content":"                return new DeleteTaskCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"            case \"MARK\":","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kmnyn"},"content":"                return new MarkTaskCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"            case \"UNMARK\":","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kmnyn"},"content":"                return new UnmarkTaskCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"            case \"LIST\":","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kmnyn"},"content":"                return new ListTaskCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"            case \"FIND\":","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kmnyn"},"content":"                return new FindTaskCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"            case \"RENAME\":","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kmnyn"},"content":"                return new RenameTaskCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"            default:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xubin0"},"content":"                System.out.println(\"Sorry, TASync does not know what \\\"\" + command + \"\\\" means.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"                CommandListPrinter.printCommands();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kmnyn"},"content":"                return null;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wongyihao02"},"content":"        } else if (listType.equalsIgnoreCase(\"-t\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wongyihao02"},"content":"            switch (command) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samstt"},"content":"            case \"NEWTUTORIAL\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samstt"},"content":"                return new NewTutorialCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samstt"},"content":"            case \"DELETE\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samstt"},"content":"                return new DeleteTutorialCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wongyihao02"},"content":"            case \"LIST\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wongyihao02"},"content":"                return new ListUpcomingTutorialsCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samstt"},"content":"            case \"NEWSTUDENT\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samstt"},"content":"                return new NewStudentCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samstt"},"content":"            case \"DELETESTUDENT\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samstt"},"content":"                return new DeleteStudentCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wongyihao02"},"content":"            case \"LISTSTUDENTS\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wongyihao02"},"content":"                return new ListTutorialStudentsCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samstt"},"content":"            case \"FIND\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samstt"},"content":"                return new FindStudentCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samstt"},"content":"            case \"CHANGEREMARK\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samstt"},"content":"                return new ChangeRemarkCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samstt"},"content":"            case \"CHECKREMARK\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samstt"},"content":"                return new CheckRemarkCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xubin0"},"content":"            default:","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xubin0"},"content":"                System.out.println(\"Sorry, TASync does not know what \\\"\" + command + \"\\\" means.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xubin0"},"content":"                CommandListPrinter.printCommands();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xubin0"},"content":"                return null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wongyihao02"},"content":"        }  else if (listType.equalsIgnoreCase(\"-a\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wongyihao02"},"content":"            switch (command) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wongyihao02"},"content":"                case \"MARK\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wongyihao02"},"content":"                    return new markStudentAttendanceCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wongyihao02"},"content":"                case \"UNMARK\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wongyihao02"},"content":"                    return new unMarkStudentAttendanceCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wongyihao02"},"content":"                case \"COMMENT\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wongyihao02"},"content":"                    return new commentOnStudentCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wongyihao02"},"content":"                case \"VIEWCOMMENT\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wongyihao02"},"content":"                    return new viewStudentCommentsCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wongyihao02"},"content":"                case \"DELETECOMMENT\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wongyihao02"},"content":"                    return new deleteStudentComment();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wongyihao02"},"content":"                case \"LIST\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wongyihao02"},"content":"                    return new showAttendanceListCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wongyihao02"},"content":"        } else if (listType.equalsIgnoreCase(\"-at\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wongyihao02"},"content":"            switch (command) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wongyihao02"},"content":"                case \"CREATE\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wongyihao02"},"content":"                    return new createNewAttendanceList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kmnyn"},"content":"        if (command.equals(\"BYE\")) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kmnyn"},"content":"            return new ByeCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xubin0"},"content":"        return null;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":47,"samstt":21,"kmnyn":37,"wongyihao02":33}},{"path":"src/main/java/Command/commandHandler/CommandHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.commandHandler;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.ByeCommand;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * The CommandHandler class is responsible for executing commands by interacting with the TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * It uses the Command object created by the CommandFactory to execute specific tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":" * Example:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":" * Given a command like \"TODO Read book\", it will find the appropriate command (e.g., TodoCommand)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":" * and call the execute method with the necessary parts.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"vihaan27"},"content":"public class CommandHandler\u003cT\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"vihaan27"},"content":"    private final T list;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    private final Command taskCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    private String parts;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"     * Constructs a CommandHandler instance with the TaskList and command parts.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"     * The constructor takes in an array of command strings, where the first element is the command name","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"     * (which is used to create the Command object), and the second element is the associated data.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"vihaan27"},"content":"     * @param list The TaskList/StudentList object that the command will operate on.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"     * @param commands An array containing the command name and its associated data.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"vihaan27"},"content":"    public CommandHandler(T list, String[] commands) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"vihaan27"},"content":"        this.list \u003d list;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"        // Ensure the input is valid before proceeding","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"        if (commands.length \u003c 2) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"Invalid command format. Please use: /add -[type] [task details]\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"            taskCommand \u003d null;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"            return;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"        // Reconstruct the original command string to pass it to CommandFactory","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"        String fullCommand \u003d String.join(\" \", commands);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"        taskCommand \u003d CommandFactory.createCommand(fullCommand);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"        // Extract task details if available","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"        this.parts \u003d (commands.length \u003e 2) ? commands[2] : \"\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"     * Executes the current command. If the command is valid, it will invoke its execute method.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"     * If the command is of type ByeCommand, it returns false to indicate the termination of the program.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"     * @return true if the command is not of type ByeCommand; false otherwise.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"    public boolean runCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vihaan27"},"content":"        if (taskCommand !\u003d null \u0026\u0026 list !\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vihaan27"},"content":"            taskCommand.execute(parts, list);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"        return !(taskCommand instanceof ByeCommand);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":38,"kmnyn":13,"vihaan27":7}},{"path":"src/main/java/Command/commandHandler/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.commandHandler;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * The CommandParser class is responsible for parsing a command string into parts.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * It splits the input command into two parts: the command name and the associated data.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Example:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":" * For the input \"/add -pt Read book\", it will split it into [\"/add\", \"-pt\", \"Read book\"].","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class CommandParser {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    private String[] parts;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * Constructs a CommandParser instance.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * The constructor splits the input command string into two parts:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * the command name and the associated data (if any).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     * If the command does not contain any spaces, the second part is set to an empty string.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"     * @param command The command string to be parsed.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"    public CommandParser(String command) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"        parts \u003d command.split(\"\\\\s+\", 3);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"        // If the user only entered \"/add\" or \"/add -c\" without task details, handle gracefully","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"            parts \u003d new String[]{parts[0], \"\", \"\"}; // Ensure all parts exist","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"        } else if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"            parts \u003d new String[]{parts[0], parts[1], \"\"}; // Ensure task details exist","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"     * Returns the parsed command parts.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"     * @return An array of two elements: the command name and its associated data (if any).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"    public String[] getParts() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"        return parts;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":35,"kmnyn":7}},{"path":"src/main/java/Command/studentcommands/ChangeRemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.studentcommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"import students.Student;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"public class ChangeRemarkCommand implements Command\u003cTutorialClassList\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"     * Executes the \"CHANGE_REMARK\" command by updating the remark of a student in a specific tutorial class.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"     * The input string should contain the tutorial class code, matric number, and the new remark (format: \u003cTutorialClassCode\u003e,\u003cMatricNumber\u003e,\u003cNewRemark\u003e).","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"     * If the input is invalid, the tutorial class is not found, or the student is not found, an appropriate error message is displayed.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"     * @param parts            The input string containing the tutorial class code, matric number, and new remark.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"     * @param tutorialClassList The tutorial class list to search within.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"    public void execute(String parts, TutorialClassList tutorialClassList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samstt"},"content":"        // Assertions for preconditions","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"        assert parts !\u003d null : \"Input \u0027parts\u0027 cannot be null\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"        assert !parts.trim().isEmpty() : \"Input \u0027parts\u0027 cannot be empty\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"        assert tutorialClassList !\u003d null : \"TutorialClassList cannot be null\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"            // Split the input into tutorial class code, matric number, and new remark","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"            String[] partsArray \u003d parts.split(\",\", 3); // Split into 3 parts: tutorialClassCode, matricNumber, newRemark","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"            if (partsArray.length \u003c 3) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidChangeRemarkCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"            String tutorialClassCode \u003d partsArray[0].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"            String matricNumber \u003d partsArray[1].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samstt"},"content":"            String newRemark \u003d partsArray[2].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"            // Retrieve the tutorial class by its code","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samstt"},"content":"            TutorialClass tutorialClass \u003d tutorialClassList.getByName(tutorialClassCode);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samstt"},"content":"            if (tutorialClass \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samstt"},"content":"                throw new TASyncException(\"No tutorial class found with code: \" + tutorialClassCode);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samstt"},"content":"            // Retrieve the student list from the tutorial class","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"            StudentList studentList \u003d tutorialClass.getStudentList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"            // Find the student by matric number","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"            Student student \u003d studentList.getStudentByMatricNumber(matricNumber);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samstt"},"content":"            if (student \u003d\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samstt"},"content":"                System.out.println(\"No student found with matric number: \" + matricNumber);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samstt"},"content":"                return;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samstt"},"content":"            // Update the student\u0027s remark","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samstt"},"content":"            student.setRemark(newRemark);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Remark updated for student with matric number \" + matricNumber + \" in tutorial class \" + tutorialClassCode + \".\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samstt"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samstt"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"xubin0":1,"samstt":60}},{"path":"src/main/java/Command/studentcommands/CheckRemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.studentcommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"import students.Student;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"public class CheckRemarkCommand implements Command\u003cTutorialClassList\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"     * Executes the \"CHECK_REMARK\" command to display the remarks for a specific student in a tutorial class.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"     * The input string should contain the tutorial class code and the matric number of the student (format: \u003cTutorialClassCode\u003e,\u003cMatricNumber\u003e).","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"     * If the input is invalid, the tutorial class is not found, or the student is not found, an appropriate error message is displayed.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"     * @param parts            The input string containing the tutorial class code and matric number.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"     * @param tutorialClassList The tutorial class list to search within.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"    public void execute(String parts, TutorialClassList tutorialClassList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"            // Check if the input is valid","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"            if (parts \u003d\u003d null || parts.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidCheckRemarkCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"            // Split the input into tutorial class code and matric number","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"            String[] inputParts \u003d parts.split(\",\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"            if (inputParts.length !\u003d 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidCheckRemarkCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"            String tutorialClassCode \u003d inputParts[0].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"            String matricNumber \u003d inputParts[1].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"            // Retrieve the tutorial class by its code","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"            TutorialClass tutorialClass \u003d tutorialClassList.getByName(tutorialClassCode);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samstt"},"content":"            if (tutorialClass \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samstt"},"content":"                throw new TASyncException(\"No tutorial class found with code: \" + tutorialClassCode);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samstt"},"content":"            // Retrieve the student list from the tutorial class","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samstt"},"content":"            StudentList studentList \u003d tutorialClass.getStudentList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samstt"},"content":"            // Search for the student by matric number","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"            Student student \u003d studentList.getStudentByMatricNumber(matricNumber);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"            if (student !\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samstt"},"content":"                String remark \u003d student.getRemark();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samstt"},"content":"                if (remark \u003d\u003d null || remark.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samstt"},"content":"                    System.out.println(\"No remarks found for student: \" + student.getName());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samstt"},"content":"                } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samstt"},"content":"                    System.out.println(\"Remarks for \" + student.getName() + \": \" + remark);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samstt"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samstt"},"content":"            } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samstt"},"content":"                System.out.println(\"No student found with matric number: \" + matricNumber);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samstt"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samstt"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"xubin0":2,"samstt":60}},{"path":"src/main/java/Command/studentcommands/DeleteStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.studentcommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"import students.Student;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"public class DeleteStudentCommand implements Command\u003cTutorialClassList\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"     * Executes the \"DELETESTUDENT\" command by removing a student from the student list of a specific tutorial class.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"     * The input string should contain the tutorial class code and the matric number of the student to be deleted.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"     * If the input is invalid, the tutorial class is not found, or the student is not found, an appropriate error message is displayed.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"     * @param parts            The input string containing the tutorial class code and matric number (format: \u003cTutorialClassCode\u003e,\u003cMatricNumber\u003e).","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"     * @param tutorialClassList The tutorial class list from which the student will be removed.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samstt"},"content":"    public void execute(String parts, TutorialClassList tutorialClassList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"            // Check if the input is valid","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"            if (parts \u003d\u003d null || parts.trim().isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidDeleteStudentCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"            // Split the input into tutorial class code and matric number","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samstt"},"content":"            String[] inputParts \u003d parts.split(\",\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"            if (inputParts.length !\u003d 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidDeleteStudentCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samstt"},"content":"            String tutorialClassCode \u003d inputParts[0].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"            String matricNumber \u003d inputParts[1].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samstt"},"content":"            // Retrieve the tutorial class by its code","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samstt"},"content":"            TutorialClass tutorialClass \u003d tutorialClassList.getByName(tutorialClassCode);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samstt"},"content":"            if (tutorialClass \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samstt"},"content":"                throw new TASyncException(\"No tutorial class found with code: \" + tutorialClassCode);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"            // Retrieve the student list from the tutorial class","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samstt"},"content":"            StudentList studentList \u003d tutorialClass.getStudentList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"            // Find the student by matric number","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samstt"},"content":"            Student studentToRemove \u003d studentList.getStudentByMatricNumber(matricNumber);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samstt"},"content":"            if (studentToRemove !\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samstt"},"content":"                // Remove the student","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samstt"},"content":"                studentList.removeStudent(studentToRemove);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samstt"},"content":"                System.out.println(\"Student with matric number \" + matricNumber + \" has been removed from tutorial class \" + tutorialClassCode + \".\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samstt"},"content":"            } else {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samstt"},"content":"                System.out.println(\"No student found with matric number \" + matricNumber + \" in tutorial class \" + tutorialClassCode + \".\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samstt"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samstt"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"xubin0":1,"samstt":60}},{"path":"src/main/java/Command/studentcommands/FindStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.studentcommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"import students.Student;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"import java.util.logging.*;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":" * Represents the \"FIND_STUDENT\" command that searches for students by partial matching of name or matric number","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":" * within a tutorial class list. The command displays the students that match the keyword.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"public class FindStudentCommand implements Command\u003cTutorialClassList\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"    // Logger instance for this class","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"    private static final Logger logger \u003d Logger.getLogger(FindStudentCommand.class.getName());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"     * Executes the \"FIND_STUDENT\" command by searching for students that partially match the given keyword across all tutorial classes.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samstt"},"content":"     * It prints the matching students to the user.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"     * @param parts The keyword used to search for students (name or matric number).","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"     * @param tutorialClassList The list of tutorial classes to search within.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"    public void execute(String parts, TutorialClassList tutorialClassList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"            // Log the start of the command execution","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samstt"},"content":"            logger.log(Level.INFO, \"Executing FIND_STUDENT command with keyword: \" + parts);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"            // Check if the input is valid","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"            if (parts \u003d\u003d null || parts.trim().isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidFindStudentCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"            // Variable to track whether any student is found","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samstt"},"content":"            boolean studentFound \u003d false;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samstt"},"content":"            // Iterate through each tutorial class","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samstt"},"content":"            for (TutorialClass tutorialClass : tutorialClassList.getTutorialClasses()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samstt"},"content":"                // Get the student list from the tutorial class","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samstt"},"content":"                StudentList studentList \u003d tutorialClass.getStudentList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samstt"},"content":"                // Search for students by name or matric number using partial matching","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"                boolean foundInThisClass \u003d false;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"                for (Student student : studentList.getStudents()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samstt"},"content":"                    boolean nameMatches \u003d student.getName().toLowerCase().contains(parts.toLowerCase());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samstt"},"content":"                    boolean matricMatches \u003d student.getMatricNumber().toLowerCase().contains(parts.toLowerCase());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samstt"},"content":"                    if (nameMatches || matricMatches) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samstt"},"content":"                        if (!foundInThisClass) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samstt"},"content":"                            // If student is found, print the tutorial class name first","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samstt"},"content":"                            studentFound \u003d true;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samstt"},"content":"                            System.out.println(\"In tutorial \" + tutorialClass.getTutorialName() + \":\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samstt"},"content":"                            foundInThisClass \u003d true;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samstt"},"content":"                        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samstt"},"content":"                        // Print the student details","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samstt"},"content":"                        System.out.println(student);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samstt"},"content":"                    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samstt"},"content":"                }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samstt"},"content":"            // If no students are found across all tutorial classes","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samstt"},"content":"            if (!studentFound) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samstt"},"content":"                logger.log(Level.WARNING, \"No students found with keyword: \" + parts);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samstt"},"content":"                System.out.println(\"No students found with the keyword: \" + parts);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samstt"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samstt"},"content":"            logger.log(Level.SEVERE, \"Error executing FIND_STUDENT command: \" + e.getMessage());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samstt"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"xubin0":2,"samstt":73}},{"path":"src/main/java/Command/studentcommands/NewStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.studentcommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"import students.Student;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"public class NewStudentCommand implements Command\u003cTutorialClassList\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"    private static final Logger logger \u003d Logger.getLogger(NewStudentCommand.class.getName());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"    public void execute(String parts, TutorialClassList tutorialClassList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"            // Validate input","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"            if (parts \u003d\u003d null || parts.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samstt"},"content":"                throw new TASyncException(\"Invalid input: Student details cannot be empty.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"            // Split the input into parts","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"            String[] studentParts \u003d parts.split(\",\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"            if (studentParts.length !\u003d 6) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidNewStudentCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samstt"},"content":"            // Extract and validate student details","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"            String studentName \u003d studentParts[0].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"            if (studentName.isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"                throw new TASyncException(\"Invalid input: Student name cannot be empty.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"            LocalDate dob \u003d DateTimeFormatterUtil.parseDate(studentParts[1].trim());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"            if (dob \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samstt"},"content":"                throw new TASyncException(\"Please enter a valid dob.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samstt"},"content":"            String gender \u003d studentParts[2].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samstt"},"content":"            if (!gender.equalsIgnoreCase(\"Male\") \u0026\u0026 !gender.equalsIgnoreCase(\"Female\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samstt"},"content":"                throw new TASyncException(\"Invalid input: Gender must be \u0027Male\u0027 or \u0027Female\u0027.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"            String contact \u003d studentParts[3].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"            if (!contact.matches(\"\\\\d{8}\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samstt"},"content":"                throw new TASyncException(\"Invalid contact number: Must be 8 digits.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samstt"},"content":"            String matricNumber \u003d studentParts[4].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samstt"},"content":"            if (!matricNumber.matches(\"A\\\\d{7}[A-Z]\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samstt"},"content":"                throw new TASyncException(\"Invalid matric number: Must follow the format A1234567X.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samstt"},"content":"            String tutorialClassCode \u003d studentParts[5].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samstt"},"content":"            if (tutorialClassCode.isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidNewStudentCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samstt"},"content":"            // Retrieve the TutorialClass by its code","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samstt"},"content":"            TutorialClass tutorialClass \u003d tutorialClassList.getByName(tutorialClassCode);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samstt"},"content":"            if (tutorialClass \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samstt"},"content":"                throw new TASyncException(\"No tutorial class found with code: \" + tutorialClassCode);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samstt"},"content":"            // Check if the matric number already exists in the tutorial class","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samstt"},"content":"            if (tutorialClass.getStudentList().getStudentByMatricNumber(matricNumber) !\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samstt"},"content":"                throw new TASyncException(\"Duplicate matric number: A student with this matric number already exists.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samstt"},"content":"            // Create and add the student to the tutorial class","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samstt"},"content":"            Student student \u003d new Student(studentName, dob, gender, contact, matricNumber, tutorialClassCode);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samstt"},"content":"            tutorialClass.getStudentList().addStudent(student);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samstt"},"content":"            // Log and display success message","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samstt"},"content":"            logger.log(Level.INFO, \"New student added to tutorial class \" + tutorialClassCode + \": \" + studentName);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samstt"},"content":"            System.out.println(\"New student added to tutorial class \" + tutorialClassCode + \": \" + studentName);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samstt"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samstt"},"content":"            // Handle TASyncException","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"xubin0":2,"samstt":84}},{"path":"src/main/java/Command/taskCommands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * Represents the \"Bye\" command that exits the application.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * When this command is executed, it prints a goodbye message to the user.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class ByeCommand implements Command\u003cTaskList\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * Executes the \"Bye\" command by printing a farewell message.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * @param parts    Unused. This parameter is ignored as no additional data is needed for this command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list that the command operates on (not used for this command).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":22}},{"path":"src/main/java/Command/taskCommands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * Represents a generic command that can be executed.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * Any command class must implement this interface and provide the execution logic.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * @param \u003cT\u003e The type of object the command will operate on.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public interface Command\u003cT\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * Executes the command with the provided parameters.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * @param parts The string parts that contain the necessary data for the command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * @param target The object (e.g., TaskList or something else) that the command operates on.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    void execute(String parts, T target);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":17}},{"path":"src/main/java/Command/taskCommands/CommandList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * An enumeration that contains all valid commands for the application.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * Each command in this enum implements a method to print its usage and description.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"public enum CommandList {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    MARK {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"MARK: Marks a task as done. Usage: MARK \u003ctask_number\u003e\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    }, UNMARK {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"UNMARK: Marks a task as undone. Usage: UNMARK \u003ctask_number\u003e\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    }, TODO {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"TODO: Creates a new todo task. Usage: TODO \u003ctask_description\u003e\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    }, EVENT {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"EVENT: Creates a task with an event. Usage: EVENT \u003ctask_description\u003e /from \u003cstart_time\u003e /to \u003cend_time\u003e\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"    }, LIST {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"LIST: Displays all tasks.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"    }, BYE {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"BYE: Exits the application.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"    }, DELETE {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"DELETE: Deletes a task. Usage: DELETE -p \u003ctask_number\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"    }, FIND {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"FIND: Finds a task based on the keyword given. Usage: FIND -p \u003ckeyword\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"    }, RENAME {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"RENAME: Renames a task based on the task number give . Usage: RENAME -p \u003ctask_number\u003e \u003cnew_name\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samstt"},"content":"    }, NEW_STUDENT {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"        @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samstt"},"content":"            System.out.println(\"NEWSTUDENT: Adds a new student to the student list using the provided information. Usage: /NEWSTUDENT -t \u003cname\u003e,\u003cdob\u003e,\u003cgender\u003e,\u003ccontact\u003e,\u003cmatric_number\u003e,\u003ctutorial_class\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samstt"},"content":"    }, CHANGE_REMARK {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samstt"},"content":"        @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samstt"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samstt"},"content":"            System.out.println(\"CHANGEREMARK: Updates the remark of a student. Usage: CHANGEREMARK -t \u003ctutorial_name\u003e,\u003cmatric_number\u003e,\u003cnew_remark\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samstt"},"content":"    },  CHECK_REMARK {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samstt"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samstt"},"content":"            System.out.println(\"CHECKREMARK: Checks remarks given to a student. Usage: CHECKREMARK -t \u003ctutorial_name\u003e,\u003cmatric_number\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samstt"},"content":"    }, DELETE_STUDENT {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samstt"},"content":"        @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samstt"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samstt"},"content":"            System.out.println(\"DELETESTUDENT: Deletes a student from the student list. Usage: DELETESTUDENT -t \u003ctutorial_name\u003e,\u003cmatric_number\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samstt"},"content":"    }, FIND_STUDENT {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samstt"},"content":"        @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samstt"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samstt"},"content":"            System.out.println(\"FINDSTUDENT: Finds a student based on the keyword (name or matric number). Usage: FIND -t \u003ckeyword\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samstt"},"content":"    }, NEW_TUTORIAL {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samstt"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samstt"},"content":"            System.out.println(\"NEWTUTORIAL: Creates a new tutorial. Usage: NEWTUTORIAL -t \u003ctutorial_name\u003e \u003cday_of_week\u003e \u003cstart_time\u003e \u003cend_time\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samstt"},"content":"    }, DELETE_TUTORIAL {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samstt"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samstt"},"content":"            System.out.println(\"DELETE_TUTORIAL: Deletes a specified tutorial. Usage: DELETETUT -t \u003ctutorial_name\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wongyihao02"},"content":"    },  LISTTUTORIALS {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wongyihao02"},"content":"        @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wongyihao02"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samstt"},"content":"            System.out.println(\"LISTTUTORIALS: Prints out all tutorial classes from today to the given date.classes are printed in blocks by week. Usage: LIST -t \u003cdate\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wongyihao02"},"content":"    },  LISTTUTORIALSTUDENTS {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wongyihao02"},"content":"        @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wongyihao02"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samstt"},"content":"            System.out.println(\"LISTTUTORIALSTUDENTS: Prints out all the students in a given tutorial. Usage: LISTSTUDENTS -t \u003cTut name\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wongyihao02"},"content":"    },  MARKSTUDENT {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wongyihao02"},"content":"        @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wongyihao02"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samstt"},"content":"            System.out.println(\"MARKSTUDENT: sets the attendance status of the given student to present. Usage: MARK -a \u003cTutname,weeknum,studentname,studentmatricnumber\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wongyihao02"},"content":"    },  UNMARKSTUDENT {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wongyihao02"},"content":"        @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wongyihao02"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samstt"},"content":"            System.out.println(\"UNMARKSTUDENT: sets the attendance status of the given student to absent. Usage: UNMARK -a \u003cTutname,weeknum,studentname,studentmatricnumber\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wongyihao02"},"content":"    },  LISTATTENDANCESTUDENTS {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wongyihao02"},"content":"        @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wongyihao02"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"samstt"},"content":"            System.out.println(\"LISTATTENDANCESTUDENTS: Prints out all the students names,their matric number and their attendance status in a given attendanceList. Usage: LIST -a \u003cTutname,weeknum\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wongyihao02"},"content":"    },  COMMENT {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wongyihao02"},"content":"        @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wongyihao02"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"samstt"},"content":"            System.out.println(\"COMMENT: add a comment to the indicated student. Usage: COMMENT -a \u003cTutname,weeknum,studentname,studentmatricnumber//comment1;comment2\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wongyihao02"},"content":"    },  VIEWCOMMENT {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wongyihao02"},"content":"        @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wongyihao02"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"samstt"},"content":"            System.out.println(\"VIEWCOMMENT: see comments on the student. Usage: VIEWCOMMENT -a \u003cTutname,weeknum,studentname,studentmatricnumber\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wongyihao02"},"content":"    },  DELETECOMMENT {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wongyihao02"},"content":"        @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wongyihao02"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"samstt"},"content":"            System.out.println(\"DELETECOMMENT: delete a comment to the indicated student. Usage: DELETECOMMENT -a \u003cTutname,weeknum,studentname,studentmatricnumber//commentnum\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wongyihao02"},"content":"    },  CREATE {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wongyihao02"},"content":"        @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wongyihao02"},"content":"        public void printCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"samstt"},"content":"            System.out.println(\"CREATE: creates an attendance list for the given week if the tut name is valid and one does not exist for the week already. Usage: CREATE -ay \u003cTutname,weeknum\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xubin0"},"content":"    };","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"xubin0"},"content":"    public abstract void printCommand();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":59,"samstt":38,"wongyihao02":36}},{"path":"src/main/java/Command/taskCommands/ConsultationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"import task.Consultation;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":" * Represents the \"CONSULTATION\" command that creates a consultation task with specific timings.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":" * The command expects the student\u0027s name along with \"/from\" and \"/to\" tags for start and end times.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"public class ConsultationCommand implements Command\u003cTaskList\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"     * Executes the \"CONSULTATION\" command by parsing the student name, start time, and end time,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"     * and adding the consultation task to the task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"     * @param parts The command parts containing the student name and consultation timings.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"     * @param taskList The task list where the new consultation task will be added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"        boolean commandValid \u003d false;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"        while (!commandValid) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"            try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"                // Ensure the input contains both /from and /to","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"                if (!parts.contains(\"/from\") || !parts.contains(\"/to\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"                    throw new TASyncException(\"Invalid Consultation command. Specify duration with \\\"/from\\\" and \\\"/to\\\".\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"                // Split the input into expected parts","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"                String[] consultationParts \u003d parts.split(\" /from \", 2);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"                if (consultationParts.length \u003c 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"                    throw new TASyncException(\"Missing start time. Please re-enter the full command.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"                String studentName \u003d consultationParts[0].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"                String[] timeParts \u003d consultationParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"                if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"                    throw new TASyncException(\"Missing end time. Please re-enter the full command.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"                String from \u003d timeParts[0].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"                String to \u003d timeParts[1].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"                // Validate datetime format","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"                if (!DateTimeFormatterUtil.isValidDateTime(from) || !DateTimeFormatterUtil.isValidDateTime(to)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"                    throw new TASyncException(\"Invalid datetime format. Expected format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"                // Create and add the consultation task","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"                Consultation consultation \u003d new Consultation(studentName, false, from, to);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kmnyn"},"content":"                taskList.addTask(consultation);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kmnyn"},"content":"                commandValid \u003d true; // Exit loop since everything is valid","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kmnyn"},"content":"            } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kmnyn"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kmnyn"},"content":"                System.out.print(\"Please re-enter the full command without add -c\\n\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kmnyn"},"content":"                parts \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kmnyn"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":2,"kmnyn":66}},{"path":"src/main/java/Command/taskCommands/DeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import task.Deadline;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":" * Represents the \"DEADLINE\" command that creates a task with a deadline.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":" * The command expects the description of the task and a \"/by\" tag for the deadline.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"public class DeadlineCommand implements Command\u003cTaskList\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"     * Executes the \"DEADLINE\" command by parsing the task description and deadline,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"     * and adding the deadline task to the task list.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"     * @param parts The command parts containing the task description and deadline.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"     * @param taskList The task list where the new deadline task will be added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"        boolean commandValid \u003d false;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"        while (!commandValid) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"            try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"                // Ensure the command contains \"/by\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"                if (!parts.contains(\"/by\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"                    throw new TASyncException(\"Invalid Deadline command. Specify the deadline using \\\"/by\\\".\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"                // Split into description and deadline","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"                String[] deadlineParts \u003d parts.split(\" /by \", 2);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"                if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"                    throw new TASyncException(\"Missing deadline. Please re-enter the full command.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"                String taskName \u003d deadlineParts[0].trim();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"                String deadlineInput \u003d deadlineParts[1].trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"                // Validate deadline format","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"                if (!DateTimeFormatterUtil.isValidDateTime(deadlineInput)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"                    throw new TASyncException(\"Invalid datetime format. Expected format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"                // Create and add the deadline task","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"                Deadline dl \u003d new Deadline(taskName, false, deadlineInput);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"                taskList.addTask(dl);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"                commandValid \u003d true; // Exit loop since everything is valid","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"            } catch (TASyncException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"                System.out.print(\"Please re-enter the full command without add -pd\\n\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"                parts \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kmnyn"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":2,"kmnyn":60}},{"path":"src/main/java/Command/taskCommands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import Util.IntegerChecker;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents the \"DELETE\" command that deletes a task from the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The command expects a task number to delete the corresponding task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"public class DeleteTaskCommand implements Command\u003cTaskList\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * Executes the \"DELETE\" command by checking if the input is a valid task number,","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * and deleting the corresponding task from the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param parts The task number to be deleted.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list where the task will be removed from.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        try{","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        if (IntegerChecker.isInteger(parts)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            taskList.deleteTask(Integer.parseInt(parts));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        }else{","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"            throw TASyncException.invalidDeleteCommand();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        }}catch (Exception e){","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":29,"kmnyn":2}},{"path":"src/main/java/Command/taskCommands/EventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import task.Event;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":" * Represents the \"EVENT\" command that creates a task with event timings.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":" * The command expects the description of the event and \"/from\" and \"/to\" tags for start and end times.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"public class EventCommand implements Command\u003cTaskList\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * Executes the \"EVENT\" command by parsing the task description, start time, and end time,","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * and adding the event task to the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     * @param parts The command parts containing the task description and event timings.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list where the new event task will be added.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"        boolean commandValid \u003d false;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"        while (!commandValid) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"            try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"                // Ensure the input contains both /from and /to","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"                if (!parts.contains(\"/from\") || !parts.contains(\"/to\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"                    throw new TASyncException(\"Invalid Event command. Specify duration with \\\"/from\\\" and \\\"/to\\\".\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"                // Split the input into expected parts","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"                String[] eventParts \u003d parts.split(\" /from \", 2);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"                if (eventParts.length \u003c 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"                    throw new TASyncException(\"Missing start time. Please re-enter the full command.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"                String taskName \u003d eventParts[0].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"                String[] timeParts \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"                if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"                    throw new TASyncException(\"Missing end time. Please re-enter the full command.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"                String from \u003d timeParts[0].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"                String to \u003d timeParts[1].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"                // Validate datetime format","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"                if (!DateTimeFormatterUtil.isValidDateTime(from) || !DateTimeFormatterUtil.isValidDateTime(to)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"                    throw new TASyncException(\"Invalid datetime format. Expected format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"                // Create and add the event task","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"                Event event \u003d new Event(taskName, false, from, to);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"                taskList.addTask(event);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kmnyn"},"content":"                commandValid \u003d true; // Exit loop since everything is valid","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kmnyn"},"content":"            } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kmnyn"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kmnyn"},"content":"                System.out.print(\"Please re-enter the full command without add -pe\\n\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kmnyn"},"content":"                parts \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kmnyn"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":24,"kmnyn":43}},{"path":"src/main/java/Command/taskCommands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents the \"FIND\" command that searches for tasks containing a specified keyword.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The command displays the tasks that match the keyword.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"public class FindTaskCommand implements Command\u003cTaskList\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    private TaskList tasksWithKeyWord;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * Executes the \"FIND\" command by searching for tasks that match the given keyword.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * It prints the matching tasks to the user.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param parts The keyword used to search for tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list to search within.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            if (!parts.isEmpty()) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"                tasksWithKeyWord \u003d taskList.getTaskListWithKeyWord(parts);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"                if (tasksWithKeyWord.getTaskCount() \u003e 0) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"                    tasksWithKeyWord.printTaskList();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"                throw TASyncException.invalidFindCommand();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":35,"kmnyn":1}},{"path":"src/main/java/Command/taskCommands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * Represents the \"LIST\" command that displays all tasks in the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * If there are no tasks, it prints a message indicating that no tasks are available.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"public class ListTaskCommand implements Command\u003cTaskList\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"     * Executes the \"LIST\" command by printing all tasks in the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * If no tasks exist, it prints a message indicating that no tasks are available.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * @param parts Unused. This parameter is ignored for this command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list whose tasks will be printed.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        if (taskList.getTaskCount() \u003e 0) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"            taskList.printTaskList();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"            return;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"nothing to do yet\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":23,"kmnyn":1}},{"path":"src/main/java/Command/taskCommands/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import Util.IntegerChecker;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * Represents the \"MARK\" command that marks a task as completed.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" * The command expects a task number to mark the corresponding task as done.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"public class MarkTaskCommand implements Command\u003cTaskList\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * Executes the \"MARK\" command by marking the specified task as done.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * It verifies that the provided task number is valid before marking the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * @param parts The task number to mark as done.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list where the task will be marked as done.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            if (IntegerChecker.isInteger(parts)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"                taskList.markTaskAsDone(Integer.parseInt(parts));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"                throw TASyncException.invalidMarkCommand();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":30,"kmnyn":2}},{"path":"src/main/java/Command/taskCommands/RenameTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"public class RenameTaskCommand implements Command\u003cTaskList\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"            String[] partsArray \u003d parts.split(\" \", 2);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"            if (partsArray.length \u003e 1) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"                int taskNumber \u003d Integer.parseInt(partsArray[0].trim());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"                String newTaskName \u003d partsArray[1].trim();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"                taskList.renameTask(taskNumber, newTaskName);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"                throw TASyncException.invalidRenameCommand();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Invalid task number format. Please provide a valid task number.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":25,"kmnyn":1}},{"path":"src/main/java/Command/taskCommands/TodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import task.Todo;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents the \"TODO\" command that creates a new todo task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The command expects a description for the todo task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class TodoCommand implements Command\u003cTaskList\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * Executes the \"TODO\" command by creating a new todo task with the provided description.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * The new todo task is added to the task list.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param parts The description of the todo task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list where the new todo task will be added.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            if (!parts.isEmpty()) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            Todo todo \u003d new Todo(parts, false);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        }else{","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"            throw TASyncException.invalidTodoCommand();}","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        }catch (Exception e){","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":32}},{"path":"src/main/java/Command/taskCommands/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.taskCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import Util.IntegerChecker;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents the \"UNMARK\" command that marks a task as undone.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * The command expects a task number to unmark the corresponding task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"public class UnmarkTaskCommand implements Command\u003cTaskList\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * Executes the \"UNMARK\" command by marking the specified task as undone.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * It verifies that the provided task number is valid before unmarking the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param parts The task number to unmark as undone.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param taskList The task list where the task will be unmarked.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public void execute(String parts, TaskList taskList) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        try{","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        if (IntegerChecker.isInteger(parts)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            taskList.markTaskAsUndone(Integer.parseInt(parts));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        }else{","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        throw TASyncException.invalidUnmarkCommand();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        }catch (Exception e){","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":30,"kmnyn":2}},{"path":"src/main/java/Command/tutorialCommands/DeleteTutorialCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.tutorialCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"public class DeleteTutorialCommand implements Command\u003cTutorialClassList\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"     * Executes the \"DELETE_TUTORIAL\" command to remove a tutorial class by its code.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"     * @param input            The input string containing the tutorial class code.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"     * @param tutorialClassList The tutorial class list to modify.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"    public void execute(String input, TutorialClassList tutorialClassList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"            // Check if the input is valid","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samstt"},"content":"            if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidDeleteTutorialCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"            // Search for the tutorial class by its code","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"            TutorialClass tutorialClass \u003d tutorialClassList.getByName(input);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"            // If the tutorial class is found, remove it","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"            if (tutorialClass !\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samstt"},"content":"                tutorialClassList.removeTutorialClass(tutorialClass);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"                System.out.println(\"Tutorial class deleted: \" + input);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"            } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"                System.out.println(\"No tutorial class found with code: \" + input);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samstt"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"xubin0":2,"samstt":38}},{"path":"src/main/java/Command/tutorialCommands/ListTutorialStudentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.tutorialCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wongyihao02"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wongyihao02"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wongyihao02"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wongyihao02"},"content":"import students.Student;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wongyihao02"},"content":"public class ListTutorialStudentsCommand implements Command\u003cTutorialClassList\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wongyihao02"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"    // List all students in the given tutorial by tutorial name","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"    public void execute(String tutorialName, TutorialClassList tutorialClassList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wongyihao02"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"            // Validate the input string (tutorial name)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"            if (tutorialName \u003d\u003d null || tutorialName.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidListTutorialStudentsCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"            TutorialClass targetTutorial \u003d null;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"            ArrayList\u003cTutorialClass\u003e tutorials \u003d tutorialClassList.getTutorialClasses();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"            // Find the tutorial by name","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"            for (TutorialClass tutorial : tutorials) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"                if (tutorial.getTutorialName().equals(tutorialName)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"                    targetTutorial \u003d tutorial;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"            // If the tutorial name does not match any, throw an exception","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"            if (targetTutorial \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidListTutorialStudentsCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"            ArrayList\u003cStudent\u003e enrolledStudents \u003d targetTutorial.getStudentList().getStudents();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samstt"},"content":"            // Print the title","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samstt"},"content":"            System.out.println(\"List of students in tutorial \" + targetTutorial.getTutorialName() + \":\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samstt"},"content":"            // If no students are enrolled in the tutorial","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samstt"},"content":"            if (enrolledStudents.isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"                System.out.println(targetTutorial.getTutorialName() + \" has no students\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wongyihao02"},"content":"            } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"                for (Student student : enrolledStudents) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"                    System.out.println(student.toString());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wongyihao02"},"content":"            System.out.println();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wongyihao02"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samstt"},"content":"            // Specific exception thrown by our TASyncException class","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samstt"},"content":"            System.out.println(\"TASyncException: \" + e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"        } ","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wongyihao02"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"xubin0":2,"samstt":22,"wongyihao02":35}},{"path":"src/main/java/Command/tutorialCommands/ListUpcomingTutorialsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.tutorialCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wongyihao02"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wongyihao02"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wongyihao02"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wongyihao02"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wongyihao02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wongyihao02"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wongyihao02"},"content":"public class ListUpcomingTutorialsCommand implements Command\u003cTutorialClassList\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wongyihao02"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"    public void execute(String inputDate, TutorialClassList tutorialClassList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wongyihao02"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"            // Check if the input date string is empty or null","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"            if (inputDate \u003d\u003d null || inputDate.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wongyihao02"},"content":"                throw TASyncException.invalidListUpcomingTutorialsCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"            // Parse the input date into LocalDate format","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"            LocalDate endDate \u003d DateTimeFormatterUtil.parseDate(inputDate);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"            LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"            DayOfWeek currentDayOfWeek \u003d currentDate.getDayOfWeek();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"            // Get the list of tutorials","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"            ArrayList\u003cTutorialClass\u003e tutorialClasses \u003d tutorialClassList.getTutorialClasses();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"            // Calculate the number of days to add in order to reach the first tutorial session","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"            int daysUntilFirstTutorial \u003d ((tutorialClasses.get(0).getDayOfWeek().getValue() - currentDayOfWeek.getValue()) \u003c 0)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"                    ? (tutorialClasses.get(0).getDayOfWeek().getValue() - currentDayOfWeek.getValue() + 7)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"                    : (tutorialClasses.get(0).getDayOfWeek().getValue() - currentDayOfWeek.getValue());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"            LocalDate nextTutorialDate \u003d currentDate.plusDays(daysUntilFirstTutorial);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"            DayOfWeek nextTutorialDayOfWeek \u003d nextTutorialDate.getDayOfWeek();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samstt"},"content":"            // Loop through the upcoming tutorial sessions until the end date","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samstt"},"content":"            while (nextTutorialDate.isBefore(endDate)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samstt"},"content":"                for (TutorialClass tutorialClass : tutorialClasses) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samstt"},"content":"                    int daysDifference \u003d tutorialClass.getDayOfWeek().getValue() - nextTutorialDayOfWeek.getValue();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samstt"},"content":"                    if (daysDifference \u003c\u003d ChronoUnit.DAYS.between(nextTutorialDate, endDate)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"                        System.out.println(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samstt"},"content":"                                tutorialClass.getTutorialName() + \" \" +","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"                                        nextTutorialDate.plusDays(daysDifference) + \" \" +","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"                                        tutorialClass.getStartTime() + \" \" +","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samstt"},"content":"                                        tutorialClass.getEndTime()","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samstt"},"content":"                        );","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wongyihao02"},"content":"                    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wongyihao02"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samstt"},"content":"                // Move to the next week\u0027s tutorial date","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samstt"},"content":"                nextTutorialDate \u003d nextTutorialDate.plusDays(7);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wongyihao02"},"content":"                System.out.println();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(\"End of list\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wongyihao02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wongyihao02"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"xubin0":2,"samstt":28,"wongyihao02":34}},{"path":"src/main/java/Command/tutorialCommands/NewTutorialCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Command.tutorialCommands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.Command;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"public class NewTutorialCommand implements Command\u003cTutorialClassList\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samstt"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"    public void execute(String input, TutorialClassList tutorialClassList) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"            // Validate input string","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"            if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidNewTutorialCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samstt"},"content":"            // Split the input to get tutorial details","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"            String[] inputParts \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"            if (inputParts.length !\u003d 4) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidNewTutorialCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"            String tutorialName \u003d inputParts[0];","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"            String dayOfWeekStr \u003d inputParts[1];","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"            String startTimeStr \u003d inputParts[2];","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samstt"},"content":"            String endTimeStr \u003d inputParts[3];","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"            // Parse and validate day of the week","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"            int dayOfWeek;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"            try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samstt"},"content":"                dayOfWeek \u003d Integer.parseInt(dayOfWeekStr);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"                if (dayOfWeek \u003c 1 || dayOfWeek \u003e 7) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"                    throw TASyncException.invalidDayOfWeek();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samstt"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samstt"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samstt"},"content":"                throw TASyncException.invalidDayOfWeek();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samstt"},"content":"            // Parse and validate start and end time","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samstt"},"content":"            LocalTime startTime \u003d LocalTime.parse(startTimeStr);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"            LocalTime endTime \u003d LocalTime.parse(endTimeStr);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samstt"},"content":"            // Check if the tutorial already exists in the list","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samstt"},"content":"            for (TutorialClass existingTutorial : tutorialClassList.getTutorialClasses()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samstt"},"content":"                if (existingTutorial.getTutorialName().equals(tutorialName) \u0026\u0026","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samstt"},"content":"                        existingTutorial.getDayOfWeek().getValue() \u003d\u003d dayOfWeek \u0026\u0026","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samstt"},"content":"                        existingTutorial.getStartTime().equals(startTime) \u0026\u0026","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samstt"},"content":"                        existingTutorial.getEndTime().equals(endTime)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samstt"},"content":"                    throw TASyncException.duplicateTutorial();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samstt"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samstt"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samstt"},"content":"            // Create a new TutorialClass object","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samstt"},"content":"            StudentList emptyStudentList \u003d new StudentList(); // Empty list for students","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samstt"},"content":"            TutorialClass newTutorial \u003d new TutorialClass();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samstt"},"content":"            newTutorial.setTutorialName(tutorialName);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samstt"},"content":"            newTutorial.setDayOfWeek(DayOfWeek.of(dayOfWeek));  // Convert int to DayOfWeek","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samstt"},"content":"            newTutorial.setStartTime(startTime);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samstt"},"content":"            newTutorial.setEndTime(endTime);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samstt"},"content":"            newTutorial.setStudentList(emptyStudentList);  // Set an empty student list","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samstt"},"content":"            // Add the new tutorial to the tutorial class list","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samstt"},"content":"            tutorialClassList.addTutorialClass(newTutorial);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samstt"},"content":"            // Output success message","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samstt"},"content":"            System.out.println(\"New tutorial added: \" + newTutorial);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samstt"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samstt"},"content":"            // Handle TASyncException","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samstt"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samstt"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samstt"},"content":"            // Handle any other unexpected exceptions","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samstt"},"content":"            System.out.println(\"An unexpected error occurred: \" + e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samstt"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"xubin0":2,"samstt":80}},{"path":"src/main/java/FileHandlers/AttendanceFileFileLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import students.Student;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wongyihao02"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"public class AttendanceFileFileLoader implements FileLoader\u003cAttendanceFile\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    private TutorialClassList classList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public AttendanceFileFileLoader(TutorialClassList classList) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        this.classList \u003d classList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"    public AttendanceFile loadFromFile(String filePath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        ArrayList\u003cAttendanceList\u003e attendanceLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"            String line;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"            String currentTutorial \u003d null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"            int currentWeek \u003d 0;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"            TutorialClass currentClass \u003d null;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"            Map\u003cStudent, String\u003e attendanceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wongyihao02"},"content":"            Map\u003cStudent, ArrayList\u003cString\u003e\u003e commentMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wongyihao02"},"content":"            boolean startComments \u003d false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wongyihao02"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wongyihao02"},"content":"                line \u003d line.trim();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"                if (line.isEmpty()) continue;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"                if (line.startsWith(\"#\")) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"                    // Start of a new AttendanceList","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"                    String[] header \u003d line.substring(1).trim().split(\",\", 2);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"                    currentTutorial \u003d header[0].trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"                    currentWeek \u003d Integer.parseInt(header[1].trim());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"                    currentClass \u003d classList.getByName(currentTutorial);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"                    if (currentClass \u003d\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"                        System.err.println(\"Tutorial class not found: \" + currentTutorial);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"                        continue;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"                    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"                    // Reset for new list","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"                    attendanceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"                    commentMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"                    startComments \u003d false;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"                } else if (line.equalsIgnoreCase(\"//comments\")) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"                    startComments \u003d true;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"                } else if (line.equalsIgnoreCase(\"//commentEnd\")) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"                    if (currentClass !\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"                        AttendanceList list \u003d new AttendanceList(currentClass, currentWeek);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"                        list.getAttendanceMap().clear();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"                        list.getCommentList().clear();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wongyihao02"},"content":"                        list.getAttendanceMap().putAll(attendanceMap);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"                        for (Map.Entry\u003cStudent, ArrayList\u003cString\u003e\u003e entry : commentMap.entrySet()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wongyihao02"},"content":"                            list.addComments(entry.getKey(), entry.getValue());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wongyihao02"},"content":"                        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wongyihao02"},"content":"                        attendanceLists.add(list);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"                    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wongyihao02"},"content":"                    currentTutorial \u003d null;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xubin0"},"content":"                    currentClass \u003d null;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wongyihao02"},"content":"                    attendanceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wongyihao02"},"content":"                    commentMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wongyihao02"},"content":"                    startComments \u003d false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wongyihao02"},"content":"                } else if (startComments) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"                    // Comment line","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xubin0"},"content":"                    String[] parts \u003d line.split(\",\", 3);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"                    if (parts.length \u003c 2) continue;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"                    String matric \u003d parts[1].trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"                    Student student \u003d currentClass.getStudentList().getStudentByMatricNumber(matric);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"                    if (student \u003d\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xubin0"},"content":"                        System.err.println(\"Comment student not found: \" + matric);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xubin0"},"content":"                        continue;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wongyihao02"},"content":"                    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xubin0"},"content":"                    ArrayList\u003cString\u003e comments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xubin0"},"content":"                    if (parts.length \u003d\u003d 3) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xubin0"},"content":"                        String[] commentArray \u003d parts[2].split(\";\", -1);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xubin0"},"content":"                        for (String comment : commentArray) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xubin0"},"content":"                            comments.add(comment.trim());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wongyihao02"},"content":"                        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wongyihao02"},"content":"                    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xubin0"},"content":"                    commentMap.put(student, comments);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xubin0"},"content":"                } else {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xubin0"},"content":"                    // Attendance line","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xubin0"},"content":"                    String[] parts \u003d line.split(\",\", 3);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xubin0"},"content":"                    if (parts.length \u003c 3) continue;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xubin0"},"content":"                    String matric \u003d parts[1].trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xubin0"},"content":"                    String status \u003d parts[2].trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xubin0"},"content":"                    Student student \u003d currentClass.getStudentList().getStudentByMatricNumber(matric);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xubin0"},"content":"                    if (student \u003d\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xubin0"},"content":"                        System.err.println(\"Attendance student not found: \" + matric);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xubin0"},"content":"                        continue;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xubin0"},"content":"                    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xubin0"},"content":"                    attendanceMap.put(student, status);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xubin0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xubin0"},"content":"            System.err.println(\"Error loading AttendanceFile: \" + e.getMessage());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xubin0"},"content":"        return new AttendanceFile(attendanceLists);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":99,"wongyihao02":24}},{"path":"src/main/java/FileHandlers/AttendanceFileFileSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class AttendanceFileFileSaver implements FileSaver\u003cAttendanceFile\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    private final AttendanceListFileSaver listSaver \u003d new AttendanceListFileSaver();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    public void saveToFile(AttendanceFile attendanceFile, String directoryPath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"        String fileName \u003d directoryPath + \"/AttendanceFile.csv\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        try (FileWriter writer \u003d new FileWriter(fileName)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"            for (AttendanceList list : attendanceFile.getAttendanceList()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"                listSaver.saveToWriter(list, writer);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Error saving AttendanceFile: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":24}},{"path":"src/main/java/FileHandlers/AttendanceListFileLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import students.Student;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wongyihao02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"public class AttendanceListFileLoader implements FileLoader\u003cAttendanceList\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public AttendanceList loadFromFile(String filePath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            // Read header line: # T01,1","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            String metadata \u003d reader.readLine();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            if (metadata \u003d\u003d null || !metadata.startsWith(\"#\")) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"                throw new IOException(\"Invalid file format: missing metadata line.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"            String[] metaParts \u003d metadata.substring(1).trim().split(\",\", -1);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"            String tutorialName \u003d metaParts[0].trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"            int weekNumber \u003d Integer.parseInt(metaParts[1].trim());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"            ArrayList\u003cStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"            Map\u003cStudent, String\u003e attendanceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wongyihao02"},"content":"            Map\u003cStudent, ArrayList\u003cString\u003e\u003e commentMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"            boolean readingComments \u003d false;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"            String line;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"                line \u003d line.trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"                if (line.isEmpty()) continue;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"                if (line.equalsIgnoreCase(\"//comments\")) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"                    readingComments \u003d true;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"                    continue;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"                if (line.equalsIgnoreCase(\"//commentEnd\")) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"                    readingComments \u003d false;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"                    break; // assuming nothing else after comment section","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"                if (readingComments) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"                    String[] parts \u003d line.split(\",\", -1);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"                    String name \u003d parts[0].trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"                    String matric \u003d parts[1].trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"                    Student student \u003d new Student(name, LocalDate.now(), \"\", \"\", matric, tutorialName);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wongyihao02"},"content":"                    ArrayList\u003cString\u003e comments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"                    for (int i \u003d 2; i \u003c parts.length; i++) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"                        comments.add(parts[i].trim());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wongyihao02"},"content":"                    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wongyihao02"},"content":"                    commentMap.put(student, comments);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wongyihao02"},"content":"                } else {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"                    String[] parts \u003d line.split(\",\", -1);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"                    String name \u003d parts[0].trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"                    String matric \u003d parts[1].trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"                    String status \u003d parts[2].trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xubin0"},"content":"                    Student student \u003d new Student(name, LocalDate.now(), \"\", \"\", matric, tutorialName);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"                    students.add(student);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xubin0"},"content":"                    attendanceMap.put(student, status);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xubin0"},"content":"            // Assemble TutorialClass","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"            TutorialClass tutorial \u003d new TutorialClass();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xubin0"},"content":"            tutorial.setTutorialName(tutorialName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"            tutorial.setStudentList(new StudentList(students));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xubin0"},"content":"            tutorial.setStartTime(LocalTime.of(0, 0));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"            tutorial.setEndTime(LocalTime.of(0, 0));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"            // Create AttendanceList","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"            AttendanceList attendanceList \u003d new AttendanceList(tutorial, weekNumber);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xubin0"},"content":"            for (Map.Entry\u003cStudent, String\u003e entry : attendanceMap.entrySet()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xubin0"},"content":"                attendanceList.getAttendanceMap().put(entry.getKey(), entry.getValue());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xubin0"},"content":"            for (Map.Entry\u003cStudent, ArrayList\u003cString\u003e\u003e entry : commentMap.entrySet()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wongyihao02"},"content":"                attendanceList.addComments(entry.getKey(), entry.getValue());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xubin0"},"content":"            return attendanceList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xubin0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Error loading attendance list: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xubin0"},"content":"        return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":89,"wongyihao02":14}},{"path":"src/main/java/FileHandlers/AttendanceListFileSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import students.Student;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"public class AttendanceListFileSaver implements FileSaver\u003cAttendanceList\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    public void saveToFile(AttendanceList attendanceList, String directoryPath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        String tutorialName \u003d attendanceList.getTutorialClass().getTutorialName();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        int week \u003d attendanceList.getWeekNumber();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        String fileName \u003d directoryPath + \"/\" + tutorialName + \"_Week\" + week + \".csv\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        try (FileWriter writer \u003d new FileWriter(fileName)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            saveToWriter(attendanceList, writer);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Error saving attendance list: \" + e.getMessage());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"     * Reusable method to write attendance list into any FileWriter.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    public void saveToWriter(AttendanceList attendanceList, FileWriter writer) throws IOException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"        TutorialClass tutorial \u003d attendanceList.getTutorialClass();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        String tutorialName \u003d tutorial.getTutorialName();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        int week \u003d attendanceList.getWeekNumber();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"        // Header","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"        writer.write(\"# \" + tutorialName + \",\" + week + \"\\n\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"        for (Map.Entry\u003cStudent, String\u003e entry : attendanceList.getAttendanceMap().entrySet()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"            Student s \u003d entry.getKey();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"            String status \u003d entry.getValue();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"            writer.write(s.getName() + \",\" + s.getMatricNumber() + \",\" + status + \"\\n\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"        writer.write(\"\\n\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wongyihao02"},"content":"        writer.write(\"//comments\\n\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wongyihao02"},"content":"        for (Map.Entry\u003cStudent, ArrayList\u003cString\u003e\u003e entry : attendanceList.getCommentList().entrySet()) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wongyihao02"},"content":"            Student s \u003d entry.getKey();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cString\u003e comments \u003d entry.getValue();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"            String commentLine \u003d String.join(\";\", comments);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"            writer.write(s.getName() + \",\" + s.getMatricNumber() + \",\" + commentLine + \"\\n\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"        writer.write(\"//commentEnd\\n\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"        writer.write(\"\\n\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":49,"wongyihao02":10}},{"path":"src/main/java/FileHandlers/FileCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import java.io.File;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * Utility class for creating files and directories if they don\u0027t already exist.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * This class ensures that a given file path and its corresponding directory are created before accessing or writing to them.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class FileCreator {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * Creates a directory and file if they don\u0027t already exist.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * @param filePath The path to the file that needs to be created.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     * @param directoryPath The path to the directory where the file will be created.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    public static void createFileIfNotExists(String filePath, String directoryPath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"            try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"                if (!directory.exists()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"                    boolean dirCreated \u003d directory.mkdirs();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"                    if (dirCreated) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"                        System.out.println(\"Created directory: \" + directoryPath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"                    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"                if (!file.exists()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"                    boolean fileCreated \u003d file.createNewFile(); // Creates file if missing","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"                    if (fileCreated) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"                        System.out.println(\"Created file: \" + filePath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"                    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"                System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":38}},{"path":"src/main/java/FileHandlers/FileLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"public interface FileLoader\u003cT\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"    T loadFromFile(String filePath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":5}},{"path":"src/main/java/FileHandlers/FileSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"public interface FileSaver\u003cT\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"    void saveToFile(T object, String directoryPath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":5}},{"path":"src/main/java/FileHandlers/StudentFileLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import students.Student;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"public class StudentFileLoader implements FileLoader\u003cStudent\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    public Student loadFromFile(String filePath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"        throw new UnsupportedOperationException(\"Use loadFromLine(String line) instead for unified file.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    public Student loadFromLine(String line, String tutorialName) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        String[] parts \u003d line.split(\",\", -1);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        String name \u003d parts[0];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        LocalDate dob \u003d DateTimeFormatterUtil.parseDate(parts[1]);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        String gender \u003d parts[2];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        String contact \u003d parts[3];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        String matric \u003d parts[4];","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        String remark \u003d parts.length \u003e 5 ? parts[5] : \"\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        Student student \u003d new Student(name, dob, gender, contact, matric, tutorialName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        student.setRemark(remark);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        return student;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":28}},{"path":"src/main/java/FileHandlers/StudentFileSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import students.Student;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class StudentFileSaver implements FileSaver\u003cStudent\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    public void saveToFile(Student student, String directoryPath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"        String fileName \u003d directoryPath + \"/\" + student.getMatricNumber() + \".csv\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"        try (FileWriter writer \u003d new FileWriter(fileName)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"            writer.write(student.getName() + \",\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"            writer.write(DateTimeFormatterUtil.formatDate(student.getDateOfBirth()) + \",\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"            writer.write(student.getGender() + \",\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"            writer.write(student.getContact() + \",\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"            writer.write(student.getMatricNumber() + \",\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"            writer.write((student.getRemark() !\u003d null ? student.getRemark() : \"\")+ \"\\n\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Error saving student: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":25}},{"path":"src/main/java/FileHandlers/StudentListFileLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import students.Student;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class StudentListFileLoader implements FileLoader\u003cStudentList\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    private final StudentFileLoader studentLoader \u003d new StudentFileLoader();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    public StudentList loadFromFile(String path) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"        throw new UnsupportedOperationException(\"Use loadFromLines(List\u003cString\u003e, tutorialName) instead.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    public StudentList loadFromLines(List\u003cString\u003e lines, String tutorialName) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        ArrayList\u003cStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"            Student s \u003d studentLoader.loadFromLine(line, tutorialName);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            if (s !\u003d null) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"                students.add(s);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        return new StudentList(students);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":27}},{"path":"src/main/java/FileHandlers/StudentListSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import students.Student;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.io.File;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"public class StudentListSaver implements FileSaver\u003cStudentList\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    private final StudentFileSaver studentSaver \u003d new StudentFileSaver();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    public void saveToFile(StudentList studentList, String directoryPath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"        File dir \u003d new File(directoryPath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"            dir.mkdirs();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        for (Student student : studentList.getStudents()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"            studentSaver.saveToFile(student, directoryPath);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":22}},{"path":"src/main/java/FileHandlers/TaskListFileLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import task.Task;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"/**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":" * Loads a TaskList from a file.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":" */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"public class TaskListFileLoader implements FileLoader\u003cArrayList\u003cTask\u003e\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    private static final String FILE_PATH \u003d \"./data/tasklist.txt\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"    public ArrayList\u003cTask\u003e loadFromFile(String filePath) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"        FileCreator.createFileIfNotExists(FILE_PATH, \"./data\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"            String line;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"                // Skip empty lines","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"                if (line.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"                    continue;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"                // Parse the task from the line","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"                Task task \u003d TaskParser.parseTaskFromFile(line);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"                if (task !\u003d null) {  // Ensure only valid tasks are added","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"        } catch (TASyncException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"        return tasks;  // Return the tasks list directly","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"kmnyn":44}},{"path":"src/main/java/FileHandlers/TaskListFileSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import task.Task;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"/**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":" * Saves a TaskList to a file.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":" */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"public class TaskListFileSaver implements FileSaver\u003cArrayList\u003cTask\u003e\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    private static final String FILE_PATH \u003d \"./data/tasklist.txt\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e tasks, String directoryPath) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"        // Create the file if it doesn\u0027t exist","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"        FileCreator.createFileIfNotExists(FILE_PATH, DIRECTORY_PATH);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"                writer.newLine();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"kmnyn":31}},{"path":"src/main/java/FileHandlers/TaskParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import task.Consultation;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import task.Deadline;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import task.Event;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"import task.Task;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"import task.Todo;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"public class TaskParser {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"     * Parses a line from the file and converts it into the corresponding Task object.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"     * @param line A single line from the file.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"     * @return The corresponding Task object (Todo, Deadline, Event, or Consultation).","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"    public static Task parseTaskFromFile(String line) throws TASyncException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"        // Skip empty lines or lines containing only whitespace","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"        if (line.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"            return null;  // Return null or handle it in a way you prefer (e.g., skip it)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"        String[] parts \u003d line.split(\",\", -1);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"            throw new IllegalArgumentException(\"Invalid task format: \" + line);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"        String type \u003d parts[0];        // Task type (T, D, E, C)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"        boolean isDone \u003d Boolean.parseBoolean(parts[1]);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"        String taskName \u003d parts[2];","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"        switch (type) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"        case \"T\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"            return new Todo(taskName, isDone);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"        case \"D\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"            if (parts.length \u003c 4) throw new IllegalArgumentException(\"Invalid Deadline format: \" + line);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"            return new Deadline(taskName, isDone, parts[3]);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"        case \"E\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"            if (parts.length \u003c 5) throw new IllegalArgumentException(\"Invalid Event format: \" + line);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"            return new Event(taskName, isDone, parts[3], parts[4]);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"        case \"C\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"            if (parts.length \u003c 5) throw new IllegalArgumentException(\"Invalid Consultation format: \" + line);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"            return new Consultation(taskName, isDone, parts[3], parts[4]);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"        default:","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"            throw new IllegalArgumentException(\"Unknown task type: \" + type);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"kmnyn":49}},{"path":"src/main/java/FileHandlers/TutorialClassFileLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class TutorialClassFileLoader implements FileLoader\u003cTutorialClass\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    private final StudentListFileLoader studentListFileLoader \u003d new StudentListFileLoader();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    public TutorialClass loadFromFile(String path) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"        throw new UnsupportedOperationException(\"Use loadFromBlock(List\u003cString\u003e) instead.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    public TutorialClass loadFromBlock(List\u003cString\u003e blockLines) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        String header \u003d blockLines.get(0).substring(1).trim(); // Remove \u0027#\u0027 and trim","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        String[] meta \u003d header.split(\",\", 4);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        String name \u003d meta[0].trim();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        DayOfWeek dayOfWeek \u003d DayOfWeek.valueOf(meta[1].trim().toUpperCase());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        LocalTime start \u003d LocalTime.parse(meta[2].trim());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        LocalTime end \u003d LocalTime.parse(meta[3].trim());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        List\u003cString\u003e studentLines \u003d blockLines.subList(1, blockLines.size());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        StudentList studentList \u003d studentListFileLoader.loadFromLines(studentLines, name);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"        TutorialClass tutorial \u003d new TutorialClass();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        tutorial.setTutorialName(name);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"        tutorial.setDayOfWeek(dayOfWeek);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        tutorial.setStartTime(start);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        tutorial.setEndTime(end);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"        tutorial.setStudentList(studentList);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"        return tutorial;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":38}},{"path":"src/main/java/FileHandlers/TutorialClassFileSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import students.Student;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class TutorialClassFileSaver implements FileSaver\u003cTutorialClass\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    private final StudentFileSaver studentSaver \u003d new StudentFileSaver(); // not strictly needed here","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    public void saveToFile(TutorialClass tutorial, String directoryPath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"        String fileName \u003d directoryPath + \"/\" + tutorial.getTutorialName() + \".csv\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        try (FileWriter writer \u003d new FileWriter(fileName)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"            // Write metadata","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"            writer.write(tutorial.getTutorialName() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"                    tutorial.getDayOfWeek().toString() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"                    tutorial.getStartTime().toString() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"                    tutorial.getEndTime().toString() + \"\\n\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"            // Write each student","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"            for (Student student : tutorial.getStudentList().getStudents()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"                writer.write(student.getName() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"                        DateTimeFormatterUtil.formatDate(student.getDateOfBirth()) + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"                        student.getGender() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"                        student.getContact() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"                        student.getMatricNumber() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"                        (student.getRemark() !\u003d null ? student.getRemark() : \"\") + \"\\n\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Error saving tutorial class: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":37}},{"path":"src/main/java/FileHandlers/TutorialClassListFileLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"public class TutorialClassListFileLoader implements FileLoader\u003cTutorialClassList\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    private final TutorialClassFileLoader tutorialLoader \u003d new TutorialClassFileLoader();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    public TutorialClassList loadFromFile(String filePath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        ArrayList\u003cTutorialClass\u003e tutorials \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"            String line;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            List\u003cString\u003e currentBlock \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"                line \u003d line.trim();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"                if (line.startsWith(\"#\")) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"                    if (!currentBlock.isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"                        // Load previous tutorial block","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"                        TutorialClass tutorial \u003d tutorialLoader.loadFromBlock(currentBlock);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"                        tutorials.add(tutorial);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"                        currentBlock.clear();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"                    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"                if (!line.isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"                    currentBlock.add(line);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"            // Final block","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"            if (!currentBlock.isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"                TutorialClass tutorial \u003d tutorialLoader.loadFromBlock(currentBlock);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"                tutorials.add(tutorial);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Error loading TutorialClassList: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"        return new TutorialClassList(tutorials);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":50}},{"path":"src/main/java/FileHandlers/TutorialClassListFileSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import students.Student;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"public class TutorialClassListFileSaver implements FileSaver\u003cTutorialClassList\u003e {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    public void saveToFile(TutorialClassList tutorialList, String directoryPath) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"        String filePath \u003d directoryPath + \"/AllTutorials.csv\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"            for (TutorialClass tutorial : tutorialList.getTutorialClasses()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"                // Write tutorial block header","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"                writer.write(\"# \" + tutorial.getTutorialName() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"                        tutorial.getDayOfWeek().toString() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"                        tutorial.getStartTime().toString() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"                        tutorial.getEndTime().toString() + \"\\n\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"                // Write each student in this tutorial","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"                for (Student student : tutorial.getStudentList().getStudents()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"                    writer.write(student.getName() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"                            DateTimeFormatterUtil.formatDate(student.getDateOfBirth()) + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"                            student.getGender() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"                            student.getContact() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"                            student.getMatricNumber() + \",\" +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"                            (student.getRemark() !\u003d null ? student.getRemark() : \"\") + \"\\n\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"                writer.write(\"\\n\"); // Separate blocks","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Error saving TutorialClassList: \" + e.getMessage());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":40}},{"path":"src/main/java/TASync.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Util.DataManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"vihaan27"},"content":"import Util.UI;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import Command.commandHandler.CommandHandler;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import Command.commandHandler.CommandParser;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"vihaan27"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"vihaan27"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"import java.io.File;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"public class TASync {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        // Load tutorials","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        TutorialClassList tutorialList \u003d dataManager.loadTutorials();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        if (tutorialList \u003d\u003d null || tutorialList.getTutorialClasses().isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"No tutorials loaded or file is empty.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            tutorialList \u003d new TutorialClassList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Tutorial classes loaded from: \" + new File(dataManager.getTutorialFilePath()).getPath() + \"\\n\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        AttendanceFile attendanceFile \u003d dataManager.loadAttendanceFiles(tutorialList);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        if (attendanceFile \u003d\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"No attendance file loaded.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"            attendanceFile \u003d new AttendanceFile(null);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Tutorial classes loaded from: \" + new File(dataManager.getAttendanceFilePath()).getPath() + \"\\n\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"        /*","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"        for (AttendanceList attendanceList : attendanceFile.getAttendanceList()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"            System.out.println(attendanceList);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"        } // just to check if attendanceFile imported correctly","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"        */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"vihaan27"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"vihaan27"},"content":"        StudentList studentlist \u003d new StudentList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"vihaan27"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"vihaan27"},"content":"        ui.printWelcome();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"vihaan27"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"vihaan27"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"vihaan27"},"content":"        while (isRunning) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"vihaan27"},"content":"            String input \u003d ui.getUserCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"vihaan27"},"content":"            CommandParser commandParser \u003d new CommandParser(input);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"vihaan27"},"content":"            String[] parts \u003d commandParser.getParts();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"vihaan27"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"                System.out.println(\"Invalid command format. Please use: add -[type] [task details]\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"vihaan27"},"content":"                break;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"vihaan27"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wongyihao02"},"content":"            ArrayList\u003cObject\u003e tutAtten \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wongyihao02"},"content":"            tutAtten.add(tutorialList);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wongyihao02"},"content":"            tutAtten.add(attendanceFile);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"vihaan27"},"content":"            String listType \u003d parts[1];","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"            String command \u003d parts[0].toUpperCase();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"vihaan27"},"content":"            CommandHandler commandHandler;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samstt"},"content":"            if (\"ADD\".equals(command) || \"HELP\".equals(command) || listType.equalsIgnoreCase(\"-p\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"vihaan27"},"content":"                commandHandler \u003d new CommandHandler(taskList, parts);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"            } else if (\"BYE\".equals(command)) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"                commandHandler \u003d new CommandHandler(taskList, parts);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"vihaan27"},"content":"            } else if (listType.equalsIgnoreCase(\"-s\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"vihaan27"},"content":"                commandHandler \u003d new CommandHandler(studentlist, parts);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wongyihao02"},"content":"            } else if (listType.equalsIgnoreCase(\"-t\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wongyihao02"},"content":"                commandHandler \u003d new CommandHandler(tutorialList, parts);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wongyihao02"},"content":"            } else if (listType.equalsIgnoreCase(\"-a\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wongyihao02"},"content":"                commandHandler \u003d new CommandHandler(attendanceFile, parts);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wongyihao02"},"content":"            } else if (listType.equalsIgnoreCase(\"-at\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wongyihao02"},"content":"                commandHandler \u003d new CommandHandler(tutAtten, parts);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"vihaan27"},"content":"            } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"vihaan27"},"content":"                commandHandler \u003d new CommandHandler(null, parts);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"vihaan27"},"content":"                System.out.println(\"Invalid command\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"vihaan27"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"vihaan27"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"vihaan27"},"content":"            isRunning \u003d commandHandler.runCommand();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"vihaan27"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"vihaan27"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"vihaan27"},"content":"        ui.printGoodbye();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"vihaan27"},"content":"        ui.close();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"        dataManager.saveTutorials(tutorialList);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"        dataManager.saveAttendanceFile(attendanceFile);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"All data saved successfully!\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":44,"samstt":1,"kmnyn":3,"wongyihao02":10,"vihaan27":31}},{"path":"src/main/java/Tutorial/TutorialClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Tutorial;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import students.StudentList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"public class TutorialClass {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    private String tutorialName;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    private StudentList studentList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    private LocalTime startTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    private LocalTime endTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    private DayOfWeek dayOfWeek;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    public String getTutorialName() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        return tutorialName;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public void setTutorialName(String tutorialName) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        this.tutorialName \u003d tutorialName;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    public StudentList getStudentList() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        return studentList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"    public void setStudentList(StudentList studentList) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"        this.studentList \u003d studentList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        return startTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"    public void setStartTime(LocalTime startTime) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"        return endTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"    public void setEndTime(LocalTime endTime) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"    public DayOfWeek getDayOfWeek() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"        return dayOfWeek;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"    public void setDayOfWeek(DayOfWeek dayOfWeek) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"        this.dayOfWeek \u003d dayOfWeek;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"        return \"tutorialName: \" + tutorialName +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"                \", dayOfWeek: \" + dayOfWeek +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"                \", from: \" + startTime +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"                \", to: \" + endTime +","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"                \", studentList: \" + studentList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":63}},{"path":"src/main/java/Tutorial/TutorialClassList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Tutorial;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"public class TutorialClassList {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"    private final ArrayList\u003cTutorialClass\u003e tutorialClasses;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    public TutorialClassList() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"        this.tutorialClasses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    public TutorialClassList(ArrayList\u003cTutorialClass\u003e tutorialClasses) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"        this.tutorialClasses \u003d tutorialClasses;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    public ArrayList\u003cTutorialClass\u003e getTutorialClasses() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        return tutorialClasses;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    public void addTutorialClass(TutorialClass tutorialClass) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        tutorialClasses.add(tutorialClass);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"    public TutorialClass getByName(String name) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        for (TutorialClass t : tutorialClasses) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"            if (t.getTutorialName().equalsIgnoreCase(name)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"                return t;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"    public void removeTutorialClass(TutorialClass tutorialClass) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samstt"},"content":"        tutorialClasses.remove(tutorialClass);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":31,"samstt":5}},{"path":"src/main/java/Util/CommandListPrinter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package Util;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.CommandList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * Utility class for printing all available commands.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * This class iterates through the `CommandList` enum and prints descriptions for each command.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class CommandListPrinter {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * Prints all available commands by calling the `printCommand` method for each command in the CommandList enum.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    public static void printCommands() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Valid Commands:\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        // Loop through each enum constant in CommandList and call printCommand()","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        for (CommandList command : CommandList.values()) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"            command.printCommand();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":20,"kmnyn":1}},{"path":"src/main/java/Util/DataManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Util;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import FileHandlers.*;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"import java.io.File;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"public class DataManager {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    private static final String TUTORIAL_FILE_PATH \u003d DIRECTORY_PATH + \"/AllTutorials.csv\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    private static final String ATTENDANCE_FILE_PATH \u003d DIRECTORY_PATH + \"/AttendanceFile.csv\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    public TutorialClassList loadTutorials() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        ensureFileAndDirectoryExist(TUTORIAL_FILE_PATH, DIRECTORY_PATH);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        FileLoader\u003cTutorialClassList\u003e tutorialLoader \u003d new TutorialClassListFileLoader();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        return tutorialLoader.loadFromFile(TUTORIAL_FILE_PATH);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"    public AttendanceFile loadAttendanceFiles(TutorialClassList classList) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        ensureFileAndDirectoryExist(ATTENDANCE_FILE_PATH, DIRECTORY_PATH);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        FileLoader\u003cAttendanceFile\u003e attendanceFileLoader \u003d new AttendanceFileFileLoader(classList);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        return attendanceFileLoader.loadFromFile(ATTENDANCE_FILE_PATH);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    public AttendanceFile createDemoAttendanceFile(TutorialClassList tutorialList, int numberOfWeeks) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"        ArrayList\u003cAttendanceList\u003e attendanceLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        int tutorialLimit \u003d Math.max(2, tutorialList.getTutorialClasses().size());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"        for (int i \u003d 0; i \u003c tutorialLimit; i++) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"            TutorialClass tutorial \u003d tutorialList.getTutorialClasses().get(i);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"            for (int week \u003d 1; week \u003c\u003d numberOfWeeks; week++) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"                AttendanceList attendanceList \u003d new AttendanceList(tutorial, week);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"                if (!tutorial.getStudentList().getStudents().isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"                    attendanceList.markAbsent(tutorial.getStudentList().getStudents().get(0));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"                attendanceLists.add(attendanceList);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"        return new AttendanceFile(attendanceLists);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"    public void saveTutorials(TutorialClassList tutorialList) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"        FileSaver\u003cTutorialClassList\u003e tutorialSaver \u003d new TutorialClassListFileSaver();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"        tutorialSaver.saveToFile(tutorialList, DIRECTORY_PATH);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"    public void saveAttendanceFile(AttendanceFile attendanceFile) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"        FileSaver\u003cAttendanceFile\u003e attendanceSaver \u003d new AttendanceFileFileSaver();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"        attendanceSaver.saveToFile(attendanceFile, DIRECTORY_PATH);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"    public String getTutorialFilePath() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"        return TUTORIAL_FILE_PATH;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"    public String getAttendanceFilePath() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"        return ATTENDANCE_FILE_PATH;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"     * Ensures the directory and file exist. If not, creates them.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"     * @param filePath The full path of the file to create.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"     * @param directoryPath The directory to create if it doesn\u0027t exist.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xubin0"},"content":"    private void ensureFileAndDirectoryExist(String filePath, String directoryPath) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"        File dir \u003d new File(directoryPath);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xubin0"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"            boolean dirCreated \u003d dir.mkdirs();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xubin0"},"content":"            if (dirCreated) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"                System.out.println(\"📁 Created directory: \" + directoryPath);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xubin0"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"            try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xubin0"},"content":"                boolean fileCreated \u003d file.createNewFile();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"                if (fileCreated) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"                    System.out.println(\"📄 Created file: \" + filePath);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xubin0"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xubin0"},"content":"                System.out.println(\"❌ Error creating file: \" + filePath);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xubin0"},"content":"                e.printStackTrace();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"xubin0":93}},{"path":"src/main/java/Util/DateTimeFormatterUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package Util;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class DateTimeFormatterUtil {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    private static final DateTimeFormatter TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    // --- Date Methods ---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    public static LocalDate parseDate(String dateStr) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"            return LocalDate.parse(dateStr, DATE_FORMAT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Invalid date format. Expected format: dd/MM/yyyy\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"            return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    public static String formatDate(LocalDate date) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        return date.format(DATE_FORMAT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    public static boolean isValidDate(String dateStr) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"            LocalDateTime.parse(dateStr, DATE_FORMAT);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"            return true;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"            return false;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"    // --- Time Methods ---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"    public static LocalTime parseTime(String timeStr) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"            return LocalTime.parse(timeStr, TIME_FORMAT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Invalid time format. Expected format: HH:mm\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"            return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"    public static String formatTime(LocalTime time) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"        return time.format(TIME_FORMAT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"    public static boolean isValidTime(String timeStr) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"            LocalDateTime.parse(timeStr, TIME_FORMAT);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"            return true;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"            return false;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"    // --- DateTime Methods ---","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"            return LocalDateTime.parse(dateTimeStr, DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"Invalid datetime format. Expected format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"            return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xubin0"},"content":"        return dateTime.format(DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"    public static boolean isValidDateTime(String dateTimeStr) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"            LocalDateTime.parse(dateTimeStr, DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xubin0"},"content":"            return true;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xubin0"},"content":"            return false;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":85,"kmnyn":1}},{"path":"src/main/java/Util/IntegerChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package Util;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":" * Utility class for checking whether a given string is a valid integer.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * This class contains a method to verify if a string can be converted into an integer.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"public class IntegerChecker {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"     * Checks if the provided input is a valid integer.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"     * @param input The string to check.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * @return true if the input is a valid integer; false otherwise.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    public static boolean isInteger(String input) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"        try {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"            Integer.parseInt(input);  // Try converting to an integer","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"            return true;  // If successful, return true","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"            return false; // If an exception occurs, it\u0027s not an integer","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":20,"kmnyn":1}},{"path":"src/main/java/Util/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package Util;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"public class UI {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    public UI() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * Prints the welcome message when the program starts.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    public void printWelcome() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"👋 Welcome to TASync!\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Type a command to get started, or type /HELP to see available commands.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"----------------------------------------------------\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"     * Prints a generic message to the user.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"     * @param message The message to print.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"     * Reads the next user command from the console.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"     * @return The user input as a string.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"    public String getUserCommand() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"        System.out.print(\"\u003e \"); // Prompt","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"    public void printGoodbye() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"👋 Goodbye! Have a productive day!\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"     * Close scanner when done (optional).","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"    public void close() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"        scanner.close();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"xubin0":53}},{"path":"src/main/java/exception/TASyncException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package exception;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":" * Custom exception class for handling various invalid command inputs in the application.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * This class provides specific methods for each type of invalid command that may be thrown during user input.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"public class TASyncException extends Exception {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"    public TASyncException(String message) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"        super(message);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    public static TASyncException invalidMarkCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"        return new TASyncException(\"Invalid mark command, please specify which task to mark with an integer.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    public static TASyncException invalidUnmarkCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        return new TASyncException(\"Invalid unmark command, please specify which task to unmark with an integer.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public static TASyncException invalidDeadlineCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        return new TASyncException(\"Invalid deadline command, please specify when deadline is in the future. with \\\"/by\\\".\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    public static TASyncException invalidEventCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        return new TASyncException(\"Invalid event command, please specify duration of event with \\\"/from\\\" and \\\"/to\\\".\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    public static TASyncException invalidTodoCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        return new TASyncException(\"Invalid Todo command, please name of Task to be done.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"    public static TASyncException invalidConsultationCommand() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"        return new TASyncException(\"Invalid Consultation command, specify duration of consultation with \\\"/from\\\" and \\\"/to\\\".\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"    public static TASyncException invalidDeleteCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"        return new TASyncException(\"Invalid delete command, please specify which task to delete with an integer.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"    public static TASyncException invalidFindCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"        return new TASyncException(\"Invalid Find command, please specify Keyword to Find tasks.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"    public static TASyncException invalidRenameCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"        return new TASyncException(\"Invalid event command, please key command in the format: rename \u003ctask number\u003e \u003cnew Name\u003e.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"    public static TASyncException invalidNewStudentCommand() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"        return new TASyncException(\"Invalid NewStudent command, please key command in the format: NewStudent \u003cname\u003e \u003cage\u003e \u003cgender\u003e \u003ccontact\u003e \u003cmatricNumber\u003e \u003ctutorialClass\u003e.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samstt"},"content":"    public static TASyncException invalidChangeRemarkCommand() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samstt"},"content":"        return new TASyncException(\"Invalid change remark command, please specify which task to change remark.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samstt"},"content":"    public static TASyncException invalidDeleteStudentCommand() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samstt"},"content":"        return new TASyncException(\"Invalid delete student command, please specify the tutorial number and the matriculation number of the student to delete from the list.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samstt"},"content":"    public static TASyncException invalidFindStudentCommand() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samstt"},"content":"        return new TASyncException(\"Invalid find student command, please specify which student to find.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samstt"},"content":"    public static TASyncException invalidCheckRemarkCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samstt"},"content":"        return new TASyncException(\"Invalid check remark command, please specify which student to check.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wongyihao02"},"content":"    public static TASyncException invalidListUpcomingTutorialsCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wongyihao02"},"content":"        return new TASyncException(\"Invalid List Upcoming Tutorials command, please specify an end date\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wongyihao02"},"content":"    public static TASyncException invalidListTutorialStudentsCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samstt"},"content":"        return new TASyncException(\"Invalid list all students in tutorial command, please key command in the format: /liststudents -t \u003ctutorialCode\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samstt"},"content":"    public static Exception invalidNewTutorialCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samstt"},"content":"        return new TASyncException(\"Invalid new tutorial command, please key command in the format: /newtutorial \u003ctutorialCode\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samstt"},"content":"    public static Exception invalidDayOfWeek() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samstt"},"content":"        return new TASyncException(\"Invalid day of week command, please specify day of week\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samstt"},"content":"    public static Exception invalidTimeFormat() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samstt"},"content":"        return new TASyncException(\"Invalid time format, please specify time in a valid format.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samstt"},"content":"    public static Exception duplicateTutorial() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samstt"},"content":"        return new TASyncException(\"Duplicate tutorial input, please try again\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samstt"},"content":"    public static Exception invalidDeleteTutorialCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samstt"},"content":"        return new TASyncException(\"Invalid delete tutorial command, pleas key command in the format /delete -t \u003ctutorialCode\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wongyihao02"},"content":"    public static TASyncException invalidListAttendanceListCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wongyihao02"},"content":"        return new TASyncException(\"Invalid List all students in attendanceList command, please specify a valid attendancelist with a valid tutorial id and a valid week\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wongyihao02"},"content":"    public static TASyncException invalidmarkAttendanceListCommand() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wongyihao02"},"content":"        return new TASyncException(\"Invalid mark attendance command, please specify a valid attendancelist with a valid tutorial id and a valid week and a valid student id and student name\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":41,"samstt":37,"kmnyn":3,"wongyihao02":15}},{"path":"src/main/java/students/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package students;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"import java.time.Period;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wongyihao02"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class Student {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    private String name;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"    private LocalDate dateOfBirth;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    private String gender;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"    private String contact;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    private String matricNumber;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"    private String remark;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    public Student(String name, LocalDate dateOfBirth, String gender, String contact, String matricNumber, String tutorialClass) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"        this.matricNumber \u003d matricNumber;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"    public String getName() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        return name;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    public void setName(String name) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"    public int getAge() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"        return Period.between(dateOfBirth, LocalDate.now()).getYears();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"    public LocalDate getDateOfBirth() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"        return dateOfBirth;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"    public void setDateOfBirth(LocalDate dateOfBirth) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"        this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"    public String getGender() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"        return gender;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"    public void setGender(String gender) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"    public String getContact() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"        return contact;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"    public void setContact(String contact) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"    public String getMatricNumber() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"        return matricNumber;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"    public void setMatricNumber(String matricNumber) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"        this.matricNumber \u003d matricNumber;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"    public String getRemark() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xubin0"},"content":"        return remark;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"    public void setRemark(String remark) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xubin0"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xubin0"},"content":"        return getName() +\",\"+ getAge() +\",\" + getGender() +\",\" + getContact() +\",\"+ getMatricNumber() +\"/n\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wongyihao02"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wongyihao02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wongyihao02"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wongyihao02"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wongyihao02"},"content":"        Student student \u003d (Student) o;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wongyihao02"},"content":"        return Objects.equals(matricNumber, student.matricNumber); // Compare based on matricNumber","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wongyihao02"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wongyihao02"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wongyihao02"},"content":"        return Objects.hash(matricNumber);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xubin0"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samstt"},"content":"        return \"Student [name\u003d\" + name + \", dateOfBirth\u003d\" + DateTimeFormatterUtil.formatDate(dateOfBirth)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samstt"},"content":"                + \", gender\u003d\" + gender + \", contact\u003d\" + contact + \", matricNumber\u003d\" + matricNumber + \"]\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":82,"samstt":3,"wongyihao02":16}},{"path":"src/main/java/students/StudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package students;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"public class StudentList {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    private ArrayList\u003cStudent\u003e students;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    public StudentList() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"        this.students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    public StudentList(ArrayList\u003cStudent\u003e students) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"        this.students \u003d students;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    public ArrayList\u003cStudent\u003e getStudents() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        return students;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"    public void setStudents(ArrayList\u003cStudent\u003e students) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"        this.students \u003d students;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        this.students.add(student);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"    // Remove by student object","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"    public void removeStudent(Student student) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"        this.students.remove(student);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"    //  Get by matric number (unique)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"    public Student getStudentByMatricNumber(String matricNumber) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"        for (Student s : students) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"            if (s.getMatricNumber().equalsIgnoreCase(matricNumber)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"                return s;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"        return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"    //  Get by name (handle duplicates)","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"    public Student getStudentByName(String name) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"        List\u003cStudent\u003e matched \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"        for (Student s : students) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"            if (s.getName().equalsIgnoreCase(name)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"                matched.add(s);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"        if (matched.isEmpty()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"No student found with the name: \" + name);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"            return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"        if (matched.size() \u003d\u003d 1) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"            return matched.get(0);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"        boolean allSame \u003d matched.stream().allMatch(s -\u003e s.getName().equalsIgnoreCase(name));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Multiple students found with the name \u0027\" + name + \"\u0027:\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xubin0"},"content":"        for (int i \u003d 0; i \u003c matched.size(); i++) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"            Student s \u003d matched.get(i);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xubin0"},"content":"            System.out.println((i + 1) + \". \" + s.getName() + \" (Matric No: \" + s.getMatricNumber() + \")\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"        if (allSame) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"Please enter the matric number to identify the student: \");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"            String matric \u003d scanner.nextLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xubin0"},"content":"            return getStudentByMatricNumber(matric);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"Enter the number (1-\" + matched.size() + \") or full name: \");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"            try {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"                int index \u003d Integer.parseInt(input);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"                if (index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d matched.size()) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xubin0"},"content":"                    return matched.get(index - 1);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xubin0"},"content":"                } else {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xubin0"},"content":"                    System.out.println(\"Invalid index.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xubin0"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xubin0"},"content":"                for (Student s : matched) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xubin0"},"content":"                    if (s.getName().equalsIgnoreCase(input)) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xubin0"},"content":"                        return s;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xubin0"},"content":"                    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xubin0"},"content":"                }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xubin0"},"content":"                System.out.println(\"No match for input name.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xubin0"},"content":"        return null;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":101,"samstt":2}},{"path":"src/main/java/task/Consultation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package task;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":" * Represents a task with a consultation.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":" * This class extends the Task class and includes additional functionality for managing consultations with start and end times.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"public class Consultation extends Task {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    private final String consultationStart;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"    private final String consultationEnd;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"     * Constructs a Consultation task.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"     * @param studentName       The name of the student.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"     * @param done              The status of the consultation (completed or not).","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"     * @param consultationStart The start time of the consultation.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"     * @param consultationEnd   The end time of the consultation.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"    public Consultation(String studentName, boolean done, String consultationStart, String consultationEnd) throws TASyncException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"        super(studentName, done);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"        if (!DateTimeFormatterUtil.isValidDateTime(consultationStart) || !DateTimeFormatterUtil.isValidDateTime(consultationEnd)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"            throw new TASyncException(\"Invalid datetime format. Expected format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"        this.consultationStart \u003d consultationStart;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"        this.consultationEnd \u003d consultationEnd;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"        setTaskType(TaskType.CONSULTATION);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"    public void printDue() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"        boolean isStartValid \u003d DateTimeFormatterUtil.isValidDateTime(consultationStart);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"        boolean isEndValid \u003d DateTimeFormatterUtil.isValidDateTime(consultationEnd);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"        String formattedStart \u003d isStartValid ? String.valueOf(DateTimeFormatterUtil.parseDateTime(consultationStart)) : \"INVALID DATE\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"        String formattedEnd \u003d isEndValid ? String.valueOf(DateTimeFormatterUtil.parseDateTime(consultationEnd)) : \"INVALID DATE\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"        System.out.println(\" (from: \" + formattedStart + \" to: \" + formattedEnd + \")\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"     * Returns a string representation of the consultation task for file storage.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"     * @return A string representing the consultation task for file storage.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"        String start \u003d DateTimeFormatterUtil.isValidDateTime(consultationStart)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"                ? consultationStart","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"                : \"INVALID_DATE\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kmnyn"},"content":"        String end \u003d DateTimeFormatterUtil.isValidDateTime(consultationEnd)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kmnyn"},"content":"                ? consultationEnd","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kmnyn"},"content":"                : \"INVALID_DATE\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kmnyn"},"content":"        return \"C,\" + getIsDone() + \",\" + getTaskName() + \",\" + start + \",\" + end + \"\\n\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"xubin0":2,"kmnyn":61}},{"path":"src/main/java/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" * This class extends the Task class and includes additional functionality for managing deadlines.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    private final String deadline;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param done The status of the task (completed or not).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * @param deadline The deadline for the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"    public Deadline(String taskName, boolean done, String deadline) throws TASyncException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        super(taskName, done);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"        if (!DateTimeFormatterUtil.isValidDateTime(deadline)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"            throw new TASyncException(\"Invalid datetime format. Expected format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"        setTaskType(TaskType.DEADLINE);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    public String getDeadline() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"        return deadline;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"     * Prints the deadline of the task in a user-friendly format.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"    public void printDue() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"        if (DateTimeFormatterUtil.isValidDateTime(deadline)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\" (by: \" + DateTimeFormatterUtil.parseDateTime(deadline) + \")\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"            System.out.println(\" (by: INVALID DATE FORMAT: \" + deadline + \")\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"     * Returns a string representation of the task in a file-friendly format.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"     * @return A string representing the task for file storage.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"        String formattedDeadline \u003d DateTimeFormatterUtil.isValidDateTime(deadline) ? deadline : \"INVALID_DATE\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"        return \"D,\" + getIsDone() + \",\" + getTaskName() + \",\" + formattedDeadline + \"\\n\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":41,"kmnyn":15}},{"path":"src/main/java/task/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"import Util.DateTimeFormatterUtil;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" * Represents a task with an event.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":" * This class extends the Task class and includes additional functionality for managing events with start and end times.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"public class Event extends Task {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"    private final String eventStart;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    private final String eventEnd;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * Constructs an Event task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param taskName The name of the event.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param done The status of the event (completed or not).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * @param eventStart The start time of the event.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     * @param eventEnd The end time of the event.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"    public Event(String taskName, boolean done, String eventStart, String eventEnd) throws TASyncException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        super(taskName, done);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"        if (!DateTimeFormatterUtil.isValidDateTime(eventStart) || !DateTimeFormatterUtil.isValidDateTime(eventEnd)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"            throw new TASyncException(\"Invalid datetime format. Expected format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"        this.eventStart \u003d eventStart;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"        this.eventEnd \u003d eventEnd;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"        setTaskType(TaskType.EVENT);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"    public void printDue() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"        boolean isStartValid \u003d DateTimeFormatterUtil.isValidDateTime(eventStart);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"        boolean isEndValid \u003d DateTimeFormatterUtil.isValidDateTime(eventEnd);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"        String formattedStart \u003d isStartValid ? String.valueOf(DateTimeFormatterUtil.parseDateTime(eventStart)) : \"INVALID DATE\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"        String formattedEnd \u003d isEndValid ? String.valueOf(DateTimeFormatterUtil.parseDateTime(eventEnd)) : \"INVALID DATE\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"        System.out.println(\" (from: \" + formattedStart + \" to: \" + formattedEnd + \")\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"     * Returns a string representation of the event task for file storage.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"     * @return A string representing the event task for file storage.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"        String start \u003d DateTimeFormatterUtil.isValidDateTime(eventStart)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"                ? eventStart","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"                : \"INVALID_DATE\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"        String end \u003d DateTimeFormatterUtil.isValidDateTime(eventEnd)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"                ? eventEnd","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"                : \"INVALID_DATE\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kmnyn"},"content":"        return \"E,\" + getIsDone() + \",\" + getTaskName() + \",\" + start + \",\" + end + \"\\n\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":34,"kmnyn":26}},{"path":"src/main/java/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * Abstract class representing a task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":" * This class defines the common properties and methods for all types of tasks (e.g., Todo, Deadline, Event, Consultation).","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"public abstract class Task {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    private TaskType taskType;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"    private String taskName;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"    private boolean isDone;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     * Constructs a Task with the given task name and completion status.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"     * @param done     The status of the task (completed or not).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    public Task(String taskName, boolean done) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    public Task(String taskName) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"        return taskType;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"    public void setTaskType(TaskType taskType) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"    public String getTaskName() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"        return taskName;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"        return isDone;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"     * Prints the task\u0027s completion status.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"    public void printIsDone() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"[X]\"); //task done, print with X","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"[ ]\"); //task not done print without X","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kmnyn"},"content":"     * Prints the task\u0027s type (e.g., Todo, Deadline, Event, Consultation).","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"    public void printTaskType() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"        switch (this.getTaskType()) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"        case EVENT:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"[E]\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"            break;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xubin0"},"content":"        case DEADLINE:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"[D]\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xubin0"},"content":"            break;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"        case TODO:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xubin0"},"content":"            System.out.print(\"[T]\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"            break;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kmnyn"},"content":"        case CONSULTATION:","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kmnyn"},"content":"            System.out.print(\"[C]\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kmnyn"},"content":"            break;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"     * Prints the task details.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xubin0"},"content":"    public void printTask() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xubin0"},"content":"        printTaskType();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xubin0"},"content":"        printIsDone();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xubin0"},"content":"        System.out.print(\" \" + taskName);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xubin0"},"content":"     * Prints the due date or duration of the task (if applicable).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xubin0"},"content":"    public void printDue() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xubin0"},"content":"        System.out.println();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xubin0"},"content":"     * Returns a string representation of the task for file storage.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xubin0"},"content":"     * @return A string representing the task for file storage.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xubin0"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":103,"kmnyn":5}},{"path":"src/main/java/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import java.util.Iterator;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import FileHandlers.TaskListFileSaver;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import FileHandlers.TaskListFileLoader;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":" * This class provides methods for managing tasks (e.g., adding, marking, deleting, and searching tasks).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"public class TaskList {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    private static final String FILE_PATH \u003d \"./data/tasklist.txt\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    public TaskList() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"        loadTasks();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"     * Constructs a TaskList with a specified list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"     * Loads tasks from the file into the TaskList.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"    public void loadTasks() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"        TaskListFileLoader loader \u003d new TaskListFileLoader();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kmnyn"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d loader.loadFromFile(FILE_PATH);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kmnyn"},"content":"        if (loadedTasks !\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"            tasks.clear();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"            tasks.addAll(loadedTasks);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"     * Saves the current tasks to the file.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"    public void saveTasks() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"        TaskListFileSaver saver \u003d new TaskListFileSaver();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"        saver.saveToFile(tasks, DIRECTORY_PATH);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"     * @return The list of tasks in the TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"        return tasks;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"     * Filters tasks based on a keyword and returns a new TaskList containing matching tasks.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"     * @param keyword The keyword to search for in task names.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"     * @return A TaskList containing tasks that match the keyword.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"    public TaskList getTaskListWithKeyWord(String keyword) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"        TaskList tasksWithKeyWord \u003d new TaskList(new ArrayList\u003c\u003e(tasks));","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"        Iterator\u003cTask\u003e iterator \u003d tasksWithKeyWord.tasks.iterator();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xubin0"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xubin0"},"content":"            Task task \u003d iterator.next();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xubin0"},"content":"            if (!task.getTaskName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xubin0"},"content":"                iterator.remove();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xubin0"},"content":"        return tasksWithKeyWord;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xubin0"},"content":"     * Adds a Todo task to the TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xubin0"},"content":"     * @param todo The Todo task to be added.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xubin0"},"content":"    public void addTask(Todo todo) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xubin0"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"task added:\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xubin0"},"content":"        todo.printTask();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xubin0"},"content":"        todo.printDue();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Now you have \" + tasks.toArray().length + \" tasks in the list.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kmnyn"},"content":"        saveTasks();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xubin0"},"content":"     * Adds a Deadline task to the TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xubin0"},"content":"     * @param deadline The Deadline task to be added.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xubin0"},"content":"    public void addTask(Deadline deadline) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xubin0"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"task added:\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xubin0"},"content":"        deadline.printTask();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xubin0"},"content":"        deadline.printDue();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Now you have \" + tasks.toArray().length + \" tasks in the list.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kmnyn"},"content":"        saveTasks();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xubin0"},"content":"     * Adds an Event task to the TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xubin0"},"content":"     * @param event The Event task to be added.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xubin0"},"content":"    public void addTask(Event event) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xubin0"},"content":"        tasks.add(event);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"task added:\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xubin0"},"content":"        event.printTask();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xubin0"},"content":"        event.printDue();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xubin0"},"content":"        System.out.println(\"Now you have \" + tasks.toArray().length + \" tasks in the list.\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kmnyn"},"content":"        saveTasks();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kmnyn"},"content":"     * Adds a Consultation task to the TaskList.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kmnyn"},"content":"     * @param consultation The Consultation task to be added.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kmnyn"},"content":"    public void addTask(Consultation consultation) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kmnyn"},"content":"        tasks.add(consultation);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kmnyn"},"content":"        System.out.println(\"Task added:\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kmnyn"},"content":"        consultation.printTask();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kmnyn"},"content":"        consultation.printDue();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kmnyn"},"content":"        System.out.println(\"Now you have \" + tasks.toArray().length + \" tasks in the list.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kmnyn"},"content":"        saveTasks();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"xubin0"},"content":"     * Returns the total number of tasks in the TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xubin0"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xubin0"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"xubin0"},"content":"        return tasks.toArray().length;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"xubin0"},"content":"     * Marks a task as completed based on its task ID.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"xubin0"},"content":"     * @param taskId The ID of the task to mark as done.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"xubin0"},"content":"    public void markTaskAsDone(int taskId) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"xubin0"},"content":"        if (taskId \u003c\u003d tasks.toArray().length \u0026\u0026 taskId\u003e0) { //check if taskId is valid","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"xubin0"},"content":"            if (tasks.get(taskId - 1).getIsDone()) { //check if task is already unmarked","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"xubin0"},"content":"                System.out.println(tasks.get(taskId - 1).getTaskName() + \" was already marked as done\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"xubin0"},"content":"                tasks.get(taskId - 1).setIsDone(true); //valid and not done, mark as done","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"xubin0"},"content":"                System.out.println(tasks.get(taskId - 1).getTaskName() + \" is marked\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kmnyn"},"content":"                saveTasks();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"no such task\"); //not valid print error","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"xubin0"},"content":"     * Marks a task as undone based on its task ID.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"xubin0"},"content":"     * @param taskId The ID of the task to mark as undone.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"xubin0"},"content":"    public void markTaskAsUndone(int taskId) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"xubin0"},"content":"        if (taskId \u003c\u003d tasks.toArray().length \u0026\u0026 taskId\u003e0) { //check if taskId is valid","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"xubin0"},"content":"            if (!tasks.get(taskId - 1).getIsDone()) { //check if task is already unmarked","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"xubin0"},"content":"                System.out.println(tasks.get(taskId - 1).getTaskName() + \" was already unmarked\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"xubin0"},"content":"                tasks.get(taskId - 1).setIsDone(false); //if valid and marked, unmark it","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"xubin0"},"content":"                System.out.println(tasks.get(taskId - 1).getTaskName() + \" is unmarked\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kmnyn"},"content":"                saveTasks();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"no such task\"); //not valid print error","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"xubin0"},"content":"     * Deletes a task based on its task ID.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"xubin0"},"content":"     * @param taskId The ID of the task to delete.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"xubin0"},"content":"    public void deleteTask(int taskId) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"xubin0"},"content":"        if (taskId \u003c\u003d tasks.toArray().length \u0026\u0026 taskId \u003e 0) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"xubin0"},"content":"            Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"xubin0"},"content":"            tasks.remove(taskId - 1);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"deleted task: \");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"xubin0"},"content":"            task.printTask();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kmnyn"},"content":"            saveTasks();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"xubin0"},"content":"            System.out.println();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"xubin0"},"content":"        } else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"no such task\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"xubin0"},"content":"     * Renames a task based on its task ID.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"xubin0"},"content":"     * @param taskId The ID of the task to rename.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"xubin0"},"content":"     * @param newTaskName The new name for the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"xubin0"},"content":"    public void renameTask(int taskId, String newTaskName) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"xubin0"},"content":"        if (taskId \u003c\u003d tasks.toArray().length \u0026\u0026 taskId\u003e0) { //check if taskId valid","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"xubin0"},"content":"            if (tasks.get(taskId - 1).getTaskName().equals(newTaskName)) { //check if name is same","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"xubin0"},"content":"                System.out.println(\"please use a new name\"); //if no change in name then print error","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"xubin0"},"content":"            } else {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"xubin0"},"content":"                System.out.println(tasks.get(taskId - 1).getTaskName() + \" renamed to \" + newTaskName);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"xubin0"},"content":"                tasks.get(taskId - 1).setTaskName(newTaskName);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kmnyn"},"content":"                saveTasks();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"xubin0"},"content":"            }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"xubin0"},"content":"        }else{","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"xubin0"},"content":"            System.out.println(\"no such task\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"xubin0"},"content":"     * Prints the list of tasks in the TaskList.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"xubin0"},"content":"    public void printTaskList() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"xubin0"},"content":"        for (int i \u003d 0; i \u003c tasks.toArray().length; i++) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"xubin0"},"content":"            System.out.print(i + 1 + \".\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"xubin0"},"content":"            tasks.get(i).printTaskType();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"xubin0"},"content":"            tasks.get(i).printIsDone();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"xubin0"},"content":"            System.out.print(\" \" + tasks.get(i).getTaskName());","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"xubin0"},"content":"            tasks.get(i).printDue();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"xubin0"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":178,"kmnyn":48}},{"path":"src/main/java/task/TaskType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":" * Enum representing the different types of tasks: Todo, Deadline, Event and Consultation.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"public enum TaskType {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"    TODO(\"-pt\"),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"    DEADLINE(\"-pd\"),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"    EVENT(\"-pe\"),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"    CONSULTATION(\"-c\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    private final String commandShortcut;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"    TaskType(String commandShortcut) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"        this.commandShortcut \u003d commandShortcut;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"    public String getShortcut() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"        return commandShortcut;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"     * Converts a command shortcut into a TaskType.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"     * @param shortcut The command shortcut","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"     * @return The corresponding TaskType, or null if not found.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"    public static TaskType fromShortcut(String shortcut) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"        for (TaskType type : TaskType.values()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"            if (type.getShortcut().equals(shortcut)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"                return type;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"        return null;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":6,"kmnyn":29}},{"path":"src/main/java/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package task;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"/**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":" * Represents a simple \"Todo\" task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":" * This class extends Task and defines the specific properties and methods for a Todo task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":" */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"     * Constructs a Todo task with the specified task name and completion status.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"     * @param done The status of the task (completed or not).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"    public Todo(String taskName, boolean done) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"        super(taskName, done);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"        super.setTaskType(TaskType.TODO);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    /**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"     * Returns a string representation of the Todo task for file storage.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"     *","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"     * @return A string representing the Todo task for file storage.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"     */","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"    @Override","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"        return \"T,\" + getIsDone() + \",\" + getTaskName() +\"\\n\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-11","isFullCredit":false}],"authorContributionMap":{"xubin0":27,"kmnyn":1}},{"path":"src/test/java/FileHandlers/AttendanceFileFileLoaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wongyihao02"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceFile;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wongyihao02"},"content":"import Attendance.AttendanceList;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wongyihao02"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wongyihao02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wongyihao02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wongyihao02"},"content":"import students.Student;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wongyihao02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wongyihao02"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wongyihao02"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wongyihao02"},"content":"public class AttendanceFileFileLoaderTest {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wongyihao02"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wongyihao02"},"content":"    private static final String ATTENDANCE_FILE_PATH \u003d DIRECTORY_PATH + \"/AttendanceFile.csv\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    AttendanceList attendanceLists;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wongyihao02"},"content":"    ArrayList\u003cString\u003e ella;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wongyihao02"},"content":"    ArrayList\u003cString\u003e david;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wongyihao02"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wongyihao02"},"content":"    void setUp() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wongyihao02"},"content":"        FileCreator.createFileIfNotExists(ATTENDANCE_FILE_PATH, DIRECTORY_PATH);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wongyihao02"},"content":"        AttendanceFileFileLoader attendanceFileFileLoader \u003d new AttendanceFileFileLoader();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wongyihao02"},"content":"        AttendanceFile file \u003d attendanceFileFileLoader.loadFromFile(ATTENDANCE_FILE_PATH);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wongyihao02"},"content":"//        if (file \u003d\u003d null) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wongyihao02"},"content":"//            throw new RuntimeException(\"Attendance file could not be loaded.\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wongyihao02"},"content":"//        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wongyihao02"},"content":"//        System.out.println(\"Attendance file loaded successfully.\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wongyihao02"},"content":"        ArrayList\u003cAttendanceList\u003e attendanceList \u003d file.getAttendanceList();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wongyihao02"},"content":"        AttendanceList list \u003d null;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wongyihao02"},"content":"        for (AttendanceList attendance : attendanceList) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wongyihao02"},"content":"            TutorialClass tutorialClass \u003d attendance.getTutorialClass();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wongyihao02"},"content":"            if (tutorialClass.getTutorialName().equals(\"T01\") \u0026\u0026 attendance.getWeekNumber() \u003d\u003d 1) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wongyihao02"},"content":"                list \u003d attendance;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wongyihao02"},"content":"                break;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wongyihao02"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wongyihao02"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wongyihao02"},"content":"        assert list !\u003d null;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wongyihao02"},"content":"        TutorialClass tutorialClass \u003d list.getTutorialClass();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wongyihao02"},"content":"        Student Ella \u003d tutorialClass.getStudentList().getStudentByName(\"Ella sim\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wongyihao02"},"content":"        Student David \u003d tutorialClass.getStudentList().getStudentByName(\"David Ng\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wongyihao02"},"content":"        Map\u003cStudent, ArrayList\u003cString\u003e\u003e comments \u003d list.getCommentList();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wongyihao02"},"content":"        ArrayList\u003cString\u003e ellaComments \u003d comments.get(Ella);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wongyihao02"},"content":"        ArrayList\u003cString\u003e davidComments \u003d comments.get(David);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wongyihao02"},"content":"        ella \u003d ellaComments;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wongyihao02"},"content":"        david \u003d davidComments;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"        attendanceLists \u003d list;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wongyihao02"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wongyihao02"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wongyihao02"},"content":"    void testLoadNamesFromFile() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"        assertEquals(1, attendanceLists.getWeekNumber());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"        assertEquals(false, attendanceLists.getCommentList().isEmpty());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wongyihao02"},"content":"//    Ella sim//A005//comment1//comment2//comment3","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wongyihao02"},"content":"//    David Ng//A004//comment1.2","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wongyihao02"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wongyihao02"},"content":"    void testLoadCommentsFromFile() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wongyihao02"},"content":"       assertEquals(\"comment1\", ella.get(0));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wongyihao02"},"content":"       assertEquals(\"comment2\", ella.get(1));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wongyihao02"},"content":"       assertEquals(\"comment3\", ella.get(2));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wongyihao02"},"content":"       assertEquals(\"comment1.2\", david.get(0));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wongyihao02"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wongyihao02"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"xubin0":4,"wongyihao02":65}},{"path":"src/test/java/FileHandlers/TutorialClassListFileLoaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xubin0"},"content":"package FileHandlers;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClass;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"import Tutorial.TutorialClassList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xubin0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xubin0"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xubin0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xubin0"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xubin0"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xubin0"},"content":"import java.util.List;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xubin0"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xubin0"},"content":"class TutorialClassListFileLoaderTest {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xubin0"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xubin0"},"content":"    void testLoadFromFile_withMultipleTutorials() throws IOException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xubin0"},"content":"        // Step 1: Create sample data","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xubin0"},"content":"        String sampleData \u003d \"\"\"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xubin0"},"content":"            # T01,MONDAY,09:00,10:30","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xubin0"},"content":"            Alice Tan,13/03/2002,Female,81234567,A001,Class Rep","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xubin0"},"content":"            Ben Lim,21/04/2002,Male,81234568,A002,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xubin0"},"content":"            ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xubin0"},"content":"            # T02,TUESDAY,11:00,12:30","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xubin0"},"content":"            Isaac Tan,13/03/2001,Male,81234575,A009,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xubin0"},"content":"            Jasmine Goh,21/04/2001,Female,81234576,A010,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xubin0"},"content":"            ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xubin0"},"content":"            # T03,TUESDAY,13:00,14:30","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xubin0"},"content":"            Quincy Tan,13/03/2000,Male,81234583,A017,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xubin0"},"content":"            Rachel Lim,21/04/2000,Female,81234584,A018,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xubin0"},"content":"            ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xubin0"},"content":"            # T04,TUESDAY,15:00,16:30","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xubin0"},"content":"            Yvonne Lee,13/03/1999,Female,81234591,A025,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xubin0"},"content":"            Zachary Teo,21/04/1999,Male,81234592,A026,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xubin0"},"content":"            ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xubin0"},"content":"            # T05,FRIDAY,17:00,18:30","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xubin0"},"content":"            Gina Yeo,13/03/1998,Female,81234599,A033,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xubin0"},"content":"            Henry Lim,21/04/1998,Male,81234600,A034,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xubin0"},"content":"            \"\"\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xubin0"},"content":"        // Step 2: Write to a temporary file","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xubin0"},"content":"        Path tempFile \u003d Files.createTempFile(\"tutorial_classes\", \".txt\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xubin0"},"content":"        Files.writeString(tempFile, sampleData);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xubin0"},"content":"        // Step 3: Load using your file loader","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xubin0"},"content":"        TutorialClassListFileLoader loader \u003d new TutorialClassListFileLoader();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xubin0"},"content":"        TutorialClassList tutorialList \u003d loader.loadFromFile(tempFile.toString());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xubin0"},"content":"        // Step 4: Assert","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xubin0"},"content":"        List\u003cTutorialClass\u003e tutorials \u003d tutorialList.getTutorialClasses();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xubin0"},"content":"        assertEquals(5, tutorials.size(), \"Should load 5 tutorial classes\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xubin0"},"content":"        TutorialClass t01 \u003d tutorialList.getByName(\"T01\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xubin0"},"content":"        assertNotNull(t01, \"T01 should be loaded\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xubin0"},"content":"        assertEquals(DayOfWeek.MONDAY, t01.getDayOfWeek());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xubin0"},"content":"        assertEquals(LocalTime.of(9, 0), t01.getStartTime());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xubin0"},"content":"        assertEquals(LocalTime.of(10, 30), t01.getEndTime());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xubin0"},"content":"        assertEquals(2, t01.getStudentList().getStudents().size(), \"T01 should have 2 students\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xubin0"},"content":"        TutorialClass t05 \u003d tutorialList.getByName(\"T05\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xubin0"},"content":"        assertNotNull(t05, \"T05 should be loaded\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xubin0"},"content":"        assertEquals(DayOfWeek.FRIDAY, t05.getDayOfWeek());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xubin0"},"content":"        assertEquals(2, t05.getStudentList().getStudents().size(), \"T05 should have 2 students\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xubin0"},"content":"        // Clean up temp file","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xubin0"},"content":"        Files.deleteIfExists(tempFile);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xubin0"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xubin0"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"xubin0":70}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samstt"},"content":"package task;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samstt"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samstt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samstt"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samstt"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samstt"},"content":"    private Deadline deadlineTask;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samstt"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    void setUp() throws TASyncException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samstt"},"content":"        deadlineTask \u003d new Deadline(\"Have lunch\", true, \"Monday\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samstt"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samstt"},"content":"    void testConstructor() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samstt"},"content":"        assertNotNull(deadlineTask);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samstt"},"content":"        assertEquals(\"Have lunch\", deadlineTask.getTaskName());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samstt"},"content":"        assertTrue(deadlineTask.getIsDone());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samstt"},"content":"        assertEquals(\"Monday\", deadlineTask.getDeadline());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samstt"},"content":"        assertEquals(TaskType.DEADLINE, deadlineTask.getTaskType());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samstt"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samstt"},"content":"    void testToFileFormat() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samstt"},"content":"        String expectedFileFormat \u003d \"D,true,Have lunch,Monday\\n\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samstt"},"content":"        assertEquals(expectedFileFormat, deadlineTask.toFileFormat());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samstt"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samstt"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"    void testEmptyDeadline() throws TASyncException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samstt"},"content":"        Deadline emptyDeadlineTask \u003d new Deadline(\"Read book\", false, \"\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samstt"},"content":"        assertEquals(\"\", emptyDeadlineTask.getDeadline());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"    ","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samstt"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"samstt":35,"kmnyn":4}},{"path":"src/test/java/task/TodoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package task;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kmnyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kmnyn"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"public class TodoTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"    private Todo todoTask;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"    void setUp() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"        todoTask \u003d new Todo(\"Finish homework\", false);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"    void testConstructor() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"        assertNotNull(todoTask); // Ensure the Todo task object is not null.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"        assertEquals(\"Finish homework\", todoTask.getTaskName()); // Verify the task name.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"        assertFalse(todoTask.getIsDone()); // Verify the task status (not done).","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"        assertEquals(TaskType.TODO, todoTask.getTaskType()); // Verify the task type is TODO.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"    @Test","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"    void testToFileFormat() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"        String expectedFileFormat \u003d \"T,false,Finish homework,\\n\";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"        assertEquals(expectedFileFormat, todoTask.toFileFormat());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"kmnyn":29}},{"path":"src/test/java/taskCommands/EventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kmnyn"},"content":"package taskCommands;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kmnyn"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xubin0"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xubin0"},"content":"import Command.taskCommands.EventCommand;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kmnyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kmnyn"},"content":"import task.Task;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kmnyn"},"content":"import task.TaskList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kmnyn"},"content":"import exception.TASyncException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kmnyn"},"content":"import task.Event;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kmnyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kmnyn"},"content":"class EventCommandTest {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kmnyn"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kmnyn"},"content":"    void testValidEventInput() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kmnyn"},"content":"        // Create a mock TaskList object (this can be a real object once your teammates finish their implementation)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kmnyn"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kmnyn"},"content":"        // Create a valid event string input","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kmnyn"},"content":"        String validEventCommand \u003d \"Meeting /from 15/03/2025 14:30 /to 15/03/2025 16:00\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kmnyn"},"content":"        // Create the EventCommand instance","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kmnyn"},"content":"        EventCommand eventCommand \u003d new EventCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kmnyn"},"content":"        // Simulate executing the event command","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kmnyn"},"content":"        eventCommand.execute(validEventCommand, taskList);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kmnyn"},"content":"        // Check that the event has been added to the task list (taskList.addTask() should work properly)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kmnyn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks(); // Assuming you have a getTasks() method","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kmnyn"},"content":"        assertEquals(1, tasks.size(), \"Task list should contain one event task.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kmnyn"},"content":"        Event event \u003d (Event) tasks.get(0);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kmnyn"},"content":"        assertEquals(\"Meeting\", event.getTaskName(), \"The event name should be \u0027Meeting\u0027\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samstt"},"content":"        //assertEquals(\"15/03/2025 14:30\", event.getEventStart(), \"The event start time should be \u002715/03/2025 14:30\u0027\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samstt"},"content":"        //assertEquals(\"15/03/2025 16:00\", event.getEventEnd(), \"The event end time should be \u002715/03/2025 16:00\u0027\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kmnyn"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kmnyn"},"content":"    void testInvalidEventInput() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kmnyn"},"content":"        // Create a mock TaskList object","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kmnyn"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kmnyn"},"content":"        // Create an invalid event string input (invalid date format)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kmnyn"},"content":"        String invalidEventCommand \u003d \"Meeting /from 2025-03-15 14:30 /to 2025-03-15 16:00\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kmnyn"},"content":"        // Create the EventCommand instance","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kmnyn"},"content":"        EventCommand eventCommand \u003d new EventCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kmnyn"},"content":"        // Capture the output or check the state of taskList","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kmnyn"},"content":"        eventCommand.execute(invalidEventCommand, taskList);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kmnyn"},"content":"        // Assert that no event task is added (because of invalid date format)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kmnyn"},"content":"        assertEquals(0, taskList.getTasks().size(), \"Task list should contain no event task due to invalid input.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kmnyn"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kmnyn"},"content":"    void testInvalidEventInputFormat() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kmnyn"},"content":"        // Create a mock TaskList object","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kmnyn"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kmnyn"},"content":"        // Create an event string input without /from and /to","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kmnyn"},"content":"        String invalidFormatCommand \u003d \"Meeting without time information\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kmnyn"},"content":"        // Create the EventCommand instance","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kmnyn"},"content":"        EventCommand eventCommand \u003d new EventCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kmnyn"},"content":"        // Expect exception for invalid format","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kmnyn"},"content":"        TASyncException thrown \u003d assertThrows(TASyncException.class, () -\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kmnyn"},"content":"            eventCommand.execute(invalidFormatCommand, taskList);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kmnyn"},"content":"        });","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kmnyn"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kmnyn"},"content":"        assertEquals(\"Invalid event command, please specify duration of event with \\\"/from\\\" and \\\"/to\\\".\", thrown.getMessage());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kmnyn"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kmnyn"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"xubin0":2,"samstt":2,"kmnyn":73}}]
