[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# HealthBud","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"HealthBud is a fitness tracking application that helps users manage their workout routines, meal logs, water intake, and","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"personal bests (PBs). With an easy-to-use command-line interface, users can log, view, and manage their fitness data","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"efficiently.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"Useful links:","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2025-03-23","isFullCredit":false}],"authorContributionMap":{"kinneo":8,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    mainClass.set(\"seedu.healthbud.HealthBud\")","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"    archiveBaseName.set(\"healthbud\")","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"tasks.withType(JavaExec) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"    systemProperty \"file.encoding\", \"UTF-8\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"run {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"test {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    jvmArgs \u0027-ea\u0027","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"kinneo":20,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"Display |         Name         | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"--------|:--------------------:|:--------------:|:---------:","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jason Gilchrist Lobo | [Github](https://github.com/Jasonlobo21) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ahmish Nair | [https://github.com/Ahmish15](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Travis | [Github](https://github.com/Travissssz) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Keane Ng | [Github](https://github.com/keanneeee) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kin Neo | [Github]([https://github.com/](https://github.com/kinneo)) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":2,"keanneeee":1,"kinneo":1,"Ahmish15":2,"-":3,"Travissssz":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"This application was developed as part of a university software engineering module CS2113. Some ideas were adapted from:","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"1. Duke Java Project","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"2. JavaFX Documentation","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"3. Official Java 17 Documentation","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"## Design","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"### Architecture","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"`//include architecture diagram here`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"The Architecture Diagram given above explains the high-level design of the HealthBud.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"**Main Components**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"`HealthBud` is in charge of the CLI to launch and the exit.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"- At CLI launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"- At exit, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"The bulk of the CLI\u0027s work id done by the following components:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"- [**`UI`**](#ui): Responsible for displaying messages to the user.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"- [**`Parser`**](#parser): Interprets user commands and constructs the corresponding `Command` objects.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"- [**`Command`**](#command): Contains the logic for executing user commands.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"- [**`LogList`**](#loglist): **(New)** Maintains lists for each log type (Meal, Workout, Water, etc.).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"- [**`Storage`**](#storage): Handles reading and writing data to and from the hard disk.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"- [**`Data`**](#data): Holds the in-memory data (logs) of the app.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"### UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"![UI_Class_Diagram](images/UiCD.png) \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"- The UI component is responsible for user interactions. It handles displaying messages, prompts, and error messages to the user. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"### Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"The Parser interface uses a series of classes to implement the various commands.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"### Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"`//TODO: include command class diagram here`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"### LogList","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"![LogList_Class_Diagram](images/LogListCD.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"The LogList class manages a list of logs, each representing a fitness-related entry such as meals, workouts, water ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"intake, cardio sessions, personal bests, or goals. It maintains a List\u003cLog\u003e and provides methods to add, delete, update,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"list, and search through these logs.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"- The abstract Log class is the superclass for all log types.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"- Subclasses like Meal, Workout, Water, Cardio, PersonalBest, and Goals extend Log and store specific data for each log type.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"- LogList has a one-to-many association with Log, represented by the contains relationship.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"- The Goals class follows a singleton pattern via getInstance() and stores user-defined fitness goals.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"This design promotes extensibility and encapsulation, allowing new log types to be added easily while maintaining a consistent interface.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"### Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"The Storage class manages HealthBud log persistence by reading and writing to a designated text file. It creates necessary directories and files, loads logs by parsing each line into specific types (Meal, Workout, etc.), and distributes them into corresponding LogLists. It also appends and rewrites logs using formatted string representations while handling errors gracefully.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Ahmish15"},"content":"![Storage_Class_Diagram](images/StorageCD.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"### Data","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonlobo21"},"content":"`//TODO: include command class diagram here`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"# Implementation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"## Add Log Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"`//TODO: include SD here`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"## Delete Log Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jasonlobo21"},"content":"The delete log feature allows users to remove a log by its index from the application\u0027s log list. This feature is handled by the `DeleteCommand` class, which performs validation, deletion, and error handling.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"### 1. User Input: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonlobo21"},"content":"- The user enters the delete command followed by the log\u0027s index (e.g., `delete meal 3`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"### 2. Command Parsing: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jasonlobo21"},"content":"- The Parser converts the input into a `DeleteCommand` object, adjusting the index to match the list’s 0-based indexing. This process is handled by the `ParserManager` and the `DeleteParser.`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"### 3. The `DeleteCommand` executes as follows: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jasonlobo21"},"content":"- Validation: Verifies whether the specified index is valid and corresponds to an existing meal log.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jasonlobo21"},"content":"- Error Handling: If the index is invalid, an error message is returned to the user.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jasonlobo21"},"content":"- Deletion: If the index is valid, the command retrieves the log’s details, removes the log from the Logs list, and generates a success message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"### 4. How the feature is implemented: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jasonlobo21"},"content":"- The deletion functionality is handled by the DeleteCommand class. It validates the user-provided index, adjusts it to match the 0-based indexing of the log list, and performs the deletion on the LogList object. This keeps the deletion logic isolated, making it easier to maintain and test.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"### 5. Why it is implemented that way: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jasonlobo21"},"content":"- Using a dedicated command class follows the Command Pattern, which separates concerns effectively. Isolating deletion logic into its own class adheres to the Single Responsibility Principle, simplifying debugging and future enhancements without impacting other parts of the system.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"### 6. Alternatives considered: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jasonlobo21"},"content":"- One alternative was to embed the deletion logic directly in the parser or UI layer. However, this approach would mix user input handling with business logic, resulting in code that is harder to maintain and test. Delegating deletion to a specialized command class keeps the design modular and scalable.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jasonlobo21"},"content":"### Sequence Diagram","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Ahmish15"},"content":"![DeleteLog.png](images/DeleteSD.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jasonlobo21"},"content":"Diagram Explanation \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jasonlobo21"},"content":"1. User Input: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jasonlobo21"},"content":"- The user enters `delete meal 3` in the CLI.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jasonlobo21"},"content":"2. Parsing: \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jasonlobo21"},"content":"- `HealthBud` receives the command and passes it to the `GeneralParser`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jasonlobo21"},"content":"- The `GeneralParser` calls `DeleteParser`, which extracts the log type (\"meal\") and the index (3). The index is then adjusted for 0-based indexing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jasonlobo21"},"content":"- A `DeleteCommand` object is created and returned to the `GeneralParser`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jasonlobo21"},"content":"3. Command Execution: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jasonlobo21"},"content":"- The `GeneralParser` invokes `execute()` on the `DeleteCommand`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jasonlobo21"},"content":"- The `DeleteCommand` calls `deleteLog(2)` on the `mealLogs` (since index 3 from the user corresponds to index 2 internally).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jasonlobo21"},"content":"- The log is deleted from the `mealLogs`, and a success message is generated.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jasonlobo21"},"content":"4. Outcome: \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jasonlobo21"},"content":"- If the index is invalid, the command returns an error message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jasonlobo21"},"content":"- If the index is valid, the meal log is removed and a success message is displayed to the user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jasonlobo21"},"content":"This clear separation of user input, command parsing, and execution ensures that the deletion operation is handled in a structured and predictable manner.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"## Recommend Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"The recommend \u003cmuscle_group\u003e command provides users with 3 curated workout suggestions based on the specified muscle group, helping users diversify their fitness routines.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"### 1. User Input: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"- The user enters the recommend command followed by a muscle group that they are interested in working out (e.g., `recommend biceps`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"### 2. Command Parsing: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"- The RecommendParser handles parsing and validation of the user input. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"- It checks that at least one argument (a muscle group) is present. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"- It uses a switch-case on the muscle group to determine the recommended exercises. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"- If the muscle group is unrecognized, it throws a HealthBudException with guidance.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"### 3. The `RecommendCommand` executes as follows: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"- Once constructed, the RecommendCommand calls Ui.printMessage() with the appropriate recommendation message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"- The execute() method only handles display and does not contain logic beyond that.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kinneo"},"content":"### 4. How the feature is implemented: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"- The command string is split and validated in RecommendParser.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kinneo"},"content":"- A corresponding message for each muscle group is hardcoded into the switch-case.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kinneo"},"content":"- RecommendCommand simply wraps this message and prints it during execution.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kinneo"},"content":"### 5. Why it is implemented that way: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kinneo"},"content":"- Separation of Concerns: Logic for parsing and message generation is in the parser, while command execution is kept simple and focused.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"- Testability: Easy to write unit tests for RecommendParser without needing to simulate UI output.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"- Readability: Clean execute() method and well-structured parser make the code intuitive and maintainable","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"### 6. Alternatives considered: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"- Enums for muscle groups: More structured but restrictive; dropped in favor of flexible string matching.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"- External file storage for recommendations: Overhead for static data; current implementation is simpler and faster.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kinneo"},"content":"### Sequence Diagrams","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kinneo"},"content":"![Recommend_Sequence_Diagram](Images/RecommendSD.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kinneo"},"content":"Diagram Explanation \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kinneo"},"content":"1. User Input: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kinneo"},"content":"- The user enters recommend \u003cmuscle_group\u003e in the CLI.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kinneo"},"content":"2. Parsing: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kinneo"},"content":"- RecommendParser parses the input and creates a RecommendCommand with a list of exercises.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kinneo"},"content":"3. Command Execution: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kinneo"},"content":"- RecommendCommand.execute() is called. It sends the exercise list to Ui to display.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kinneo"},"content":"4. Outcome: \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kinneo"},"content":"An alt block handles:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kinneo"},"content":"- Valid Input: The recommended exercises are displayed and a success message is returned.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kinneo"},"content":"- Invalid Input: An exception is thrown and an error message is shown to the user.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kinneo"},"content":"This structure clearly separates parsing, command creation, and UI interaction for robust handling.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Ahmish15"},"content":"## BMICommand","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Ahmish15"},"content":"### 1. Feature overview:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Ahmish15"},"content":"The **BMICommand** feature allows users to calculate their Body Mass Index (BMI) and receive a classification (e.g., underweight, normal weight, overweight, obese). It’s useful for users who want a quick health metric based on their height and weight inputs.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Ahmish15"},"content":"### 2. Implementation details:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Ahmish15"},"content":"Inherits from InputOnlyCommand (which in turn extends the base Command class) to handle input parsing.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Ahmish15"},"content":"Stores weight and height as immutable (final) fields.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Ahmish15"},"content":"### 3. Why this design:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Ahmish15"},"content":"Single Responsibility:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Ahmish15"},"content":"The BMI calculation is isolated in its own command, keeping the logic clean and focused.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Ahmish15"},"content":"Readability \u0026 Testability:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Ahmish15"},"content":"The concise code structure makes it easy to unit test and maintain.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Ahmish15"},"content":"Extensibility:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Ahmish15"},"content":"Future changes (e.g., additional BMI categories or metrics) can be made in this class without impacting other parts of the system.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Ahmish15"},"content":"###  4. Alternatives considered:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Ahmish15"},"content":"online Calculation in the Parser","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Ahmish15"},"content":"Implementing BMI logic directly in the parser would mix concerns and lead to a more complex parser design.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Ahmish15"},"content":"Using an External Library","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Ahmish15"},"content":"Given the simplicity of the BMI formula, an external library would add unnecessary complexity.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kinneo"},"content":"5. Sequence Diagrams","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Ahmish15"},"content":"   ![BMI_Sequence_Diagram](images/BMISD.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Ahmish15"},"content":"6. ### Future Improvements","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Ahmish15"},"content":"   Future improvements for the BMI command could include personalized BMI thresholds based on user profiles, comprehensive historical tracking, and clear visualizations of BMI changes over time for improved health insights.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Travissssz"},"content":"## AddWorkoutCommand","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Travissssz"},"content":"### 1. Feature overview","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Travissssz"},"content":"The AddWorkoutCommand allows users to track their strength training exercise in the HealthBud application.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Travissssz"},"content":"This feature captures five key pieces of information for each workout session:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Travissssz"},"content":"The name of the exercise, the weight done in Kg, the number of repetitions performed, the number of sets completed, and the date of the workout.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Travissssz"},"content":"The system stores these records in a dedicated workout log list that users can view, modify, or analyze over time.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Travissssz"},"content":"Users interact with this feature through a structured command format:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Travissssz"},"content":"`add workout` [Workout_name] /w [weight in Kg] /r [number of reps] /s [number of sets] /d [date]","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Travissssz"},"content":"### 2. Implementation details","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Travissssz"},"content":"When users enter an \"add workout\" command, the system follows a defined sequence of operations to ensure proper recording of exercise data.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Travissssz"},"content":"The process begins with the GeneralParser, which identifies the command type and directs workout entries to the specialized AddWorkoutParser.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Travissssz"},"content":"This dedicated parser performs comprehensive validation of three required parameters:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Travissssz"},"content":"the weight done in kg (/w) repetition count (/r), set count (/s), and workout date (/d).","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Travissssz"},"content":"Each parameter undergoes strict format checking - repetitions and sets must be positive integers, while the date must follow a valid, recognizable format.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Travissssz"},"content":"For the workout name, the system extracts all text preceding the first parameter marker while ensuring it contains valid characters","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Travissssz"},"content":"During command execution, the system instantiates a new WorkOUT object with the verified parameters.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Travissssz"},"content":"This immutable data object is then added to the application\u0027s centralized workout log.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Travissssz"},"content":"All exceptions, including invalid numeric values or date formats, are caught and presented to users as actionable error messages.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Travissssz"},"content":"### 3. Why this design","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Travissssz"},"content":"The current implementation follows several key design principles to ensure robustness and maintainability.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Travissssz"},"content":"The command pattern was deliberately chosen to create a clear separation between parsing user input and executing commands.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Travissssz"},"content":"This architectural decision makes the system more modular, allowing individual workout commands to be modified or extended without affecting other components.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Travissssz"},"content":"Parameter processing follows a flexible yet strict validation approach.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Travissssz"},"content":"By using dedicated markers (/w, /r, /s, /d), the system accommodates natural variations in command entry while maintaining rigorous data quality standards.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Travissssz"},"content":"This design choice significantly improves user experience by accepting parameters in any order, rather than enforcing a rigid sequence.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Travissssz"},"content":"The WorkOUT class implements an immutable design pattern for important reliability benefits.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Travissssz"},"content":"Once created, workout records cannot be accidentally modified, which prevents data corruption and simplifies debugging.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Travissssz"},"content":"This immutability also enables thread-safe operations, future-proofing the application for potential multi-threaded enhancements.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Travissssz"},"content":"The parsing logic incorporates multiple validation layers for maximum data integrity.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Travissssz"},"content":"Each parameter undergoes type checking, format verification, and range validation before being accepted.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Travissssz"},"content":"This thorough validation occurs before any changes to application state, following the fail-fast principle to prevent partial or invalid updates.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Travissssz"},"content":"### 4. Alternatives considered","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Travissssz"},"content":"We initially considered using positional arguments rather than parameter markers,","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Travissssz"},"content":"where users would enter values in a fixed order (e.g., \"add workout [name] [weight] [reps] [sets] [date]\").","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Travissssz"},"content":"This approach was ultimately rejected because it proved less intuitive for users and more prone to input errors.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Travissssz"},"content":"The current marker-based system (/w, /r, /s, /d) provides clearer visual separation of parameters and allows for more flexible command entry.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Travissssz"},"content":"We also explored using a single unified Log class with type differentiation,","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Travissssz"},"content":"rather than dedicated classes for each log type.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Travissssz"},"content":"This unified approach was abandoned because it would have required extensive runtime type checking and reduced type safety.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Travissssz"},"content":"The current specialized class structure provides better compile-time checks and more intuitive code organization.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Travissssz"},"content":"### 5. Sequence Diagrams","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Jasonlobo21"},"content":"![Addworkout.png](images/Addworkout.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Travissssz"},"content":"### 6. Future Improvements","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Travissssz"},"content":"The weight tracking functionality will be enhanced to support more advanced strength training scenarios.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Travissssz"},"content":"This will include the ability to record varying weights within a single workout session, such as pyramid sets or drop sets, through an expanded command syntax.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Travissssz"},"content":"## Goals","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Travissssz"},"content":"### 1. Feature Overview","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"keanneeee"},"content":"The Goals feature allows users to set and view personalized health goals within the chatbot. These include:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"keanneeee"},"content":"Daily Water Intake Goal (/w), Daily Calorie Intake Goal (/cal), Weight Goal (/kg)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Travissssz"},"content":"### 2. Implementation Details","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"keanneeee"},"content":"The add goal command is implemented in the main parser logic using a switch statement. Here\u0027s how it works:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"keanneeee"},"content":"- When the user enters add goal /w [value] /cal [value] /kg [value], the input is parsed using AddGoalParser.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"keanneeee"},"content":"- If any parameters are missing (e.g., no /cal provided), they are auto-filled using the current values stored ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"keanneeee"},"content":"in the Goals singleton instance.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"keanneeee"},"content":"- ParserParameters extracts the parameters into a key-value map.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"keanneeee"},"content":"- AddGoalCommand is then created with the parsed values and executed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"keanneeee"},"content":"- If the values differ from the current ones, Goals.updateGoals() updates the stored values, and the goal is ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"keanneeee"},"content":"logged to the goalLogs list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"keanneeee"},"content":"- Track function (called with track goal /d \u003cdate\u003e) as well as the view function (called with view goal) are ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"keanneeee"},"content":"supplementary functions provided to increase the accountability of the user by giving him easy access to previous and","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"keanneeee"},"content":"current stats.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"keanneeee"},"content":"Exceptions such as InvalidGoalException and InvalidDateFormatException are handled gracefully to ensure robustness.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Travissssz"},"content":"### 3. Why This Design","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"keanneeee"},"content":"- Simplicity: A single command (add goal) handles all updates in one go, keeping the interaction concise ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"keanneeee"},"content":"and easy to use.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"keanneeee"},"content":"- Singleton Pattern: Using Goals.getInstance() ensures centralized access to the current user goals across the app.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"keanneeee"},"content":"- Auto-Fill Support: Missing parameters default to current goal values, streamlining repeated updates.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"keanneeee"},"content":"- Separation of Concerns: Goal parsing and updating are kept modular and separate from logging and UI logic","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Travissssz"},"content":"### 4. Alternatives Considered","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"keanneeee"},"content":"- Command Pattern: We considered creating individual commands for each goal type (e.g., SetWaterGoalCommand), ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"keanneeee"},"content":"but found a unified approach more straightforward for the CLI.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"keanneeee"},"content":"- Interactive CLI Loop: Earlier versions used a conversational loop for goal editing, but it was replaced by a ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"keanneeee"},"content":"single-line command to reduce complexity.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"keanneeee"},"content":"- Persistent Storage: While current goal data is stored in-memory and appended to the log file, we plan to enhance ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"keanneeee"},"content":"persistence for full session retention.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Travissssz"},"content":"### 5. Sequence Diagrams","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"keanneeee"},"content":"![GoalSD.png](Images/GoalSD.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Travissssz"},"content":"### 6. Future Improvements","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"keanneeee"},"content":"- Input Validation: Use regex or stricter parsing to ensure only valid integers are accepted.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"keanneeee"},"content":"- Persistent Goal Storage: Store and reload goals from file or database to retain state between sessions.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"keanneeee"},"content":"- Multi-User Support: Refactor the singleton Goals class to support different profiles.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"keanneeee"},"content":"- Goal Recommendations: Use history from logs (e.g., average water intake) to suggest realistic goal values","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"kinneo"},"content":"1. Fitness-conscious individuals","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"kinneo"},"content":"2. Users who prefer CLI-based tools","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"kinneo"},"content":"3. Individuals who want to log workouts, meals, water intake, and progress","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"kinneo"},"content":"4. Java users with basic terminal skills","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"kinneo"},"content":"HealthBud provides a simple and effective CLI solution to track health logs including workouts, meals, water intake,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"keanneeee"},"content":"and personal bests. Unlike complex mobile apps, it runs offline and keeps the data lightweight and easily exportable.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"|Version| As a ...           | I want to ...                                         | So that I can ...                                        |","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"kinneo"},"content":"|--------|-------------------|--------------------------------------------------------|-----------------------------------------------------------|","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"kinneo"},"content":"|v1.0   | new user           | see usage instructions                                | refer to them when I forget how to use the app           |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"kinneo"},"content":"|v1.1   | user               | add workout logs                                      | track my workout progress                                |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"kinneo"},"content":"|v1.2   | user               | record meal entries                                   | track calorie intake                                     |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"kinneo"},"content":"|v1.3   | user               | input water logs                                      | ensure I stay hydrated                                   |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"kinneo"},"content":"|v1.4   | user               | record my personal bests                              | see strength improvements over time                      |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"kinneo"},"content":"|v2.0   | fitness enthusiast | get workout recommendations by muscle group          | try targeted exercises for specific body parts           |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"kinneo"},"content":"|v2.1   | user               | calculate BMI                                         | know if I’m in a healthy weight range                    |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"kinneo"},"content":"|v2.2   | user               | summarize daily intake                                | get a quick overview of my calories and hydration        |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"kinneo"},"content":"|v2.3   | user               | view logs by date                                     | track my daily progress easily                           |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"kinneo"},"content":"|v2.4   | user               | clear logs by category                                | declutter and keep only relevant data                    |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"kinneo"},"content":"|v2.5   | user               | set fitness goals                                     | stay motivated and focused on my targets                 |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"kinneo"},"content":"1. Should work on any platform with Java 17 or above","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"kinneo"},"content":"2. CLI response time under 1 second","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"kinneo"},"content":"3. Saves data locally in .txt file format","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"kinneo"},"content":"4. Commands should follow a consistent, predictable format","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"kinneo"},"content":"5. Lightweight and offline-capable (no external database or network dependency)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"kinneo"},"content":"1. CLI – Command Line Interface","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"kinneo"},"content":"2. SUT – System Under Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"kinneo"},"content":"3. BMI – Body Mass Index","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"kinneo"},"content":"4. PB – Personal Best","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"kinneo"},"content":"5. Log – A record of user data (e.g., workout, meal, water)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"kinneo"},"content":"6. Command – A user-triggered action that HealthBud performs","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"kinneo"},"content":"7. Parser – Component that interprets user input and returns a corresponding command","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"kinneo"},"content":"### Prerequisites","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"kinneo"},"content":"1. Java 17 or later installed","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"kinneo"},"content":"2. HealthBud.jar built or downloaded","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"kinneo"},"content":"### Running the Program","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"kinneo"},"content":"1. Ensure that you have Java 17 or above installed.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"kinneo"},"content":"2. Download the latest version of HealthBud from here.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"kinneo"},"content":"3. Open a terminal and navigate to the folder where the application is located.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"kinneo"},"content":"4. Run java -jar HealthBud.jar to start the application.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"kinneo"},"content":"5. Start entering commands to log your fitness activities!","lastModifiedDate":"2025-03-23","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":90,"keanneeee":39,"kinneo":122,"Ahmish15":36,"-":27,"Travissssz":67}},{"path":"docs/Diagrams/AddWorkoutCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"@startuml","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"class AddWorkoutParser {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"    +parse(LogList, String): AddWorkoutCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"class AddWorkoutCommand {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"    - String name","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"    - String reps","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Travissssz"},"content":"    - String sets","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Travissssz"},"content":"    - String date","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Travissssz"},"content":"    - String weight","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Travissssz"},"content":"    + execute()","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"class WorkOUT {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"    - String name","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"    - String reps","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"    - String sets","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Travissssz"},"content":"    - String date","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"    - String weight","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"class LogList {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Travissssz"},"content":"    + addLog(Log)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"class OneLogCommand {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"    # LogList logList","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"    # String input","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"class ParserParameters{","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":" + parseParameters(String input) : Map\u003cString, String\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"class DateParser{","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"  -  String OUTPUT_FORMAT","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"  - List\u003cString\u003e INPUT_FORMATS","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"  + formatDate(String inputDate) : String","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser --\u003e AddWorkoutCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand --|\u003e OneLogCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand --\u003e WorkOUT","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand --\u003e LogList","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser ..\u003e ParserParameters","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser ..\u003e DateParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"@enduml","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"Travissssz":53}},{"path":"docs/Diagrams/AddWorkoutSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"@startuml","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"actor User","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"participant \":HealthBud\" as HealthBud","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"participant \":GeneralParser\" as GeneralParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"participant \":AddParser\" as AddParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"participant \":AddWorkoutParser\" as AddWorkoutParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"participant \":ParserParameters\" as ParserParameters","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"participant \":DateParser\" as DateParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"participant \":AddWorkoutCommand\" as AddWorkoutCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Travissssz"},"content":"participant \"workoutLogs:LogList\" as LogList","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Travissssz"},"content":"participant \"new:WorkOUT\" as WorkOUT","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Travissssz"},"content":"User -\u003e HealthBud : \"add workout squats /r 10 /s 3 /d 25-12-2023 /w 50\"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"activate HealthBud","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"HealthBud -\u003e GeneralParser : handleInput(\"add workout, ...\")","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"activate GeneralParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"GeneralParser -\u003e AddParser : parse(\"workout\", workoutLogs, ...)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Travissssz"},"content":"activate AddParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"AddParser -\u003e AddWorkoutParser : parse(workoutLogs, input)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"activate AddWorkoutParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser -\u003e ParserParameters : parseParameters(/r 10 /s 3 /d 2023-12-25 /w 50)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"activate ParserParameters","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"ParserParameters --\u003e AddWorkoutParser : params {r: \"10\", s: \"3\", d: \"2023-12-25\", w: \"50\"}","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"deactivate ParserParameters","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser -\u003e DateParser : formatDate(\"25-12-2023\")","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"activate DateParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"DateParser --\u003e AddWorkoutParser : \"25 Dec 2023\"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"deactivate DateParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser --\u003e AddParser : AddWorkoutCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"deactivate AddWorkoutParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"AddParser --\u003e GeneralParser : AddWorkoutCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"deactivate AddParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"GeneralParser -\u003e AddWorkoutCommand : execute()","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"activate AddWorkoutCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand -\u003e WorkOUT : new(\"squats\", \"10\", \"3\", \"25 Dec 2023\", \"50\")","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"activate WorkOUT","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"WorkOUT --\u003e AddWorkoutCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"deactivate WorkOUT","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand -\u003e LogList : addLog(new WorkOUT)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"activate LogList","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"LogList --\u003e AddWorkoutCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"deactivate LogList","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand --\u003e GeneralParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Travissssz"},"content":"deactivate AddWorkoutCommand","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"GeneralParser --\u003e HealthBud","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":"deactivate GeneralParser","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Travissssz"},"content":"HealthBud --\u003e User","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Travissssz"},"content":"deactivate HealthBud","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Travissssz"},"content":"@enduml","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"Travissssz":62}},{"path":"docs/Diagrams/Architecture.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"scale 0.7","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"actor User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"class File","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"package \"UI\" {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"  class HealthBud","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"  class Ui","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"package \"Parser\" {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"  class ParserManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"  class AddParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"package \"Command\" {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"  class Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"  class InputCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"  class SingleLogCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"  class MultiLogCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"package \"Model\" {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"  class LogList","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"  class Log","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"package \"Storage\" {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"  class Storage","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"User --\u003e HealthBud","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"HealthBud --\u003e Ui","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"HealthBud --\u003e Storage","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"HealthBud --\u003e ParserManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"ParserManager --\u003e AddParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"AddParser --\u003e Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"ParserManager --\u003e Command : execute()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"InputCommand --|\u003e Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"SingleLogCommand --|\u003e Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"MultiLogCommand --|\u003e Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"SingleLogCommand --\u003e LogList","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"MultiLogCommand --\u003e LogList","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"LogList --\u003e Log","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"Storage --\u003e LogList : loadLogsFromFile()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"keanneeee"},"content":"Storage --\u003e File","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"keanneeee"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"keanneeee":50}},{"path":"docs/Diagrams/BMISD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"@startuml","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"actor User","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"participant \":HealthBud\" as HealthBud","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"participant \":GeneralParser\" as GeneralParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"participant \":BMIParser\" as BMIParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"participant \":BMICommand\" as BMICommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"User -\u003e HealthBud: \"bmi weight 70kg, height is 1.75m\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"activate HealthBud","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"HealthBud -\u003e GeneralParser: handle input for bmi weight 70kg, height is 1.75m","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"activate GeneralParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"GeneralParser -\u003e BMIParser: parse bmi weight 70kg, height is 1.75m","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"activate BMIParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"alt valid input","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"    BMIParser -\u003e BMIParser: extract weight\u003d70, height\u003d1.75","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"    BMIParser -\u003e BMICommand: return new BMICommand(\"bmi 70 /h 1.75\", 70, 1.75)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"else invalid input","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"    BMIParser -\u003e BMIParser: throw HealthBudException\\nor InvalidBmiException","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"end","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"deactivate BMIParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"GeneralParser -\u003e BMICommand: execute()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"activate BMICommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"deactivate BMICommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"GeneralParser --\u003e HealthBud: success message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"deactivate GeneralParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"HealthBud --\u003e User: display result","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"deactivate HealthBud","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"@enduml","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Ahmish15":35}},{"path":"docs/Diagrams/DeleteSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"actor User","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"participant \":HealthBud\" as HealthBud","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"participant \":GeneralParser\" as GeneralParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"participant \":DeleteParser\" as DeleteParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"participant \":DeleteCommand\" as DeleteCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"participant \"mealLogs:LogList\" as LogList","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"User -\u003e HealthBud : \"delete meal 3\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"activate HealthBud","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"HealthBud -\u003e GeneralParser : handleInput(\"delete meal 3\", mealLogs, ...)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"activate GeneralParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"GeneralParser -\u003e DeleteParser : parse(\"delete meal 3\", mealLogs, ...)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"activate DeleteParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"DeleteParser -\u003e DeleteParser : Extract log type and index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"activate DeleteParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"DeleteParser --\u003e DeleteParser : index \u003d 3 \u0026 logType \u003d \"meal\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"deactivate DeleteParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"DeleteParser --\u003e GeneralParser : return DeleteCommand(mealLogs, index\u003d3)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"deactivate DeleteParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"GeneralParser -\u003e DeleteCommand : execute()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"activate DeleteCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"DeleteCommand -\u003e LogList : deleteLog(2)   \u0027 Adjusted for 0-based indexing","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"activate LogList","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"LogList --\u003e DeleteCommand : confirmation (log deleted)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"deactivate LogList","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"DeleteCommand --\u003e GeneralParser : success message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"deactivate DeleteCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"GeneralParser --\u003e HealthBud : success message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"deactivate GeneralParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"HealthBud --\u003e User : display success message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"deactivate HealthBud","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":43}},{"path":"docs/Diagrams/GoalCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"@startuml","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"\u0027 https://plantuml.com/class-diagram","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"\u0027 Legend:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"\u0027 --\u003e    navigability/association (used in method or field)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"\u0027 ..\u003e    dependency (used as parameter/return/throws)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"\u0027 --|\u003e   inheritance","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"Goals --|\u003e Log","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"Goals : - static instance: Goals","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"Goals : - dailyWaterGoal: String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"Goals : - dailyCalorieGoal: String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"Goals : - weightGoal: String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"Goals : - weeklyWeightProgress: String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"Goals : + getInstance(): Goals","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"Goals : + updateGoals(water: String, calorie: String, weight: String): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"Goals : + setDailyWaterGoal(goal: String): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"Goals : + setDailyCalorieGoal(goal: String): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"Goals : + setWeightGoal(goal: String): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"Goals : + setWeeklyWeightProgress(progress: String): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"Goals : + getDailyWaterGoal(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"Goals : + getDailyCalorieGoal(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"Goals : + getWeightGoal(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"Goals : + getWeeklyWeightProgress(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"Goals : + toString(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"AddGoalParser : + parse(goalLogs: LogList, input: String): AddGoalCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"AddGoalParser : - addMissingParameters(input: String): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"AddGoalParser ..\u003e Goals : uses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"AddGoalParser ..\u003e AddGoalCommand : creates","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"AddGoalParser ..\u003e InvalidGoalException : throws","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"SingleLogCommand : - input: String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"SingleLogCommand : - logList: LogList","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"SingleLogCommand --\u003e LogList","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand --|\u003e SingleLogCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : - static waterGoal: String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : - static calorieGoal: String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : - static weightGoal: String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : - static weeklyWeightProgress: String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : + AddGoalCommand(LogList, String, String, String, String)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : + execute(): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand --\u003e Goals : uses singleton","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand ..\u003e LogList : modifies","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand ..\u003e Storage : calls append","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"@enduml","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"keanneeee":48}},{"path":"docs/Diagrams/GoalSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"@startuml","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"actor User","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"participant \":HealthBud\" as HealthBud","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"participant \":GeneralParser\" as GeneralParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"participant \":AddParser\" as AddParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"participant \":AddGoalParser\" as AddGoalParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"participant \":ParserParameters\" as ParserParameters","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"participant \":AddGoalCommand\" as AddGoalCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"participant \":Goals\" as Goals","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"participant \"goalLogs:LogList\" as LogList","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"User -\u003e HealthBud : \"add goal /w 2000 /cal 1800 /kg 65\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"activate HealthBud","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"HealthBud -\u003e GeneralParser : handleInput(\"add goal ...\")","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"activate GeneralParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"GeneralParser -\u003e AddParser : parse(\"goal\", goalLogs, ...)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"activate AddParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"AddParser -\u003e AddGoalParser : parse(goalLogs, input)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"activate AddGoalParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"AddGoalParser -\u003e ParserParameters : parseParameters(\"/w 2000 /cal 1800 /kg 65\")","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"activate ParserParameters","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"ParserParameters --\u003e AddGoalParser : params {w: \"2000\", cal: \"1800\", kg: \"65\"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"deactivate ParserParameters","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"AddGoalParser -\u003e Goals : getInstance()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"activate Goals","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"Goals --\u003e AddGoalParser : singleton instance","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"deactivate Goals","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"AddGoalParser --\u003e AddParser : new AddGoalCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"deactivate AddGoalParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"AddParser --\u003e GeneralParser : AddGoalCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"deactivate AddParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"GeneralParser -\u003e AddGoalCommand : execute()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"activate AddGoalCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand -\u003e Goals : getInstance()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"activate Goals","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"Goals --\u003e AddGoalCommand : singleton instance","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"deactivate Goals","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand -\u003e Goals : updateGoals(\"2000\", \"1800\", \"65\")","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"keanneeee"},"content":"activate Goals","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"keanneeee"},"content":"Goals --\u003e AddGoalCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"keanneeee"},"content":"deactivate Goals","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand -\u003e LogList : addLog(Goals)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"keanneeee"},"content":"activate LogList","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"keanneeee"},"content":"LogList --\u003e AddGoalCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"keanneeee"},"content":"deactivate LogList","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand --\u003e GeneralParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"keanneeee"},"content":"deactivate AddGoalCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"keanneeee"},"content":"GeneralParser --\u003e HealthBud","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"keanneeee"},"content":"deactivate GeneralParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"keanneeee"},"content":"HealthBud --\u003e User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"keanneeee"},"content":"deactivate HealthBud","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"keanneeee"},"content":"@enduml","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"keanneeee":66}},{"path":"docs/Diagrams/LogListCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"hide circle","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"class LogList {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"  - logs: List\u003cLog\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"  + getLog(index: int): Log","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"  + getSize(): int","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"  + isEmpty(): boolean","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"  + updateLog(log: Log): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"  + addLog(log: Log): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"  + loadLog(log: Log): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"  + deleteLog(index: int): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"  + listLogs(): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"  + findLog(keyword: String): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"  + clearLogs(): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"  + getAllDates(): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"  + getCaloriesSum(date: String): int","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"  + getCardioSum(date: String): int","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"  + getWaterSum(date: String): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"class Log {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"  - date: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"  - logType: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"  + getLogType(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"  + getDate(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"class Meal {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"  - name: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"  - calories: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"  - time: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"  + getName(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"  + getCalories(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"  + getTime(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"class Workout {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"  - name: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"  - reps: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"  - sets: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"  - weight: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"  + getName(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"  + getReps(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"  + getSets(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"  + getWeight(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"class Water {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"  - amount: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"  - time: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"  + getAmount(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"  + getTime(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"  + toGlass(amount: String): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"class Cardio {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"  - name: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"  - speed: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"  - incline: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"  - duration: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"  + getName(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"  + getSpeed(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"  + getIncline(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"  + getDuration(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"class PersonalBest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"  - exercise: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"  - weight: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"  + getExercise(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"  + getWeight(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"class Goals {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"  - dailyWaterGoal: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"  - dailyCalorieGoal: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"  - weightGoal: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"  - weeklyWeightProgress: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"  + getInstance(): Goals","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"  + updateGoals(water: String, calorie: String, weight: String): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"LogList \"1\" --\u003e \"0..*\" Log : contains","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- Meal","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- Workout","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- Water","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- Cardio","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- PersonalBest","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- Goals","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"kinneo":99}},{"path":"docs/Diagrams/ParserCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"hide circle","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"title HealthBud Parser Flow","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"skinparam defaultFontSize 14","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"skinparam arrowThickness 1","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 Central parser manager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"class ParserManager {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"  +handleInput(input: String): boolean","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 Specific parser classes with expected input formats and extra LogList parameters","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"class BMIParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"bmi /w \u003cweight\u003e /h \u003cheight\u003e\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"class ClearParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, pbLogs: LogList, mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, cardioLogs: LogList): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"clear \u003clogType\u003e\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"class DeleteParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, pbLogs: LogList, cardioLogs: LogList): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"delete \u003clogType\u003e \u003cindex\u003e\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"class ListParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, pbLogs: LogList, cardioLogs: LogList): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"list \u003clogType\u003e\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"class RecommendParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"recommend \u003cmuscle_group\u003e\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"class SearchParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, pbLogs: LogList, cardioLogs: LogList, goalLogs: LogList): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"search \u003clogType\u003e /d \u003cdate\u003e OR /k \u003ckeyword\u003e\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"class StatusParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, goalLogs: LogList, pbLogs: LogList, mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, cardioLogs: LogList): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"status change \u003ccutting|bulking\u003e OR status report\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"class SumParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, mealLogs: LogList, waterLogs: LogList, cardioLogs: LogList): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"sum \u003ccal|vol|cardio\u003e /d \u003cdate\u003e\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 Add-command parsers grouped under AddParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"class AddParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(subCommand: String, mealLogs: LogList, waterLogs: LogList, cardioLogs: LogList, pbLogs: LogList, workoutLogs: LogList, goalLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"class AddCardioParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(cardioLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected subcommand: \"cardio\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"class AddMealParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(mealLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected subcommand: \"meal\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"class AddPersonalBestParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(pbLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected subcommand: \"pb\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"class AddWaterParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(waterLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected subcommand: \"water\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jasonlobo21"},"content":"class AddWorkoutParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(workoutLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected subcommand: \"workout\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 General Command produced by any parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jasonlobo21"},"content":"class Command {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 Relationships from ParserManager to specific parsers","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e BMIParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e ClearParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e DeleteParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e ListParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e RecommendParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e SearchParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e StatusParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e SumParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e AddParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 Relationships from AddParser to specific add-command parsers","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e AddCardioParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e AddMealParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e AddPersonalBestParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e AddWaterParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e AddWorkoutParser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 All parser classes produce a Command (arrow points to a single Command box)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonlobo21"},"content":"BMIParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jasonlobo21"},"content":"ClearParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jasonlobo21"},"content":"DeleteParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jasonlobo21"},"content":"ListParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jasonlobo21"},"content":"RecommendParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jasonlobo21"},"content":"SearchParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jasonlobo21"},"content":"StatusParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jasonlobo21"},"content":"SumParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jasonlobo21"},"content":"AddCardioParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jasonlobo21"},"content":"AddMealParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jasonlobo21"},"content":"AddPersonalBestParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jasonlobo21"},"content":"AddWaterParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jasonlobo21"},"content":"AddWorkoutParser --\u003e Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jasonlobo21"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":122}},{"path":"docs/Diagrams/RecommendCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"@startuml","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"/\u0027 dependency: parameter, return type, local variable, or exception thrown \u0027/","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"/\u0027 inheritance: once got extend means inheritance i think \u0027/","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"/\u0027 navigability: means A create B or smthing\u0027/","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"/\u0027","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"--|\u003e inheritance","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"--\u003e navigability/association","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"..\u003e dependency","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"\u0027/","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"abstract class Command {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    +execute(): void","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"class InputOnlyCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    -input: String","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    +InputOnlyCommand(input: String)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"class RecommendCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    -list: String","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    +RecommendCommand(list: String)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    +getMessage(): String","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    +execute(): void","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"class RecommendParser {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    +parse(input: String): RecommendCommand","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"class HealthBudException","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"class InvalidRecommendException","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"Command \u003c|-- InputOnlyCommand","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"InputOnlyCommand \u003c|-- RecommendCommand","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"RecommendParser ..\u003e RecommendCommand : creates","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"RecommendCommand ..\u003e HealthBudException : throws","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"RecommendCommand ..\u003e InvalidRecommendException : throws","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"InvalidRecommendException --|\u003e Exception","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"HealthBudException --|\u003e Exception","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"@enduml","lastModifiedDate":"2025-03-23","isFullCredit":false}],"authorContributionMap":{"kinneo":48}},{"path":"docs/Diagrams/RecommendSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"@startuml","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"actor User","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"participant \":RecommendParser\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"participant \":RecommendCommand\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"participant \":Ui\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"participant \":ExceptionHandler\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"User -\u003e \":RecommendParser\": parse(\"recommend \u003cmuscle_group\u003e\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"activate \":RecommendParser\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"alt valid input","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    create \":RecommendCommand\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    \":RecommendParser\" -\u003e \":RecommendCommand\": new RecommendCommand(list)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    activate \":RecommendCommand\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"    \":RecommendCommand\" -\u003e \":RecommendCommand\": execute()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    \":RecommendCommand\" -\u003e \":Ui\": printMessage(list)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    activate \":Ui\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    \":Ui\" --\u003e \":RecommendCommand\": display message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"    deactivate \":Ui\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    \":RecommendCommand\" --\u003e \":RecommendParser\": success message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    deactivate \":RecommendCommand\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    \":RecommendParser\" --\u003e User: success message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    deactivate \":RecommendParser\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"else invalid input","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    \":RecommendParser\" -\u003e \":ExceptionHandler\": throw exception","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    activate \":ExceptionHandler\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"    \":ExceptionHandler\" --\u003e \":RecommendParser\": error message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    deactivate \":ExceptionHandler\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    \":RecommendParser\" --\u003e User: error message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"    deactivate \":RecommendParser\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"end","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"@enduml","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"kinneo":40}},{"path":"docs/Diagrams/StorageCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"class Storage {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"    +DATA_DIRECTORY : String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"    +DATA_FILE : String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"    +DATA_PATH : Path","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"    +loadLogs(mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, pbLogs: LogList, cardioLogs: LogList, goalLogs: LogList) : void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"    +parseStringToLog(line: String) : Log","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"    +appendLogToFile(log: Log) : void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"    +rewriteLogsToFile(logs: LogList) : void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"    +parseLogToString(log: Log) : String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"class LogList {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"    +getLog(index: int) : Log","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"    +getSize() : int","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"    +isEmpty() : boolean","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"    +loadLog(log: Log) : void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"    +addLog(log: Log) : void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"    +deleteLog(index: int) : void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"    ...","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"abstract class Log {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"    +getDate() : String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"    +getLogType() : String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"    +toString() : String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"class Meal","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"class Workout","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"class Water","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"class PersonalBest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"class Cardio","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"class Goals {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"    +getInstance() : Goals","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"    +setDailyWaterGoal(goal: String) : void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"    +setDailyCalorieGoal(goal: String) : void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"    +setWeightGoal(goal: String) : void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"    +getDailyWaterGoal() : String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"    +getDailyCalorieGoal() : String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"    +getWeightGoal() : String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e LogList : uses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Log : creates/uses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Meal : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Workout : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Water : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e PersonalBest : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Cardio : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Goals : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e LogList : uses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Logs : uses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e ParserManager: : uses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Ahmish15":59}},{"path":"docs/Diagrams/UiCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"title HealthBud UI Class Diagram","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"skinparam defaultFontSize 14","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"skinparam arrowThickness 1","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"class Ui {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"  +NEW_LINE: String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"  +printMessage(message: String): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"  +printHealthBuds(): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"  +printGreeting(): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"  +printGoodbye(): boolean","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"  +printHelp(): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"  +printUnknownCommand(): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"  +printListedFormat(logs: LogList, index: int): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"class LogList {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"  +getLog(index: int): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"Ui --\u003e LogList : uses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":23}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# HealthBud","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"HealthBud is a fitness tracking application that helps users manage their workout routines, meal logs, water intake, and","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"personal bests (PBs). With an easy-to-use command-line interface, users can log, view, and manage their fitness data ","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"efficiently.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"kinneo":4,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"Welcome to HealthBud, your personal fitness companion! Whether you\u0027re tracking workouts, logging meals, monitoring water","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"intake, or recording personal bests (PBs), HealthBud makes fitness management simple and effective. With an intuitive ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"command-line interface, you can easily log, view, and organize your fitness data.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"HealthBud goes beyond basic tracking by helping you set and monitor fitness goals, calculate BMI, track your cutting ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"or bulking progress, and even receive workout recommendations. Stay motivated and in control of your health journey with","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"HealthBud!","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"## Quick start","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"1. Ensure you have Java 17 or above installed in your Computer. You can download the latest version of Java from here.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"2. Download the latest .jar file from here.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"3. Copy the file to the folder you want to use as the home folder for HealthBud.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"4. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar HealthBud.jar command to run the application.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"5. Your command terminal should show the following:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"//insert healthbud starting page","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"6. Type the command in the command terminal and press Enter to execute it.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"   Some example commands you can try:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"- `add meal` chicken rice `/cal` 200 `/d` 02/02/2025 `/t` 1700: Adds a meal type task with description chicken rice, calories 200, date 02/02/2025 and time 1700 to the task tracker.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"- `list workout`: Lists all workout logs.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"- `delete water` 1: Deletes the water log with index 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"- `bye`: Exits the app.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"### Help","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"Display this list of commands","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"Format: `help`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"Example of usage: `help`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"Here are the commands you can use:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":" 1. help - Display this list of commands","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Travissssz"},"content":" 2. bye - Exit the program","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Travissssz"},"content":" 3. recommend \u003cmuscle_group\u003e - Get workout recommendations","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Travissssz"},"content":" 4. bmi /w \u003cweight_in_kg\u003e /h \u003cheight_in_m\u003e - Calculate your BMI","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Travissssz"},"content":" 5. add workout \u003cexercise\u003e /w \u003cweight in kg\u003e /r \u003creps\u003e /s \u003csets\u003e /d \u003cdate\u003e - Add a workout log","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Travissssz"},"content":" 6. add meal \u003cmeal_name\u003e /cal \u003ccalories\u003e /d \u003cdate\u003e /t \u003ctime\u003e - Add a meal log","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Travissssz"},"content":" 7. add water /ml \u003cvolume\u003e /d \u003cdate\u003e /t \u003ctime\u003e - Add a water log","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Travissssz"},"content":" 8. add pb \u003cexercise\u003e /w \u003cweight_in_kg\u003e /d \u003cdate\u003e - Record a personal best","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Travissssz"},"content":" 9. sum \u003ccal|vol\u003e /d \u003cdate\u003e - Sum up the total calories/water for the day","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Travissssz"},"content":" 10. clear \u003cpb|meal|workout|water\u003e - Clear the respective log","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Travissssz"},"content":" 11. view /m \u003clogtype\u003e /d \u003cdate\u003e, at least one must be provided. OR view /m all","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Travissssz"},"content":" 12. add cardio \u003cexercise\u003e /s \u003cspeed\u003e /i \u003cincline\u003e /t \u003cduration\u003e /d \u003cdate\u003e - Add a cardio log","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Travissssz"},"content":" 13. add goals - to enter goal setting mode","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Travissssz"},"content":" 13.1  /w \u003cwaterGoals /c \u003ccalorieGoals\u003e /m \u003cweightGoals\u003e - to edit personal goals","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Travissssz"},"content":" 14. status change \u003ccutting/bulking\u003e - Update your cutting/bulking status.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Travissssz"},"content":" 15. status report - View your current cutting/bulking progress","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"### Bye","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"Exit the program","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"Format: `bye`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"Example of usage: `bye`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"### Recommend","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"Get workout recommendations","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"Format: `recommend \u003cmuscle_group\u003e`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"Example of usage: `recommend biceps`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Travissssz"},"content":"Here are some recommended biceps exercises:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Travissssz"},"content":" 1. Barbell Bicep Curls","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Travissssz"},"content":" 2. Hammer Curls","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Travissssz"},"content":" 3. Cable Curls","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"### BMI","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"Calculate your BMI","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"Format: `bmi /w \u003cweight_in_kg\u003e /h \u003cheight_in_m\u003e`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"Example of usage: `bmi /w 75 /h 1.8`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Travissssz"},"content":"Your BMI is: 23.15, you are of normal weight.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"### Add workout","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"Add a workout log","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"Format: `add workout \u003cexercise\u003e /w \u003cweight in kg\u003e /r \u003creps\u003e /s \u003csets\u003e /d \u003cdate\u003e`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add workout bench /w 100 /r 8 /s 3 /d 02/02/2025`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Travissssz"},"content":" Got it. I\u0027ve added this log:workout","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Travissssz"},"content":"  bench (3 sets of 100 kg for 8 reps) on 02 Feb 2025","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Travissssz"},"content":" Now you have 22 workout logs in the list.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"### Add meal","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"Adds a meal log","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"Format: `add meal \u003cmeal_name\u003e /cal \u003ccalories\u003e /d \u003cdate\u003e /t \u003ctime\u003e`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add meal chicken rice /cal 200 /d 02/02/2025 /t 1700`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Travissssz"},"content":" Got it. I\u0027ve added this log:meal","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Travissssz"},"content":"  chicken rice (200 cal) on: 02 Feb 2025 at: 1700","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Travissssz"},"content":" Now you have 1 meal logs in the list.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"### Add water","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"Adds a water log","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"Format: `add water /ml \u003cvolume\u003e /d \u003cdate\u003e /t \u003ctime\u003e`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add water /ml 1000 /d 02/02/2025 /t 1700`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Travissssz"},"content":" Got it. I\u0027ve added this log:water","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Travissssz"},"content":"  4.0 glass of water on (02 Feb 2025) at 1700","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Travissssz"},"content":" Now you have 1 water logs in the list.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"### Add Personal best","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"Record a personal best","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Travissssz"},"content":"Format: `add pb \u003cexercise\u003e /w \u003cweight_in_kg\u003e /d \u003cdate\u003e`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add pb bench /w 120 /d 02/02/2025`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Travissssz"},"content":" Got it. I\u0027ve added this log:pb","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Travissssz"},"content":"   bench 120 kg on (02 Feb 2025)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Travissssz"},"content":" Now you have 1 pb logs in the list.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"### Add Cardio","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"Add a cardio log","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"Format: `add cardio \u003cexercise\u003e /s \u003cspeed\u003e /i \u003cincline\u003e /t \u003cduration\u003e /d \u003cdate\u003e`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add cardio run /s 8 /i 5 /t 30 /d 02/02/2025`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Travissssz"},"content":" Got it. I\u0027ve added this log:cardio","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Travissssz"},"content":"  run (speed: 8, incline: 5, duration: 30 mins) on 02 Feb 2025","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Travissssz"},"content":" Now you have 1 cardio logs in the list.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kinneo"},"content":"### Add goals","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kinneo"},"content":"Enter goal setting mode","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Travissssz"},"content":"Format: `add goal`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add goal`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Travissssz"},"content":"Welcome to goal setting! Here are your current goals: ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Travissssz"},"content":"Daily Water Goal: 1500 ml","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Travissssz"},"content":"Daily Calorie Goal: Not set yet","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Travissssz"},"content":"Weight Goal: Not set yet","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Travissssz"},"content":"What goal would you like to add today?","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Travissssz"},"content":"Goal has been updated:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Travissssz"},"content":"Daily Water Goal: 1500 ml","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Travissssz"},"content":"Daily Calorie Goal: Not set yet","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Travissssz"},"content":"Weight Goal: Not set yet","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kinneo"},"content":"### Edit goals","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kinneo"},"content":"Edit personal fitness goals","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kinneo"},"content":"Format: `/w \u003cwaterGoals\u003e /c \u003ccalorieGoals\u003e /m \u003cweightGoals\u003e`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kinneo"},"content":"Example of usage: `/w 3000 /c 2500 /m 70`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Travissssz"},"content":"adasdad","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kinneo"},"content":"### Sum","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kinneo"},"content":"Sum up the total calories/water for the day","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kinneo"},"content":"Format: `sum \u003ccal|vol\u003e /d \u003cdate\u003e`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Travissssz"},"content":"Example of usage: `sum cal /d 02/02/2025`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kinneo"},"content":"Total calories consumed: 500","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kinneo"},"content":"### Clear","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kinneo"},"content":"Clear the respective log","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kinneo"},"content":"Format: `clear \u003cpb|meal|workout|water\u003e`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kinneo"},"content":"Example of usage: `clear meal`","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Travissssz"},"content":"Noted. I\u0027ve removed all logs.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kinneo"},"content":"### Status Change","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kinneo"},"content":"Update your cutting/bulking status","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kinneo"},"content":"Format: `status change \u003ccutting|bulking\u003e`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kinneo"},"content":"Example of usage: `status change bulking`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Travissssz"},"content":"Status updated to: bulking","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kinneo"},"content":"### Status report","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kinneo"},"content":"View your current cutting/bulking progress","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Travissssz"},"content":"Format: `status report \u003cdate\u003e`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Travissssz"},"content":"Example of usage: `status report 26/12/2023`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Travissssz"},"content":"Total calories consumed: 2300","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Travissssz"},"content":"Total calories burned: 790","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Travissssz"},"content":"Current Status: bulking","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Travissssz"},"content":"Your intake does not align with your goal. Net calories: 500","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Ahmish15"},"content":"### Search Keywords/date","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Ahmish15"},"content":"Search for logs by keywords or date","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Ahmish15"},"content":"Format: `search \u003cloglist\u003e /k \u003ckeyword\u003e` OR `search \u003cloglist\u003e /d \u003cdate\u003e`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Ahmish15"},"content":"Example of usage: `search workout /k bench` OR `search meal /d 6/5/2025`(search for all meals on 5th June 2025)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Travissssz"},"content":"Showing logs containing keyword: bench","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Travissssz"},"content":"1. bench press (4 sets of 60 kg for 8 reps) on 26 Dec 2023","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Travissssz"},"content":"3. bench press (4 sets of 65 kg for 9 reps) on 31 Dec 2023","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Travissssz"},"content":"5. bench press (4 sets of 69 kg for 4 reps) on 10 Jan 2024","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Travissssz"},"content":"| Command      |                                                          Format, Example                                                          |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Travissssz"},"content":"|--------------|:---------------------------------------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Travissssz"},"content":"| ```help```        |                                                               ```help```                                                                |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Travissssz"},"content":"| ```bye```         |                                                               ``` bye```                                                                |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Travissssz"},"content":"| ```reccommend```   |                                        recommend [muscle_group] \u003cbr/\u003e e.g ```recommend biceps```                                        |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Travissssz"},"content":"| ```bmi```          |                                 bmi /w [weight_in_kg] /h [height_in_m] \u003cbr/\u003e e.g ```bmi /w 75 /h 1.8```                                 |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Travissssz"},"content":"| ```add workout```  | add workout [exercise] /w [weight in kg] /r [reps] /s [sets] /d [date] \u003cbr/\u003e e.g ```add workout bench /w 100 /r 8 /s 3 /d 02/02/2025``` |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Travissssz"},"content":"| ```add meal```     |      add meal [meal_name] /cal [calories] /d [date] /t [time] \u003cbr/\u003e e.g ```add meal chicken rice /cal 200 /d 02/02/2025 /t 1700```      |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Travissssz"},"content":"| ```add water```    |                  add water /ml [volume] /d [date] /t [time]  \u003cbr/\u003e e.g ```add water /ml 1000 /d 02/02/2025 /t 1700```                   |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Travissssz"},"content":"| ```add pb```       |                     add pb [exercise] /w [weight_in_kg] /d [date] \u003cbr/\u003e e.g ```add pb bench /w 120 /d 02/02/2025```                     |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Travissssz"},"content":"| ```add cardio```   |   add cardio [exercise\u003e] /s [speed] /i [incline] /t [duration] /d [date] \u003cbr/\u003e e.g ```add cardio run /s 8 /i 5 /t 30 /d 02/02/2025```   |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Travissssz"},"content":"| ```add goal```     |                                                             ```add goal```                                                              |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Travissssz"},"content":"| ```add goal```     |               add goal /w [waterGoals] /c [calorieGoals] /m [weightGoals] \u003cbr/\u003e e.g ```add goal /w 2000 /c 3000 /m 70```                |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Travissssz"},"content":"| ```sum```          |                                      sum [cal/vol] /d [date] \u003cbr/\u003e e.g ```sum cal /d 02/02/2025```                                      |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Travissssz"},"content":"| ```clear```        |                                      clear [pb\\|meal\\|workout\\|water] \u003cbr\u003e e.g., ```clear meal```                                       |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Travissssz"},"content":"| ```status change``` |                                 status change [cutting\\|bulking] \u003cbr\u003e e.g.,``` staus change bulking```                                  |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Travissssz"},"content":"| ```status report```      |                                      status report [date] \u003cbr\u003e e.g.,```status report 12/13/2023```       |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Travissssz"},"content":"| ```search```|     search [loglist] /k [keyword]  OR search [loglist] /d [date] \u003cbr\u003e e.g., ```search workout bench OR search meal /d 02/04/200```1     |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":20,"kinneo":89,"Ahmish15":7,"-":34,"Travissssz":119}},{"path":"docs/team/Ahmish15.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# Overview","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"HealthBud is a CLI-based fitness logging assistant designed to help users track and improve their personal health goals.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"It supports logging of meals, workouts, water intake, cardio sessions, and personal bests, while also offering","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"intelligent features such as progress status and workout recommendations.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"# Summary of Contributions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"Implemented all the Add commands and their respective parser classes. Also implemented the Search and BMI Command and their parser classes.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"## Code contributed","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"[Team Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026chartGroupIndex\u003d40\u0026chartIndex\u003d0)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"## Enhancements implemented","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"Split the AddLogsCommand into 5 different classes to make it more modular and easier to read. Added the SearchCommand and BMICommand classes to allow users to search for their logs and calculate their BMI respectively.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"## Contributions to the UG","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"added the following commands to the user guide: SearchCommand and BMICommand","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"## Contributions to the DG","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"BMI Sequence Diagram and Storage Class Diagram. I also talked about the BMI command in the DG.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"## Review/mentoring contributions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"## Contributions beyond the project team:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"kinneo":23,"Ahmish15":7}},{"path":"docs/team/Travissssz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# Overview","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"A short overview of your product to provide some context to the reader. The opening 1-2 sentences may be reused by all","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"team members. If your product overview extends beyond 1-2 sentences, the remainder should be written by yourself.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"# Summary of Contributions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"Added the AddWorkoutParser, AddCardioParser to parse the input for the user in the relevant classes.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"Added the DateParser to be able to parse the users date input to a standard format.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"Edited the ParserParameters to be able to take in date inputs with \u0027/\u0027 format as well. ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"## Code contributed","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"[Team Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026chartGroupIndex\u003d40\u0026chartIndex\u003d4)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"## Enhancements implemented","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"Initally the date format input by the users were just added to Loglist as it was. But it was not ideal as we had other functions like search that required date to help search for the item. Hence, I created a standardised date parser, so the date read and printed will always be of the same format.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"Added the addworkout and addcardio paser so that the users input to the relevant command is read correctly ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"Modified ParserParameters which initally read \u0027/\u0027 and parsed it as key value pairs after every \u0027/\u0027, ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"this made it such that input date formats cannot be written like \u002722/12/2025\u0027, as it would affect the values,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"hence it was modified in a way such that dates can now be read in any format including \u002722/12/2025\u0027.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"## Contributions to the UG","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"Added the display code segment for each of the commands ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"Added the summary of commands table","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"## Contributions to the DG","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand feature","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand sequence and class diagram","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"## Review/mentoring contributions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"## Contributions beyond the project team:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"kinneo":24,"Travissssz":12}},{"path":"docs/team/jasonlobo21.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# Overview","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"HealthBud is a CLI-based fitness logging assistant designed to help users track and improve their personal health goals.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"It enables users to log various health metrics—such as meals, workouts, water intake, personal bests, and cardio sessions—using an intuitive command interface. ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"The application incorporates robust command parsing, in-memory log management, and persistent storage via text files, all structured in a modular design to support easy maintenance and future enhancements.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"# Summary of Contributions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"## Code contributed","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"[Team Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026chartGroupIndex\u003d40\u0026chartIndex\u003d1)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"## Enhancements implemented","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"I laid the groundwork of the project by implementing the base log classes, which provide a foundation for meal, workout, and other log types to be extended. I implemented the LogList class to manage the collection of logs in memory. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"I then created the meal logs as a proof-of-concept and template—enabling my teammates to later implement their own versions of log types for workout, cardio, and other categories. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"Additionally, I developed the storage system that reads from and writes to a text file, ensuring data persistence across sessions.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"On the user interface side, I implemented the Ui component to display information to users in a clean and organized manner. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"In terms of feature development, I contributed to the meal log functionalities by implementing delete, list, and clear commands, as well as a find feature that was later merged into the search functionality.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"Furthermore, I created the ParserParameters utility, which utilizes hashing to allow users to input parameters (e.g., /t, /d) in any order, improving the flexibility of the command parsing process.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"In addition to these individual contributions, I continuously sought ways to make the codebase less messy and more concise. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"I have actively contributed to refining both my own code and that of my teammates, ensuring that the overall quality of our project remains high.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"## Contributions to the UG","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"Which sections did you contribute to the UG?","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"## Contributions to the DG","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"Which sections did you contribute to the DG? Which UML diagrams did you add/updated?","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"## Review/mentoring contributions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"## Contributions beyond the project team:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":14,"kinneo":27}},{"path":"docs/team/keanneeee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# Overview","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"HealthBud is a CLI-based fitness logging assistant designed to help users track and improve their personal health","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"goals. It supports logging of meals, workouts, water intake, cardio sessions, and personal bests, while also offering","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"intelligent features such as progress status and workout recommendations.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"# Summary of Contributions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"## Code contributed","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"[Team Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026chartGroupIndex\u003d40\u0026chartIndex\u003d2)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"## Enhancements implemented","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"I took charge of the implementations of the Goal and Water functions. I was focused on designing the features such","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"that it would be user-friendly all the while not compromising on the user\u0027s experience as well as giving them the full ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"experience that our app was meant to deliver.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"I also was involved in a few major revamps that our team decided for the projects, such as the increase in teh OOP-ness","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"of the project by splitting the parser and command execution functions. Our project compartmentalizes functionality in","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"a sense that we have a function which handles its own logic (command classes), while the input is getting parsed by a ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"separate, exclusive function. This drastically improved readability of our code and made our whole project much easier ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"to understand.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"## Contributions to the UG","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"I added the Goal and Water sections of the UG.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"## Contributions to the DG","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"I added the Goals Section as well as the Architecture Diagram.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"## Review/mentoring contributions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"## Contributions beyond the project team:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"keanneeee":14,"kinneo":24}},{"path":"docs/team/kinneo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# Overview","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"HealthBud is a CLI-based fitness logging assistant designed to help users track and improve their personal health goals.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"It supports logging of meals, workouts, water intake, cardio sessions, and personal bests, while also offering ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"intelligent features such as progress status and workout recommendations.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"# Summary of Contributions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"## Code contributed","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"[Team Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026chartGroupIndex\u003d40\u0026chartIndex\u003d3)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"## Enhancements implemented","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"I was in charge of the implementation of several features in our application, including the recommend, status, and ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"add pb commands. These features were thoughtfully designed and executed to enhance user interaction and provide ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"meaningful insights into fitness progress. ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"In addition, I led a major revamp of the parser and logic architecture. This involved decoupling parsing logic from ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"command execution, resulting in a much cleaner separation of concerns. Each command class now handles only its respective ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"logic, while parsing is delegated to dedicated parser classes. This not only improved readability and maintainability, ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"but also aligned our codebase with sound OOP principles. To ensure consistency, I systematically refactored all existing","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"command and parser classes to follow this design pattern, improving the modularity and extensibility of our codebase.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"## Contributions to the UG","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"I contributed significantly to the User Guide to ensure that it was both accessible and comprehensive to new users. ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"I created the structural layout of the guide by introducing proper sectioning and headings for each of our features. ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"I then went on to describe each of the features I implemented — such as recommend, status, and add pb — with clear and ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"concise explanations, usage syntax, and example inputs/outputs.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"## Contributions to the DG","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"For the Developer Guide, I provided detailed explanations and diagrams to communicate both feature-level and system-level ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"design decisions. I was responsible for writing the class and sequence diagrams for the recommend feature, as well as ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"explaining its logic and integration with the rest of the system. Beyond feature-specific documentation, I contributed to ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"broader sections such as the Overall Architecture, Design and Implementation, Glossary, Non-Functional Requirements, ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"Prerequisites, and Instructions for Manual Testing. I also contributed to the user stories section by drafting realistic ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"user scenarios based on the personas we envisioned.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"I played a key role in ensuring that our testing framework was robust. Specifically:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"- Revamped the structure of our JUnit test file","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"- Wrote comprehensive tests for add pb, recommend, and status features, ensuring 100% code coverage","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"- Reviewed and refactored existing test cases to align with our new parser-logic separation","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"In terms of project management:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"- I took ownership of creating, assigning, and tracking issues","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"- Ensured that branches were properly linked to their respective issues","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"- Maintained up-to-date milestone tracking","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"- Reviewed and linked all PRs to relevant issues and milestones for clarity and traceability","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"## Review/mentoring contributions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"Throughout the project, I actively mentored teammates, especially when they faced challenges with logic, parsing, or OOP structure. I provided:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"- Guidance on how to structure commands and parsers","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"- Help resolving common IntelliJ issues and Git conflicts","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"- Support in debugging logic errors and writing cleaner, more modular code","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"I regularly reviewed my teammates’ PRs and provided constructive feedback to maintain code quality and consistency across the project.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"List of PRs approved by me:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/112","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/111","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/108","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/106","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/105","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/103","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/95","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/92","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/91","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/89","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/86","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/78","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/77","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/74","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/72","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/71","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/61","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/56","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/54","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/48","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/45","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/42","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/39","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/36","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/35","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/31","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/23","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/21","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/18","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/16","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/5","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"## Contributions beyond the project team:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"Beyond technical contributions, I took on a coordination and leadership role within the team:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"- Consistently reminded teammates of upcoming deadlines and sprint goals","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"- Provided summaries of progress and outstanding tasks to keep everyone aligned","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"- Acted as the liaison between our team and the TAs and professors, regularly seeking clarifications and relaying them clearly to the group","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"- Offered to help teammates who were particularly busy in certain weeks, ensuring we stayed on track as a team","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"I also made an effort to foster a collaborative decision-making environment — instead of making decisions ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"unilaterally, I encouraged discussions and collective agreement on key directions.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"- Reported bugs and inconsistencies during integration testing phases","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"- Provided detailed, helpful responses to peers’ queries in the discussion forum","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"- Shared useful insights from consultations with the TAs/Prof to help other teams as well","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"- Took initiative in proposing architecture improvements and code standards","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"Overall, I strived not only to contribute technically, but also to uplift the team through mentorship, leadership, and collaboration.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"kinneo":115}},{"path":"src/main/java/seedu/healthbud/HealthBud.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.ParserManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.storage.Storage;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"public class HealthBud {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"    public static LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"    public static LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"    public static LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    public static LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"    public static LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"    public static LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printGreeting();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        Storage.loadLogs(mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs, goalLogs);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"        boolean isLooping \u003d true;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"        while (isLooping) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"            isLooping \u003d ParserManager.handleInput(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"                    in.nextLine().trim().toLowerCase());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":21,"keanneeee":3,"kinneo":6,"Travissssz":1}},{"path":"src/main/java/seedu/healthbud/LogList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Cardio;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Log;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Water;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.storage.Storage;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"public class LogList {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"    private List\u003cLog\u003e logs;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"    public LogList(){","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"        logs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"    public Log getLog(int index){","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"        return logs.get(index);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"    public int getSize() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"        return logs.size();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"        return logs.isEmpty();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"    public void updateLog(Log log){","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"        Ui.printMessage(\" Got it this Log has been updated:\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"        Ui.printMessage(\"  \" + log.toString());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"        Storage.appendLogToFile(log);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"    public void addLog(Log log) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"        logs.add(log);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        Ui.printMessage(\" Got it. I\u0027ve added this log:\" + log.getLogType());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\"  \" + getLog(getSize() - 1));","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"        Storage.appendLogToFile(log);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(String.format(\" Now you have %d %s logs in the list.\", getSize(), log.getLogType()));","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"    public void loadLog(Log log) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"        logs.add(log);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"    public void deleteLog(int index) throws HealthBudException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"        if (index \u003c 1 || index \u003e getSize()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"            throw new HealthBudException(\"Task number not in range\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\" Noted. I\u0027ve removed this log:\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\"  \" + getLog(index - 1));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"        logs.remove(index - 1);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"        Storage.rewriteLogsToFile(this);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\" Now you have \" + getSize() + \" logs in the list.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"    public void listLogs() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"        if (logs.isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"            Ui.printMessage(\" No logs available.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"        } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"            for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"                Ui.printListedFormat(this, i);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"    public void findLog(String keyword) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"        boolean notFound \u003d true;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonlobo21"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"            if (logs.get(i).toString().contains(keyword)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jasonlobo21"},"content":"                notFound \u003d false;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jasonlobo21"},"content":"                Ui.printListedFormat(this, i);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonlobo21"},"content":"        if (notFound) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"            Ui.printMessage(\"No matching \u0027\" + keyword +  \"\u0027 logs found.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jasonlobo21"},"content":"    public void clearLogs() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jasonlobo21"},"content":"        if (logs.isEmpty()) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jasonlobo21"},"content":"            Ui.printMessage(\"No logs to clear.\");","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jasonlobo21"},"content":"            return;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jasonlobo21"},"content":"        logs.clear();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jasonlobo21"},"content":"        Storage.rewriteLogsToFile(this);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\"Noted. I\u0027ve removed all logs.\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"keanneeee"},"content":"    public void getAllDates(){","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"keanneeee"},"content":"        List\u003cString\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"keanneeee"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"keanneeee"},"content":"            String date \u003d logs.get(i).getDate();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"keanneeee"},"content":"            if (!dates.contains(date)) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"keanneeee"},"content":"                dates.add(date);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"keanneeee"},"content":"            }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"keanneeee"},"content":"        Ui.printMessage(\"Here are the dates available:\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"keanneeee"},"content":"        for (int i \u003d 0; i \u003c dates.size(); i++) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"keanneeee"},"content":"            Ui.printMessage((i + 1) + \". \" + dates.get(i));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"    public int getCaloriesSum(String date) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jasonlobo21"},"content":"        int totalCalories \u003d 0;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jasonlobo21"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jasonlobo21"},"content":"            Meal meal \u003d (Meal) logs.get(i);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jasonlobo21"},"content":"            if (meal.getDate().equals(date)) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jasonlobo21"},"content":"                totalCalories +\u003d Integer.parseInt(meal.getCalories());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\"Total calories consumed: \" + totalCalories);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"        return totalCalories;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"    public int getCardioSum(String date){","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"        int totalCardio \u003d 0;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"            Cardio cardio \u003d (Cardio) logs.get(i);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"            if(cardio.getDate().equals(date)){","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"                int speed \u003d Integer.parseInt(cardio.getSpeed());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"                int duration \u003d Integer.parseInt(cardio.getDuration());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"                int incline \u003d Integer.parseInt(cardio.getIncline());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"                // general formula that i got from chat idk it might be anyhow de - kin","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"                // Calories \u003d (Speed * 2) + (Incline * 5) * (Duration / 60.0) * 100","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"                totalCardio +\u003d (int) (((speed * 2) + (incline * 5)) * (duration / 60.0) * 100);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"        Ui.printMessage(\"Total calories burned: \" + totalCardio);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"        return totalCardio;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"keanneeee"},"content":"    public void getWaterSum(String date) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"keanneeee"},"content":"        int totalWater \u003d 0;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"keanneeee"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"keanneeee"},"content":"            Water water \u003d (Water) logs.get(i);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"keanneeee"},"content":"            if (logs.get(i).getDate().equals(date)) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"keanneeee"},"content":"                totalWater +\u003d Integer.parseInt(water.getAmount());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"keanneeee"},"content":"            }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"keanneeee"},"content":"        Ui.printMessage(\"Total water consumed: \" + totalWater + \"ml\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":92,"keanneeee":32,"kinneo":28,"Ahmish15":1,"Travissssz":2}},{"path":"src/main/java/seedu/healthbud/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class Ui {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"     * New line and indent used for formatting output.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    public static final String NEW_LINE \u003d \"\\n     \";","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints a message with indentation.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"     * @param message the message to print","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"        System.out.println(\"    \" + message);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints Terry in ASCII to the user.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printHealthBuds() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀ ⠀⣀⣴⣶⣶⣶⡦⠤⣀⡀⠀⠀⠀⠀⠀⣀⣤⣤⣀⡀⠀⠀⠀⠀⠀⣀⣤⣴⡶⣶⣶⡦⣄⡀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⣀⣴⡾⢛⣡⣿⣤⡄⡕⡇⠹⡇⠀⠀⠀⠀⣾⣿⠿⠻⣿⣿⡄⠀⠀⠀⢸⠻⠸⠹⠁⣤⣿⣦⡙⠿⣦⣄⡀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"                ⠀⣠⣾⡿⠟⠁⡴⢫⡾⠋⠘⠻⢷⣷⣾⠇⠀⠀⠀⢰⠛⣿⣟⣿⣿⡿⣧⠀⠀⠀⠘⢾⣴⡷⠿⠃⠈⢿⣎⢳⡈⠙⠿⣵⣦⡀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"                ⢸⡿⠁⠀⠀⣼⣷⣿⢃⡀⠀⠀⠀⠈⠁⠀⠀⠀⠀⢘⢧⣄⢽⣼⣄⣴⡟⠀⠀⠀⠀  ⠈⠉⠀⠀⠀  ⢀⡈⣿⣿⣳⡀⠀⠀⢹⣷⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"                ⣿⣧⡀⢤⣼⣭⡿⠿⠭⣘⢷⣤⠶⠉⠑⢦⣄⠀⠀⢸⣦⡍⠩⠿⠏⣵⣿⠀⠀⢀⣴⠖⠉⠵⣦⣴⢓⡩⠽⢿⣯⣵⣤⠄⣸⣿⡄","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"                ⢿⣿⡭⣡⣤⢽⣧⡀⠀⠀⠙⣿⣶⣤⠀⠙⠛⠶⣶⣿⣻⣷⣾⣿⣾⣿⣸⣵⠶⠟⠛⠁⢠⣴⣿⠟⠁⠀⠀⣠⡿⠬⡥⡩⢿⡷⠃","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"                ⠀⠉⠳⣶⣿⣞⣿⣧⣄⣀⣠⣾⣿⣿⡯⢄⠀⠀⠀⠩⣝⣻⣿⣿⡿⣛⠉⠀⠀⠀⣀⠬⣿⣿⣿⣄⣀⣀⣼⣿⣛⣾⣶⡶⠋⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠙⢦⡀⠀⠙⢿⣿⣿⣿⣭⢿⣿⣦⣄⠀⠀⠀⠠⢿⣿⣿⣿⠅⠀⠀⠀⣀⣤⣾⣿⢯⣿⣿⣿⣿⠟⠁⠀⣴⠟⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠈⠛⠶⣶⠿⠿⡿⠃⡼⠀⢻⣿⣿⣿⣶⣶⣶⣾⣿⣿⣿⣶⣶⣶⣾⣿⣿⣿⠁⢰⡈⢻⠿⠿⣷⡶⠞⠁⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢧⣼⣧⠀⣸⣟⣿⣿⣿⠿⠛⠛⢿⣿⠛⠛⠻⢿⣿⢿⣏⣧⠀⣾⣷⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣷⣧⡼⠁⣸⣇⣤⣤⣤⣼⣿⣤⣤⣤⣈⣿⡀⢱⣬⣷⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣴⡇⢸⡿⠋⠀⠀⠀⢻⣿⠁⠀⠀⠉⢻⡇⢸⣧⣼⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⡟⢄⣷⣤⣤⣶⢶⣿⣾⣶⠶⣦⣤⣼⣧⢜⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡈⢻⠏⠁⠀⠀⢹⣿⠁⠀⠀⠙⣿⠋⣾⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣯⢻⣇⠀⠀⢀⣾⣿⣄⠀⠀⢠⡿⢹⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣎⠂⢿⠛⠉⠉⠙⡟⠉⠉⠙⢻⠃⢢⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣄⣼⣆⠀⠀⠀⠁⠀⠀⢀⣾⣄⣾⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣦⣤⣤⣦⣤⣴⡾⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"                \"\"\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints the greeting message to the user.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printGreeting() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"        printHealthBuds();","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"        printMessage(\"Hello! I\u0027m HealthBud\" + NEW_LINE + \"What can I do for you?\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints the goodbye message and returns false to signal the termination of the program.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"     * @return false to indicate that the program should exit","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"    public static boolean printGoodbye() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"        printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"        return false;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints the list of available commands for the user.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printHelp() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"        printMessage(\"Here are the commands you can use:\" + NEW_LINE","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"                + \"1. help - Display this list of commands\" + NEW_LINE","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"                + \"2. bye - Exit the program\" + NEW_LINE","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"                + \"3. recommend \u003cmuscle_group\u003e - Get workout recommendations\" + NEW_LINE","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Travissssz"},"content":"                + \"4. bmi /w \u003cweight_in_kg\u003e /h \u003cheight_in_m\u003e - Calculate your BMI\" + NEW_LINE","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Travissssz"},"content":"                + \"5. add workout \u003cexercise\u003e /w \u003cweight in kg\u003e /r \u003creps\u003e /s \u003csets\u003e /d \u003cdate\u003e \" +","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Travissssz"},"content":"                \"- Add a workout log\" + NEW_LINE","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"                + \"6. add meal \u003cmeal_name\u003e /cal \u003ccalories\u003e /d \u003cdate\u003e /t \u003ctime\u003e - Add a meal log\" + NEW_LINE","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"                + \"7. add water /ml \u003cvolume\u003e /d \u003cdate\u003e /t \u003ctime\u003e - Add a water log\" + NEW_LINE","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"                + \"8. add pb \u003cexercise\u003e /w \u003cweight_in_kg\u003e /d \u003cdate\u003e - Record a personal best\" + NEW_LINE","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"                + \"9. sum \u003ccal|vol\u003e /d \u003cdate\u003e - Sum up the total calories/water for the day\" + NEW_LINE","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Ahmish15"},"content":"                + \"10. clear \u003cpb|meal|workout|water\u003e - Clear the respective log\" + NEW_LINE","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Ahmish15"},"content":"                + \"11. add cardio \u003cexercise\u003e /s \u003cspeed\u003e /i \u003cincline\u003e /t \u003cduration\u003e /d \u003cdate\u003e - Add a cardio log\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"                + NEW_LINE","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"keanneeee"},"content":"                + \"12. view goals - to view all goals\" + NEW_LINE","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"keanneeee"},"content":"                + \"13  add goal /w \u003cwaterGoals /c \u003ccalorieGoals\u003e /m \u003cweightGoals\u003e - to edit personal goals\" + NEW_LINE","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"                + \"14. status change \u003ccutting/bulking\u003e - Update your cutting/bulking status.\" + NEW_LINE","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ahmish15"},"content":"                + \"15. status report - View your current cutting/bulking progress\" + NEW_LINE","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Ahmish15"},"content":"                + \"16. search \u003clogType\u003e /d \u003cdate\u003e OR search \u003clogType\u003e /k \u003ckeyword\u003e - Search for logs\" + NEW_LINE);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints a message indicating that the entered command is unknown.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printUnknownCommand() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jasonlobo21"},"content":"        printMessage(\"I don\u0027t recognize that command. Type \u0027help\u0027 to see the list of commands.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printListedFormat(LogList logs, int index) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jasonlobo21"},"content":"        printMessage((index + 1) + \". \" + logs.getLog(index));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":58,"keanneeee":2,"kinneo":33,"Ahmish15":4,"Travissssz":3}},{"path":"src/main/java/seedu/healthbud/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"public interface Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"    void execute() throws Exception;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":5}},{"path":"src/main/java/seedu/healthbud/command/InputCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"// FOR COMMANDS THAT OINLY NEED INPUT AND NO NEED LOGS AT ALL","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"public abstract class InputCommand implements Command {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"    protected String input;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    public InputCommand(String input) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":12}},{"path":"src/main/java/seedu/healthbud/command/MultiLogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"// FOR COMMANDS THAT NEEDS MORE THAN 1 LOG LIST AND INPUT","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"public abstract class MultiLogCommand implements Command {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"    protected LogList goalLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    protected LogList pbLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    protected LogList mealLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    protected LogList workoutLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    protected LogList waterLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    protected LogList cardioLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    protected String input;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"    public MultiLogCommand(LogList goalLogs, LogList pbLogs, LogList mealLogs, LogList workoutLogs,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"                           LogList waterLogs, LogList cardioLogs, String input) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        this.goalLogs \u003d goalLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        this.pbLogs \u003d pbLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        this.mealLogs \u003d mealLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        this.workoutLogs \u003d workoutLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        this.waterLogs \u003d waterLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        this.cardioLogs \u003d cardioLogs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":22,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/command/SingleLogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"// FOR COMMANDS THAT ONLY NEED ONE LOG AT A TIME AND INPUT","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"public abstract class SingleLogCommand implements Command {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"    protected final LogList logList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    protected final String input;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"    public SingleLogCommand(LogList logList, String input) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"        this.logList \u003d logList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":12}},{"path":"src/main/java/seedu/healthbud/command/input/BMICommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.input;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.InputCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"public class BMICommand extends InputCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"    private final double weight; // in kilograms","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    private final double height; // in meters","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    public BMICommand(String input, double weight, double height) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"        //@@author Ahmish15","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"        super(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"        this.height \u003d height;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"        double bmi \u003d weight / (height * height);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"        if (bmi \u003c 18.5) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"            Ui.printMessage(\"Your BMI is: \" + String.format(\"%.2f\", bmi) + \", you are underweight.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"        } else if (bmi \u003c 25) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"            Ui.printMessage(\"Your BMI is: \" + String.format(\"%.2f\", bmi) + \", you are of normal weight.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"        } else if (bmi \u003c 30) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"            Ui.printMessage(\"Your BMI is: \" + String.format(\"%.2f\", bmi) + \", you are overweight.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"        } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"            Ui.printMessage(\"Your BMI is: \" + String.format(\"%.2f\", bmi) + \", you are obese.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":8,"Ahmish15":22}},{"path":"src/main/java/seedu/healthbud/command/input/RecommendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.input;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.InputCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"public class RecommendCommand extends InputCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"    private final String list;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    public RecommendCommand(String list) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"        super(list);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"        this.list \u003d list;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    public String getMessage() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        return list;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        Ui.printMessage(list);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":20}},{"path":"src/main/java/seedu/healthbud/command/multilog/StatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.multilog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.MultiLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"public class StatusCommand extends MultiLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    private static String currentStatus \u003d \"neutral\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    private final String message;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    public StatusCommand(LogList goalLogs, LogList pbLogs, LogList mealLogs, LogList workoutLogs,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"                         LogList waterLogs, LogList cardioLogs, String input, String message) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        super(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    public void execute(){","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":19}},{"path":"src/main/java/seedu/healthbud/command/multilog/TrackGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.command.multilog;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.command.MultiLogCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidTrackException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"public class TrackGoalCommand extends MultiLogCommand {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    private final String date;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"    public TrackGoalCommand(String date, LogList goalLogs, LogList pbLogs, LogList mealLogs,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"                            LogList workoutLogs, LogList waterLogs, LogList cardioLogs)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"            throws InvalidTrackException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"        super(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, date);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"        this.date \u003d DateParser.formatDate(date);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    public void execute(){","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"        Ui.printMessage(\"Here is your goal progress for \" + date + \": \\n\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"        waterLogs.getWaterSum(date);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"        mealLogs.getCaloriesSum(date);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"keanneeee":27,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddCardioCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Cardio;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"//@@author Ahmish15","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"public class AddCardioCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"    private final String name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"    private final String sets;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"    private final String intensity;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"    private final String time;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"    private final String date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"    public AddCardioCommand(LogList cardioLogs, String input, String name, String sets,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"                            String intensity, String time, String date) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"        super(cardioLogs, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"        this.intensity \u003d intensity;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"    public String getName() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"        return name;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"    public String getSets() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"        return sets;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"    public String getIntensity() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"        return intensity;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"    public String getTime() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"        return time;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"    public String getDate() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"        return date;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"        Cardio newCardio \u003d new Cardio(name, sets, intensity, time, date);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"        logList.addLog(newCardio);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":2,"kinneo":4,"Ahmish15":47}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Goals;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.storage.Storage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"public class AddGoalCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"    private static String waterGoal ;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    private static String calorieGoal;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"    private static String weightGoal;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"    private static String weeklyWeightProgress;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"    Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"    public AddGoalCommand(LogList goalLogs, String input, String waterGoal,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"                          String calorieGoal, String weightGoal){","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"        super(goalLogs, input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"        this.waterGoal \u003d waterGoal;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"        this.weightGoal \u003d weightGoal;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"    public void execute(){","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"        if (!waterGoal.equals(goal.getDailyWaterGoal())","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"                || !calorieGoal.equals(goal.getDailyCalorieGoal()) || !weightGoal.equals(goal.getWeightGoal())) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"            goal.updateGoals(waterGoal, calorieGoal, weightGoal);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"            Ui.printMessage(\"Goal has been updated:\\n\" + goal.toString());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"            Storage.appendLogToFile(goal);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"            goal.updateGoals(waterGoal, calorieGoal, weightGoal);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"keanneeee":31,"kinneo":1,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddMealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"//@@ author Ahmish15","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"public class AddMealCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    private final String name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    private final String calories;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private final String date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private final String time;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    public AddMealCommand(LogList mealLogs, String input, String name, String calories, String date, String time) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        super(mealLogs, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        Meal newMeal \u003d new Meal(name, calories, date, time);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        logList.addLog(newMeal);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":24,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddPersonalBestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.PersonalBest;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"//@@ author Ahmish15","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"public class AddPersonalBestCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    private final String name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    private final String weight;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private final String date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    public AddPersonalBestCommand(LogList pbLogs, String input, String name, String weight, String date) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        super(pbLogs, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        PersonalBest newPB \u003d new PersonalBest(name, weight, date);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        logList.addLog(newPB);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":22,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddWaterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Water;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"//@@ author Ahmish15","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"public class AddWaterCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    private final String ml;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private final String date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private final String time;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    public AddWaterCommand(LogList waterLogs, String input, String ml, String date, String time) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        super(waterLogs, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        this.ml \u003d ml;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    public void execute(){","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        Water newWater \u003d new Water(ml, date, time);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        logList.addLog(newWater);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":22,"Ahmish15":2}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddWorkoutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Workout;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"//@@ author Ahmish15","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"public class AddWorkoutCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    private final String name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private final String reps;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private final String sets;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    private final String date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"    private final String weight;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"    public AddWorkoutCommand(LogList workoutLogs, String input, String name,","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"                             String reps, String sets, String date, String weight) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        super(workoutLogs, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        this.reps \u003d reps;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"    public String getName() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"        return name;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"    public String getReps() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"        return reps;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"    public String getSets() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"        return sets;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"    public String getDate() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"        return date;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"    public String getWeight() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"        return weight;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"    public void execute(){","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        Workout newWorkout \u003d new Workout(name, reps, sets, date, weight);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"        logList.addLog(newWorkout);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":23,"Ahmish15":2,"Travissssz":25}},{"path":"src/main/java/seedu/healthbud/command/singlelog/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"public class ClearCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"    public ClearCommand(String input, LogList logList) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"        super(logList, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Input must be provided for Clear command\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        logList.clearLogs();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":4,"kinneo":13,"Travissssz":1}},{"path":"src/main/java/seedu/healthbud/command/singlelog/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"public class DeleteCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    private final int index;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    public DeleteCommand(LogList targetLogList, String input, int index) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"        super(targetLogList, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"    public void execute() throws HealthBudException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        if (!input.trim().matches(\".*\\\\d+.*\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"            throw new HealthBudException(\"Insert a valid task number\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        logList.deleteLog(index);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Travissssz"},"content":"    public LogList getLogList() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"        return logList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":21,"Travissssz":4}},{"path":"src/main/java/seedu/healthbud/command/singlelog/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"public class ListCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"    public ListCommand(String input, LogList logList) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"        super(logList, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"        logList.listLogs();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":12}},{"path":"src/main/java/seedu/healthbud/command/singlelog/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"public class SearchCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"    private final String date;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"    private final String keyword;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"    public SearchCommand(String input, LogList logList, String date, String keyword) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"        super(logList, input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"    public void execute() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"        // Check that exactly one of date or keyword is provided","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"        if ((date !\u003d null \u0026\u0026 keyword !\u003d null) || (date \u003d\u003d null \u0026\u0026 keyword \u003d\u003d null)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"            Ui.printMessage(\"Invalid search parameters. Provide either /d \u003cdate\u003e or /k \u003ckeyword\u003e, but not both.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"            return;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"            // Search by date","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"            Ui.printMessage(\"Showing logs for date: \" + date);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"            boolean foundAny \u003d printLogsForDate(logList, date);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"            if (!foundAny) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"                Ui.printMessage(\"No logs found for this date.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"            // Search by keyword","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"            Ui.printMessage(\"Showing logs containing keyword: \" + keyword);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"            logList.findLog(keyword);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"    private boolean printLogsForDate(LogList logs, String date) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"        boolean found \u003d false;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"        for (int i \u003d 0; i \u003c logs.getSize(); i++) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"            if (logs.getLog(i).getDate().equals(date)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"                Ui.printMessage(logs.getLog(i).toString());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"                found \u003d true;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"        return found;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"Ahmish15":46}},{"path":"src/main/java/seedu/healthbud/command/singlelog/SumCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidDateException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidSumException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"public class SumCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    private final String type;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private final String date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    public SumCommand(String input, LogList logList, String type, String date) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        super(logList, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"    public void execute() throws InvalidSumException, InvalidDateException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        switch (type) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        case \"cal\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"            logList.getCaloriesSum(date);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"            break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        case \"vol\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"            logList.getWaterSum(date);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"            break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"            logList.getCardioSum(date);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"            break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"            throw new InvalidSumException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"keanneeee":3,"kinneo":30}},{"path":"src/main/java/seedu/healthbud/exception/HealthBudException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class HealthBudException extends Exception{","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"    public HealthBudException(String message) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(message);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-16","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":6,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/exception/InvalidBMIException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"public class  InvalidBMIException extends Exception {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"    public InvalidBMIException() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid BMI command - bmi /w \u003cweight_in_kg\u003e /h \u003cheight_in_m\u003e\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false}],"authorContributionMap":{"kinneo":8}},{"path":"src/main/java/seedu/healthbud/exception/InvalidCardioException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"public class InvalidCardioException extends RuntimeException {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"    public InvalidCardioException() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid cardio log command - add cardio \u003cexercise\u003e /s \u003cspeed\u003e /i \u003cincline\u003e /t \u003cduration\u003e /d \u003cdate\u003e\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-21","isFullCredit":false}],"authorContributionMap":{"kinneo":2,"Travissssz":5}},{"path":"src/main/java/seedu/healthbud/exception/InvalidClearException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidClearException extends RuntimeException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"    public InvalidClearException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid clear command - clear \u003cpb|meal|workout|water\u003e\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":6,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/exception/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"public class InvalidDateException extends RuntimeException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"    public InvalidDateException() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"        super(\"Invalid date format! Please enter a valid date in the format: dd-MM-yyyy\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"keanneeee":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidDateFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"import java.util.List;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"public class InvalidDateFormatException extends Exception {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"    public InvalidDateFormatException(String inputDate, List\u003cString\u003e validFormats) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"        super(\"Could not parse date: \" + inputDate +","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"                \". try other formats: \" + validFormats);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"Travissssz":11}},{"path":"src/main/java/seedu/healthbud/exception/InvalidDeleteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidDeleteException extends Exception {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"    public InvalidDeleteException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid delete command - delete \u003cmeal|workout|water|pb\u003e \u003cindex\u003e\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":5,"kinneo":2}},{"path":"src/main/java/seedu/healthbud/exception/InvalidGoalException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"public class InvalidGoalException extends RuntimeException {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"    public InvalidGoalException() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"        super(\"Invalid Goal command. To change a goal, please enter /goalcode + value (e.g. /w 1000)\");","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-22","isFullCredit":false}],"authorContributionMap":{"keanneeee":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidListException extends Exception {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"    public InvalidListException() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid list command - list \u003cpb|meal|workout|water|cardio\u003e\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":6,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/exception/InvalidLogException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidLogException extends Exception {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"    public InvalidLogException() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"        ","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"        super(\"Invalid log input - add \u003cpb|meal|workout|water|goal\u003e\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":6,"keanneeee":1,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/exception/InvalidMLException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"public class InvalidMLException extends RuntimeException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"    public InvalidMLException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid water volume inputted, please input a valid number (e.g., 250, 1000, 1250)\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"keanneeee":6,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/exception/InvalidMealException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"public class  InvalidMealException extends Exception {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"    public InvalidMealException() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid meal log command - add meal \u003cmeal_name\u003e /cal \u003ccalories\u003e /d \u003cdate\u003e /t \u003ctime\u003e\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"kinneo":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidPersonalBestException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"public class InvalidPersonalBestException extends RuntimeException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"    public InvalidPersonalBestException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid pb log command - add pb \u003cexercise\u003e /w \u003cweight_in_kg\u003e /d \u003cdate\u003e\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"kinneo":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidRecommendException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"public class InvalidRecommendException extends Exception {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"    public InvalidRecommendException() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid recommend command - recommend \u003cmuscle_group\u003e\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-16","isFullCredit":false}],"authorContributionMap":{"kinneo":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidSearchException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"public class InvalidSearchException extends RuntimeException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"    public InvalidSearchException(String message) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"        super(message);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"Ahmish15":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidStatusException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"public class InvalidStatusException extends Exception {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"    public InvalidStatusException() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid status command - status change \u003ccutting/bulking\u003e or status report \u003cdate\u003e\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"kinneo":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidSumException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidSumException extends Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"    public InvalidSumException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid sum command - sum \u003ccal|vol\u003e /d \u003cdate\u003e\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":5,"kinneo":2}},{"path":"src/main/java/seedu/healthbud/exception/InvalidTrackException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"public class InvalidTrackException extends RuntimeException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"    public InvalidTrackException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"        super(\"Unable to Track, Please enter a valid tracking command in the form of - track goal /d \u003cdate\u003e\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"keanneeee":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidWaterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidWaterException extends Exception {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"    public InvalidWaterException() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid water log command - add water /ml \u003cvolume\u003e /d \u003cdate\u003e /t \u003ctime\u003e\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"keanneeee":5,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/exception/InvalidWorkoutException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidWorkoutException extends Exception {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"    public InvalidWorkoutException() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"        super(\"Invalid workout log command - add workout \u003cexercise\u003e /w \u003cweight\u003e /r \u003creps\u003e /s \u003csets\u003e /d \u003cdate\u003e\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"Travissssz":6}},{"path":"src/main/java/seedu/healthbud/log/Cardio.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"public class Cardio extends Log{","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"    private String name;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"    private String duration;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"    private String incline;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"    private String speed;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"    public Cardio(String name, String speed, String incline, String duration, String date) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"cardio\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        this.incline \u003d incline;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        this.speed \u003d speed;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    public String getName() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        return name;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    public String getDuration() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        return duration;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    public String getIncline() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        return incline;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    public String getSpeed() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        return speed;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"    @Override","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"    public String toString() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        return name  + \" (speed: \" + speed + \", incline: \" + incline + \", duration: \" + duration + \" mins) on \" +","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"                getDate();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-21","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":2,"kinneo":30,"Travissssz":9}},{"path":"src/main/java/seedu/healthbud/log/Goals.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"public class Goals extends Log {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"    private static Goals instance;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"    private String dailyWaterGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"    private String dailyCalorieGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"    private String weightGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"    private String weeklyWeightProgress;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"    private Goals(String dailyWaterGoal, String dailyCalorieGoal,","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"                  String weightGoal, String weeklyWeightProgress, String date) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"goals\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"        this.dailyWaterGoal \u003d dailyWaterGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"        this.dailyCalorieGoal \u003d dailyCalorieGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"        this.weightGoal \u003d weightGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"        this.weeklyWeightProgress \u003d weeklyWeightProgress;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"    public static Goals getInstance() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"            instance \u003d new Goals(\"0\", \"0\", \"0\", \"0\", \"0\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"        return instance;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"    public void updateGoals(String water, String calorie, String weight){","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"        this.dailyWaterGoal \u003d water;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"        this.dailyCalorieGoal \u003d calorie;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"        this.weightGoal \u003d weight;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"    public void setDailyWaterGoal(String dailyWaterGoal) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"        this.dailyWaterGoal \u003d dailyWaterGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"    public void setDailyCalorieGoal(String dailyCalorieGoal) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"        this.dailyCalorieGoal \u003d dailyCalorieGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"    public void setWeightGoal(String weightGoal) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"        this.weightGoal \u003d weightGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"    public void setWeeklyWeightProgress(String weeklyWeightProgress) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"        this.weeklyWeightProgress \u003d weeklyWeightProgress;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"keanneeee"},"content":"    public String getDailyWaterGoal() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"keanneeee"},"content":"        return dailyWaterGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"keanneeee"},"content":"    public String getDailyCalorieGoal() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"keanneeee"},"content":"        return dailyCalorieGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"keanneeee"},"content":"    public String getWeightGoal() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"keanneeee"},"content":"        return weightGoal;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"keanneeee"},"content":"    public String getWeeklyWeightProgress() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"keanneeee"},"content":"        return weeklyWeightProgress;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"keanneeee"},"content":"    public String toString() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"keanneeee"},"content":"        Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"keanneeee"},"content":"        String finalString;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"keanneeee"},"content":"        if (goal.getDailyWaterGoal().equals(\"0\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"keanneeee"},"content":"            finalString \u003d \"    Daily Water Goal: Not set yet\\n\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"keanneeee"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"keanneeee"},"content":"            finalString \u003d \"    Daily Water Goal: \" + goal.getDailyWaterGoal() + \" ml\\n\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"keanneeee"},"content":"        if (goal.getDailyCalorieGoal().equals(\"0\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"keanneeee"},"content":"            finalString +\u003d \"    Daily Calorie Goal: Not set yet\\n\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"keanneeee"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"keanneeee"},"content":"            finalString +\u003d \"    Daily Calorie Goal: \" + goal.getDailyCalorieGoal() + \" cal\\n\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"keanneeee"},"content":"        if (goal.getWeightGoal().equals(\"0\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"keanneeee"},"content":"            finalString +\u003d \"    Weight Goal: Not set yet\\n\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"keanneeee"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"keanneeee"},"content":"            finalString +\u003d \"    Weight Goal: \" + goal.getWeightGoal() + \" kg\\n\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"keanneeee"},"content":"        return finalString;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-22","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":2,"keanneeee":85}},{"path":"src/main/java/seedu/healthbud/log/Log.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class Log {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"    private String logType;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"    private String date;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    public Log(String date, String logType) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"        this.logType \u003d logType;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"    public String getLogType() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"        return logType;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"    public String getDate() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"        return date;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":21}},{"path":"src/main/java/seedu/healthbud/log/Meal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class Meal extends Log {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"    private String name;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"    private String calories;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    private String time;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"    public Meal(String name, String calories, String date, String time){","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"meal\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"    public String getName() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"        return name;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    public String  getCalories() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        return calories;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    public String getTime() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        return time;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"        return String.format(\"%s (%s cal) on: %s at: %s\", name, calories, getDate(), time);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":25,"kinneo":7}},{"path":"src/main/java/seedu/healthbud/log/PersonalBest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"public class PersonalBest extends Log {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"    private String exercise;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"    private String weight;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"    public PersonalBest(String exercise, String weight, String date){","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"pb\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"        this.exercise \u003d exercise;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    public String getExercise() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        return exercise;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    public String getWeight() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        return weight;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    public String toString() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        return String.format(\" %s %s kg on (%s)\", exercise, weight, getDate());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":2,"kinneo":24}},{"path":"src/main/java/seedu/healthbud/log/Water.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"public class Water extends Log {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"    private String amount;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"    private String time;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    public Water(String amount, String date, String time){","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"water\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"    public String getAmount() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"        return amount;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"    public String getTime() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"        return time;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"    public String toGlass(String amount) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"        double ml \u003d Double.parseDouble(amount.trim());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"        double glasses \u003d ml / 250.0;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"        return String.format(\"%.1f glass\", glasses);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"    public String toString() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"        return String.format(\"%s of water on (%s) at %s\", toGlass(amount), getDate(), time);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":13,"keanneeee":20}},{"path":"src/main/java/seedu/healthbud/log/Workout.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"public class Workout extends Log {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"    private String name;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    private String reps;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    private String sets;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"    private String weight;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    public Workout(String name, String reps, String sets, String date, String weight) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"workout\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"        this.reps \u003d reps;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"    public String getName() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"        return name;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"    public String getReps() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"        return reps;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"    public String getSets() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"        return sets;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"    public String getWeight() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"        return weight;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"    public String toString() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"        return String.format(\"%s (%s sets of %s kg for %s reps) on %s\", name, sets,weight ,reps, getDate());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":29,"kinneo":2,"Travissssz":8}},{"path":"src/main/java/seedu/healthbud/parser/BMIParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.input.BMICommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidBMIException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"public class BMIParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    public static BMICommand parse(String input) throws HealthBudException, InvalidBMIException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Input should not be null or empty\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"        if (!input.contains(\"/h\") || !input.contains(\"/w\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"            throw new InvalidBMIException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\"/\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"            throw new InvalidBMIException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"            double weight \u003d Double.parseDouble(parts[1].substring(1).trim()); // after \u0027w\u0027","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"            double height \u003d Double.parseDouble(parts[2].substring(1).trim()); // after \u0027h\u0027","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"            if (weight \u003c\u003d 0 || height \u003c\u003d 0) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"                throw new HealthBudException(\"Weight and height must be greater than zero.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"            return new BMICommand(input, weight, height);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"            throw new HealthBudException(\"Invalid number format for weight or height.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":33}},{"path":"src/main/java/seedu/healthbud/parser/ClearParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.ClearCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidClearException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"public class ClearParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    public static ClearCommand parse(String input, LogList pbLogs, LogList mealLogs,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"                                     LogList workoutLogs, LogList waterLogs, LogList cardioLogs) throws","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"                                    InvalidClearException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"            throw new InvalidClearException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        String logType \u003d parts[1].toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        switch (logType) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        case \"pb\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"            return new ClearCommand(input, pbLogs);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        case \"meal\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"            return new ClearCommand(input, mealLogs);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        case \"workout\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"            return new ClearCommand(input, workoutLogs);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        case \"water\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"            return new ClearCommand(input, waterLogs);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"            return new ClearCommand(input, cardioLogs);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"            throw new InvalidClearException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":6,"kinneo":30}},{"path":"src/main/java/seedu/healthbud/parser/DateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"import java.text.ParseException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"import java.util.Date;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"import java.util.List;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Travissssz"},"content":"public class DateParser {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Travissssz"},"content":"    private static final String OUTPUT_FORMAT \u003d \"dd MMM yyyy\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"    // List of possible input date formats to try","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"    private static final List\u003cString\u003e INPUT_FORMATS \u003d Arrays.asList(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"            \"yyyy-MM-dd\",       // ISO format (e.g., 2023-12-25)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"            \"MM/dd/yyyy\",      // US format (e.g., 12/25/2023)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"            \"dd/MM/yyyy\",      // European format (e.g., 25/12/2023)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Travissssz"},"content":"            \"MMM dd, yyyy\",    // (e.g., Dec 25, 2023)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"            \"MMMM dd, yyyy\",   // (e.g., December 25, 2023)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"            \"yyyyMMdd\",        // (e.g., 20231225)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"            \"dd-MM-yyyy\",      // (e.g., 25-12-2023)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"            \"EEE, MMM dd, yyyy\", // (e.g., Mon, Dec 25, 2023)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Travissssz"},"content":"            \"yyyy/MM/dd\",      // (e.g., 2023/12/25)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"            \"MM-dd-yyyy\",      // (e.g., 12-25-2023)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"            \"MMM dd yyyy\"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"    );","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"    public static String formatDate(String inputDate) throws InvalidDateFormatException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"        if (inputDate \u003d\u003d null || inputDate.trim().isEmpty()) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"            throw new InvalidDateFormatException(inputDate,INPUT_FORMATS);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"        // Try each format until one works","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"        for (String format : INPUT_FORMATS) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"            try {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"                SimpleDateFormat sdf \u003d new SimpleDateFormat(format);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"                sdf.setLenient(false); // Strict parsing","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"                Date date \u003d sdf.parse(inputDate);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"                // Format to the desired output","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"                SimpleDateFormat outputSdf \u003d new SimpleDateFormat(OUTPUT_FORMAT);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"                return outputSdf.format(date);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"                // Try next format","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"            }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"        throw new InvalidDateFormatException(inputDate,INPUT_FORMATS);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"kinneo":1,"Travissssz":52}},{"path":"src/main/java/seedu/healthbud/parser/DeleteParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.DeleteCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidDeleteException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"public class DeleteParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    public static DeleteCommand parse(String input, LogList mealLogs, LogList workoutLogs, LogList waterLogs,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"                                      LogList pbLogs, LogList cardioLogs)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"            throws InvalidDeleteException, HealthBudException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        String logType \u003d parts[1].toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        int index;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"            index \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"            throw new HealthBudException(\"Insert a valid task number\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        switch (logType) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        case \"meal\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"            return new DeleteCommand(mealLogs, input, index);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        case \"workout\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"            return new DeleteCommand(workoutLogs, input, index);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        case \"water\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"            return new DeleteCommand(waterLogs, input, index);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"        case \"pb\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"            return new DeleteCommand(pbLogs, input, index);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"            return new DeleteCommand(cardioLogs, input, index);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":43}},{"path":"src/main/java/seedu/healthbud/parser/ListParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.ListCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidListException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"public class ListParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    public static ListCommand parse(String input, LogList mealLogs, LogList workoutLogs,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"                                    LogList waterLogs, LogList pbLogs, LogList cardioLogs)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"            throws InvalidListException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"            throw new InvalidListException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        String logType \u003d parts[1].toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        switch (logType) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        case \"meal\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"            return new ListCommand(input, mealLogs);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        case \"workout\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"            return new ListCommand(input, workoutLogs);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        case \"water\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"            return new ListCommand(input, waterLogs);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        case \"pb\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"            return new ListCommand(input, pbLogs);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"            return new ListCommand(input, cardioLogs);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"            throw new InvalidListException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":35}},{"path":"src/main/java/seedu/healthbud/parser/ParserManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.addcommandparser.AddParser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"public class ParserManager {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    public static final String NEW_LINE \u003d \"\\n     \";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    public static boolean handleInput(LogList goalLogs, LogList pbLogs, LogList mealLogs, LogList workoutLogs,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"                                      LogList waterLogs, LogList cardioLogs, String input) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"            Command command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"            switch (parts[0]) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"            case \"bye\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"                return Ui.printGoodbye();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"            case \"add\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"                command \u003d AddParser.parse(parts[1], mealLogs, waterLogs, cardioLogs, pbLogs,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"                        workoutLogs, goalLogs, input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"            case \"help\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"                Ui.printHelp();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"                return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"            case \"list\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"                command \u003d ListParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"            case \"recommend\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"                command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"            case \"bmi\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"                command \u003d BMIParser.parse(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"            case \"delete\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"                command \u003d DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"            case \"clear\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"                command \u003d ClearParser.parse(input, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"            case \"sum\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"                command \u003d SumParser.parse(input, mealLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"            case \"status\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"                command \u003d StatusParser.parse(input, goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"            case \"search\":","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"                command \u003d SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"                break;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"keanneeee"},"content":"            case \"view\":","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"keanneeee"},"content":"                ViewGoalsParser.parse(input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"keanneeee"},"content":"                return true;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"keanneeee"},"content":"            case \"track\":","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"keanneeee"},"content":"                command \u003d TrackGoalParser.parse(input, goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"keanneeee"},"content":"                break;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"            default:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"                Ui.printUnknownCommand();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"                return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"            command.execute();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"            return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Ahmish15"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"        return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":4,"keanneeee":6,"kinneo":53,"Ahmish15":5,"Travissssz":1}},{"path":"src/main/java/seedu/healthbud/parser/ParserParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"public class ParserParameters {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    public static Map\u003cString, String\u003e parseParameters(String input) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"        String[] tokens \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Travissssz"},"content":"        String currentKey \u003d null;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Travissssz"},"content":"        StringBuilder currentValue \u003d new StringBuilder();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"        for (String token : tokens) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"            if (token.startsWith(\"/\")) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"                // Save previous key-value pair","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"                if (currentKey !\u003d null) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"                    params.put(currentKey, currentValue.toString().trim());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"                    currentValue.setLength(0);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Travissssz"},"content":"                }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"                currentKey \u003d token.substring(1); // Remove the \u0027/\u0027","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"            } else if (currentKey !\u003d null) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"                if (currentValue.length() \u003e 0) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"                    currentValue.append(\" \");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Travissssz"},"content":"                }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"                currentValue.append(token);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"            }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"        // Add the last parameter","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"        if (currentKey !\u003d null) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"            params.put(currentKey, currentValue.toString().trim());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"        return params;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":11,"kinneo":1,"Travissssz":24}},{"path":"src/main/java/seedu/healthbud/parser/RecommendParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.input.RecommendCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidRecommendException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"public class RecommendParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    private static final String NEW_LINE \u003d \"\\n     \";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    public static RecommendCommand parse(String input) throws InvalidRecommendException, HealthBudException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"            throw new InvalidRecommendException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        String muscle \u003d parts[1].toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        switch (muscle) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        case \"chest\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended chest exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"                    + \"1. Incline Smith Machine Bench Press\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"                    + \"2. Dumbbell Chest Press\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"                    + \"3. Cable Chest Flys\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        case \"back\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended back exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"                    + \"1. Pull-Ups\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"                    + \"2. Barbell Bent-over Rows\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"                    + \"3. Lat Pulldown\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        case \"biceps\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended biceps exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"                    + \"1. Barbell Bicep Curls\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"                    + \"2. Hammer Curls\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"                    + \"3. Cable Curls\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        case \"triceps\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended triceps exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"                    + \"1. Close-Grip Bench Press\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"                    + \"2. Tricep Dips\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"                    + \"3. Skull Crushers\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        case \"legs\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended leg exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"                    + \"1. Barbell Squats\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"                    + \"2. Leg Extension \u0026 Leg Curls\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"                    + \"3. Leg Press\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        case \"shoulders\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended shoulder exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"                    + \"1. Overhead Dumbell Shoulder Press (Front Delt)\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"                    + \"2. Lateral Raises (Side Delt)\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"                    + \"3. Rear Delt Flys (Rear Delt)\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        case \"abs\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended ab exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"                    + \"1. Hanging Leg Raises\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"                    + \"2. Russian Twists\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"                    + \"3. Planks\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"        case \"forearms\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended forearm exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"                    + \"1. Wrist Curls\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"                    + \"2. Reverse Wrist Curls\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"                    + \"3. Farmer\u0027s Walk\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"        case \"help\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are the list of muscle groups:\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"                    + \"1. chest\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"                    + \"2. back\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"                    + \"3. biceps\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"                    + \"4. triceps\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"                    + \"5. legs\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"                    + \"6. shoulders\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"                    + \"7. abs\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"                    + \"8. forearms\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"            throw new HealthBudException(\"I don\u0027t recognize that muscle group.\" + NEW_LINE","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"                    + \"Type \u0027recommend help\u0027 to see the list of muscle groups.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":84}},{"path":"src/main/java/seedu/healthbud/parser/SearchParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.SearchCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.exception.InvalidSearchException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"public class SearchParser {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"    public static SearchCommand parse(String input,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"                                      LogList mealLogs, LogList workoutLogs,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"                                      LogList waterLogs, LogList pbLogs, LogList cardioLogs)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"            throws InvalidSearchException, InvalidDateFormatException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidSearchException(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"                    \"Invalid search command - Try search \u003clogType\u003e /d \u003cdate\u003e OR search \u003clogType\u003e /k \u003ckeyword\u003e\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"        // Remove \"search\" keyword and trim the remainder.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"        String paramsString \u003d input.replaceFirst(\"(?i)^search\", \"\").trim();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"        if (paramsString.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidSearchException(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"                    \"Invalid search command - Try search \u003clogType\u003e /d \u003cdate\u003e OR search \u003clogType\u003e /k \u003ckeyword\u003e\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"        // Expected format: \u003clogType\u003e /d \u003cdate\u003e OR \u003clogType\u003e /k \u003ckeyword\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"        String[] parts \u003d paramsString.split(\"\\\\s+\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidSearchException(\"Invalid search command - not enough parameters.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"        String logType \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"        String flag \u003d parts[1].toLowerCase();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"        String parameter \u003d parts[2];","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"        String date \u003d null;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"        String keyword \u003d null;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"        if (flag.equals(\"/d\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"            date \u003d DateParser.formatDate(parameter); // may throw InvalidDateFormatException","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"        } else if (flag.equals(\"/k\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"            keyword \u003d parameter;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidSearchException(\"Invalid parameter flag. Use /d for date or /k for keyword.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"        // Ensure exactly one of date or keyword is provided.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"        if ((date !\u003d null \u0026\u0026 keyword !\u003d null) || (date \u003d\u003d null \u0026\u0026 keyword \u003d\u003d null)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidSearchException(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"                    \"Invalid search command - Provide exactly one of /d \u003cdate\u003e or /k \u003ckeyword\u003e.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"        // Select the appropriate LogList based on logType.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"        LogList targetLogList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"        switch (logType) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"        case \"meal\":","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"            targetLogList \u003d mealLogs;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"            break;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"        case \"workout\":","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"            targetLogList \u003d workoutLogs;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"            break;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"        case \"water\":","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"            targetLogList \u003d waterLogs;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"            break;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"        case \"pb\":","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Ahmish15"},"content":"            targetLogList \u003d pbLogs;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Ahmish15"},"content":"            break;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Ahmish15"},"content":"            targetLogList \u003d cardioLogs;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"            break;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Ahmish15"},"content":"        default:","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidSearchException(\"Invalid log type. Valid types: meal, workout, water, pb, cardio.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Ahmish15"},"content":"        return new SearchCommand(input, targetLogList, date, keyword);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"Ahmish15":74}},{"path":"src/main/java/seedu/healthbud/parser/StatusParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.multilog.StatusCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidStatusException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"public class StatusParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    private static String currentStatus \u003d \"neutral\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    public static StatusCommand parse(String input, LogList goalLogs, LogList pbLogs, LogList mealLogs,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"                                      LogList workoutLogs, LogList waterLogs, LogList cardioLogs)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"            throws InvalidStatusException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"            throw new InvalidStatusException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        String action \u003d parts[1].toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        String arg \u003d parts[2].toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        String message;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        switch (action) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        case \"change\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"            if (!arg.equals(\"cutting\") \u0026\u0026 !arg.equals(\"bulking\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"                throw new InvalidStatusException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"            currentStatus \u003d arg;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"            message \u003d \"Status updated to: \" + currentStatus;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"            break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        case \"report\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"            int caloriesEaten \u003d mealLogs.getCaloriesSum(arg);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"            int caloriesBurned \u003d cardioLogs.getCardioSum(arg);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"            int netCalories \u003d caloriesEaten - caloriesBurned;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"            sb.append(\"Current Status: \").append(currentStatus).append(\"\\n\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"            if (currentStatus.equals(\"bulking\") \u0026\u0026 netCalories \u003e 0) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"                sb.append(\"You are on track for bulking! Net calories: \").append(netCalories);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"            } else if (currentStatus.equals(\"cutting\") \u0026\u0026 netCalories \u003c 0) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"                sb.append(\"You are on track for cutting! Net calories: \").append(netCalories);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"            } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"                sb.append(\"Your intake does not align with your goal. Net calories: \").append(netCalories);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"            message \u003d sb.toString();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"            break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"            throw new InvalidStatusException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        return new StatusCommand(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input, message);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":58}},{"path":"src/main/java/seedu/healthbud/parser/SumParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.SumCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidSumException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"public class SumParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    public static SumCommand parse(String input, LogList mealLogs, LogList waterLogs, LogList cardioLogs) throws","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"            InvalidSumException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 4 || !parts[2].equals(\"/d\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"            throw new InvalidSumException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        String type \u003d parts[1].toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        String date \u003d parts[3];","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"        String parseDate \u003d DateParser.formatDate(date);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        switch (type) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        case \"cal\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"            return new SumCommand(input, mealLogs, type, parseDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        case \"vol\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"            return new SumCommand(input, waterLogs, type, parseDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"            return new SumCommand(input, cardioLogs, type, parseDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"            throw new InvalidSumException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"keanneeee":6,"kinneo":26}},{"path":"src/main/java/seedu/healthbud/parser/TrackGoalParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.command.multilog.TrackGoalCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidTrackException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"public class TrackGoalParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"    public static TrackGoalCommand parse(String input, LogList goalLogs, LogList pbLogs, LogList mealLogs,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"                                         LogList workoutLogs, LogList waterLogs, LogList cardioLogs)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"            throws InvalidTrackException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"        if (parts.length \u003c 4 || !parts[2].equals(\"/d\")) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"            throw new InvalidTrackException();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"        String date \u003d parts[3];","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"        return new TrackGoalCommand(date, goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"keanneeee":25}},{"path":"src/main/java/seedu/healthbud/parser/ViewGoalsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Goals;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"public class ViewGoalsParser {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"    Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"    public static void parse(String input){","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"        Ui.printMessage(\"Welcome to goal setting! Here are your current goals: \\n\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"                + Goals.getInstance().toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"        Ui.printMessage(\"What goal would you like to add today?\\n\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"keanneeee":16}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddCardioParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddCardioCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidCardioException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"public class AddCardioParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"    public static AddCardioCommand parse(LogList cardioLogs, String input)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"            throws InvalidCardioException, InvalidDateFormatException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"            throw new InvalidCardioException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"        assert input !\u003d null : \"Invalid cardio input!\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        if (!input.contains(\"/s \") || !input.contains(\"/i \") || !input.contains(\"/t \") || !input.contains(\"/d \")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"            throw new InvalidCardioException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"        // Remove command prefix and trim","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"        input \u003d input.replaceFirst(\"add cardio\", \"\").trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"            throw new InvalidCardioException();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"        int firstParamIndex \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"        String cardioName;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"        if (firstParamIndex \u003e 0) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"            cardioName \u003d input.substring(0, firstParamIndex).trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"        } else {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"            cardioName \u003d \"\";  // No name provided before parameters","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input.substring(firstParamIndex));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"        // Validate required parameters","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"        if (cardioName.isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"s\") || param.get(\"s\").isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"i\") || param.get(\"i\").isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"t\") || param.get(\"t\").isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"d\") || param.get(\"d\").isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"            throw new InvalidCardioException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"        if (!param.get(\"s\").matches(\"\\\\d+(\\\\.\\\\d+)?\") ||","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"                !param.get(\"i\").matches(\"\\\\d+(\\\\.\\\\d+)?\") ||","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"                !param.get(\"t\").matches(\"\\\\d+(\\\\.\\\\d+)?\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"            throw new InvalidCardioException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":"        // Parse and format the date","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Travissssz"},"content":"        String formattedDate \u003d DateParser.formatDate(param.get(\"d\"));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Travissssz"},"content":"        return new AddCardioCommand(cardioLogs, input, cardioName,","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Travissssz"},"content":"                param.get(\"s\"), param.get(\"i\"), param.get(\"t\"),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Travissssz"},"content":"                formattedDate);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":27,"Ahmish15":4,"Travissssz":34}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddGoalParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.command.singlelog.AddGoalCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidGoalException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Goals;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"public class AddGoalParser {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    static Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"    private static String addMissingParameters(String input) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"        if (!input.contains(\"/cal\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"            input +\u003d \" /cal \" + Goals.getInstance().getDailyCalorieGoal();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"        if (!input.contains(\"/w\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"            input +\u003d \" /w \" + Goals.getInstance().getDailyWaterGoal();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"        if (!input.contains(\"/kg\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"            input +\u003d \" /kg \" + Goals.getInstance().getWeightGoal();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"        return input;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"    public static AddGoalCommand parse(LogList goalLogs, String input) throws InvalidGoalException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"        if (parts.length \u003c\u003d  2) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"            throw new InvalidGoalException();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"        input \u003d addMissingParameters(input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"        input \u003d input.substring(\"add goal\".length()).trim();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"        if (!param.get(\"cal\").matches(\"\\\\d+\") || !param.get(\"w\").matches(\"\\\\d+\")","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"                || !param.get(\"kg\").matches(\"\\\\d+\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"            throw new InvalidGoalException();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"        return new AddGoalCommand(goalLogs, input, param.get(\"w\"), param.get(\"cal\"), param.get(\"kg\"));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"keanneeee":46}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddMealParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddMealCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidMealException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"public class AddMealParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"    //@@author Ahmish15","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"    public static AddMealCommand parse(LogList mealLogs, String input)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"            throws InvalidMealException, InvalidDateFormatException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidMealException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"        assert input !\u003d null : \"Invalid meal input!\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"        if (!input.contains(\"/cal \") || !input.contains(\"/d \") || !input.contains(\"/t \")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidMealException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"        input \u003d input.replaceFirst(\"add meal\", \"\").trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidMealException();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"        int firstParamIndex \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"        String name;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"        if (firstParamIndex \u003e 0) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"            name \u003d input.substring(0, firstParamIndex).trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"        } else {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"            name \u003d \"\";  // No name provided before parameters","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input.substring(firstParamIndex));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"        if (name.isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"                !param.containsKey(\"cal\") || param.get(\"cal\").isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"                !param.containsKey(\"d\") || param.get(\"d\").isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"                !param.containsKey(\"t\") || param.get(\"t\").isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidMealException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"        if (!param.get(\"cal\").matches(\"\\\\d+\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidMealException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"        String formattedDate \u003d DateParser.formatDate(param.get(\"d\"));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"        return new AddMealCommand(mealLogs, input, name, param.get(\"cal\"), formattedDate, param.get(\"t\"));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":8,"Ahmish15":51,"Travissssz":1}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidCardioException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidGoalException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidLogException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidMealException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidPersonalBestException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidWaterException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidWorkoutException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"public class AddParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    public static Command parse(String subCommand, LogList mealLogs, LogList waterLogs, LogList cardioLogs,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"                                LogList pbLogs, LogList workoutLogs, LogList goalLogs, String input) throws","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"                                InvalidLogException, InvalidCardioException, InvalidMealException,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"                                InvalidPersonalBestException, InvalidWaterException, InvalidWorkoutException,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"                                InvalidDateFormatException, InvalidGoalException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        switch (subCommand) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        case \"meal\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"            return AddMealParser.parse(mealLogs, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        case \"water\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"            return AddWaterParser.parse(waterLogs, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"            return AddCardioParser.parse(cardioLogs, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        case \"pb\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"            return AddPersonalBestParser.parse(pbLogs, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        case \"workout\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"            return AddWorkoutParser.parse(workoutLogs, input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"        case \"goal\":","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"            return AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"            throw new InvalidLogException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"keanneeee":5,"kinneo":32,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddPersonalBestParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddPersonalBestCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidPersonalBestException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"public class AddPersonalBestParser {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    public static AddPersonalBestCommand parse(LogList pbLogs, String input)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"            throws InvalidPersonalBestException, InvalidDateFormatException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"            throw new InvalidPersonalBestException();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"        assert input !\u003d null : \"Invalid personal best input!\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        if (!input.contains(\"/w \") || !input.contains(\"/d \")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"            throw new InvalidPersonalBestException();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"        input \u003d input.replaceFirst(\"add pb\", \"\").trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"            throw new InvalidPersonalBestException();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"        int firstParamIndex \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"        String name;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"        if (firstParamIndex \u003e 0) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"            name \u003d input.substring(0, firstParamIndex).trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"        } else {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"            name \u003d \"\";  // No name provided before parameters","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input.substring(firstParamIndex));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"        if (name.isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"w\") || param.get(\"w\").isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"d\") || param.get(\"d\").isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"            throw new InvalidPersonalBestException();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        if (!param.get(\"w\").matches(\"\\\\d+\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"            throw new InvalidPersonalBestException();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"        String formattedDate \u003d DateParser.formatDate(param.get(\"d\"));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        return new AddPersonalBestCommand(pbLogs, input, name,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"                param.get(\"w\"), formattedDate);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":32,"Ahmish15":4,"Travissssz":20}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddWaterParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddWaterCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidWaterException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"public class AddWaterParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"    public static AddWaterCommand parse(LogList waterLogs, String input)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"            throws InvalidWaterException, InvalidDateFormatException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"            throw new InvalidWaterException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Invalid water input!\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        assert !input.trim().isEmpty() : \"Input should not be empty!\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        if (!input.contains(\"/ml \") || !input.contains(\"/d \") || !input.contains(\"/t \")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"            throw new InvalidWaterException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"        input \u003d input.replaceFirst(\"add water\", \"\").trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"            throw new InvalidWaterException();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"        int firstParamIndex \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"        String waterInput;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"        if (firstParamIndex \u003e 0) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"            waterInput \u003d input.substring(0, firstParamIndex).trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"        } else {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"            waterInput \u003d \"\";  // No name provided before parameters","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input.substring(firstParamIndex));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"        if (!param.containsKey(\"ml\") || param.get(\"ml\").isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"d\") || param.get(\"d\").isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"t\") || param.get(\"t\").isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"            throw new InvalidWaterException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        if (!param.get(\"ml\").matches(\"\\\\d+\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"            throw new InvalidWaterException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"        String formattedDate \u003d DateParser.formatDate(param.get(\"d\"));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Travissssz"},"content":"        return new AddWaterCommand(waterLogs, waterInput,","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"                param.get(\"ml\"), formattedDate, param.get(\"t\"));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":31,"Ahmish15":3,"Travissssz":23}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddWorkoutParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddWorkoutCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidWorkoutException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"public class AddWorkoutParser {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"    //@@author Ahmish15","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"    public static AddWorkoutCommand parse(LogList workoutLogs, String input)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"            throws InvalidWorkoutException, InvalidDateFormatException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidWorkoutException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"        assert input !\u003d null : \"Invalid workout input!\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"        if (!input.contains(\"/r \") || !input.contains(\"/s \") || !input.contains(\"/d \") || !input.contains(\"/w \")) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidWorkoutException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"        // Remove command prefix and trim","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"        input \u003d input.replaceFirst(\"add workout\", \"\").trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidWorkoutException();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"        //@@author Travissssz","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"        int firstParamIndex \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"        String workoutName;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"        if (firstParamIndex \u003e 0) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"            workoutName \u003d input.substring(0, firstParamIndex).trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"        } else {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"            workoutName \u003d \"\";  // No name provided before parameters","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input.substring(firstParamIndex));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"        // Validate required parameters","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"        if (workoutName.isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"r\") || param.get(\"r\").isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"s\") || param.get(\"s\").isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"d\") || param.get(\"d\").isEmpty() ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"w\") || param.get(\"w\").isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"            throw new InvalidWorkoutException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"        // Validate numeric parameters","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"        if (!param.get(\"r\").matches(\"\\\\d+\") || !param.get(\"s\").matches(\"\\\\d+\") ||","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"                !param.get(\"w\").matches(\"\\\\d+(\\\\.\\\\d+)?\")) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"            throw new InvalidWorkoutException();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"        // Parse and format the date","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":"        String formattedDate \u003d DateParser.formatDate(param.get(\"d\"));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Travissssz"},"content":"        return new AddWorkoutCommand(workoutLogs, input, workoutName,","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Travissssz"},"content":"                param.get(\"r\"), param.get(\"s\"), formattedDate, param.get(\"w\"));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":8,"Ahmish15":21,"Travissssz":33}},{"path":"src/main/java/seedu/healthbud/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.storage;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Workout;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Water;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Log;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.PersonalBest;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Cardio;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Goals;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.List;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"public class Storage {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"    public static final String DATA_DIRECTORY \u003d \"data\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"    public static final String DATA_FILE \u003d \"HealthBud.txt\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"    public static final Path DATA_PATH \u003d Paths.get(DATA_DIRECTORY, DATA_FILE);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     * Loads logs from the storage file into the provided LogLists.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * If the file or directory does not exist, they are created.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs the LogList to load meal logs into","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList to load workout logs into","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs the LogList to load water logs into","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    public static void loadLogs(LogList mealLogs, LogList workoutLogs, LogList waterLogs,","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"                                LogList pbLogs, LogList cardioLogs, LogList goalLogs) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"            Files.createDirectories(Paths.get(DATA_DIRECTORY));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"            if (!Files.exists(DATA_PATH)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"                Files.createFile(DATA_PATH);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"                System.out.println(\"Created new text file in \" +","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"                        DATA_PATH.toString().replace(\"\\\\\", \"/\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"                return;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(DATA_PATH);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"                try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"                    Log log \u003d parseStringToLog(line);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"                    // Distribute log based on its type","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"                    if (log instanceof Meal) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"                        mealLogs.loadLog(log);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"                    } else if (log instanceof Workout) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"                        workoutLogs.loadLog(log);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"                    } else if (log instanceof Water) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"                        waterLogs.loadLog(log);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"                    } else if (log instanceof PersonalBest){","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"                        pbLogs.loadLog(log);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"                    } else if (log instanceof Cardio){","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"                        cardioLogs.loadLog(log);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"                    } else if (log instanceof Goals){","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"                        goalLogs.loadLog(log);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"                    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"                    System.out.println(\"Warning: Ignoring invalid log in file: \" + line);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"                }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"            System.out.println(\"Warning: Error loading logs from file. Starting with empty lists.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonlobo21"},"content":"    public static Log parseStringToLog(String line) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonlobo21"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"            throw new IllegalArgumentException(\"Invalid log format\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonlobo21"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jasonlobo21"},"content":"        switch (type) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jasonlobo21"},"content":"        case \"M\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jasonlobo21"},"content":"            if (parts.length !\u003d 5) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jasonlobo21"},"content":"                throw new IllegalArgumentException(\"Invalid meal format\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonlobo21"},"content":"            return new Meal(parts[1], parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jasonlobo21"},"content":"        case \"WO\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Travissssz"},"content":"            if (parts.length !\u003d 6) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jasonlobo21"},"content":"                throw new IllegalArgumentException(\"Invalid workout format\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"            return new Workout(parts[1], parts[2], parts[3], parts[4], parts[5]);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jasonlobo21"},"content":"        case \"WA\":","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jasonlobo21"},"content":"            if (parts.length !\u003d 4) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jasonlobo21"},"content":"                throw new IllegalArgumentException(\"Invalid water format\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jasonlobo21"},"content":"            return new Water(parts[1], parts[2], parts[3]);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        case \"P\":","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"            if (parts.length !\u003d 4) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"                throw new IllegalArgumentException(\"Invalid pb format\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"            return new PersonalBest(parts[1], parts[2], parts[3]);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"        case \"C\":","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"            if (parts.length !\u003d 6) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"                throw new IllegalArgumentException(\"Invalid cardio format\");","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"            return new Cardio(parts[1], parts[2], parts[3], parts[4], parts[5]);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"        case \"G\":","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"            if (parts.length !\u003d 4) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"                throw new IllegalArgumentException(\"Invalid goal format\");","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"            Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"keanneeee"},"content":"            goals.setDailyWaterGoal(parts[1]);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"keanneeee"},"content":"            goals.setDailyCalorieGoal(parts[2]);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"            goals.setWeightGoal(parts[3]);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"            return goals;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jasonlobo21"},"content":"        default:","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jasonlobo21"},"content":"            throw new IllegalArgumentException(\"Unknown log type: \" + type);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jasonlobo21"},"content":"    public static void appendLogToFile(Log log) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jasonlobo21"},"content":"        try (FileWriter fw \u003d new FileWriter(DATA_PATH.toString(), true)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jasonlobo21"},"content":"            fw.write(parseLogToString(log) + System.lineSeparator());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jasonlobo21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jasonlobo21"},"content":"            System.out.println(\"Error appending log to file: \" + e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jasonlobo21"},"content":"    public static void rewriteLogsToFile(LogList logs) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jasonlobo21"},"content":"        try (FileWriter fw \u003d new FileWriter(DATA_PATH.toString())) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jasonlobo21"},"content":"            for (int i \u003d 0; i \u003c logs.getSize(); i++) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jasonlobo21"},"content":"                fw.write(parseLogToString(logs.getLog(i)) + System.lineSeparator());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jasonlobo21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jasonlobo21"},"content":"            System.out.println(\"Error rewriting logs to file: \" + e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jasonlobo21"},"content":"    public static String parseLogToString(Log log) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jasonlobo21"},"content":"        if (log instanceof Meal) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jasonlobo21"},"content":"            Meal meal \u003d (Meal) log;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jasonlobo21"},"content":"            return \"M | \" + meal.getName() + \" | \" + meal.getCalories()","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jasonlobo21"},"content":"                    + \" | \" + meal.getDate() + \" | \" + meal.getTime();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"        } else if (log instanceof Workout) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"            Workout workout \u003d (Workout) log;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Travissssz"},"content":"            return \"WO | \" + workout.getName() + \" | \" + workout.getReps()","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Travissssz"},"content":"                    + \" | \" + workout.getSets() + \" | \" + workout.getDate()","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Travissssz"},"content":"                    + \" | \" + workout.getWeight();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jasonlobo21"},"content":"        } else if (log instanceof Water) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jasonlobo21"},"content":"            Water water \u003d (Water) log;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jasonlobo21"},"content":"            return \"WA | \" + water.getAmount() + \" | \" + water.getDate() + \" | \" + water.getTime();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kinneo"},"content":"        } else if (log instanceof PersonalBest) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"            PersonalBest pb \u003d (PersonalBest) log;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"            return \"P | \" + pb.getExercise() + \" | \" + pb.getWeight() + \" | \" + pb.getDate();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"        } else if (log instanceof Cardio) {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"            Cardio cardio \u003d (Cardio) log;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"            return \"C | \" + cardio.getName() + \" | \" + cardio.getDuration() + \" | \" + cardio.getIncline() +","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"                    \" | \" + cardio.getSpeed() + \" | \" + cardio.getDate();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kinneo"},"content":"        } else if (log instanceof Goals) {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kinneo"},"content":"            Goals goals \u003d (Goals) log;","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"keanneeee"},"content":"            return \"G | \" + goals.getDailyWaterGoal() + \" | \" + goals.getDailyCalorieGoal()","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kinneo"},"content":"                    + \" | \" + goals.getWeightGoal();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Jasonlobo21"},"content":"        }else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Jasonlobo21"},"content":"            throw new IllegalArgumentException(\"Unknown log type\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":115,"keanneeee":3,"kinneo":43,"Travissssz":4}},{"path":"src/test/java/seedu/healthbud/command/forReferenceCanDeleteLater/JUnitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"/*","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.inputonly.RecommendCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.command.inputonly.BMICommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.command.onelogandinput.ListCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidRecommendException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.exception.InvalidBMIException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.RecommendParser;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.BMIParser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"class JUnitTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Recommend Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_correctInput_expectSuccess() throws InvalidRecommendException, HealthBudException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend biceps\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended biceps exercises:\\n     \"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"                + \"1. Barbell Bicep Curls\\n     \"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"                + \"2. Hammer Curls\\n     \"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"                + \"3. Cable Curls\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_invalidMuscle_expectFailure() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend toes\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"        assertThrows(HealthBudException.class, () -\u003e RecommendParser.parse(input));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_missingInput_expectFailure() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidRecommendException.class, () -\u003e RecommendParser.parse(input));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BMI Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"    void parse_validInput_expectSuccess() throws HealthBudException, InvalidBMIException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 70 /h 1.75\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"        BMICommand command \u003d BMIParser.parse(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"        assertNotNull(command, \"BMICommand should not be null for valid input\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Ahmish15"},"content":"    void parse_withoutHeightOrWeight_expectInvalidBmiException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Ahmish15"},"content":"    void parse_tooFewParts_expectInvalidBmiException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi 70 /h\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Ahmish15"},"content":"    void parse_invalidNumberFormat_expectInvalidBmiException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi seventy /h 1.75\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ahmish15"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ListTests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ahmish15"},"content":"    void listCommand_creation_notNull() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ahmish15"},"content":"        mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Ahmish15"},"content":"        // Basic test to ensure the command is created properly","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Ahmish15"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list meal\", mealLogs);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Ahmish15"},"content":"        assertNotNull(listCommand, \"ListCommand object should not be null after creation.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d till here","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Water Log Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"    void waterLog_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"            InvalidCardioException {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add water /ml 1000 /d 12-01-25 /t 8am\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"keanneeee"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, waterLogs.getSize());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"1000\", ((Water) waterLogs.getLog(0)).getAmount());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"12-01-25\", (waterLogs.getLog(0)).getDate());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"8am\", ((Water) waterLogs.getLog(0)).getTime());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"    void waterLog_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add water /ml 500 /d 12-01-25\"; // missing /t","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e new AddLogCommand().execute(","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"keanneeee"},"content":"                goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Workout Log Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"    void workoutLog_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"            InvalidCardioException {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add workout Pushups /r 20 /s 3 /d 12-01-25\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"keanneeee"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, workoutLogs.getSize());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"Pushups\", ((WorkOUT) workoutLogs.getLog(0)).getName());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"20\", ((WorkOUT) workoutLogs.getLog(0)).getReps());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"3\", ((WorkOUT) workoutLogs.getLog(0)).getSets());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"12-01-25\", (workoutLogs.getLog(0)).getDate());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kinneo"},"content":"    void workoutLog_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add workout Pushups /r 20 /d 12-01-25\"; // missing /s sets","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e new AddLogCommand().execute(","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"keanneeee"},"content":"                goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Cardio Log Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kinneo"},"content":"    void cardioLog_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kinneo"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kinneo"},"content":"            InvalidCardioException {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add cardio treadmill /s 6 /i 2 /t 20 /d 12-01-25\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"keanneeee"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, cardioLogs.getSize());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"treadmill\", ((Cardio) cardioLogs.getLog(0)).getName());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"6\", ((Cardio) cardioLogs.getLog(0)).getSpeed());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2\", ((Cardio) cardioLogs.getLog(0)).getIncline());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"20\", ((Cardio) cardioLogs.getLog(0)).getDuration());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"12-01-25\", (cardioLogs.getLog(0)).getDate());","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kinneo"},"content":"    void cardioLog_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add cardio treadmill /s 6 /i 2 /d 12-01-25\"; // missing /t","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e new AddLogCommand().execute(","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"keanneeee"},"content":"                goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PB Log Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Recommend Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_correctInput_expectSuccess() throws InvalidRecommendException, HealthBudException{","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d new RecommendCommand();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend biceps\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended biceps exercises:\\n     \"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"kinneo"},"content":"                + \"1. Barbell Bicep Curls\\n     \"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"kinneo"},"content":"                + \"2. Hammer Curls\\n     \"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"kinneo"},"content":"                + \"3. Cable Curls\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getRecommendation(input));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_wrongInput_expectFailure(){","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidRecommendException.class, () -\u003e new RecommendCommand().execute(goalLogs, pbLogs, mealLogs,","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"keanneeee"},"content":"                workoutLogs, waterLogs, cardioLogs,  input));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Ahmish15"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BMI Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"kinneo"},"content":"    void calculateBmi_validInput_expectSuccess() throws Exception {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"keanneeee"},"content":"        // Capture printed output.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w 70 /h 1.78\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"kinneo"},"content":"        BMICommand command \u003d new BMICommand(input);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"keanneeee"},"content":"        command.execute( new LogList(), new LogList(), new LogList(), new LogList(),","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"keanneeee"},"content":"                new LogList(), new LogList(), input);","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"kinneo"},"content":"        // BMI \u003d 70 / (1.78^2) \u003d 22.09","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Your BMI is: 22.09\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"kinneo"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"kinneo"},"content":"    void calculateBmi_negativeNumbers_expectFailure() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w -68 /h 1.78\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"kinneo"},"content":"        assertThrows(HealthBudException.class, () -\u003e new BMICommand(input));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"kinneo"},"content":"    void calculateBmi_missingWeight_expectFailure() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /h 1.78\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e new BMICommand(input));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"kinneo"},"content":"    void calculateBmi_missingHeight_expectFailure() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w 70\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e new BMICommand(input));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"kinneo"},"content":"    void calculateBmi_invalidNumberFormat_expectFailure() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w seventy /h 1.78\";","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"kinneo"},"content":"        assertThrows(HealthBudException.class, () -\u003e new BMICommand(input));","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Find Meal Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Jasonlobo21"},"content":"    void findMeal_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidFindException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-25 /t 9pm\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find meal chicken\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Jasonlobo21"},"content":"        new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"1. chicken rice (550 cal) on: 12-01-25 at: 9pm\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Jasonlobo21"},"content":"    void findMeal_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find meal\"; // missing keyword","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Find water Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Jasonlobo21"},"content":"    void findWater_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidFindException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add water /ml 500 /d 12-01-25 /t 8am\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find water 12-01-25\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Jasonlobo21"},"content":"        new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"1. 2.0 glass of water on (12-01-25) at 8am\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Jasonlobo21"},"content":"    void findWater_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find water\"; // missing keyword","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Find water Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Jasonlobo21"},"content":"    void findWorkout_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidFindException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add workout bicep curls /r 20 /s 3 /d 12-01-25\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find workout bicep curls\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"Jasonlobo21"},"content":"        new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"1. bicep curls (3 sets of 20) on 12-01-25\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Jasonlobo21"},"content":"    void findWorkout_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find workout\"; // missing keyword","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Delete meal Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteMeal_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidDeleteException, HealthBudException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-25 /t 9pm\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"Jasonlobo21"},"content":"        String deleteInput \u003d \"delete meal 1\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"Jasonlobo21"},"content":"        new DeleteCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, deleteInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"Noted. I\u0027ve removed this log:\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(0, mealLogs.getSize());","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteMeal_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"delete meal\"; // missing index","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Delete water Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteWater_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidDeleteException, HealthBudException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add water /ml 500 /d 12-01-25 /t 8am\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"Jasonlobo21"},"content":"        String deleteInput \u003d \"delete water 1\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"Jasonlobo21"},"content":"        new DeleteCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, deleteInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"Noted. I\u0027ve removed this log:\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(0, waterLogs.getSize());","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteWater_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"delete water\"; // missing index","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Clear function Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"Jasonlobo21"},"content":"    void clear_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidClearException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"Jasonlobo21"},"content":"        String firstInput \u003d \"add workout bicep curls /r 20 /s 3 /d 12-01-25\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, firstInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"Jasonlobo21"},"content":"        String secondInput \u003d \"add workout bench press /r 10 /s 3 /d 12-01-25\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, secondInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"Jasonlobo21"},"content":"        String deleteInput \u003d \"clear workout\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"Jasonlobo21"},"content":"        new ClearCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, deleteInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"Noted. I\u0027ve removed all logs.\";","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(0, workoutLogs.getSize());","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"Jasonlobo21"},"content":"    void clear_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"clear\"; // missing index","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"Travissssz"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d formatDate function Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"Travissssz"},"content":"    public void formatDate_validDates_expectSuccess() throws InvalidDateFormatException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"2023-12-25\"));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"12/25/2023\"));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"25/12/2023\"));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"Dec 25, 2023\"));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"December 25, 2023\"));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"20231225\"));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"25-12-2023\"));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"Mon, Dec 25, 2023\"));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"2023/12/25\"));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"12-25-2023\"));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"Travissssz"},"content":"    public void formatDate_invalidDates_expectThrowsException() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e DateParser.formatDate(\"2023-13-25\")); // Invalid month","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e DateParser.formatDate(\"32/12/2023\")); // Invalid day","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e DateParser.formatDate(\"random text\")); // Random string","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"Travissssz"},"content":"                () -\u003e DateParser.formatDate(\"2023-02-30\")); // Invalid day in month","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e DateParser.formatDate(null)); // Null input","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e DateParser.formatDate(\"\")); // Empty string","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"kinneo"},"content":"    *//*","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"kinneo"},"content":"*/","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":260,"keanneeee":19,"kinneo":227,"Ahmish15":52,"Travissssz":29}},{"path":"src/test/java/seedu/healthbud/command/input/BMICommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.input;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"//import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"class BMICommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":6}},{"path":"src/test/java/seedu/healthbud/command/input/RecommendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.input;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidRecommendException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.RecommendParser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"class RecommendCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_chest_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend chest\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended chest exercises:\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"                + \"1. Incline Smith Machine Bench Press\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"                + \"2. Dumbbell Chest Press\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"                + \"3. Cable Chest Flys\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_back_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend back\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended back exercises:\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"                + \"1. Pull-Ups\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"                + \"2. Barbell Bent-over Rows\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"                + \"3. Lat Pulldown\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_triceps_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend triceps\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended triceps exercises:\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"                + \"1. Close-Grip Bench Press\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"                + \"2. Tricep Dips\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"                + \"3. Skull Crushers\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_legs_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend legs\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended leg exercises:\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"                + \"1. Barbell Squats\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"                + \"2. Leg Extension \u0026 Leg Curls\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"                + \"3. Leg Press\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_shoulders_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend shoulders\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended shoulder exercises:\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"                + \"1. Overhead Dumbell Shoulder Press (Front Delt)\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"                + \"2. Lateral Raises (Side Delt)\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"                + \"3. Rear Delt Flys (Rear Delt)\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_abs_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend abs\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended ab exercises:\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"                + \"1. Hanging Leg Raises\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"                + \"2. Russian Twists\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"                + \"3. Planks\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_forearms_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend forearms\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended forearm exercises:\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"                + \"1. Wrist Curls\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"                + \"2. Reverse Wrist Curls\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"                + \"3. Farmer\u0027s Walk\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_help_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend help\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are the list of muscle groups:\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"                + \"1. chest\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"                + \"2. back\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"                + \"3. biceps\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"                + \"4. triceps\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"                + \"5. legs\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"                + \"6. shoulders\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"                + \"7. abs\\n     \"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"                + \"8. forearms\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_invalidMuscle_expectFailure() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend toes\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"        assertThrows(HealthBudException.class, () -\u003e RecommendParser.parse(input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_missingInput_expectFailure() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidRecommendException.class, () -\u003e RecommendParser.parse(input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"    void execute_recommendCommand_printsCorrectMessage() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"    Test output\"; // match the indent from Ui.printMessage","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d new RecommendCommand(\"Test output\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected + System.lineSeparator(), outContent.toString());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":134}},{"path":"src/test/java/seedu/healthbud/command/multilog/StatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.multilog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddMealCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddCardioCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidStatusException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.StatusParser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"class StatusCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    private String getCommandOutput(StatusCommand command) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        return outContent.toString().trim();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    void statusChange_validCutting_expectSuccess() throws InvalidStatusException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status change cutting\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(input, empty, empty, empty, empty, empty, empty);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"Status updated to: cutting\", getCommandOutput(command));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    void statusChange_validBulking_expectSuccess() throws InvalidStatusException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status change bulking\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(input, empty, empty, empty, empty, empty, empty);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"Status updated to: bulking\", getCommandOutput(command));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    void statusChange_invalidKeyword_expectException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status change shreeding\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidStatusException.class, () -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"                StatusParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"    void statusChange_missingArgument_expectException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status change\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidStatusException.class, () -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"                StatusParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    void statusReport_bulkingNotOnTrack_expectMessage() throws InvalidStatusException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        LogList cardio \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"        StatusParser.parse(\"status change bulking\", empty, empty, meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"        new AddMealCommand(meal, \"\", \"Lunch\", \"300\",","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"                \"2024-04-01\", \"12:00\").execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"        new AddCardioCommand(cardio, \"\", \"Stairs\", \"4\",","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"                \"1\", \"30\", \"2024-04-01\").execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(\"status report 2024-04-01\", empty,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"                empty, meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Current Status: bulking\\nYour intake does not align with your goal. Net calories: -350\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, getCommandOutput(command));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"    void statusReport_bulkingOnTrack_expectSuccess() throws InvalidStatusException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        LogList cardio \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"        StatusParser.parse(\"status change bulking\", empty, empty, meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"        new AddMealCommand(meal, \"\", \"Lunch\", \"300\", \"2024-04-01\", \"12:00\").execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"        new AddCardioCommand(cardio, \"\", \"Jog\", \"1\", \"0\",","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"                \"30\", \"2024-04-01\").execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(\"status report 2024-04-01\", empty, empty, meal,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"                empty, empty, cardio);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Current Status: bulking\\nYou are on track for bulking! Net calories: 200\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, getCommandOutput(command));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"    void statusReport_cuttingNotOnTrack_expectMessage() throws InvalidStatusException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"        LogList cardio \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"        StatusParser.parse(\"status change cutting\", empty, empty, meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"        new AddMealCommand(meal, \"\", \"Dinner\", \"300\", \"2024-04-01\", \"18:00\").execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"        new AddCardioCommand(cardio, \"\", \"Jog\", \"1\", \"0\",","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"                \"30\", \"2024-04-01\").execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(\"status report 2024-04-01\", empty, empty,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"                meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Current Status: cutting\\nYour intake does not align with your goal. Net calories: 200\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, getCommandOutput(command));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"    void statusReport_cuttingOnTrack_expectSuccess() throws InvalidStatusException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"        LogList cardio \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"        StatusParser.parse(\"status change cutting\", empty, empty, meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"        new AddMealCommand(meal, \"\", \"Oats\", \"200\", \"2024-04-01\", \"08:00\").execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"        new AddCardioCommand(cardio, \"\", \"HIIT\", \"3\", \"0\",","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"                \"30\", \"2024-04-01\").execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(\"status report 2024-04-01\", empty, empty,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"                meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Current Status: cutting\\nYou are on track for cutting! Net calories: -100\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, getCommandOutput(command));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"    void statusReport_missingDate_expectException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status report\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidStatusException.class, () -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"                StatusParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kinneo"},"content":"    void statusReport_invalidAction_expectException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status update\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidStatusException.class, () -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kinneo"},"content":"                StatusParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":148}},{"path":"src/test/java/seedu/healthbud/command/multilog/TrackGoalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.command.multilog;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.singlelog.AddMealCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.singlelog.AddWaterCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidTrackException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.TrackGoalParser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"class TrackGoalCommandTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    private String getCommandOutput(TrackGoalCommand command) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        return outContent.toString().trim();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    void trackGoal_validDate_expectCorrectOutput() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        LogList water \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        new AddMealCommand(meal, \"\", \"Lunch\", \"300\", \"2024-04-01\", \"13:00\").execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        new AddWaterCommand(water, \"\", \"500\", \"2024-04-01\", \"13:10\").execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        TrackGoalCommand command \u003d new TrackGoalCommand(\"2024-04-01\", empty, empty, meal, empty, water, empty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        String output \u003d getCommandOutput(command);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here is your goal progress for 01 Apr 2024: \";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, output.split(\"\\n\")[0]);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"    void parse_validCommand_expectCorrectOutput() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"track goal /d 2024-04-01\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"        LogList water \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"        new AddMealCommand(meal, \"\", \"Lunch\", \"300\", \"2024-04-01\", \"13:00\").execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        new AddWaterCommand(water, \"\", \"500\", \"2024-04-01\", \"13:10\").execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"        TrackGoalCommand command \u003d TrackGoalParser.parse(input, empty, empty, meal, empty, water, empty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        String output \u003d getCommandOutput(command);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here is your goal progress for 01 Apr 2024: \";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, output.split(\"\\n\")[0]);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    void parse_missingDateArgument_expectException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"track goal\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidTrackException.class, () -\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"                TrackGoalParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"    void parse_invalidSlash_expectException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"track goal /date 2024-04-01\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidTrackException.class, () -\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"                TrackGoalParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"    void parse_missingSlash_expectException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"track goal 2024-04-01\"; // 3 tokens, still fails !parts[2].equals(\"/d\")","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidTrackException.class, () -\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"                TrackGoalParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"kinneo":88}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddCardioCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidCardioException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.log.Cardio;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.parser.addcommandparser.AddCardioParser;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"//import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"class AddCardioCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"    void addCardio_correctInput_expectSuccess()","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"            throws InvalidDateFormatException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio running /s 8.5 /i 2 /t 30 /d 25-12-2023\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"        AddCardioCommand command \u003d AddCardioParser.parse(cardioLogs,input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"running\", command.getName());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"8.5\", command.getSets());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"2\", command.getIntensity());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"25 Dec 2023\", command.getDate());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"30\", command.getTime());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"    void addCardio_missingName_expectThrowsInvalidCardioException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio /s 8.5 /i 2 /t 30 /d 25-12-2023\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"                AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"    void addCardio_missingSpeedParameter_expectThrowsInvalidCardioException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio running /i 2 /t 30 /d 25-12-2023\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"                AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"    void addCardio_nonNumericSpeed_expectThrowsInvalidCardioException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio running /s fast /i 2 /t 30 /d 25-12-2023\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"                AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Travissssz"},"content":"    void addCardio_emptyInput_expectThrowsInvalidCardioException() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Travissssz"},"content":"                AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Travissssz"},"content":"    void validCardioAddsToLogList_expectSuccess() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio running /s 8.5 /i 2 /t 30 /d 25-12-2023\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Travissssz"},"content":"        AddCardioCommand command \u003d new AddCardioCommand(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Travissssz"},"content":"                cardioLogs, input, \"running\", \"8.5\", \"2\", \"30\", \"25 Dec 2023\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Travissssz"},"content":"        command.execute();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Travissssz"},"content":"        Cardio addedCardio \u003d (Cardio) cardioLogs.getLog(0);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"running\", addedCardio.getName());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"8.5\", addedCardio.getSpeed());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"2\", addedCardio.getIncline());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"30\", addedCardio.getDuration());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"25 Dec 2023\", addedCardio.getDate());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Travissssz"},"content":"    void validCardioToStringReturnsCorrectString_expectSuccess() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio running /s 8.5 /i 2 /t 30 /d 25-12-2023\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Travissssz"},"content":"        AddCardioCommand command \u003d new AddCardioCommand(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Travissssz"},"content":"                cardioLogs, input, \"running\", \"8.5\", \"2\", \"30\", \"25 Dec 2023\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Travissssz"},"content":"        String expected \u003d \"running (speed: 8.5, incline: 2, duration: 30 mins) on 25 Dec 2023\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Travissssz"},"content":"        Cardio cardio \u003d new Cardio(\"running\", \"8.5\", \"2\", \"30\", \"25 Dec 2023\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Travissssz"},"content":"        assertEquals(expected, cardio.toString());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":6,"Travissssz":90}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddGoalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"import static seedu.healthbud.HealthBud.goalLogs;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Goals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.parser.addcommandparser.AddGoalParser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidGoalException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"class AddGoalCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"    @BeforeAll","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"    public static void setUp() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"    public void resetGoals() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"        Goals.getInstance().updateGoals(\"0\", \"0\", \"0\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"    public void testUpdateGoals_setsCorrectValues() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"        goals.updateGoals(\"2500\", \"2000\", \"70\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"2500\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"2000\", goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"70\", goals.getWeightGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"    public void testToStringDisplaysCorrectly() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"        goals.updateGoals(\"2000\", \"1500\", \"60\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"        String output \u003d goals.toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"        assertTrue(output.contains(\"Daily Water Goal: 2000 ml\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"        assertTrue(output.contains(\"Daily Calorie Goal: 1500 cal\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"        assertTrue(output.contains(\"Weight Goal: 60 kg\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"keanneeee"},"content":"    public void addGoal_emptyInput_expectFailure() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"keanneeee"},"content":"        Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"keanneeee"},"content":"        String input \u003d \"add goal\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidGoalException.class, () -\u003e AddGoalParser.parse(goalLogs, input));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"keanneeee"},"content":"    public void addGoal_emptyParameters_expectFailure() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"keanneeee"},"content":"        Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"keanneeee"},"content":"        String input \u003d \"add goal /w\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidGoalException.class, () -\u003e AddGoalParser.parse(goalLogs, input));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"keanneeee"},"content":"    public void addGoal_updateOneParameter_expectSuccess(){","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"keanneeee"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"keanneeee"},"content":"        String preCal \u003d goals.getDailyCalorieGoal();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"keanneeee"},"content":"        String preWeight \u003d goals.getWeightGoal();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"keanneeee"},"content":"        String input \u003d \"add goal /w 2000\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"keanneeee"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"keanneeee"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"2000\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"keanneeee"},"content":"        assertEquals(preCal, goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"keanneeee"},"content":"        assertEquals(preWeight, goals.getWeightGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"keanneeee"},"content":"    public void addGoal_updateTwoParameters_expectSuccess(){","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"keanneeee"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"keanneeee"},"content":"        String preWeight \u003d goals.getWeightGoal();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"keanneeee"},"content":"        String input \u003d \"add goal /w 2000 /cal 100\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"keanneeee"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"keanneeee"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"2000\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"100\", goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"keanneeee"},"content":"        assertEquals(preWeight, goals.getWeightGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"    public void addGoal_sameAsExistingGoals_expectNoPrintButStillUpdate() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"        goals.updateGoals(\"3000\", \"2500\", \"80\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add goal /w 3000 /cal 2500 /kg 80\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"3000\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2500\", goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"80\", goals.getWeightGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"    public void addGoal_missingCalorie_expectDefaultUsed() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"        goals.updateGoals(\"3000\", \"1500\", \"65\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add goal /w 2000 /kg 60\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2000\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"1500\", goals.getDailyCalorieGoal()); // default","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"60\", goals.getWeightGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"    public void addGoal_missingWater_expectDefaultUsed() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"        goals.updateGoals(\"3000\", \"1500\", \"65\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add goal /cal 1800 /kg 70\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"3000\", goals.getDailyWaterGoal()); // default","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"1800\", goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"70\", goals.getWeightGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"    public void addGoal_missingWeight_expectDefaultUsed() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"        goals.updateGoals(\"3000\", \"1500\", \"65\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add goal /w 2500 /cal 2000\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kinneo"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2500\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2000\", goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"65\", goals.getWeightGoal()); // default","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"keanneeee":90,"kinneo":62}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddMealCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.parser.addcommandparser.AddMealParser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidCardioException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidMealException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidPersonalBestException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidMLException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"class AddMealCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"    void mealLog_missingName_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal /cal 550 /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"    void mealLog_missingCaloriesParameter_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"    void mealLog_nonNumericCalories_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /cal high /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"    void addMeal_emptyInput_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"    void validMealAddsToLogList_expectSuccess() throws InvalidPersonalBestException, InvalidMLException","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"            , InvalidCardioException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"        AddMealCommand command \u003d new AddMealCommand(mealLogs, input, \"chicken rice\", \"550\", \"12 Jan 2025\", \"9pm\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"        command.execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"        Meal meal \u003d (Meal) mealLogs.getLog(0);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(\"chicken rice\", meal.getName());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(\"550\", meal.getCalories());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(\"12 Jan 2025\", meal.getDate());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(\"9pm\", meal.getTime());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"chicken rice (550 cal) on: 12 Jan 2025 at: 9pm\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(expected, meal.toString());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":65,"kinneo":5}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddPersonalBestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidPersonalBestException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.PersonalBest;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.addcommandparser.AddPersonalBestParser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"class AddPersonalBestCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_validInput_success() throws Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb deadlift /w 120 /d 01-01-2025\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        AddPersonalBestCommand command \u003d AddPersonalBestParser.parse(pbLogs, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, pbLogs.getSize());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        PersonalBest pb \u003d (PersonalBest) pbLogs.getLog(0);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"deadlift\", pb.getExercise());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"120\", pb.getWeight());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"01 Jan 2025\", pb.getDate());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_missingWeight_throwsException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb bench /d 01-01-25\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_missingDate_throwsException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb squat /w 140\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_nonNumericWeight_throwsException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb press /w heavy /d 01-01-25\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_invalidDateFormat_throwsException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb squat /w 90 /d wrong-date\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_emptyName_throwsException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb /w 100 /d 01-01-25\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":69}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddWaterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidWaterException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Water;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.parser.addcommandparser.AddWaterParser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"class AddWaterCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"    void addWater_correctInput_expectSuccess()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"            throws InvalidDateFormatException, InvalidWaterException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"        String input \u003d \"add water /ml 1000 /d 12-04-2002 /t 1200\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"        AddWaterCommand command \u003d AddWaterParser.parse(waterLogs, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"        Water water \u003d (Water) waterLogs.getLog(0);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"1000\", water.getAmount());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"12 Apr 2002\", water.getDate());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"1200\", water.getTime());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"        String expected \u003d \"4.0 glass of water on (12 Apr 2002) at 1200\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"        assertEquals(expected, water.toString());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"    void addWater_missingML_expectThrowsInvalidWaterException(){","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water /d 12-02-2002 /t 1200\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"    void addWater_missingDate_expectThrowsInvalidWaterException(){","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water /ml 1000 /t 1200\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"keanneeee"},"content":"    void addWater_missingTime_expectThrowsInvalidWaterException(){","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water /ml 1200 /d 12-02-2002\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"keanneeee"},"content":"    void addWater_emptyInput_expectThrowsInvalidWaterException(){","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"keanneeee":61,"kinneo":5}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddWorkoutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"//import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"class AddWorkoutCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":6}},{"path":"src/test/java/seedu/healthbud/command/singlelog/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidCardioException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidClearException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidMLException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidPersonalBestException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.parser.ClearParser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"class ClearCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"    void clear_correctInput_expectSuccess() throws InvalidPersonalBestException, InvalidMLException,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidClearException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"        String secondInput \u003d \"add meal tom yum /cal 650 /d 13-01-2025 /t 8pm\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        AddMealCommand addCommand1 \u003d new AddMealCommand(mealLogs, input, \"chicken rice\", \"550\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"                \"12 Jan 2025\", \"9pm\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        AddMealCommand addCommand2 \u003d new AddMealCommand(mealLogs, secondInput, \"tom yum\", \"650\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"                \"13 Jan 2025\", \"8pm\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"        addCommand1.execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"        addCommand2.execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(2, mealLogs.getSize());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"        String clearInput \u003d \"clear meal\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"        ClearCommand clearCommand \u003d new ClearCommand(clearInput, mealLogs);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"        clearCommand.execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(0, mealLogs.getSize());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"    void clear_wrongInput_expectFailure() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"clear\"; // invalid input, missing log type","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidClearException.class, () -\u003e {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"            ClearParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"    void clear_workoutLogs_expectSuccess() throws InvalidClearException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"        ClearCommand command \u003d ClearParser.parse(\"clear workout\", empty, empty, empty, empty, workoutLogs);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"        assertEquals(0, workoutLogs.getSize());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"    void clear_pbLogs_expectSuccess() throws InvalidClearException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"        ClearCommand command \u003d ClearParser.parse(\"clear pb\", pbLogs, empty, empty, empty, empty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"        assertEquals(0, pbLogs.getSize());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"    void clear_waterLogs_expectSuccess() throws InvalidClearException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"        ClearCommand command \u003d ClearParser.parse(\"clear water\", empty, empty, waterLogs, empty, empty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"        assertEquals(0, waterLogs.getSize());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"    void clear_cardioLogs_expectSuccess() throws InvalidClearException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"        ClearCommand command \u003d ClearParser.parse(\"clear cardio\", empty, empty, empty, empty, cardioLogs);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"        assertEquals(0, cardioLogs.getSize());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"    void clear_invalidLogType_expectFailure() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidClearException.class, () -\u003e {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"            ClearParser.parse(\"clear invalid\", new LogList(), new LogList(),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"                    new LogList(), new LogList(), new LogList());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"        });","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":53,"kinneo":54}},{"path":"src/test/java/seedu/healthbud/command/singlelog/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidCardioException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidDeleteException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidMLException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidPersonalBestException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.parser.DeleteParser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"class DeleteCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteMeal_correctInput_expectSuccess() throws InvalidPersonalBestException, InvalidMLException,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, HealthBudException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-25 /t 9pm\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        AddMealCommand addCommand \u003d new AddMealCommand(mealLogs, input, \"chicken rice\", \"550\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"                \"12 Jan 2025\", \"9pm\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"        addCommand.execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(1, mealLogs.getSize());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"        String deleteInput \u003d \"delete meal 1\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(mealLogs, deleteInput, 1);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"        deleteCommand.execute();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"Noted. I\u0027ve removed this log:\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(0, mealLogs.getSize());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteMeal_wrongInput_expectFailure() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"delete meal\"; // missing index","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidDeleteException.class, () -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"                DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteParser_nonNumericIndex_expectThrowsHealthBudException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"        // Non-numeric index provided","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"delete meal one\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonlobo21"},"content":"        HealthBudException exception \u003d assertThrows(HealthBudException.class, () -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonlobo21"},"content":"                DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(\"Insert a valid task number\", exception.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteParser_invalidLogType_expectThrowsInvalidDeleteException() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"delete unknown 1\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidDeleteException.class, () -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"                DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"    void deleteWorkout_correctInput_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"delete workout 1\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"        DeleteCommand command \u003d DeleteParser.parse(input, empty, workoutLogs, empty, empty, empty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"        assertEquals(workoutLogs, command.getLogList());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"    void deleteWater_correctInput_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"delete water 1\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"        DeleteCommand command \u003d DeleteParser.parse(input, empty, empty, waterLogs, empty, empty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"        assertEquals(waterLogs, command.getLogList());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"    void deletePB_correctInput_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"delete pb 1\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"        DeleteCommand command \u003d DeleteParser.parse(input, empty, empty, empty, pbLogs, empty);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"        assertEquals(pbLogs, command.getLogList());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"    void deleteCardio_correctInput_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"delete cardio 1\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"        DeleteCommand command \u003d DeleteParser.parse(input, empty, empty, empty, empty, cardioLogs);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"        assertEquals(cardioLogs, command.getLogList());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"    void deleteCommand_invalidExecuteInput_expectThrowsHealthBudException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"        String badInput \u003d \"delete meal noindex\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"        DeleteCommand command \u003d new DeleteCommand(mealLogs, badInput, 1);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"        HealthBudException exception \u003d assertThrows(HealthBudException.class, command::execute);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"Insert a valid task number\", exception.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":85,"kinneo":56}},{"path":"src/test/java/seedu/healthbud/command/singlelog/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"//import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"class ListCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":6}},{"path":"src/test/java/seedu/healthbud/command/singlelog/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"//import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"class SearchCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":6}},{"path":"src/test/java/seedu/healthbud/command/singlelog/SumCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"//import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"class SumCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":6}},{"path":"src/test/java/seedu/healthbud/parser/DateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"class DateParserTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    void formatDate_validFormats_expectCorrectOutput() throws InvalidDateFormatException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"2023-12-25\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"12/25/2023\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"25/12/2023\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"Dec 25, 2023\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"December 25, 2023\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"20231225\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"25-12-2023\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"Mon, Dec 25, 2023\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"2023/12/25\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"12-25-2023\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"Dec 25 2023\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    void formatDate_invalidFormat_expectException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"                DateParser.formatDate(\"25th of December 2023\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    void formatDate_emptyInput_expectException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"                DateParser.formatDate(\"\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"    void formatDate_nullInput_expectException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"                DateParser.formatDate(null));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"kinneo":43}},{"path":"src/test/java/seedu/healthbud/parser/ParserManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"class ParserManagerTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    private final LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    void handleInput_add_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"                \"add meal Lunch /c 300 /d 2024-04-01 /t 12:00\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    void handleInput_list_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"                \"list meal\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    void handleInput_recommend_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"                \"recommend goal\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"    void handleInput_bmi_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"                \"bmi 70 1.75\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"    void handleInput_delete_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"                \"delete meal 1\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"    void handleInput_clear_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"                \"clear meal\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"    void handleInput_sum_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"                \"sum meal\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    void handleInput_status_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"                \"status change bulking\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"    void handleInput_search_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"                \"search meal rice\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"    void handleInput_view_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"                \"view goals\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"    void handleInput_track_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"                \"track goal /d 2024-04-01\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    void handleInput_help_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"                \"help\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"    void handleInput_bye_expectSuccess() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"                \"bye\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"        assertEquals(false, result); // \u0027bye\u0027 returns false","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"    void handleInput_unknownCommand_expectFailure() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"                \"unknowncommand\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result); // still returns true, but error printed","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"kinneo":109}},{"path":"src/test/java/seedu/healthbud/parser/ParserParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"class ParserParametersTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    void parseParameters_cardioParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/s 1.5 /i 2.0 /t 30 /d 2024-04-01\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"1.5\", params.get(\"s\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2.0\", params.get(\"i\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"30\", params.get(\"t\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        assertEquals(4, params.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    void parseParameters_goalParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/cal 2000 /w 8 /kg 70\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2000\", params.get(\"cal\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"8\", params.get(\"w\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"70\", params.get(\"kg\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"    void parseParameters_mealParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/cal 300 /d 2024-04-01 /t 12:00\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"300\", params.get(\"cal\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"12:00\", params.get(\"t\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    void parseParameters_pbParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/w 80 /d 2024-04-01\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"80\", params.get(\"w\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        assertEquals(2, params.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"    void parseParameters_waterParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/ml 500 /d 2024-04-01 /t 10:00\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"500\", params.get(\"ml\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"10:00\", params.get(\"t\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"    void parseParameters_workoutParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/r 4 /s 3 /d 2024-04-01 /w 60\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"4\", params.get(\"r\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"3\", params.get(\"s\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"60\", params.get(\"w\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"        assertEquals(4, params.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"    void parseParameters_multiWordValue_expectConcatenatedString() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/desc grilled chicken breast /cal 400\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"grilled chicken breast\", params.get(\"desc\")); // this triggers the space-append","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"400\", params.get(\"cal\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"        assertEquals(2, params.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"    void parseParameters_outOfOrder_expectCorrectMapping() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/d 2024-04-01 /t 08:00 /cal 350\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"08:00\", params.get(\"t\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"350\", params.get(\"cal\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"    void parseParameters_emptyInput_expectEmptyMap() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"        assertTrue(params.isEmpty());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"    void parseParameters_paramWithoutValue_expectEmptyString() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/cal\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"\", params.get(\"cal\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, params.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"    void parseParameters_extraSpaces_expectTrimmedValues() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/ml     1000     /t     09:00  \";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"1000\", params.get(\"ml\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"09:00\", params.get(\"t\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"        assertEquals(2, params.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"    void parseParameters_onlySpaces_expectEmptyMap() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"     \";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"        assertTrue(params.isEmpty());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"kinneo":122}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"rem -- Force Java to run with UTF-8 encoding","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"chcp 65001 \u003e nul","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"java -Dfile.encoding\u003dUTF-8 -jar ..\\build\\libs\\%jarloc% \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"kinneo":7,"-":17}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"# Ensure correct JAR file is used","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"java -jar ../build/libs/healthbud.jar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"if [ $? -eq 0 ]; then","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"kinneo":5,"-":20}}]
