[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# HealthBud","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"HealthBud is a fitness tracking application that helps users manage their workout routines, meal logs, water intake, and","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"personal bests (PBs). With an easy-to-use command-line interface, users can log, view, and manage their fitness data","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"efficiently.","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"Useful links:","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false}],"authorContributionMap":{"kinneo":8,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17T23:25:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:18:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:18:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    mainClass.set(\"seedu.healthbud.HealthBud\")","lastModifiedDate":"2025-03-13T14:14:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"    archiveBaseName.set(\"healthbud\")","lastModifiedDate":"2025-03-13T14:38:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24T00:28:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29T23:10:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13T15:42:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2025-04-01T19:25:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2025-04-01T19:25:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T19:25:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T19:25:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"tasks.withType(JavaExec) {","lastModifiedDate":"2025-04-01T19:25:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"    systemProperty \"file.encoding\", \"UTF-8\"","lastModifiedDate":"2025-04-01T19:25:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T19:25:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T19:25:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"run {","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T19:25:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"test {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    jvmArgs \u0027-ea\u0027","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false}],"authorContributionMap":{"kinneo":20,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"Display |         Name         | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"--------|:--------------------:|:--------------:|:---------:","lastModifiedDate":"2025-03-05T13:18:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jason Gilchrist Lobo | [Github](https://github.com/Jasonlobo21) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-05T13:18:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ahmish Nair | [https://github.com/Ahmish15](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-05T13:43:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Travis | [Github](https://github.com/Travissssz) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-05T13:33:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Keane Ng | [Github](https://github.com/keanneeee) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-05T13:35:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kin Neo | [Github]([https://github.com/](https://github.com/kinneo)) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-05T13:13:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-05T13:52:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05T13:18:50","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":2,"keanneeee":1,"kinneo":1,"Ahmish15":2,"-":3,"Travissssz":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"This application was developed as part of a university software engineering module CS2113. Some ideas were adapted from:","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"1. Duke Java Project","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"2. JavaFX Documentation","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"3. Official Java 17 Documentation","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"## Design","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"### Architecture","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"![img.png](img.png)","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"The Architecture Diagram given above explains the high-level design of the HealthBud.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"**Main Components**","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"`HealthBud` is in charge of the CLI to launch and the exit.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"- At CLI launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"- At exit, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"The bulk of the CLI\u0027s work id done by the following components:","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"- [**`UI`**](#ui): Responsible for displaying messages to the user.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"- [**`Parser`**](#parser): Interprets user commands and constructs the corresponding `Command` objects.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"- [**`Command`**](#command): Contains the logic for executing user commands.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"- [**`LogList`**](#loglist): **(New)** Maintains lists for each log type (Meal, Workout, Water, etc.).","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"- [**`Storage`**](#storage): Handles reading and writing data to and from the hard disk.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"- [**`Data`**](#data): Holds the in-memory data (logs) of the app.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"### UI","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"![UI_Class_Diagram](images/UiCD.png) \u003cbr\u003e","lastModifiedDate":"2025-04-03T11:17:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"- The UI component is responsible for user interactions. It handles displaying messages, prompts, and error messages to the user. ","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"### Parser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"The Parser interface uses a series of classes to implement the various commands.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"### Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"`//TODO: include command class diagram here`","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"### LogList","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"![LogList_Class_Diagram](images/LogListCD.png)","lastModifiedDate":"2025-04-03T11:17:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"The LogList class manages a list of logs, each representing a fitness-related entry such as meals, workouts, water ","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"intake, cardio sessions, personal bests, or goals. It maintains a List\u003cLog\u003e and provides methods to add, delete, update,","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"list, and search through these logs.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"- The abstract Log class is the superclass for all log types.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"- Subclasses like Meal, Workout, Water, Cardio, PersonalBest, and Goals extend Log and store specific data for each log type.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"- LogList has a one-to-many association with Log, represented by the contains relationship.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"- The Goals class follows a singleton pattern via getInstance() and stores user-defined fitness goals.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"This design promotes extensibility and encapsulation, allowing new log types to be added easily while maintaining a consistent interface.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"### Storage","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"The Storage class manages HealthBud log persistence by reading and writing to a designated text file. It creates necessary directories and files, loads logs by parsing each line into specific types (Meal, Workout, etc.), and distributes them into corresponding LogLists. It also appends and rewrites logs using formatted string representations while handling errors gracefully.","lastModifiedDate":"2025-04-03T11:17:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Ahmish15"},"content":"![Storage_Class_Diagram](images/StorageCD.png)","lastModifiedDate":"2025-04-03T11:17:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"# Implementation","lastModifiedDate":"2025-04-03T01:38:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"## Add Log Command","lastModifiedDate":"2025-04-03T01:38:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Travissssz"},"content":"The Add Log feature allows users to create and store different types of logs (e.g., workouts, meals, water intake) in HealthBud. ","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Travissssz"},"content":"This feature is handled by the AddCommand hierarchy, where each log type has a dedicated parser and command class for structured input validation and storage.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Travissssz"},"content":"### 1. User Input: \u003cbr\u003e","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"- The user enters a command in the following general format: ` add \u003clog_type\u003e \u003cdetails\u003e [parameters] `","lastModifiedDate":"2025-04-04T00:20:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"- For example (Workout): ` add workout Benchpress /r 10 /s 3 /d 2023-12-25 /w 50 `","lastModifiedDate":"2025-04-04T00:20:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Travissssz"},"content":"### 2. Command Parsing: \u003cbr\u003e","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Travissssz"},"content":"1. ParserManager identifies the add command and extracts the log type (e.g., workout, meal).","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Travissssz"},"content":"2. AddParser routes parsing to the respective log-specific parser (e.g., AddWorkoutParser, AddMealParser).","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Travissssz"},"content":"3. Log-Specific Parser (e.g., AddWorkoutParser):","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Travissssz"},"content":"  - Extracts mandatory fields (e.g., exercise name, reps, date).","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Travissssz"},"content":"  - Validates numeric values (e.g., reps, weight).","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Travissssz"},"content":"  - Formats the date using DateParser (converts 2023-12-25 → 25 Dec 2023).","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Travissssz"},"content":"4. Returns a validated AddCommand object (e.g., AddWorkoutCommand).","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Travissssz"},"content":"### 3. Command execution ","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Travissssz"},"content":"1. AddCommand (e.g., AddWorkoutCommand):","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Travissssz"},"content":"- Creates a new log object (e.g., Workout(\"Benchpress\", \"10\", \"3\", \"25 Dec 2023\", \"50\")).","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Travissssz"},"content":"- Passes the log to LogList for storage.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Travissssz"},"content":"2. LogList:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Travissssz"},"content":"- Adds the log to its internal list.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Travissssz"},"content":"- Calls Storage.appendLogToFile(log) to save data persistently.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Travissssz"},"content":"### 4. How the feature is implemented: \u003cbr\u003e","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Travissssz"},"content":"1. Input Routing: ParserManager detects add → delegates to AddParser","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Travissssz"},"content":"2. Specialized Parsing: Log-specific parsers (AddWorkoutParser, etc.) extract and validate parameters","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Travissssz"},"content":"3. Standardization: DateParser converts dates to consistent format","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Travissssz"},"content":"4. Execution: Commands create log objects → LogList stores them → Storage saves to file","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Travissssz"},"content":"5. Feedback: UI confirms success with parsed details","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Travissssz"},"content":"### 6. Sequence Diagram","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Travissssz"},"content":"![AddLogCommand SD.png](images/AddLogCommand%20SD.png)","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Travissssz"},"content":"### 7. Design Rationale","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Travissssz"},"content":"1. Modular Parsers: Isolate validation logic per log type (avoids giant switch-case)","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Travissssz"},"content":"2. Early Validation: Fail before object creation (saves memory/CPU cycles)","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Travissssz"},"content":"3. Command Pattern: Keeps parsing separate from execution (cleaner testing)","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Travissssz"},"content":"4. Centralized Storage: LogList manages all persistence (single source of truth)","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Travissssz"},"content":"### 8. Alternatives considered: \u003cbr\u003e","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Travissssz"},"content":"1. Inheritance-Based Logs was considered but it causes deep class hierarchy for different log types. Which Makes file storage and retrieval harder. ","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Travissssz"},"content":"3. UI Feedback:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Travissssz"},"content":"- Confirms successful addition (e.g., \"Added: Benchpress (3 sets of 50 kg for 10 reps) on 25 Dec 2023\").","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"## Delete Log Command","lastModifiedDate":"2025-04-03T01:38:26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jasonlobo21"},"content":"The delete log feature allows users to remove a log by its index from the application\u0027s log list. This feature is handled by the `DeleteCommand` class, which performs validation, deletion, and error handling.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"### 1. User Input: \u003cbr\u003e","lastModifiedDate":"2025-04-03T01:38:26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jasonlobo21"},"content":"- The user enters the delete command followed by the log\u0027s index (e.g., `delete meal 3`).","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"### 2. Command Parsing: \u003cbr\u003e","lastModifiedDate":"2025-04-03T01:38:26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jasonlobo21"},"content":"- The Parser converts the input into a `DeleteCommand` object, adjusting the index to match the list’s 0-based indexing. This process is handled by the `ParserManager` and the `DeleteParser.`","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"### 3. The `DeleteCommand` executes as follows: \u003cbr\u003e","lastModifiedDate":"2025-04-03T01:38:26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jasonlobo21"},"content":"- Validation: Verifies whether the specified index is valid and corresponds to an existing meal log.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jasonlobo21"},"content":"- Error Handling: If the index is invalid, an error message is returned to the user.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jasonlobo21"},"content":"- Deletion: If the index is valid, the command retrieves the log’s details, removes the log from the Logs list, and generates a success message.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"### 4. How the feature is implemented: \u003cbr\u003e","lastModifiedDate":"2025-04-03T01:38:26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jasonlobo21"},"content":"- The deletion functionality is handled by the DeleteCommand class. It validates the user-provided index, adjusts it to match the 0-based indexing of the log list, and performs the deletion on the LogList object. This keeps the deletion logic isolated, making it easier to maintain and test.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"### 5. Why it is implemented that way: \u003cbr\u003e","lastModifiedDate":"2025-04-03T01:38:26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jasonlobo21"},"content":"- Using a dedicated command class follows the Command Pattern, which separates concerns effectively. Isolating deletion logic into its own class adheres to the Single Responsibility Principle, simplifying debugging and future enhancements without impacting other parts of the system.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"### 6. Alternatives considered: \u003cbr\u003e","lastModifiedDate":"2025-04-03T01:38:26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jasonlobo21"},"content":"- One alternative was to embed the deletion logic directly in the parser or UI layer. However, this approach would mix user input handling with business logic, resulting in code that is harder to maintain and test. Delegating deletion to a specialized command class keeps the design modular and scalable.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jasonlobo21"},"content":"### Sequence Diagram","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Ahmish15"},"content":"![DeleteLog.png](images/DeleteSD.png)","lastModifiedDate":"2025-04-03T11:17:05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jasonlobo21"},"content":"Diagram Explanation \u003cbr\u003e","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jasonlobo21"},"content":"1. User Input: \u003cbr\u003e","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jasonlobo21"},"content":"- The user enters `delete meal 3` in the CLI.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jasonlobo21"},"content":"2. Parsing: \u003cbr\u003e","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jasonlobo21"},"content":"- `HealthBud` receives the command and passes it to the `GeneralParser`.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Jasonlobo21"},"content":"- The `GeneralParser` calls `DeleteParser`, which extracts the log type (\"meal\") and the index (3). The index is then adjusted for 0-based indexing.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jasonlobo21"},"content":"- A `DeleteCommand` object is created and returned to the `GeneralParser`.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Jasonlobo21"},"content":"3. Command Execution: \u003cbr\u003e","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Jasonlobo21"},"content":"- The `GeneralParser` invokes `execute()` on the `DeleteCommand`.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Jasonlobo21"},"content":"- The `DeleteCommand` calls `deleteLog(2)` on the `mealLogs` (since index 3 from the user corresponds to index 2 internally).","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Jasonlobo21"},"content":"- The log is deleted from the `mealLogs`, and a success message is generated.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Jasonlobo21"},"content":"4. Outcome: \u003cbr\u003e","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Jasonlobo21"},"content":"- If the index is invalid, the command returns an error message.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jasonlobo21"},"content":"- If the index is valid, the meal log is removed and a success message is displayed to the user.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Jasonlobo21"},"content":"This clear separation of user input, command parsing, and execution ensures that the deletion operation is handled in a structured and predictable manner.","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kinneo"},"content":"## Recommend Command","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kinneo"},"content":"The recommend \u003cmuscle_group\u003e command provides users with 3 curated workout suggestions based on the specified muscle group, helping users diversify their fitness routines.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kinneo"},"content":"### 1. User Input: \u003cbr\u003e","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kinneo"},"content":"- The user enters the recommend command followed by a muscle group that they are interested in working out (e.g., `recommend biceps`).","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kinneo"},"content":"### 2. Command Parsing: \u003cbr\u003e","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-04T00:20:36","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kinneo"},"content":"- The RecommendParser handles parsing and validation of the user input. ","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kinneo"},"content":"- It checks that at least one argument (a muscle group) is present. ","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kinneo"},"content":"- It uses a switch-case on the muscle group to determine the recommended exercises. ","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kinneo"},"content":"- If the muscle group is unrecognized, it throws a HealthBudException with guidance.","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kinneo"},"content":"### 3. The `RecommendCommand` executes as follows: \u003cbr\u003e","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kinneo"},"content":"- Once constructed, the RecommendCommand calls Ui.printMessage() with the appropriate recommendation message.","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kinneo"},"content":"- The execute() method only handles display and does not contain logic beyond that.","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kinneo"},"content":"### 4. How the feature is implemented: \u003cbr\u003e","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kinneo"},"content":"- The command string is split and validated in RecommendParser.","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kinneo"},"content":"- A corresponding message for each muscle group is hardcoded into the switch-case.","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kinneo"},"content":"- RecommendCommand simply wraps this message and prints it during execution.","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kinneo"},"content":"### 5. Why it is implemented that way: \u003cbr\u003e","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kinneo"},"content":"- Separation of Concerns: Logic for parsing and message generation is in the parser, while command execution is kept simple and focused.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kinneo"},"content":"- Testability: Easy to write unit tests for RecommendParser without needing to simulate UI output.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kinneo"},"content":"- Readability: Clean execute() method and well-structured parser make the code intuitive and maintainable","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kinneo"},"content":"### 6. Alternatives considered: \u003cbr\u003e","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-04T00:20:36","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kinneo"},"content":"- Enums for muscle groups: More structured but restrictive; dropped in favor of flexible string matching.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kinneo"},"content":"- External file storage for recommendations: Overhead for static data; current implementation is simpler and faster.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kinneo"},"content":"### Sequence Diagrams","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kinneo"},"content":"![Recommend_Sequence_Diagram](Images/RecommendSD.png)","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kinneo"},"content":"Diagram Explanation \u003cbr\u003e","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kinneo"},"content":"1. User Input: \u003cbr\u003e","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kinneo"},"content":"- The user enters recommend \u003cmuscle_group\u003e in the CLI.","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kinneo"},"content":"2. Parsing: \u003cbr\u003e","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kinneo"},"content":"- RecommendParser parses the input and creates a RecommendCommand with a list of exercises.","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kinneo"},"content":"3. Command Execution: \u003cbr\u003e","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kinneo"},"content":"- RecommendCommand.execute() is called. It sends the exercise list to Ui to display.","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:54:18","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kinneo"},"content":"4. Outcome: \u003cbr\u003e","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kinneo"},"content":"An alt block handles:","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kinneo"},"content":"- Valid Input: The recommended exercises are displayed and a success message is returned.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kinneo"},"content":"- Invalid Input: An exception is thrown and an error message is shown to the user.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kinneo"},"content":"This structure clearly separates parsing, command creation, and UI interaction for robust handling.","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T01:38:26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Ahmish15"},"content":"## BMI Command","lastModifiedDate":"2025-03-28T12:15:33","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Ahmish15"},"content":"The command calculates the user\u0027s Body Mass Index (BMI) based on the provided weight (in kilograms) and height (in meters), then categorizes the user as underweight, normal weight, overweight, or obese.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Ahmish15"},"content":"### 1. User Input:","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Ahmish15"},"content":"- The user enters `bmi /w \u003cweight\u003e /h \u003cheight\u003e` (e.g., `bmi /w 60 /h 1.70`).","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Ahmish15"},"content":"- Weight must be a valid number representing kilograms.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Ahmish15"},"content":"- Height must be a valid number representing meters.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Ahmish15"},"content":"### 2. Command Parsing:","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Ahmish15"},"content":"- **BMIParser** handles parsing and validation of the user input.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Ahmish15"},"content":"- It checks that:","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Ahmish15"},"content":"   - The input is not null or empty.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Ahmish15"},"content":"   - The input contains a slash (`/`) separating weight and height.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Ahmish15"},"content":"   - Both weight and height can be parsed into valid numeric values.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Ahmish15"},"content":"- If any of these checks fail, an **InvalidBMIException** is thrown, prompting the user to correct their input format.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Ahmish15"},"content":"### 3. The `BMICommand` Executes as Follows:","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Ahmish15"},"content":"- Once constructed with the valid weight and height, **BMICommand** calculates the BMI using the formula:","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Ahmish15"},"content":"  \\[","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Ahmish15"},"content":"  \\text{BMI} \u003d \\frac{\\text{weight}}{(\\text{height} \\times \\text{height})}","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Ahmish15"},"content":"  \\]","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Ahmish15"},"content":"- The command then checks the BMI value and calls **Ui.printMessage()** with a message indicating whether the user is:","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Ahmish15"},"content":"   - Underweight (BMI \u003c 18.5)","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Ahmish15"},"content":"   - Normal weight (18.5 ≤ BMI \u003c 25)","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Ahmish15"},"content":"   - Overweight (25 ≤ BMI \u003c 30)","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Ahmish15"},"content":"   - Obese (BMI ≥ 30)","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Ahmish15"},"content":"### 4. How the Feature is Implemented:","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Ahmish15"},"content":"- **BMIParser** extracts the numerical values for weight and height from the user input.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Ahmish15"},"content":"- It instantiates a **BMICommand** object with these parsed values.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Ahmish15"},"content":"- **BMICommand** performs the BMI calculation and categorization in its `execute()` method.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Ahmish15"},"content":"- The categorization strings are hardcoded for clarity and simplicity.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Ahmish15"},"content":"### 5. Why It Is Implemented That Way:","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Ahmish15"},"content":"- **Separation of Concerns**: Parsing logic (e.g., checking for valid input and splitting the string) resides in **BMIParser**, while the command class focuses on calculation and message output.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Ahmish15"},"content":"- **Clarity**: Keeping the BMI formula and category checks in `execute()` makes it straightforward to read and maintain.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Ahmish15"},"content":"- **Testability**: This approach allows unit testing the parser separately from the command execution, ensuring each component is robust and reliable.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Ahmish15"},"content":"### 6. Alternatives Considered:","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Ahmish15"},"content":"- **Single-Class Implementation**: Combining parsing and execution logic into one class would reduce the number of classes but make the code less organized and harder to maintain.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Ahmish15"},"content":"- **More Complex Validation**: Additional checks (e.g., extremely high or low values) could be added, but the current design focuses on standard BMI ranges and clear user prompts.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Ahmish15"},"content":"- **External Configuration**: Storing BMI thresholds or messages in an external file could add flexibility but also increase overhead for what is essentially static data.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-28T12:15:33","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-28T12:15:33","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"kinneo"},"content":"5. Sequence Diagrams","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Ahmish15"},"content":"   ![BMI_Sequence_Diagram](images/BMISD.png)","lastModifiedDate":"2025-04-03T11:17:05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Ahmish15"},"content":"   ","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Ahmish15"},"content":"Diagram Explanation \u003cbr\u003e","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Ahmish15"},"content":"The user inputs a BMI command with weight and height. HealthBud delegates parsing to BMIParser, which validates data and returns a BMICommand. The command calculates BMI and displays the result.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Ahmish15"},"content":"   ","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Travissssz"},"content":"## AddWorkoutCommand","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Travissssz"},"content":"### 1. Feature overview","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Travissssz"},"content":"Tracks strength training exercises in HealthBud by recording:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Travissssz"},"content":"1. Exercise name","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Travissssz"},"content":"2. Weight (kg)","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Travissssz"},"content":"3. Repetitions","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Travissssz"},"content":"4. Sets","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Travissssz"},"content":"5. Date","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Travissssz"},"content":"Command Format:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Travissssz"},"content":"`add workout [name] /w [weight] /r [reps] /s [sets] /d [date]`","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Travissssz"},"content":"### 2. Implementation details","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Travissssz"},"content":"1. Command Parsing:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Travissssz"},"content":"- GeneralParser identifies the command and delegates to AddWorkoutParser.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Travissssz"},"content":"- Parameters (/w, /r, /s, /d) are validated:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Travissssz"},"content":"  - Weight, reps, and sets must be positive numbers.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Travissssz"},"content":"  - Date must follow a valid format.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Travissssz"},"content":"  - Exercise name is extracted before the first parameter marker.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Travissssz"},"content":"2. Execution:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Travissssz"},"content":"- Creates an immutable Workout object with validated data.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Travissssz"},"content":"- Adds the record to the workout log list.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Travissssz"},"content":"- Throws descriptive errors for invalid input.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Travissssz"},"content":"### 3. Why this design","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Travissssz"},"content":"1. Modularity:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Travissssz"},"content":"- Uses the Command Pattern to separate parsing and execution.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Travissssz"},"content":"- Easy to extend/modify without impacting other components","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Travissssz"},"content":"2. User Experience:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Travissssz"},"content":"- Marker-based parameters (/w, /r, etc.) allow flexible input order.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Travissssz"},"content":"- Strict validation ensures data integrity while accommodating variations.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Travissssz"},"content":"3. Reliability:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Travissssz"},"content":"- Immutable Workout objects prevent accidental modification.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Travissssz"},"content":"- Thread-safe design for future scalability.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Travissssz"},"content":"4. Validation:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Travissssz"},"content":"- Fail-fast approach with multiple checks (type, format, range).","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Travissssz"},"content":"- Prevents invalid state changes.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Travissssz"},"content":"- ","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Travissssz"},"content":"### 4. Alternatives considered","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Travissssz"},"content":"1. Positional Arguments:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Travissssz"},"content":"- Rejected: Less intuitive and more error-prone than marker-based input.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Travissssz"},"content":"2. Unified Log Class:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Travissssz"},"content":"- Rejected: Would require runtime type checks and reduce type safety.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Travissssz"},"content":"- Current specialized classes provide better compile-time validation.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Travissssz"},"content":"### 5. Sequence Diagrams","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Travissssz"},"content":"![AddWorkoutSD.png](images/AddWorkoutSD.png)","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Travissssz"},"content":"### 6. Future Improvements","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Travissssz"},"content":"The weight tracking functionality will be enhanced to support more advanced strength training scenarios.","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Travissssz"},"content":"This will include the ability to record varying weights within a single workout session, such as pyramid sets or drop sets, through an expanded command syntax.","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Travissssz"},"content":"## Goals","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Travissssz"},"content":"### 1. Feature Overview","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27T13:18:24","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"keanneeee"},"content":"The Goals feature allows users to set and view personalized health goals within the chatbot. These include:","lastModifiedDate":"2025-03-27T13:18:24","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"keanneeee"},"content":"Daily Water Intake Goal (/w), Daily Calorie Intake Goal (/cal), Weight Goal (/kg)","lastModifiedDate":"2025-03-31T15:21:46","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27T13:18:24","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Travissssz"},"content":"### 2. Implementation Details","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27T13:18:24","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"keanneeee"},"content":"The add goal command is implemented in the main parser logic using a switch statement. Here\u0027s how it works:","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"keanneeee"},"content":"- When the user enters add goal /w [value] /cal [value] /kg [value], the input is parsed using AddGoalParser.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"keanneeee"},"content":"- If any parameters are missing (e.g., no /cal provided), they are auto-filled using the current values stored ","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"keanneeee"},"content":"in the Goals singleton instance.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"keanneeee"},"content":"- ParserParameters extracts the parameters into a key-value map.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"keanneeee"},"content":"- AddGoalCommand is then created with the parsed values and executed.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"keanneeee"},"content":"- If the values differ from the current ones, Goals.updateGoals() updates the stored values, and the goal is ","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"keanneeee"},"content":"logged to the goalLogs list.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"keanneeee"},"content":"- Track function (called with track goal /d \u003cdate\u003e) as well as the view function (called with view goal) are ","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"keanneeee"},"content":"supplementary functions provided to increase the accountability of the user by giving him easy access to previous and","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"keanneeee"},"content":"current stats.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"keanneeee"},"content":"Exceptions such as InvalidGoalException and InvalidDateFormatException are handled gracefully to ensure robustness.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27T13:18:24","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Travissssz"},"content":"### 3. Why This Design","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"keanneeee"},"content":"- Simplicity: A single command (add goal) handles all updates in one go, keeping the interaction concise ","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"keanneeee"},"content":"and easy to use.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"keanneeee"},"content":"- Singleton Pattern: Using Goals.getInstance() ensures centralized access to the current user goals across the app.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"keanneeee"},"content":"- Auto-Fill Support: Missing parameters default to current goal values, streamlining repeated updates.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"keanneeee"},"content":"- Separation of Concerns: Goal parsing and updating are kept modular and separate from logging and UI logic","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27T13:18:24","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Travissssz"},"content":"### 4. Alternatives Considered","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"keanneeee"},"content":"- Command Pattern: We considered creating individual commands for each goal type (e.g., SetWaterGoalCommand), ","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"keanneeee"},"content":"but found a unified approach more straightforward for the CLI.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"keanneeee"},"content":"- Interactive CLI Loop: Earlier versions used a conversational loop for goal editing, but it was replaced by a ","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"keanneeee"},"content":"single-line command to reduce complexity.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"keanneeee"},"content":"- Persistent Storage: While current goal data is stored in-memory and appended to the log file, we plan to enhance ","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"keanneeee"},"content":"persistence for full session retention.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-27T13:18:24","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Travissssz"},"content":"### 5. Sequence Diagrams","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"keanneeee"},"content":"![GoalSD.png](Images/GoalSD.png)","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Travissssz"},"content":"### 6. Future Improvements","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"keanneeee"},"content":"- Input Validation: Use regex or stricter parsing to ensure only valid integers are accepted.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"keanneeee"},"content":"- Persistent Goal Storage: Store and reload goals from file or database to retain state between sessions.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"keanneeee"},"content":"- Multi-User Support: Refactor the singleton Goals class to support different profiles.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"keanneeee"},"content":"- Goal Recommendations: Use history from logs (e.g., average water intake) to suggest realistic goal values","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"kinneo"},"content":"1. Fitness-conscious individuals","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"kinneo"},"content":"2. Users who prefer CLI-based tools","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"kinneo"},"content":"3. Individuals who want to log workouts, meals, water intake, and progress","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"kinneo"},"content":"4. Java users with basic terminal skills","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"kinneo"},"content":"HealthBud provides a simple and effective CLI solution to track health logs including workouts, meals, water intake,","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"keanneeee"},"content":"and personal bests. Unlike complex mobile apps, it runs offline and keeps the data lightweight and easily exportable.","lastModifiedDate":"2025-03-31T15:21:46","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"|Version| As a ...           | I want to ...                                         | So that I can ...                                        |","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"kinneo"},"content":"|--------|-------------------|--------------------------------------------------------|-----------------------------------------------------------|","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"kinneo"},"content":"|v1.0   | new user           | see usage instructions                                | refer to them when I forget how to use the app           |","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"kinneo"},"content":"|v1.1   | user               | add workout logs                                      | track my workout progress                                |","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"kinneo"},"content":"|v1.2   | user               | record meal entries                                   | track calorie intake                                     |","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"kinneo"},"content":"|v1.3   | user               | input water logs                                      | ensure I stay hydrated                                   |","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"kinneo"},"content":"|v1.4   | user               | record my personal bests                              | see strength improvements over time                      |","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"kinneo"},"content":"|v2.0   | fitness enthusiast | get workout recommendations by muscle group          | try targeted exercises for specific body parts           |","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"kinneo"},"content":"|v2.1   | user               | calculate BMI                                         | know if I’m in a healthy weight range                    |","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"kinneo"},"content":"|v2.2   | user               | summarize daily intake                                | get a quick overview of my calories and hydration        |","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"kinneo"},"content":"|v2.3   | user               | view logs by date                                     | track my daily progress easily                           |","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"kinneo"},"content":"|v2.4   | user               | clear logs by category                                | declutter and keep only relevant data                    |","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"kinneo"},"content":"|v2.5   | user               | set fitness goals                                     | stay motivated and focused on my targets                 |","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"kinneo"},"content":"1. Should work on any platform with Java 17 or above","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"kinneo"},"content":"2. CLI response time under 1 second","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"kinneo"},"content":"3. Saves data locally in .txt file format","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"kinneo"},"content":"4. Commands should follow a consistent, predictable format","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"kinneo"},"content":"5. Lightweight and offline-capable (no external database or network dependency)","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"kinneo"},"content":"1. CLI – Command Line Interface","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"kinneo"},"content":"2. SUT – System Under Test","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"kinneo"},"content":"3. BMI – Body Mass Index","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"kinneo"},"content":"4. PB – Personal Best","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"kinneo"},"content":"5. Log – A record of user data (e.g., workout, meal, water)","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"kinneo"},"content":"6. Command – A user-triggered action that HealthBud performs","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"kinneo"},"content":"7. Parser – Component that interprets user input and returns a corresponding command","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"kinneo"},"content":"### Prerequisites","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"kinneo"},"content":"1. Java 17 or later installed","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"kinneo"},"content":"2. HealthBud.jar built or downloaded","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"kinneo"},"content":"### Running the Program","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"kinneo"},"content":"1. Ensure that you have Java 17 or above installed.","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"kinneo"},"content":"2. Download the latest version of HealthBud from here.","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"kinneo"},"content":"3. Open a terminal and navigate to the folder where the application is located.","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"kinneo"},"content":"4. Run java -jar HealthBud.jar to start the application.","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"kinneo"},"content":"5. Start entering commands to log your fitness activities!","lastModifiedDate":"2025-03-23T13:40:17","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":83,"keanneeee":40,"kinneo":125,"Ahmish15":57,"-":27,"Travissssz":105}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# HealthBud","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"HealthBud is a fitness tracking application that helps users manage their workout routines, meal logs, water intake, and","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"personal bests (PBs). With an easy-to-use command-line interface, users can log, view, and manage their fitness data ","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"efficiently.","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false}],"authorContributionMap":{"kinneo":4,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"Welcome to HealthBud, your personal fitness companion! Whether you\u0027re tracking workouts, logging meals, monitoring water","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"intake, or recording personal bests (PBs), HealthBud makes fitness management simple and effective. With an intuitive ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"command-line interface, you can easily log, view, and organize your fitness data.","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"HealthBud goes beyond basic tracking by helping you set and monitor fitness goals, calculate BMI, track your cutting ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"or bulking progress, and even receive workout recommendations. Stay motivated and in control of your health journey with","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"HealthBud!","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"## Quick start","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"1. Ensure you have Java 17 or above installed in your Computer. You can download the latest version of Java from here.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"2. Download the latest .jar file from here.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"3. Copy the file to the folder you want to use as the home folder for HealthBud.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"4. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar HealthBud.jar command to run the application.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"5. Your command terminal should show the following:","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"//insert healthbud starting page","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"6. Type the command in the command terminal and press Enter to execute it.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"   Some example commands you can try:","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"- `add meal` chicken rice `/cal` 200 `/d` 02/02/2025 `/t` 1700: Adds a meal type task with description chicken rice, calories 200, date 02/02/2025 and time 1700 to the task tracker.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"- `list workout`: Lists all workout logs.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"- `delete water` 1: Deletes the water log with index 1.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"- `bye`: Exits the app.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"### Help","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"Display this list of commands","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"Format: `help`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"Example of usage: `help`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"Here are the commands you can use:","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":" 1. help - Display this list of commands","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Travissssz"},"content":" 2. bye - Exit the program","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Travissssz"},"content":" 3. recommend \u003cmuscle_group\u003e - Get workout recommendations","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Travissssz"},"content":" 4. bmi /w \u003cweight_in_kg\u003e /h \u003cheight_in_m\u003e - Calculate your BMI","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Travissssz"},"content":" 5. add workout \u003cexercise\u003e /w \u003cweight in kg\u003e /r \u003creps\u003e /s \u003csets\u003e /d \u003cdate\u003e - Add a workout log","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Travissssz"},"content":" 6. add meal \u003cmeal_name\u003e /cal \u003ccalories\u003e /d \u003cdate\u003e /t \u003ctime\u003e - Add a meal log","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Travissssz"},"content":" 7. add water /ml \u003cvolume\u003e /d \u003cdate\u003e /t \u003ctime\u003e - Add a water log","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Travissssz"},"content":" 8. add pb \u003cexercise\u003e /w \u003cweight_in_kg\u003e /d \u003cdate\u003e - Record a personal best","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Travissssz"},"content":" 9. sum \u003ccal|vol\u003e /d \u003cdate\u003e - Sum up the total calories/water for the day","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Travissssz"},"content":" 10. clear \u003cpb|meal|workout|water\u003e - Clear the respective log","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Travissssz"},"content":" 11. view /m \u003clogtype\u003e /d \u003cdate\u003e, at least one must be provided. OR view /m all","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Travissssz"},"content":" 12. add cardio \u003cexercise\u003e /s \u003cspeed\u003e /i \u003cincline\u003e /t \u003cduration\u003e /d \u003cdate\u003e - Add a cardio log","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Travissssz"},"content":" 13. add goals - to enter goal setting mode","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Travissssz"},"content":" 13.1  /w \u003cwaterGoals /c \u003ccalorieGoals\u003e /m \u003cweightGoals\u003e - to edit personal goals","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Travissssz"},"content":" 14. status change \u003ccutting/bulking\u003e - Update your cutting/bulking status.","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Travissssz"},"content":" 15. status report - View your current cutting/bulking progress","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"### Bye","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"Exit the program","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"Format: `bye`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"Example of usage: `bye`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"### Recommend","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"Get workout recommendations","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"Format: `recommend \u003cmuscle_group\u003e`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"Example of usage: `recommend biceps`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Travissssz"},"content":"Here are some recommended biceps exercises:","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Travissssz"},"content":" 1. Barbell Bicep Curls","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Travissssz"},"content":" 2. Hammer Curls","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Travissssz"},"content":" 3. Cable Curls","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"### BMI","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"Calculate your BMI","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"Format: `bmi /w \u003cweight_in_kg\u003e /h \u003cheight_in_m\u003e`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"Example of usage: `bmi /w 75 /h 1.8`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Travissssz"},"content":"Your BMI is: 23.15, you are of normal weight.","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"### Add workout","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"Add a workout log","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"Format: `add workout \u003cexercise\u003e /w \u003cweight in kg\u003e /r \u003creps\u003e /s \u003csets\u003e /d \u003cdate\u003e`","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add workout bench /w 100 /r 8 /s 3 /d 02/02/2025`","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Travissssz"},"content":" Got it. I\u0027ve added this log:workout","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Travissssz"},"content":"  bench (3 sets of 100 kg for 8 reps) on 02 Feb 2025","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Travissssz"},"content":" Now you have 22 workout logs in the list.","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"### Add meal","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"Adds a meal log","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"Format: `add meal \u003cmeal_name\u003e /cal \u003ccalories\u003e /d \u003cdate\u003e /t \u003ctime\u003e`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add meal chicken rice /cal 200 /d 02/02/2025 /t 1700`","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Travissssz"},"content":" Got it. I\u0027ve added this log:meal","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Travissssz"},"content":"  chicken rice (200 cal) on: 02 Feb 2025 at: 1700","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Travissssz"},"content":" Now you have 1 meal logs in the list.","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"### Add water","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"Adds a water log","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"Format: `add water /ml \u003cvolume\u003e /d \u003cdate\u003e /t \u003ctime\u003e`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add water /ml 1000 /d 02/02/2025 /t 1700`","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Travissssz"},"content":" Got it. I\u0027ve added this log:water","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Travissssz"},"content":"  4.0 glass of water on (02 Feb 2025) at 1700","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Travissssz"},"content":" Now you have 1 water logs in the list.","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"### Add Personal best","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"Record a personal best","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Travissssz"},"content":"Format: `add pb \u003cexercise\u003e /w \u003cweight_in_kg\u003e /d \u003cdate\u003e`","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add pb bench /w 120 /d 02/02/2025`","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Travissssz"},"content":" Got it. I\u0027ve added this log:pb","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Travissssz"},"content":"   bench 120 kg on (02 Feb 2025)","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Travissssz"},"content":" Now you have 1 pb logs in the list.","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"### Add Cardio","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"Add a cardio log","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"Format: `add cardio \u003cexercise\u003e /s \u003cspeed\u003e /i \u003cincline\u003e /t \u003cduration\u003e /d \u003cdate\u003e`","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add cardio run /s 8 /i 5 /t 30 /d 02/02/2025`","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Travissssz"},"content":"```","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Travissssz"},"content":" Got it. I\u0027ve added this log:cardio","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Travissssz"},"content":"  run (speed: 8, incline: 5, duration: 30 mins) on 02 Feb 2025","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Travissssz"},"content":" Now you have 1 cardio logs in the list.","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kinneo"},"content":"### Add goals","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kinneo"},"content":"Enter goal setting mode","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Travissssz"},"content":"Format: `add goal`","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Travissssz"},"content":"Example of usage: `add goal`","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Travissssz"},"content":"Welcome to goal setting! Here are your current goals: ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Travissssz"},"content":"Daily Water Goal: 1500 ml","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Travissssz"},"content":"Daily Calorie Goal: Not set yet","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Travissssz"},"content":"Weight Goal: Not set yet","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Travissssz"},"content":"What goal would you like to add today?","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Travissssz"},"content":"Goal has been updated:","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Travissssz"},"content":"Daily Water Goal: 1500 ml","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Travissssz"},"content":"Daily Calorie Goal: Not set yet","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Travissssz"},"content":"Weight Goal: Not set yet","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kinneo"},"content":"### Edit goals","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kinneo"},"content":"Edit personal fitness goals","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kinneo"},"content":"Format: `/w \u003cwaterGoals\u003e /c \u003ccalorieGoals\u003e /m \u003cweightGoals\u003e`","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kinneo"},"content":"Example of usage: `/w 3000 /c 2500 /m 70`","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Travissssz"},"content":"adasdad","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kinneo"},"content":"### Sum","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kinneo"},"content":"Sum up the total calories/water for the day","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kinneo"},"content":"Format: `sum \u003ccal|vol\u003e /d \u003cdate\u003e`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Travissssz"},"content":"Example of usage: `sum cal /d 02/02/2025`","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kinneo"},"content":"Total calories consumed: 500","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kinneo"},"content":"### Clear","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kinneo"},"content":"Clear the respective log","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kinneo"},"content":"Format: `clear \u003cpb|meal|workout|water\u003e`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kinneo"},"content":"Example of usage: `clear meal`","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Travissssz"},"content":"Noted. I\u0027ve removed all logs.","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kinneo"},"content":"### Status Change","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kinneo"},"content":"Update your cutting/bulking status","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kinneo"},"content":"Format: `status change \u003ccutting|bulking\u003e`","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kinneo"},"content":"Example of usage: `status change bulking`","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Travissssz"},"content":"Status updated to: bulking","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kinneo"},"content":"### Status report","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kinneo"},"content":"View your current cutting/bulking progress","lastModifiedDate":"2025-03-31T14:47:19","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Travissssz"},"content":"Format: `status report \u003cdate\u003e`","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Travissssz"},"content":"Example of usage: `status report 26/12/2023`","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Travissssz"},"content":"Total calories consumed: 2300","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Travissssz"},"content":"Total calories burned: 790","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Travissssz"},"content":"Current Status: bulking","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Travissssz"},"content":"Your intake does not align with your goal. Net calories: 500","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Ahmish15"},"content":"### Search Keywords/date","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Ahmish15"},"content":"Search for logs by keywords or date","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Ahmish15"},"content":"Format: `search \u003cloglist\u003e /k \u003ckeyword\u003e` OR `search \u003cloglist\u003e /d \u003cdate\u003e`","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Ahmish15"},"content":"Example of usage: `search workout /k bench` OR `search meal /d 6/5/2025`(search for all meals on 5th June 2025)","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Travissssz"},"content":"Showing logs containing keyword: bench","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Travissssz"},"content":"1. bench press (4 sets of 60 kg for 8 reps) on 26 Dec 2023","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Travissssz"},"content":"3. bench press (4 sets of 65 kg for 9 reps) on 31 Dec 2023","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Travissssz"},"content":"5. bench press (4 sets of 69 kg for 4 reps) on 10 Jan 2024","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Travissssz"},"content":"``` ","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Travissssz"},"content":"| Command      |                                                          Format, Example                                                          |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Travissssz"},"content":"|--------------|:---------------------------------------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Travissssz"},"content":"| ```help```        |                                                               ```help```                                                                |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Travissssz"},"content":"| ```bye```         |                                                               ``` bye```                                                                |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Travissssz"},"content":"| ```reccommend```   |                                        recommend [muscle_group] \u003cbr/\u003e e.g ```recommend biceps```                                        |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Travissssz"},"content":"| ```bmi```          |                                 bmi /w [weight_in_kg] /h [height_in_m] \u003cbr/\u003e e.g ```bmi /w 75 /h 1.8```                                 |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Travissssz"},"content":"| ```add workout```  | add workout [exercise] /w [weight in kg] /r [reps] /s [sets] /d [date] \u003cbr/\u003e e.g ```add workout bench /w 100 /r 8 /s 3 /d 02/02/2025``` |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Travissssz"},"content":"| ```add meal```     |      add meal [meal_name] /cal [calories] /d [date] /t [time] \u003cbr/\u003e e.g ```add meal chicken rice /cal 200 /d 02/02/2025 /t 1700```      |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Travissssz"},"content":"| ```add water```    |                  add water /ml [volume] /d [date] /t [time]  \u003cbr/\u003e e.g ```add water /ml 1000 /d 02/02/2025 /t 1700```                   |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Travissssz"},"content":"| ```add pb```       |                     add pb [exercise] /w [weight_in_kg] /d [date] \u003cbr/\u003e e.g ```add pb bench /w 120 /d 02/02/2025```                     |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Travissssz"},"content":"| ```add cardio```   |   add cardio [exercise\u003e] /s [speed] /i [incline] /t [duration] /d [date] \u003cbr/\u003e e.g ```add cardio run /s 8 /i 5 /t 30 /d 02/02/2025```   |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Travissssz"},"content":"| ```add goal```     |                                                             ```add goal```                                                              |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Travissssz"},"content":"| ```add goal```     |               add goal /w [waterGoals] /c [calorieGoals] /m [weightGoals] \u003cbr/\u003e e.g ```add goal /w 2000 /c 3000 /m 70```                |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Travissssz"},"content":"| ```sum```          |                                      sum [cal/vol] /d [date] \u003cbr/\u003e e.g ```sum cal /d 02/02/2025```                                      |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Travissssz"},"content":"| ```clear```        |                                      clear [pb\\|meal\\|workout\\|water] \u003cbr\u003e e.g., ```clear meal```                                       |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Travissssz"},"content":"| ```status change``` |                                 status change [cutting\\|bulking] \u003cbr\u003e e.g.,``` staus change bulking```                                  |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Travissssz"},"content":"| ```status report```      |                                      status report [date] \u003cbr\u003e e.g.,```status report 12/13/2023```       |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Travissssz"},"content":"| ```search```|     search [loglist] /k [keyword]  OR search [loglist] /d [date] \u003cbr\u003e e.g., ```search workout bench OR search meal /d 02/04/200```1     |","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":20,"kinneo":89,"Ahmish15":7,"-":34,"Travissssz":119}},{"path":"docs/diagrams/AddLogCommand SD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"@startuml","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"actor User","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"participant \":HealthBud\" as HealthBud","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"participant \":ParserManager\" as ParserManager","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"participant \":AddParser\" as AddParser","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"participant \":AddWorkoutParser\" as AddWorkoutParser","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"participant \":ParserParameters\" as ParserParameters","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"participant \":DateParser\" as DateParser","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"participant \":AddWorkoutCommand\" as AddWorkoutCommand","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Travissssz"},"content":"participant \"workoutLogs:LogList\" as LogList","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Travissssz"},"content":"participant \"new:Workout\" as Workout","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Travissssz"},"content":"User -\u003e HealthBud : add workout","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"activate HealthBud","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"HealthBud -\u003e ParserManager : handleInput(","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"activate ParserManager","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"ParserManager -\u003e AddParser : parse()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Travissssz"},"content":"activate AddParser","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"AddParser -\u003e AddWorkoutParser : parse()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"activate AddWorkoutParser","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser -\u003e ParserParameters : parseParameters()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"activate ParserParameters","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"ParserParameters --\u003e AddWorkoutParser : params","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"deactivate ParserParameters","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser -\u003e DateParser : formatDate()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"activate DateParser","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"DateParser --\u003e AddWorkoutParser : formatDate","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"deactivate DateParser","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser --\u003e AddParser : new AddWorkoutCommand()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"deactivate AddWorkoutParser","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"AddParser --\u003e ParserManager : AddWorkoutCommand","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"deactivate AddParser","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"ParserManager -\u003e AddWorkoutCommand : execute()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"activate AddWorkoutCommand","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand -\u003e Workout : new()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"activate Workout","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"Workout --\u003e AddWorkoutCommand","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"deactivate Workout","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand -\u003e LogList : addLog(new Workout)","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"activate LogList","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"LogList -\u003e LogList : logs.add(log)","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"LogList -\u003e Storage : appendLogToFile(log)","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"LogList --\u003e AddWorkoutCommand","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"deactivate LogList","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand --\u003e ParserManager","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"deactivate AddWorkoutCommand","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Travissssz"},"content":"ParserManager --\u003e HealthBud","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Travissssz"},"content":"deactivate ParserManager","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Travissssz"},"content":"deactivate HealthBud","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Travissssz"},"content":"@enduml","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false}],"authorContributionMap":{"Travissssz":63}},{"path":"docs/diagrams/AddWorkoutCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"@startuml","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"class AddWorkoutParser {","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"    +parse(LogList, String): AddWorkoutCommand","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"class AddWorkoutCommand {","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"    - String name","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"    - String reps","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Travissssz"},"content":"    - String sets","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Travissssz"},"content":"    - String date","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Travissssz"},"content":"    - String weight","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Travissssz"},"content":"    + execute()","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"class WorkOUT {","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"    - String name","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"    - String reps","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"    - String sets","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Travissssz"},"content":"    - String date","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"    - String weight","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"class LogList {","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Travissssz"},"content":"    + addLog(Log)","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"class OneLogCommand {","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"    # LogList logList","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"    # String input","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"class ParserParameters{","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":" + parseParameters(String input) : Map\u003cString, String\u003e","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"class DateParser{","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"  -  String OUTPUT_FORMAT","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"  - List\u003cString\u003e INPUT_FORMATS","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"  + formatDate(String inputDate) : String","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser --\u003e AddWorkoutCommand","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand --|\u003e OneLogCommand","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand --\u003e WorkOUT","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand --\u003e LogList","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser ..\u003e ParserParameters","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser ..\u003e DateParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"@enduml","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false}],"authorContributionMap":{"Travissssz":53}},{"path":"docs/diagrams/AddWorkoutSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"@startuml","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"actor User","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"participant \":HealthBud\" as HealthBud","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"participant \":GeneralParser\" as GeneralParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"participant \":AddParser\" as AddParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"participant \":AddWorkoutParser\" as AddWorkoutParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"participant \":ParserParameters\" as ParserParameters","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"participant \":DateParser\" as DateParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"participant \":AddWorkoutCommand\" as AddWorkoutCommand","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Travissssz"},"content":"participant \"workoutLogs:LogList\" as LogList","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Travissssz"},"content":"participant \"new:Workout\" as Workout","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Travissssz"},"content":"User -\u003e HealthBud : add workout","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"activate HealthBud","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"HealthBud -\u003e GeneralParser : handleInput()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"activate GeneralParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"GeneralParser -\u003e AddParser : parse()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Travissssz"},"content":"activate AddParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"AddParser -\u003e AddWorkoutParser : parse(workoutLogs, input)","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"activate AddWorkoutParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser -\u003e ParserParameters : parseParameters(0)","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"activate ParserParameters","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"ParserParameters --\u003e AddWorkoutParser : params","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"deactivate ParserParameters","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser -\u003e DateParser : formatDate()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"activate DateParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"DateParser --\u003e AddWorkoutParser : formattedDate","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"deactivate DateParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"AddWorkoutParser --\u003e AddParser : AddWorkoutCommand","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"deactivate AddWorkoutParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"AddParser --\u003e GeneralParser : AddWorkoutCommand","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"deactivate AddParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"GeneralParser -\u003e AddWorkoutCommand : execute()","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"activate AddWorkoutCommand","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand -\u003e Workout : new()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"activate Workout","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"Workout --\u003e AddWorkoutCommand","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"deactivate Workout","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand -\u003e LogList : addLog()","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"activate LogList","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"LogList --\u003e AddWorkoutCommand","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"deactivate LogList","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"AddWorkoutCommand --\u003e GeneralParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Travissssz"},"content":"deactivate AddWorkoutCommand","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"GeneralParser --\u003e HealthBud","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":"deactivate GeneralParser","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Travissssz"},"content":"HealthBud --\u003e User","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Travissssz"},"content":"deactivate HealthBud","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Travissssz"},"content":"@enduml","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false}],"authorContributionMap":{"Travissssz":62}},{"path":"docs/diagrams/Architecture.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"@startuml","lastModifiedDate":"2025-04-03T05:35:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:35:14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"\u0027 Actors","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"actor User","lastModifiedDate":"2025-04-03T05:35:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:35:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"\u0027 System components in rectangles","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"rectangle {","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"    rectangle Ui","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"    rectangle HealthBud","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"    rectangle seedu.healthbud.log","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"    rectangle seedu.healthbud.parser","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    rectangle seedu.healthbud.storage","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"    rectangle seedu.healthbud.command","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"    rectangle LogList","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03T05:35:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:35:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"\u0027 Actor interaction","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"User --[dotted]\u003e Ui","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:35:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"\u0027 Main app calls","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"HealthBud --\u003e Ui","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"HealthBud --\u003e LogList","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"HealthBud --\u003e seedu.healthbud.storage","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"HealthBud --\u003e seedu.healthbud.parser","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:35:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"\u0027 UI accesses model indirectly","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"Ui -[dotted]\u003e seedu.healthbud.log","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"Ui -[dotted]\u003e LogList","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:35:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"\u0027 LogList uses:","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"LogList --\u003e seedu.healthbud.log","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"LogList --[dotted]\u003e seedu.healthbud.storage","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"\u0027 Parser and Command collaboration","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"seedu.healthbud.parser --\u003e seedu.healthbud.command","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"seedu.healthbud.command --\u003e LogList","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"\u0027 Storage handles persistence of logs","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"seedu.healthbud.storage --\u003e seedu.healthbud.log","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"hide circle","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:35:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"@enduml","lastModifiedDate":"2025-04-03T05:35:14","isFullCredit":false}],"authorContributionMap":{"keanneeee":43}},{"path":"docs/diagrams/BMISD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"@startuml","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"actor User","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"participant \":HealthBud\" as HealthBud","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"participant \":GeneralParser\" as GeneralParser","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"participant \":BMIParser\" as BMIParser","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"participant \":BMICommand\" as BMICommand","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"User -\u003e HealthBud: \"bmi weight 70kg, height is 1.75m\"","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"activate HealthBud","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"HealthBud -\u003e GeneralParser: handle input for bmi weight 70kg, height is 1.75m","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"activate GeneralParser","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"GeneralParser -\u003e BMIParser: parse bmi weight 70kg, height is 1.75m","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"activate BMIParser","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"alt valid input","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"    BMIParser -\u003e BMIParser: extract weight\u003d70, height\u003d1.75","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"    BMIParser -\u003e BMICommand: return new BMICommand(\"bmi 70 /h 1.75\", 70, 1.75)","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"else invalid input","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"    BMIParser -\u003e BMIParser: throw HealthBudException\\nor InvalidBmiException","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"end","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"deactivate BMIParser","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"GeneralParser -\u003e BMICommand: execute()","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"activate BMICommand","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"deactivate BMICommand","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"GeneralParser --\u003e HealthBud: success message","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"deactivate GeneralParser","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"HealthBud --\u003e User: display result","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"deactivate HealthBud","lastModifiedDate":"2025-04-03T10:57:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"@enduml","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false}],"authorContributionMap":{"Ahmish15":35}},{"path":"docs/diagrams/DeleteSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"@startuml","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"actor User","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"participant \":HealthBud\" as HealthBud","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"participant \":GeneralParser\" as GeneralParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"participant \":DeleteParser\" as DeleteParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"participant \":DeleteCommand\" as DeleteCommand","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"participant \"mealLogs:LogList\" as LogList","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"User -\u003e HealthBud : \"delete meal 3\"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"activate HealthBud","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"HealthBud -\u003e GeneralParser : handleInput(\"delete meal 3\", mealLogs, ...)","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"activate GeneralParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"GeneralParser -\u003e DeleteParser : parse(\"delete meal 3\", mealLogs, ...)","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"activate DeleteParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"DeleteParser -\u003e DeleteParser : Extract log type and index","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"activate DeleteParser","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"DeleteParser --\u003e DeleteParser : index \u003d 3 \u0026 logType \u003d \"meal\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"deactivate DeleteParser","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"DeleteParser --\u003e GeneralParser : return DeleteCommand(mealLogs, index\u003d3)","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"deactivate DeleteParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"GeneralParser -\u003e DeleteCommand : execute()","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"activate DeleteCommand","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"DeleteCommand -\u003e LogList : deleteLog(2)   \u0027 Adjusted for 0-based indexing","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"activate LogList","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"LogList --\u003e DeleteCommand : confirmation (log deleted)","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"deactivate LogList","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"DeleteCommand --\u003e GeneralParser : success message","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"deactivate DeleteCommand","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"GeneralParser --\u003e HealthBud : success message","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"deactivate GeneralParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"HealthBud --\u003e User : display success message","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"deactivate HealthBud","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"@enduml","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":43}},{"path":"docs/diagrams/GoalCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"@startuml","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"\u0027 https://plantuml.com/class-diagram","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"\u0027 Legend:","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"\u0027 --\u003e    navigability/association (used in method or field)","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"\u0027 ..\u003e    dependency (used as parameter/return/throws)","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"\u0027 --|\u003e   inheritance","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"Goals --|\u003e Log","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"Goals : - static instance: Goals","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"Goals : - dailyWaterGoal: String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"Goals : - dailyCalorieGoal: String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"Goals : - weightGoal: String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"Goals : - weeklyWeightProgress: String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"Goals : + getInstance(): Goals","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"Goals : + updateGoals(water: String, calorie: String, weight: String): void","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"Goals : + setDailyWaterGoal(goal: String): void","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"Goals : + setDailyCalorieGoal(goal: String): void","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"Goals : + setWeightGoal(goal: String): void","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"Goals : + setWeeklyWeightProgress(progress: String): void","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"Goals : + getDailyWaterGoal(): String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"Goals : + getDailyCalorieGoal(): String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"Goals : + getWeightGoal(): String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"Goals : + getWeeklyWeightProgress(): String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"Goals : + toString(): String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"AddGoalParser : + parse(goalLogs: LogList, input: String): AddGoalCommand","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"AddGoalParser : - addMissingParameters(input: String): String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"AddGoalParser ..\u003e Goals : uses","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"AddGoalParser ..\u003e AddGoalCommand : creates","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"AddGoalParser ..\u003e InvalidGoalException : throws","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"SingleLogCommand : - input: String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"SingleLogCommand : - logList: LogList","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"SingleLogCommand --\u003e LogList","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand --|\u003e SingleLogCommand","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : - static waterGoal: String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : - static calorieGoal: String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : - static weightGoal: String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : - static weeklyWeightProgress: String","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : + AddGoalCommand(LogList, String, String, String, String)","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand : + execute(): void","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand --\u003e Goals : uses singleton","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand ..\u003e LogList : modifies","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand ..\u003e Storage : calls append","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"@enduml","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false}],"authorContributionMap":{"keanneeee":48}},{"path":"docs/diagrams/GoalSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"@startuml","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"actor User","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"participant \":HealthBud\" as HealthBud","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"participant \":GeneralParser\" as GeneralParser","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"participant \":AddParser\" as AddParser","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"participant \":AddGoalParser\" as AddGoalParser","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"participant \":ParserParameters\" as ParserParameters","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"participant \":AddGoalCommand\" as AddGoalCommand","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"participant \":Goals\" as Goals","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"participant \"goalLogs:LogList\" as LogList","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"User -\u003e HealthBud : \"add goal /w 2000 /cal 1800 /kg 65\"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"activate HealthBud","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"HealthBud -\u003e GeneralParser : handleInput(\"add goal ...\")","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"activate GeneralParser","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"GeneralParser -\u003e AddParser : parse(\"goal\", goalLogs, ...)","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"activate AddParser","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"AddParser -\u003e AddGoalParser : parse(goalLogs, input)","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"activate AddGoalParser","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"AddGoalParser -\u003e ParserParameters : parseParameters(\"/w 2000 /cal 1800 /kg 65\")","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"activate ParserParameters","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"ParserParameters --\u003e AddGoalParser : params {w: \"2000\", cal: \"1800\", kg: \"65\"}","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"deactivate ParserParameters","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"AddGoalParser -\u003e Goals : getInstance()","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"activate Goals","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"Goals --\u003e AddGoalParser : singleton instance","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"deactivate Goals","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"AddGoalParser --\u003e AddParser : new AddGoalCommand","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"deactivate AddGoalParser","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"AddParser --\u003e GeneralParser : AddGoalCommand","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"deactivate AddParser","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"GeneralParser -\u003e AddGoalCommand : execute()","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"activate AddGoalCommand","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand -\u003e Goals : getInstance()","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"activate Goals","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"Goals --\u003e AddGoalCommand : singleton instance","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"deactivate Goals","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand -\u003e Goals : updateGoals(\"2000\", \"1800\", \"65\")","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"keanneeee"},"content":"activate Goals","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"keanneeee"},"content":"Goals --\u003e AddGoalCommand","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"keanneeee"},"content":"deactivate Goals","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand -\u003e LogList : addLog(Goals)","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"keanneeee"},"content":"activate LogList","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"keanneeee"},"content":"LogList --\u003e AddGoalCommand","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"keanneeee"},"content":"deactivate LogList","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"keanneeee"},"content":"AddGoalCommand --\u003e GeneralParser","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"keanneeee"},"content":"deactivate AddGoalCommand","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"keanneeee"},"content":"GeneralParser --\u003e HealthBud","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"keanneeee"},"content":"deactivate GeneralParser","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"keanneeee"},"content":"HealthBud --\u003e User","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"keanneeee"},"content":"deactivate HealthBud","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"keanneeee"},"content":"@enduml","lastModifiedDate":"2025-04-01T23:03:36","isFullCredit":false}],"authorContributionMap":{"keanneeee":66}},{"path":"docs/diagrams/LogListCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"@startuml","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"hide circle","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"class LogList {","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"  - logs: List\u003cLog\u003e","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"  + getLog(index: int): Log","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"  + getSize(): int","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"  + isEmpty(): boolean","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"  + updateLog(log: Log): void","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"  + addLog(log: Log): void","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"  + loadLog(log: Log): void","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"  + deleteLog(index: int): void","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"  + listLogs(): void","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"  + findLog(keyword: String): void","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"  + clearLogs(): void","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"  + getAllDates(): void","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"  + getCaloriesSum(date: String): int","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"  + getCardioSum(date: String): int","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"  + getWaterSum(date: String): void","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"class Log {","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"  - date: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"  - logType: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"  + getLogType(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"  + getDate(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"class Meal {","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"  - name: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"  - calories: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"  - time: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"  + getName(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"  + getCalories(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"  + getTime(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"class Workout {","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"  - name: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"  - reps: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"  - sets: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"  - weight: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"  + getName(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"  + getReps(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"  + getSets(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"  + getWeight(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"class Water {","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"  - amount: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"  - time: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"  + getAmount(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"  + getTime(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"  + toGlass(amount: String): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"class Cardio {","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"  - name: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"  - speed: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"  - incline: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"  - duration: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"  + getName(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"  + getSpeed(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"  + getIncline(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"  + getDuration(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"class PersonalBest {","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"  - exercise: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"  - weight: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"  + getExercise(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"  + getWeight(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"class Goals {","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"  - dailyWaterGoal: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"  - dailyCalorieGoal: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"  - weightGoal: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"  - weeklyWeightProgress: String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"  + getInstance(): Goals","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"  + updateGoals(water: String, calorie: String, weight: String): void","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"  + toString(): String","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"LogList \"1\" --\u003e \"0..*\" Log : contains","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- Meal","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- Workout","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- Water","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- Cardio","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- PersonalBest","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"Log \u003c|-- Goals","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"@enduml","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false}],"authorContributionMap":{"kinneo":99}},{"path":"docs/diagrams/ParserCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"@startuml","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"hide circle","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"title HealthBud Parser Flow","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"skinparam defaultFontSize 14","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"skinparam arrowThickness 1","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 Central parser manager","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"class ParserManager {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"  +handleInput(input: String): boolean","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 Specific parser classes with expected input formats and extra LogList parameters","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"class BMIParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"bmi /w \u003cweight\u003e /h \u003cheight\u003e\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"class ClearParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, pbLogs: LogList, mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, cardioLogs: LogList): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"clear \u003clogType\u003e\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"class DeleteParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, pbLogs: LogList, cardioLogs: LogList): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"delete \u003clogType\u003e \u003cindex\u003e\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"class ListParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, pbLogs: LogList, cardioLogs: LogList): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"list \u003clogType\u003e\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"class RecommendParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"recommend \u003cmuscle_group\u003e\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"class SearchParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, pbLogs: LogList, cardioLogs: LogList, goalLogs: LogList): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"search \u003clogType\u003e /d \u003cdate\u003e OR /k \u003ckeyword\u003e\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"class StatusParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, goalLogs: LogList, pbLogs: LogList, mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, cardioLogs: LogList): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"status change \u003ccutting|bulking\u003e OR status report\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"class SumParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(input: String, mealLogs: LogList, waterLogs: LogList, cardioLogs: LogList): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected input: \"sum \u003ccal|vol|cardio\u003e /d \u003cdate\u003e\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 Add-command parsers grouped under AddParser","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"class AddParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(subCommand: String, mealLogs: LogList, waterLogs: LogList, cardioLogs: LogList, pbLogs: LogList, workoutLogs: LogList, goalLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"class AddCardioParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(cardioLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected subcommand: \"cardio\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"class AddMealParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(mealLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected subcommand: \"meal\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"class AddPersonalBestParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(pbLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected subcommand: \"pb\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"class AddWaterParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(waterLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected subcommand: \"water\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jasonlobo21"},"content":"class AddWorkoutParser {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jasonlobo21"},"content":"  +parse(workoutLogs: LogList, input: String): Command","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jasonlobo21"},"content":"  \u0027 Expected subcommand: \"workout\"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 General Command produced by any parser","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jasonlobo21"},"content":"class Command {","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 Relationships from ParserManager to specific parsers","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e BMIParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e ClearParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e DeleteParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e ListParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e RecommendParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e SearchParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e StatusParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e SumParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jasonlobo21"},"content":"ParserManager --\u003e AddParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 Relationships from AddParser to specific add-command parsers","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e AddCardioParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e AddMealParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e AddPersonalBestParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e AddWaterParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e AddWorkoutParser","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jasonlobo21"},"content":"\u0027 All parser classes produce a Command (arrow points to a single Command box)","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonlobo21"},"content":"BMIParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jasonlobo21"},"content":"ClearParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jasonlobo21"},"content":"DeleteParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jasonlobo21"},"content":"ListParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jasonlobo21"},"content":"RecommendParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jasonlobo21"},"content":"SearchParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jasonlobo21"},"content":"StatusParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jasonlobo21"},"content":"SumParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jasonlobo21"},"content":"AddParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jasonlobo21"},"content":"AddCardioParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jasonlobo21"},"content":"AddMealParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jasonlobo21"},"content":"AddPersonalBestParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jasonlobo21"},"content":"AddWaterParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jasonlobo21"},"content":"AddWorkoutParser --\u003e Command","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jasonlobo21"},"content":"@enduml","lastModifiedDate":"2025-04-02T00:51:06","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":122}},{"path":"docs/diagrams/RecommendCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"@startuml","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"/\u0027 dependency: parameter, return type, local variable, or exception thrown \u0027/","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"/\u0027 inheritance: once got extend means inheritance i think \u0027/","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"/\u0027 navigability: means A create B or smthing\u0027/","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"/\u0027","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"--|\u003e inheritance","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"--\u003e navigability/association","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"..\u003e dependency","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"\u0027/","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"abstract class Command {","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    +execute(): void","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"class InputOnlyCommand {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    -input: String","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    +InputOnlyCommand(input: String)","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"class RecommendCommand {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    -list: String","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    +RecommendCommand(list: String)","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    +getMessage(): String","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    +execute(): void","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"class RecommendParser {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    +parse(input: String): RecommendCommand","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"class HealthBudException","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"class InvalidRecommendException","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"Command \u003c|-- InputOnlyCommand","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"InputOnlyCommand \u003c|-- RecommendCommand","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"RecommendParser ..\u003e RecommendCommand : creates","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"RecommendCommand ..\u003e HealthBudException : throws","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"RecommendCommand ..\u003e InvalidRecommendException : throws","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"InvalidRecommendException --|\u003e Exception","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"HealthBudException --|\u003e Exception","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"@enduml","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false}],"authorContributionMap":{"kinneo":48}},{"path":"docs/diagrams/RecommendSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"@startuml","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"actor User","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"participant \":RecommendParser\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"participant \":RecommendCommand\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"participant \":Ui\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"participant \":ExceptionHandler\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"User -\u003e \":RecommendParser\": parse(\"recommend \u003cmuscle_group\u003e\")","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"activate \":RecommendParser\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"alt valid input","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    create \":RecommendCommand\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    \":RecommendParser\" -\u003e \":RecommendCommand\": new RecommendCommand(list)","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    activate \":RecommendCommand\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T12:16:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"    \":RecommendCommand\" -\u003e \":RecommendCommand\": execute()","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    \":RecommendCommand\" -\u003e \":Ui\": printMessage(list)","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    activate \":Ui\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    \":Ui\" --\u003e \":RecommendCommand\": display message","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"    deactivate \":Ui\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T12:16:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    \":RecommendCommand\" --\u003e \":RecommendParser\": success message","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    deactivate \":RecommendCommand\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    \":RecommendParser\" --\u003e User: success message","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    deactivate \":RecommendParser\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T12:16:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"else invalid input","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    \":RecommendParser\" -\u003e \":ExceptionHandler\": throw exception","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    activate \":ExceptionHandler\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"    \":ExceptionHandler\" --\u003e \":RecommendParser\": error message","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    deactivate \":ExceptionHandler\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    \":RecommendParser\" --\u003e User: error message","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"    deactivate \":RecommendParser\"","lastModifiedDate":"2025-04-02T16:14:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"end","lastModifiedDate":"2025-03-25T14:46:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"@enduml","lastModifiedDate":"2025-03-23T15:36:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T16:20:47","isFullCredit":false}],"authorContributionMap":{"kinneo":40}},{"path":"docs/diagrams/StorageCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"@startuml","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"class Storage {","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"    +DATA_DIRECTORY : String","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"    +DATA_FILE : String","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"    +DATA_PATH : Path","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"    +loadLogs(mealLogs: LogList, workoutLogs: LogList, waterLogs: LogList, pbLogs: LogList, cardioLogs: LogList, goalLogs: LogList) : void","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"    +parseStringToLog(line: String) : Log","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"    +appendLogToFile(log: Log) : void","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"    +rewriteLogsToFile(logs: LogList) : void","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"    +parseLogToString(log: Log) : String","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"class LogList {","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"    +getLog(index: int) : Log","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"    +getSize() : int","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"    +isEmpty() : boolean","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"    +loadLog(log: Log) : void","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"    +addLog(log: Log) : void","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"    +deleteLog(index: int) : void","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"    ...","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"abstract class Log {","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"    +getDate() : String","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"    +getLogType() : String","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"    +toString() : String","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"class Meal","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"class Workout","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"class Water","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"class PersonalBest","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"class Cardio","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"class Goals {","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"    +getInstance() : Goals","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"    +setDailyWaterGoal(goal: String) : void","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"    +setDailyCalorieGoal(goal: String) : void","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"    +setWeightGoal(goal: String) : void","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"    +getDailyWaterGoal() : String","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"    +getDailyCalorieGoal() : String","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"    +getWeightGoal() : String","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e LogList : uses","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Log : creates/uses","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Meal : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Workout : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Water : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e PersonalBest : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Cardio : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Goals : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e LogList : uses","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e Logs : uses","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"Storage ..\u003e ParserManager: : uses","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"@enduml","lastModifiedDate":"2025-04-03T10:58:55","isFullCredit":false}],"authorContributionMap":{"Ahmish15":59}},{"path":"docs/diagrams/UiCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"@startuml","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"title HealthBud UI Class Diagram","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"skinparam defaultFontSize 14","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"skinparam arrowThickness 1","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"class Ui {","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"  +NEW_LINE: String","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"  +printMessage(message: String): void","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"  +printHealthBuds(): void","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"  +printGreeting(): void","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"  +printGoodbye(): boolean","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"  +printHelp(): void","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"  +printUnknownCommand(): void","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"  +printListedFormat(logs: LogList, index: int): void","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"class LogList {","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"  +getLog(index: int): String","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"Ui --\u003e LogList : uses","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"@enduml","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":23}},{"path":"docs/diagrams/archi2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"@startuml","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"\u0027 Actor","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"actor User","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"\u0027 System modules in rectangles","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"rectangle {","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"    rectangle Ui","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"    rectangle \"HealthBud [Main]\" as Main","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"    rectangle seedu.healthbud.log","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"    rectangle seedu.healthbud.parser","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    rectangle seedu.healthbud.storage","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"    rectangle seedu.healthbud.command","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"    rectangle LogList","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"\u0027 Actor interaction","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"User --[dotted]\u003e Ui","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"\u0027 Main app calls","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"Main --\u003e Ui","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"Main --\u003e LogList","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"Main --\u003e seedu.healthbud.storage","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"Main --\u003e seedu.healthbud.parser","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"\u0027 UI accesses model indirectly","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"Ui -[dotted]\u003e seedu.healthbud.log","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"Ui -[dotted]\u003e LogList","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"\u0027 LogList uses:","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"LogList --\u003e seedu.healthbud.log","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"LogList --[dotted]\u003e seedu.healthbud.storage","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"\u0027 Parser and Command collaboration","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"seedu.healthbud.parser --\u003e seedu.healthbud.command","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"seedu.healthbud.command --\u003e LogList","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"\u0027 Storage handles persistence of logs","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"seedu.healthbud.storage --\u003e seedu.healthbud.log","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"hide circle","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"@enduml","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false}],"authorContributionMap":{"keanneeee":43}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"/\u0027","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":" \u0027/","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"!define PARSER_COLOR #FF9300","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"!define STATEMANAGER_COLOR LOGIC_COLOR","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"!define DATA_COLOR MODEL_COLOR","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"!define COMMON_COLOR LOGIC_COLOR_T2","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"!define MAIN_COLOR #grey","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"!define COMMAND_COLOR #942192","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"!define LOGGER_COLOR #black","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"keanneeee"},"content":"skinparam Package {","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"keanneeee"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"keanneeee"},"content":"    BorderThickness 1","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"keanneeee"},"content":"    FontSize 16","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"keanneeee"},"content":"skinparam Class {","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"keanneeee"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"keanneeee"},"content":"    FontSize 15","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"keanneeee"},"content":"    BorderThickness 1","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"keanneeee"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"keanneeee"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"keanneeee"},"content":"    FontName Arial","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"keanneeee"},"content":"    AttributeFontColor white","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"keanneeee"},"content":"    MethodFontColor white","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"keanneeee"},"content":"skinparam Actor {","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"keanneeee"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"keanneeee"},"content":"    Color USER_COLOR","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"keanneeee"},"content":"    FontName Arial","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"keanneeee"},"content":"skinparam Sequence {","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"keanneeee"},"content":"    MessageAlign center","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"keanneeee"},"content":"    BoxFontSize 15","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"keanneeee"},"content":"    BoxPadding 0","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"keanneeee"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"keanneeee"},"content":"    FontName Arial","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"keanneeee"},"content":"skinparam Participant {","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"keanneeee"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"keanneeee"},"content":"    Padding 20","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"keanneeee"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"keanneeee"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"keanneeee"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"keanneeee"},"content":"skinparam Shadowing false","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"keanneeee"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"keanneeee"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"keanneeee"},"content":"hide footbox","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"keanneeee"},"content":"hide circle","lastModifiedDate":"2025-04-03T20:25:41","isFullCredit":false}],"authorContributionMap":{"keanneeee":93}},{"path":"docs/team/Ahmish15.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# Overview","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"HealthBud is a CLI-based fitness logging assistant designed to help users track and improve their personal health goals.","lastModifiedDate":"2025-04-03T11:17:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"It supports logging of meals, workouts, water intake, cardio sessions, and personal bests, while also offering","lastModifiedDate":"2025-04-03T11:17:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"intelligent features such as progress status and workout recommendations.","lastModifiedDate":"2025-04-03T11:17:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"# Summary of Contributions","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"Implemented all the Add commands and their respective parser classes. Also implemented the Search and BMI Command and their parser classes.","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"## Code contributed","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"[Team Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026chartGroupIndex\u003d40\u0026chartIndex\u003d0)","lastModifiedDate":"2025-04-02T12:16:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"## Enhancements implemented","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"Split the AddLogsCommand into 5 different classes to make it more modular and easier to read. Added the SearchCommand and BMICommand classes to allow users to search for their logs and calculate their BMI respectively. I also played a key role in implementing testing for the BMI, search and List commands.","lastModifiedDate":"2025-04-03T23:23:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"## Contributions to the UG","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"added the following commands to the user guide: SearchCommand and BMICommand","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"## Contributions to the DG","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"BMI Sequence Diagram and Storage Class Diagram. I also talked about the BMI command and Storage class in the DG.","lastModifiedDate":"2025-04-03T23:23:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"revamped our add commands by splitting them into their logic and parsing respectively. This made it easier to read and understand.","lastModifiedDate":"2025-04-03T23:23:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"## Review/mentoring contributions","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"## Contributions beyond the project team:","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false}],"authorContributionMap":{"kinneo":23,"Ahmish15":8}},{"path":"docs/team/Travissssz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# Overview","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"HealthBud is a CLI-based fitness logging assistant designed to help users track and improve their personal health goals.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"It supports logging of meals, workouts, water intake, cardio sessions, and personal bests, while also offering","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"intelligent features such as progress status and workout recommendations.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"# Summary of Contributions","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"Added the AddWorkoutParser, AddCardioParser to parse the input for the user in the relevant classes.","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"Added the DateParser to be able to parse the users date input to a standard format.","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Travissssz"},"content":"Edited the ParserParameters to be able to take in date inputs with \u0027/\u0027 format as well.","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T12:16:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"## Code contributed","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"[Team Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026chartGroupIndex\u003d40\u0026chartIndex\u003d4)","lastModifiedDate":"2025-04-02T12:16:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"## Enhancements implemented","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"Initially, user-provided date formats were directly appended to the LogList without standardization. While this approach preserved the raw input, it proved suboptimal for functionalities such as search, which relied on consistent date formatting to accurately retrieve entries. To address this, I implemented a standardized date parser, ensuring that all dates are uniformly processed, stored, and displayed, thereby improving reliability across date-dependent operations.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"Additionally, I enhanced the parsing logic for workout and cardio entries by introducing dedicated parsers (addworkout and addcardio) to accurately interpret user inputs for their respective commands.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"A critical improvement was made to the ParserParameters module, which originally split inputs at every / delimiter, interpreting subsequent segments as key-value pairs. This posed a significant limitation, as dates formatted with slashes (e.g., 22/12/2025) would be incorrectly fragmented, corrupting the intended values. To resolve this, I refined the parsing logic to intelligently distinguish between command delimiters and embedded date formats, allowing dates to be flexibly entered in various structures without disrupting parameter extraction.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"These modifications collectively strengthened input robustness, ensuring seamless compatibility with diverse date formats while maintaining precise command interpretation.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"## Contributions to the UG","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"I went to describe the functions I did like add workout and add cardio.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"Added the display code segment for each of the commands","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"Added the summary of commands table","lastModifiedDate":"2025-04-01T15:38:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"## Contributions to the DG","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"For the developer guide, I provided detailed explanations and diagrams to communicated both the feature and system level","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"design decisions.I was responsible for writing the class and sequence diagrams for the AddworkoutCommand feature, as well as","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"explaining its logic and integration with the rest of the system.Beyond feature-specific documentation, I contributed to","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"broader sections such as the add log command which shows an example of how a input is logged and saved in our system.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"I also contributed to the user stories section by drafting realistic","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"user scenarios based on the personas we envisioned. AddWorkoutCommand and AddLog command sequence diagram was also contributed by me.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"I played a role to ensure that the testing framework was robust. ","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"- Writing comprehensive tests for add workout, add cardio and delete features, ensuring \u003e80% coverage in all aspects.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"- Following the format set to ensure that the test cases align with our new parser-logic separation","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"In terms of project management: ","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"- I followed the issues tagged to me diligently.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"- Ensured that my branch was properly committed with clear comments ","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"## Review/mentoring contributions","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"Throughout the project, I helped my team in several ways:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"- Help resolving common IntelliJ issues","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"- Support in debugging logic errors","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"I reviewed my teammates’ PRs and provided constructive feedback to maintain code quality and consistency across the project.","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"List of PRs approved by me:","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/1","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/20","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/109","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"## Contributions beyond the project team:","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T23:16:52","isFullCredit":false}],"authorContributionMap":{"kinneo":19,"Travissssz":38}},{"path":"docs/team/jasonlobo21.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# Overview","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"HealthBud is a CLI-based fitness logging assistant designed to help users track and improve their personal health goals.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"It enables users to log various health metrics—such as meals, workouts, water intake, personal bests, and cardio sessions—using an intuitive command interface. ","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"The application incorporates robust command parsing, in-memory log management, and persistent storage via text files, all structured in a modular design to support easy maintenance and future enhancements.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"# Summary of Contributions","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"## Code contributed","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"[Team Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026chartGroupIndex\u003d40\u0026chartIndex\u003d1)","lastModifiedDate":"2025-04-02T12:16:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"## Enhancements implemented","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"I laid the groundwork of the project by implementing the base log classes, which provide a foundation for meal, workout, and other log types to be extended. I implemented the LogList class to manage the collection of logs in memory. ","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"I then created the meal logs as a proof-of-concept and template—enabling my teammates to later implement their own versions of log types for workout, cardio, and other categories. ","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"Additionally, I developed the storage system that reads from and writes to a text file, ensuring data persistence across sessions.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"On the user interface side, I implemented the Ui component to display information to users in a clean and organized manner. ","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"In terms of feature development, I contributed to the meal log functionalities by implementing delete, list, and clear commands, as well as a find feature that was later merged into the search functionality.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"Furthermore, I created the ParserParameters utility, which utilizes hashing to allow users to input parameters (e.g., /t, /d) in any order, improving the flexibility of the command parsing process.","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"In addition to these individual contributions, I continuously sought ways to make the codebase less messy and more concise. ","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"I have actively contributed to refining both my own code and that of my teammates, ensuring that the overall quality of our project remains high.","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"## Contributions to the UG","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"I contributed significantly to the UG by writing and standardizing the sections on delete, clear and meal logs. ","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"My focus was on ensuring that these sections were clear, concise, and consistent, which greatly improved the overall quality and readability of our documentation.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T15:40:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T15:40:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"## Contributions to the DG","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"For the DG, I added and updated the class diagrams for the UI component. ","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"I also provided detailed sequence diagrams illustrating the execution flow of commands – for example, ","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"I included a sequence diagram for the \"delete meal\" command that explains step-by-step how the delete operation is performed.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"I actively participated in team discussions, contributed to code reviews, and assisted teammates in refining their code. ","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"My efforts included collaborating on design decisions and ensuring that our project documentation was consistent and maintained a high quality across the board.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"I played a key role in ensuring that our team always adhered to the principles of OOP. ","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"Specifically, I revamped the command classes and wrote comprehensive tests for the add meal, delete, and clear functionalities, achieving 100% code coverage.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"In terms of project management, I took ownership of initiating the project and setting a clear direction, ensuring that my teammates were aligned with the overall vision. ","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"I also ensured smooth merges with no loss of data and provided ongoing support with tools such as SourceTree and GitHub whenever teammates encountered difficulties.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"## Review/mentoring contributions","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/139","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/137","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/134","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/129","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/123","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/113","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/110","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/90","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/73","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/70","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/66","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/52","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/51","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/47","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/38","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/29","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/22","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"- https://github.com/AY2425S2-CS2113-W13-4/tp/pull/4","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"- ","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"## Contributions beyond the project team:","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonlobo21"},"content":"I reviewed other teams\u0027 code and developer guides, offering constructive tips for improvement, and provided help during tutorial sessions to assist other groups.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"https://github.com/nus-cs2113-AY2425S2/tp/pull/47/files/abeed9984adccad0e277d2158466071b33b8a665..d4f97488ed10b50e5ba6bd156a3b3802bd05cc85","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":53,"kinneo":22}},{"path":"docs/team/keanneeee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# Overview","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"HealthBud is a CLI-based fitness logging assistant designed to help users track and improve their personal health","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"goals. It supports logging of meals, workouts, water intake, cardio sessions, and personal bests, while also offering","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"intelligent features such as progress status and workout recommendations.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"# Summary of Contributions","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"## Code contributed","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"[Team Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026chartGroupIndex\u003d40\u0026chartIndex\u003d2)","lastModifiedDate":"2025-04-02T12:16:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"## Enhancements implemented","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"I took charge of the implementations of the Goal and Water functions. I was focused on designing the features such","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"that it would be user-friendly all the while not compromising on the user\u0027s experience as well as giving them the full ","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"experience that our app was meant to deliver.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"I also was involved in a few major revamps that our team decided for the projects, such as the increase in teh OOP-ness","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"of the project by splitting the parser and command execution functions. Our project compartmentalizes functionality in","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"a sense that we have a function which handles its own logic (command classes), while the input is getting parsed by a ","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"separate, exclusive function. This drastically improved readability of our code and made our whole project much easier ","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"to understand.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"## Contributions to the UG","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"I added the Goal and Water sections of the UG.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"## Contributions to the DG","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"I added the Goals Section as well as the Architecture Diagram.","lastModifiedDate":"2025-04-03T05:08:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"I ensured that there was in depth testing being done for all our functions. Specifically:","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"- Wrote comprehensive tests for add goals and water.","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"- Helped to review and refactor existing test cases to align with our new parser-logic separation","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"In terms of the entire project:","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"- I reviewed parts of our teams code and spotted a few bugs which I proceeded to fix","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"- Reviewed and linked PRs to branch such that the entire process ran smoothly","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"## Review/mentoring contributions","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"Here are some of the PRs reviewed:","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/125","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/118","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/116","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/97","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/93","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"keanneeee"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/88","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"keanneeee"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/58","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"keanneeee"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/15","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"keanneeee"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/14","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"keanneeee"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/13","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"keanneeee"},"content":"Actively Participated in group discussions to restructure our project and provided valuable inputs.","lastModifiedDate":"2025-04-03T20:37:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false}],"authorContributionMap":{"keanneeee":36,"kinneo":20}},{"path":"docs/team/kinneo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"# Overview","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"HealthBud is a CLI-based fitness logging assistant designed to help users track and improve their personal health goals.","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"It supports logging of meals, workouts, water intake, cardio sessions, and personal bests, while also offering ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"intelligent features such as progress status and workout recommendations.","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"# Summary of Contributions","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"## Code contributed","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"[Team Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026chartGroupIndex\u003d40\u0026chartIndex\u003d3)","lastModifiedDate":"2025-04-02T12:16:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-02T12:16:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"## Enhancements implemented","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"I was in charge of the implementation of several features in our application, including the recommend, status, and ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"add pb commands. These features were thoughtfully designed and executed to enhance user interaction and provide ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"meaningful insights into fitness progress. ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"In addition, I led a major revamp of the parser and logic architecture. This involved decoupling parsing logic from ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"command execution, resulting in a much cleaner separation of concerns. Each command class now handles only its respective ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"logic, while parsing is delegated to dedicated parser classes. This not only improved readability and maintainability, ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"but also aligned our codebase with sound OOP principles. To ensure consistency, I systematically refactored all existing","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"command and parser classes to follow this design pattern, improving the modularity and extensibility of our codebase.","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"## Contributions to the UG","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"I contributed significantly to the User Guide to ensure that it was both accessible and comprehensive to new users. ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"I created the structural layout of the guide by introducing proper sectioning and headings for each of our features. ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"I then went on to describe each of the features I implemented — such as recommend, status, and add pb — with clear and ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"concise explanations, usage syntax, and example inputs/outputs.","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"## Contributions to the DG","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"For the Developer Guide, I provided detailed explanations and diagrams to communicate both feature-level and system-level ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"design decisions. I was responsible for writing the class and sequence diagrams for the recommend feature, as well as ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"explaining its logic and integration with the rest of the system. Beyond feature-specific documentation, I contributed to ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"broader sections such as the Overall Architecture, Design and Implementation, Glossary, Non-Functional Requirements, ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"Prerequisites, and Instructions for Manual Testing. I also contributed to the user stories section by drafting realistic ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"user scenarios based on the personas we envisioned.","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"I played a key role in ensuring that our testing framework was robust. Specifically:","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"- Revamped the structure of our JUnit test file","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"- Wrote comprehensive tests for add pb, recommend, and status features, ensuring 100% code coverage","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"- Reviewed and refactored existing test cases to align with our new parser-logic separation","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"In terms of project management:","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"- I took ownership of creating, assigning, and tracking issues","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"- Ensured that branches were properly linked to their respective issues","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"- Maintained up-to-date milestone tracking","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"- Reviewed and linked all PRs to relevant issues and milestones for clarity and traceability","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"## Review/mentoring contributions","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"Throughout the project, I actively mentored teammates, especially when they faced challenges with logic, parsing, or OOP structure. I provided:","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"- Guidance on how to structure commands and parsers","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"- Help resolving common IntelliJ issues and Git conflicts","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"- Support in debugging logic errors and writing cleaner, more modular code","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"I regularly reviewed my teammates’ PRs and provided constructive feedback to maintain code quality and consistency across the project.","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"List of PRs approved by me:","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/112","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/111","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/108","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/106","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/105","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/103","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/95","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/92","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/91","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/89","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/86","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/78","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/77","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/74","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/72","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/71","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/61","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/56","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/54","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/48","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/45","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/42","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/39","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/36","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/35","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/31","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/23","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/21","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/18","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/16","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"https://github.com/AY2425S2-CS2113-W13-4/tp/pull/5","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"## Contributions beyond the project team:","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"Beyond technical contributions, I took on a coordination and leadership role within the team:","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"- Consistently reminded teammates of upcoming deadlines and sprint goals","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"- Provided summaries of progress and outstanding tasks to keep everyone aligned","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"- Acted as the liaison between our team and the TAs and professors, regularly seeking clarifications and relaying them clearly to the group","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"- Offered to help teammates who were particularly busy in certain weeks, ensuring we stayed on track as a team","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"I also made an effort to foster a collaborative decision-making environment — instead of making decisions ","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"unilaterally, I encouraged discussions and collective agreement on key directions.","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2025-03-31T14:51:01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"- Reported bugs and inconsistencies during integration testing phases","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"- Provided detailed, helpful responses to peers’ queries in the discussion forum","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"- Shared useful insights from consultations with the TAs/Prof to help other teams as well","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"- Took initiative in proposing architecture improvements and code standards","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"Overall, I strived not only to contribute technically, but also to uplift the team through mentorship, leadership, and collaboration.","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false}],"authorContributionMap":{"kinneo":115}},{"path":"src/main/java/seedu/healthbud/HealthBud.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.ParserManager;","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.storage.Storage;","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * The main entry point for the HealthBud application.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":" * This class initializes all the necessary log lists, loads persisted data,","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":" * and starts the command-line interface to process user commands.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"public class HealthBud {","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"    public static LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"    public static LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"    public static LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    public static LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"    public static LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"    public static LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * Main method that runs the HealthBud application.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * @param args the command-line arguments (not used)","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printGreeting();","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        Storage.loadLogs(mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs, goalLogs);","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        assert in !\u003d null : \"Scanner object should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"        boolean isLooping \u003d true;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"        while (isLooping) {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"            String input \u003d in.nextLine().trim().toLowerCase();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"            assert !input.isEmpty() : \"Input should not be empty\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"            isLooping \u003d ParserManager.handleInput(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs,","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"                    input);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":29,"keanneeee":3,"kinneo":10,"Travissssz":1}},{"path":"src/main/java/seedu/healthbud/LogList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Cardio;","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Log;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Water;","lastModifiedDate":"2025-03-24T11:26:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T11:45:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.List;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.storage.Storage;","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":" * The {@code LogList} class manages an in-memory collection of {@link Log} objects.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":" * It provides methods for adding, deleting, listing, and searching logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":" * It also handles data persistence by interfacing with {@link Storage}.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"public class LogList {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"    private List\u003cLog\u003e logs;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new empty {@code LogList}.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"    public LogList(){","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"        logs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the log at the specified index.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"     * @param index the index of the log to retrieve","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the log at the specified index","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws AssertionError if index is out of bounds","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"    public Log getLog(int index){","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c logs.size() : \"Index out of bounds\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"        return logs.get(index);","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the total number of logs in the list.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the number of logs","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"    public int getSize() {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"        return logs.size();","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns true if the log list is empty, false otherwise.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"     * @return {@code true} if the log list is empty; {@code false} otherwise","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"        return logs.isEmpty();","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"     * Adds a log to the list and updates the persistent storage.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"     * @param log the log to add; must not be null","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"    public void addLog(Log log) {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        assert log !\u003d null : \"Log to add should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"        logs.add(log);","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(String.format(\"Got it. I\u0027ve added this %s log:\", log.getLogType()));","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\" \" + getLog(getSize() - 1));","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"        Storage.appendLogToFile(log);","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(String.format(\"Now you have %d %s logs in the list.\", getSize(), log.getLogType()));","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-18T02:09:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"     * Loads a log into the list without updating the persistent storage.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonlobo21"},"content":"     * @param log the log to load; must not be null","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jasonlobo21"},"content":"    public void loadLog(Log log) {","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"        assert log !\u003d null : \"Log to load should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jasonlobo21"},"content":"        logs.add(log);","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jasonlobo21"},"content":"     * Deletes the log at the specified (1-based) index, updates the persistent storage,","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jasonlobo21"},"content":"     * and prints confirmation.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"     * @param index the 1-based index of the log to delete","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws HealthBudException if the index is out of range","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"    public void deleteLog(int index) throws HealthBudException {","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jasonlobo21"},"content":"        if (index \u003c 1 || index \u003e getSize()) {","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"            throw new HealthBudException(\"Task number not in range\");","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\"Noted. I\u0027ve removed this log:\");","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\" \" + getLog(index - 1));","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jasonlobo21"},"content":"        logs.remove(index - 1);","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jasonlobo21"},"content":"        Storage.rewriteLogsToFile(this);","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\"Now you have \" + getSize() + \" logs in the list.\");","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jasonlobo21"},"content":"     * Lists all logs in the list.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jasonlobo21"},"content":"    public void listLogs() {","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonlobo21"},"content":"        if (logs.isEmpty()) {","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"            Ui.printMessage(\" No logs available.\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jasonlobo21"},"content":"        } else {","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jasonlobo21"},"content":"            for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jasonlobo21"},"content":"                Ui.printListedFormat(this, i);","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jasonlobo21"},"content":"     * Searches for logs that contain the given keyword.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jasonlobo21"},"content":"     * @param keyword the keyword to search for; must not be null","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jasonlobo21"},"content":"    public void findLog(String keyword) {","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"        assert keyword !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jasonlobo21"},"content":"        boolean notFound \u003d true;","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jasonlobo21"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jasonlobo21"},"content":"            if (logs.get(i).toString().contains(keyword)) {","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jasonlobo21"},"content":"                notFound \u003d false;","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jasonlobo21"},"content":"                Ui.printListedFormat(this, i);","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jasonlobo21"},"content":"        if (notFound) {","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"            Ui.printMessage(\"No matching \u0027\" + keyword +  \"\u0027 logs found.\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jasonlobo21"},"content":"     * Searches for logs with the specified date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date the date to search for","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jasonlobo21"},"content":"    public void findLogByDate(String date) {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jasonlobo21"},"content":"        boolean notFound \u003d true;","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jasonlobo21"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jasonlobo21"},"content":"            if (logs.get(i).getDate().equals(date)) {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jasonlobo21"},"content":"                notFound \u003d false;","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jasonlobo21"},"content":"                Ui.printListedFormat(this, i);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jasonlobo21"},"content":"        if (notFound) {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jasonlobo21"},"content":"            Ui.printMessage(\"No logs found for this date: \" + date);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Jasonlobo21"},"content":"     * Clears all logs from the list and updates persistent storage.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Jasonlobo21"},"content":"    public void clearLogs() {","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Jasonlobo21"},"content":"        if (logs.isEmpty()) {","lastModifiedDate":"2025-03-23T17:05:17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Jasonlobo21"},"content":"            Ui.printMessage(\"No logs to clear.\");","lastModifiedDate":"2025-03-23T17:05:17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Jasonlobo21"},"content":"            return;","lastModifiedDate":"2025-03-23T17:05:17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-23T17:05:17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jasonlobo21"},"content":"        logs.clear();","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Jasonlobo21"},"content":"        Storage.rewriteLogsToFile(this);","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\"Noted. I\u0027ve removed all logs.\");","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Jasonlobo21"},"content":"     * Calculates the total calories consumed for meal logs on the given date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date the date to sum calories for; must not be null","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the total calories consumed","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kinneo"},"content":"    public int getCaloriesSum(String date) {","lastModifiedDate":"2025-03-24T21:36:16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kinneo"},"content":"        assert date !\u003d null : \"Date should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Jasonlobo21"},"content":"        int totalCalories \u003d 0;","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Jasonlobo21"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Jasonlobo21"},"content":"            Meal meal \u003d (Meal) logs.get(i);","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Jasonlobo21"},"content":"            if (meal.getDate().equals(date)) {","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Jasonlobo21"},"content":"                totalCalories +\u003d Integer.parseInt(meal.getCalories());","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Jasonlobo21"},"content":"        Ui.printMessage(\"Total calories consumed: \" + totalCalories);","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kinneo"},"content":"        return totalCalories;","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Jasonlobo21"},"content":"     * Calculates the total calories burned for cardio logs on the given date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date the date to sum calories for; must not be null","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the total calories burned","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kinneo"},"content":"    public int getCardioSum(String date){","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kinneo"},"content":"        assert date !\u003d null : \"Date should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kinneo"},"content":"        int totalCardio \u003d 0;","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kinneo"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kinneo"},"content":"            Cardio cardio \u003d (Cardio) logs.get(i);","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kinneo"},"content":"            if(cardio.getDate().equals(date)){","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kinneo"},"content":"                int speed \u003d Integer.parseInt(cardio.getSpeed());","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kinneo"},"content":"                int duration \u003d Integer.parseInt(cardio.getDuration());","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kinneo"},"content":"                int incline \u003d Integer.parseInt(cardio.getIncline());","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kinneo"},"content":"                // general formula that i got from chat idk it might be anyhow de - kin","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kinneo"},"content":"                // Calories \u003d (Speed * 2) + (Incline * 5) * (Duration / 60.0) * 100","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kinneo"},"content":"                totalCardio +\u003d (int) (((speed * 2) + (incline * 5)) * (duration / 60.0) * 100);","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kinneo"},"content":"        Ui.printMessage(\"Total calories burned: \" + totalCardio);","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kinneo"},"content":"        return totalCardio;","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-24T11:26:09","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Jasonlobo21"},"content":"     * Calculates the total water consumed for water logs on the given date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date the date to sum water volume for; must not be null","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the total water consumed in milliliters","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kinneo"},"content":"    public int getWaterSum(String date) {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kinneo"},"content":"        assert date !\u003d null : \"Date should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"keanneeee"},"content":"        int totalWater \u003d 0;","lastModifiedDate":"2025-03-24T11:26:09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"keanneeee"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {","lastModifiedDate":"2025-03-24T11:26:09","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"keanneeee"},"content":"            Water water \u003d (Water) logs.get(i);","lastModifiedDate":"2025-03-24T11:26:09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"keanneeee"},"content":"            if (logs.get(i).getDate().equals(date)) {","lastModifiedDate":"2025-03-24T11:26:09","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"keanneeee"},"content":"                totalWater +\u003d Integer.parseInt(water.getAmount());","lastModifiedDate":"2025-03-24T11:26:09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"keanneeee"},"content":"            }","lastModifiedDate":"2025-03-24T11:26:09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-24T11:26:09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"keanneeee"},"content":"        Ui.printMessage(\"Total water consumed: \" + totalWater + \"ml\");","lastModifiedDate":"2025-03-24T11:26:09","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"kinneo"},"content":"        return totalWater;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-24T11:26:09","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-18T20:51:20","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":182,"keanneeee":11,"kinneo":36,"Ahmish15":1,"Travissssz":1}},{"path":"src/main/java/seedu/healthbud/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * UI class for the HealthBud application.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":" * This class handles all the user interface aspects by providing methods to print messages","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * to the console. It includes methods for displaying greetings, help information, ASCII art,","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * and other status messages.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"public class Ui {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    /**","lastModifiedDate":"2025-04-01T15:41:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"     * New line and indent used for formatting output.","lastModifiedDate":"2025-04-01T15:41:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"     */","lastModifiedDate":"2025-04-01T15:41:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    public static final String NEW_LINE \u003d \"\\n    \";","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints a message with indentation.","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param message the message to print","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"        System.out.println(\"    \" + message);","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints the HealthBud ASCII art to the user.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printHealthBuds() {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⣀⣴⣶⣶⣶⡦⠤⣀⡀⠀⠀⠀⠀⠀⣀⣤⣤⣀⡀⠀⠀⠀⠀⠀⣀⣤⣴⡶⣶⣶⡦⣄⡀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⣀⣴⡾⢛⣡⣿⣤⡄⡕⡇⠹⡇⠀⠀⠀⠀⣾⣿⠿⠻⣿⣿⡄⠀⠀⠀⢸⠻⠸⠹⠁⣤⣿⣦⡙⠿⣦⣄⡀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"                ⠀⣠⣾⡿⠟⠁⡴⢫⡾⠋⠘⠻⢷⣷⣾⠇⠀⠀⠀⢰⠛⣿⣟⣿⣿⡿⣧⠀⠀⠀⠘⢾⣴⡷⠿⠃⠈⢿⣎⢳⡈⠙⠿⣵⣦⡀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"                ⢸⡿⠁⠀⠀⣼⣷⣿⢃⡀⠀⠀⠀⠈⠁⠀⠀⠀⠀⢘⢧⣄⢽⣼⣄⣴⡟⠀⠀⠀⠀⠈⠉⠀⠀⠀⢀⡈⣿⣿⣳⡀⠀⠀⢹⣷⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"                ⣿⣧⡀⢤⣼⣭⡿⠿⠭⣘⢷⣤⠶⠉⠑⢦⣄⠀⠀⢸⣦⡍⠩⠿⠏⣵⣿⠀⠀⢀⣴⠖⠉⠵⣦⣴⢓⡩⠽⢿⣯⣵⣤⠄⣸⣿⡄","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"                ⢿⣿⡭⣡⣤⢽⣧⡀⠀⠀⠙⣿⣶⣤⠀⠙⠛⠶⣶⣿⣻⣷⣾⣿⣾⣿⣸⣵⠶⠟⠛⠁⢠⣴⣿⠟⠁⠀⠀⣠⡿⠬⡥⡩⢿⡷⠃","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"                ⠀⠉⠳⣶⣿⣞⣿⣧⣄⣀⣠⣾⣿⣿⡯⢄⠀⠀⠀⠩⣝⣻⣿⣿⡿⣛⠉⠀⠀⠀⣀⠬⣿⣿⣿⣄⣀⣀⣼⣿⣛⣾⣶⡶⠋⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠙⢦⡀⠀⠙⢿⣿⣿⣿⣭⢿⣿⣦⣄⠀⠀⠀⠠⢿⣿⣿⣿⠅⠀⠀⠀⣀⣤⣾⣿⢯⣿⣿⣿⣿⠟⠁⠀⣴⠟⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠈⠛⠶⣶⠿⠿⡿⠃⡼⠀⢻⣿⣿⣿⣶⣶⣶⣾⣿⣿⣿⣶⣶⣶⣾⣿⣿⣿⠁⢰⡈⢻⠿⠿⣷⡶⠞⠁⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢧⣼⣧⠀⣸⣟⣿⣿⣿⠿⠛⠛⢿⣿⠛⠛⠻⢿⣿⢿⣏⣧⠀⣾⣷⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣷⣧⡼⠁⣸⣇⣤⣤⣤⣼⣿⣤⣤⣤⣈⣿⡀⢱⣬⣷⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣴⡇⢸⡿⠋⠀⠀⠀⢻⣿⠁⠀⠀⠉⢻⡇⢸⣧⣼⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⡟⢄⣷⣤⣤⣶⢶⣿⣾⣶⠶⣦⣤⣼⣧⢜⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡈⢻⠏⠁⠀⠀⢹⣿⠁⠀⠀⠙⣿⠋⣾⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣯⢻⣇⠀⠀⢀⣾⣿⣄⠀⠀⢠⡿⢹⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣎⠂⢿⠛⠉⠉⠙⡟⠉⠉⠙⢻⠃⢢⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣄⣼⣆⠀⠀⠀⠁⠀⠀⢀⣾⣄⣾⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-01T19:09:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣦⣤⣤⣦⣤⣴⡾⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2025-04-04T00:20:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"                \"\"\");","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints the greeting message to the user.","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"     * This method displays the HealthBud ASCII art followed by a greeting message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printGreeting() {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"        printHealthBuds();","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"        printMessage(\"Hello! I\u0027m HealthBud\" + NEW_LINE + \"What can I do for you?\");","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints the goodbye message and returns false to signal the termination of the program.","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"     * @return false to indicate that the program should exit","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"    public static boolean printGoodbye() {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"        printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"        return false;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints the list of available commands for the user.","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printHelp() {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"        printMessage(\"Here are the commands you can use:\" + NEW_LINE","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"                + \"1. help - Display this list of commands\" + NEW_LINE","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"                + \"2. bye - Exit the program\" + NEW_LINE","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"                + \"3. recommend \u003cmuscle_group\u003e - Get workout recommendations\" + NEW_LINE","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Travissssz"},"content":"                + \"4. bmi /w \u003cweight_in_kg\u003e /h \u003cheight_in_m\u003e - Calculate your BMI\" + NEW_LINE","lastModifiedDate":"2025-03-18T02:09:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"                + \"5. add workout \u003cexercise\u003e /w \u003cweight in kg\u003e /r \u003creps\u003e /s \u003csets\u003e /d \u003cDD/MM/YYYY\u003e \" +","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Travissssz"},"content":"                \"- Add a workout log\" + NEW_LINE","lastModifiedDate":"2025-03-30T15:52:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jasonlobo21"},"content":"                + \"6. add meal \u003cmeal_name\u003e /cal \u003ccalories\u003e /d \u003cDD/MM/YYYY\u003e /t \u003ctime\u003e - Add a meal log\" + NEW_LINE","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jasonlobo21"},"content":"                + \"7. add water /ml \u003cvolume\u003e /d \u003cDD/MM/YYYY\u003e /t \u003ctime\u003e - Add a water log\" + NEW_LINE","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jasonlobo21"},"content":"                + \"8. add pb \u003cexercise\u003e /w \u003cweight_in_kg\u003e /d \u003cDD/MM/YYYY\u003e - Record a personal best\" + NEW_LINE","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"                + \"9. sum \u003ccal|vol\u003e /d \u003cDD/MM/YYYY\u003e - Sum up the total calories/water for the day\" + NEW_LINE","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Ahmish15"},"content":"                + \"10. clear \u003cpb|meal|workout|water\u003e - Clear the respective log\" + NEW_LINE","lastModifiedDate":"2025-03-20T22:39:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jasonlobo21"},"content":"                + \"11. add cardio \u003cexercise\u003e /s \u003cspeed\u003e /i \u003cincline\u003e /t \u003cduration\u003e /d \u003cDD/MM/YYYY\u003e - Add a cardio log\"","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"                + NEW_LINE","lastModifiedDate":"2025-03-22T19:50:17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"keanneeee"},"content":"                + \"12. view goals - to view all goals\" + NEW_LINE","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"keanneeee"},"content":"                + \"13  add goal /w \u003cwaterGoals /c \u003ccalorieGoals\u003e /m \u003cweightGoals\u003e - to edit personal goals\" + NEW_LINE","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"                + \"14. status change \u003ccutting/bulking\u003e - Update your cutting/bulking status.\" + NEW_LINE","lastModifiedDate":"2025-03-24T21:30:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Ahmish15"},"content":"                + \"15. status report - View your current cutting/bulking progress\" + NEW_LINE","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonlobo21"},"content":"                + \"16. search \u003clogType\u003e /d \u003cDD/MM/YYYY\u003e OR search \u003clogType\u003e /k \u003ckeyword\u003e - Search for logs\" + NEW_LINE);","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints a message indicating that the entered command is unknown.","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printUnknownCommand() {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jasonlobo21"},"content":"        printMessage(\"I don\u0027t recognize that command. Type \u0027help\u0027 to see the list of commands.\");","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonlobo21"},"content":"     * Prints a log entry in a listed format.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jasonlobo21"},"content":"     * @param logs  the LogList containing the logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jasonlobo21"},"content":"     * @param index the index of the log to print.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jasonlobo21"},"content":"    public static void printListedFormat(LogList logs, int index) {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jasonlobo21"},"content":"        printMessage((index + 1) + \". \" + logs.getLog(index));","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":80,"keanneeee":2,"kinneo":29,"Ahmish15":2,"Travissssz":2}},{"path":"src/main/java/seedu/healthbud/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * The Command interface represents a command that can be executed in the HealthBud application.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" * All commands must implement the execute method.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"public interface Command {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"     * Executes the command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws Exception if an error occurs during the execution of the command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    void execute() throws Exception;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":11,"kinneo":5}},{"path":"src/main/java/seedu/healthbud/command/InputCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"// FOR COMMANDS THAT OINLY NEED INPUT AND NO NEED LOGS AT ALL","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" * Abstract base class for commands that require only an input string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":" * This class provides a common structure for commands that do not need any LogLists.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"public abstract class InputCommand implements Command {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"    protected String input;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InputCommand with the specified input string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"    public InputCommand(String input) {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":20,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/command/MultiLogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"// FOR COMMANDS THAT NEEDS MORE THAN 1 LOG LIST AND INPUT","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * Abstract base class for commands that require multiple LogLists and an input string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * This class provides a common structure for commands that operate on various types of logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"public abstract class MultiLogCommand implements Command {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    protected LogList goalLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    protected LogList pbLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    protected LogList mealLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    protected LogList workoutLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    protected LogList waterLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    protected LogList cardioLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"    protected String input;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a MultiLogCommand with the specified LogLists and input string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @param goalLogs    the LogList for goal logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @param pbLogs      the LogList for personal best logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs    the LogList for meal logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList for workout logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs   the LogList for water logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs  the LogList for cardio logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input       the input string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"    public MultiLogCommand(LogList goalLogs, LogList pbLogs, LogList mealLogs, LogList workoutLogs,","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"                           LogList waterLogs, LogList cardioLogs, String input) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        assert goalLogs !\u003d null : \"Goal logs should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        assert pbLogs !\u003d null : \"Personal best logs should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        assert mealLogs !\u003d null : \"Meal logs should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        assert workoutLogs !\u003d null : \"Workout logs should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        assert waterLogs !\u003d null : \"Water logs should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"        assert cardioLogs !\u003d null : \"Cardio logs should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        this.goalLogs \u003d goalLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        this.pbLogs \u003d pbLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        this.mealLogs \u003d mealLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        this.workoutLogs \u003d workoutLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"        this.waterLogs \u003d waterLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"        this.cardioLogs \u003d cardioLogs;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":18,"kinneo":28,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/command/SingleLogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":" * Abstract base class for commands that operate on a single LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * This class provides a common structure for commands that require a LogList as input.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"public abstract class SingleLogCommand implements Command {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    protected final LogList logList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a SingleLogCommand with the specified LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     * @param logList the LogList to operate on; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"    public SingleLogCommand(LogList logList) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        assert logList !\u003d null : \"LogList should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        this.logList \u003d logList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":12,"kinneo":9}},{"path":"src/main/java/seedu/healthbud/command/input/BMICommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.input;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.InputCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * BMICommand calculates the Body Mass Index (BMI) based on the user\u0027s weight and height.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * When executed, it prints a message indicating the user\u0027s BMI category.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"public class BMICommand extends InputCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private final double weight; // in kilograms","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private final double height; // in meters","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a BMICommand with the specified input, weight, and height.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input  the user input string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param weight the weight in kilograms.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param height the height in meters.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    public BMICommand(String input, double weight, double height) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"        //@@author Ahmish15","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"        super(input);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"        this.height \u003d height;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"     * Executes the BMI command by calculating the BMI and printing the appropriate message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"     * It uses the formula: BMI \u003d weight / (height * height) and prints the BMI value along with","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"     * the corresponding weight category.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"    @Override","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"        assert weight \u003e 0 : \"Weight should be positive at execution time.\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"        assert height \u003e 0 : \"Height should be positive at execution time.\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"        double bmi \u003d weight / (height * height);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"        if (bmi \u003c 18.5) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"            Ui.printMessage(\"Your BMI is: \" + String.format(\"%.2f\", bmi) + \", you are underweight.\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"        } else if (bmi \u003c 25) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"            Ui.printMessage(\"Your BMI is: \" + String.format(\"%.2f\", bmi) + \", you are of normal weight.\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"        } else if (bmi \u003c 30) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"            Ui.printMessage(\"Your BMI is: \" + String.format(\"%.2f\", bmi) + \", you are overweight.\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"        } else {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"            Ui.printMessage(\"Your BMI is: \" + String.format(\"%.2f\", bmi) + \", you are obese.\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":14,"kinneo":8,"Ahmish15":30}},{"path":"src/main/java/seedu/healthbud/command/input/RecommendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.input;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.InputCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * RecommendCommand is responsible for displaying workout recommendations.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * It encapsulates a recommendation message which is printed when the command is executed.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"public class RecommendCommand extends InputCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private final String list;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a RecommendCommand with the specified recommendation message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @param list the recommendation message; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    public RecommendCommand(String list) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        super(list);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        this.list \u003d list;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the recommendation message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the recommendation message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"    public String getMessage() {","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        return list;","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"     * Executes the recommend command by printing the recommendation message using the UI.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        Ui.printMessage(list);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":20,"kinneo":20}},{"path":"src/main/java/seedu/healthbud/command/multilog/StatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.multilog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.MultiLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"public class StatusCommand extends MultiLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"    private static String currentStatus \u003d \"neutral\";","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    private final String message;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    public StatusCommand(LogList goalLogs, LogList pbLogs, LogList mealLogs, LogList workoutLogs,","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"                         LogList waterLogs, LogList cardioLogs, String input, String message) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        super(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    public void execute(){","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        assert message !\u003d null : \"Status message should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":20}},{"path":"src/main/java/seedu/healthbud/command/multilog/TrackGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.command.multilog;","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.command.MultiLogCommand;","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-04-03T02:39:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03T02:23:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidTrackException;","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T02:39:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"public class TrackGoalCommand extends MultiLogCommand {","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    private final String date;","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"    public TrackGoalCommand(String date, LogList goalLogs, LogList pbLogs, LogList mealLogs,","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"                            LogList workoutLogs, LogList waterLogs, LogList cardioLogs)","lastModifiedDate":"2025-04-03T02:46:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"            throws InvalidTrackException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03T02:46:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"        super(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, date);","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        assert !date.trim().isEmpty() : \"Date string should not be empty\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"        this.date \u003d DateParser.formatDate(date);","lastModifiedDate":"2025-04-03T02:23:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"    @Override","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    public void execute(){","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"        Ui.printMessage(\"Here is your goal progress for \" + date + \": \\n\");","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"        waterLogs.getWaterSum(date);","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"        mealLogs.getCaloriesSum(date);","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false}],"authorContributionMap":{"keanneeee":27,"kinneo":4}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddCardioCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Cardio;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"//@@author Ahmish15","lastModifiedDate":"2025-03-30T22:43:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"public class AddCardioCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"    private final String name;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"    private final String sets;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"    private final String intensity;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"    private final String time;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"    private final String date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"    public AddCardioCommand(LogList cardioLogs, String name, String sets,","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"                            String intensity, String time, String date) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"        super(cardioLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"        this.intensity \u003d intensity;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"    @Override","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27T22:33:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"        Cardio newCardio \u003d new Cardio(name, sets, intensity, time, date);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"        logList.addLog(newCardio);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":2,"kinneo":4,"Ahmish15":26}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T14:46:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Goals;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.storage.Storage;","lastModifiedDate":"2025-04-02T02:45:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"public class AddGoalCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"    private static String waterGoal ;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    private static String calorieGoal;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"    private static String weightGoal;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"    private static String weeklyWeightProgress;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"    Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"    public AddGoalCommand(LogList goalLogs, String waterGoal,","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"                          String calorieGoal, String weightGoal){","lastModifiedDate":"2025-03-31T14:22:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"        super(goalLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"        this.waterGoal \u003d waterGoal;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"        this.weightGoal \u003d weightGoal;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"    public void execute(){","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"        if (!waterGoal.equals(goal.getDailyWaterGoal())","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"                || !calorieGoal.equals(goal.getDailyCalorieGoal()) || !weightGoal.equals(goal.getWeightGoal())) {","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"            goal.updateGoals(waterGoal, calorieGoal, weightGoal);","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"            Ui.printMessage(\"Goal has been updated:\\n\" + goal.toString());","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"            Storage.appendLogToFile(goal);","lastModifiedDate":"2025-04-02T02:45:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"        } else {","lastModifiedDate":"2025-04-03T11:17:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"            goal.updateGoals(waterGoal, calorieGoal, weightGoal);","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":5,"keanneeee":29,"kinneo":1,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddMealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"//@@ author Ahmish15","lastModifiedDate":"2025-03-30T22:43:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"public class AddMealCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    private final String name;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    private final String calories;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private final String date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private final String time;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    public AddMealCommand(LogList mealLogs, String name, String calories, String date, String time) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"        super(mealLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27T22:33:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        Meal newMeal \u003d new Meal(name, calories, date, time);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        logList.addLog(newMeal);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":5,"kinneo":22,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddPersonalBestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.PersonalBest;","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"//@@ author Ahmish15","lastModifiedDate":"2025-03-30T22:43:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"public class AddPersonalBestCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    private final String name;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    private final String weight;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private final String date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"    public AddPersonalBestCommand(LogList pbLogs, String name, String weight, String date) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"        super(pbLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27T22:33:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        PersonalBest newPB \u003d new PersonalBest(name, weight, date);","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        logList.addLog(newPB);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":5,"kinneo":20,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddWaterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Water;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30T22:43:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"//@@ author Ahmish15","lastModifiedDate":"2025-03-30T22:43:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"public class AddWaterCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    private final String ml;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private final String date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private final String time;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    public AddWaterCommand(LogList waterLogs, String ml, String date, String time) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"        super(waterLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        this.ml \u003d ml;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    public void execute(){","lastModifiedDate":"2025-03-27T22:33:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        Water newWater \u003d new Water(ml, date, time);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        logList.addLog(newWater);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":5,"kinneo":20,"Ahmish15":2}},{"path":"src/main/java/seedu/healthbud/command/singlelog/AddWorkoutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Workout;","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30T22:43:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"//@@ author Ahmish15","lastModifiedDate":"2025-03-30T22:43:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"public class AddWorkoutCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    private final String name;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private final String reps;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private final String sets;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    private final String date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Travissssz"},"content":"    private final String weight;","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"    public AddWorkoutCommand(LogList workoutLogs, String name,","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"                             String reps, String sets, String date, String weight) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"        super(workoutLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        this.reps \u003d reps;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"    public void execute(){","lastModifiedDate":"2025-03-27T22:33:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        Workout newWorkout \u003d new Workout(name, reps, sets, date, weight);","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        logList.addLog(newWorkout);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":5,"kinneo":22,"Ahmish15":2,"Travissssz":4}},{"path":"src/main/java/seedu/healthbud/command/singlelog/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * ClearCommand is responsible for clearing all log entries from the provided LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * It extends the SingleLogCommand class, which provides a common interface for commands that operate on a LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"public class ClearCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T00:57:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new ClearCommand with the specified LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     * @param logList the LogList whose logs will be cleared; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"    public ClearCommand(LogList logList) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"        super(logList);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * Executes the clear command by clearing all logs from the LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        logList.clearLogs();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":17,"kinneo":10,"Travissssz":1}},{"path":"src/main/java/seedu/healthbud/command/singlelog/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * DeleteCommand is responsible for deleting a specific log entry from the provided LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * The log entry to be deleted is identified by its index in the list.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"public class DeleteCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private final int index;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new DeleteCommand with the specified LogList and index.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param targetLogList the LogList from which the log should be deleted; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param index         the index of the log to delete.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"    public DeleteCommand(LogList targetLogList, int index) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"        super(targetLogList);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * Executes the delete command by removing the log at the specified index from the LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws HealthBudException if the deletion fails due to an invalid index or other issues.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"    public void execute() throws HealthBudException {","lastModifiedDate":"2025-03-27T22:33:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        logList.deleteLog(index);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the LogList associated with this command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the LogList used by this command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"    public LogList getLogList() {","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"        return logList;","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the index of the log to be deleted.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the index of the log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"    public int getIndex() {","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"        return index;","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":30,"kinneo":15,"Travissssz":8}},{"path":"src/main/java/seedu/healthbud/command/singlelog/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * ListCommand is responsible for listing all logs in the specified LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"public class ListCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new ListCommand with the specified LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"     * @param logList the LogList containing the logs to be listed; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"    public ListCommand(LogList logList) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"        super(logList);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * Executes the list command, which lists all logs in the LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    public void execute() {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        logList.listLogs();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":17,"kinneo":10}},{"path":"src/main/java/seedu/healthbud/command/singlelog/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * SearchCommand is responsible for searching logs by date or keyword.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * If a date is provided, the command searches for logs matching that date;","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * otherwise, it searches for logs containing the specified keyword.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"public class SearchCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"    private final String date;      // null if searching by keyword","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"    private final String keyword;   // null if searching by date","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new SearchCommand with the specified LogList, date, and keyword.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param logList the LogList to search within; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date    the date to search for, or null if searching by keyword.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param keyword the keyword to search for, or null if searching by date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"    public SearchCommand(LogList logList, String date, String keyword) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"        super(logList);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"     * Executes the search command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"     * If the date is not null, it searches for logs by date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"     * Otherwise, it searches for logs by the given keyword.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"    @Override","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"    public void execute() {","lastModifiedDate":"2025-04-03T10:55:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"            logList.findLogByDate(date);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"        } else {","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"            logList.findLog(keyword);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":24,"Ahmish15":18}},{"path":"src/main/java/seedu/healthbud/command/singlelog/SumCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.SingleLogCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * SumCommand is responsible for calculating the sum for a particular log type on a given date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * Depending on the specified type (\"cal\", \"vol\", or \"cardio\"), it calls the corresponding","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * summing method on the LogList.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"public class SumCommand extends SingleLogCommand {","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private final String type;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    private final String date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a SumCommand with the specified LogList, type, and date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param logList the LogList to operate on; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param type    the type of sum operation (\"cal\", \"vol\", or \"cardio\"); must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date    the date for which the sum is calculated; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"    public SumCommand(LogList logList, String type, String date) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"        super(logList);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        assert type !\u003d null : \"Type should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        assert date !\u003d null : \"Date should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"     * Executes the sum command by invoking the corresponding method on the LogList based on the type.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"     * If the type is \"cal\", it calculates the total calories; if \"vol\", the total water volume;","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"     * if \"cardio\", the total cardio sum.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"    public void execute(){","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        switch (type) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        case \"cal\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"            logList.getCaloriesSum(date);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"            break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        case \"vol\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"            logList.getWaterSum(date);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"            break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"            logList.getCardioSum(date);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"            break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-04-03T20:28:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"            break;","lastModifiedDate":"2025-04-03T20:28:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":22,"kinneo":30}},{"path":"src/main/java/seedu/healthbud/exception/HealthBudException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-16T02:43:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-16T02:43:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"public class HealthBudException extends Exception{","lastModifiedDate":"2025-03-16T02:43:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a HealthBudException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"    public HealthBudException(String message) {","lastModifiedDate":"2025-03-16T02:43:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"        super(message);","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-16T02:43:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-16T02:43:51","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":13,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/exception/InvalidAddLogException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid add log command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidAddLogException extends Exception {","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidAddLogException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"    public InvalidAddLogException() {","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"        super(\"Invalid log command (e.g. add pb/meal/workout/water/goal)\");","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":14}},{"path":"src/main/java/seedu/healthbud/exception/InvalidBMIException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid BMI command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"public class  InvalidBMIException extends Exception {","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidBMIException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    public InvalidBMIException() {","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"        super(\"Invalid BMI command (e.g. bmi /w \u003cweight_in_kg\u003e /h \u003cheight_in_m\u003e)\");","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":8,"kinneo":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidCardioException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid cardio log command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"public class InvalidCardioException extends RuntimeException {","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidCardioException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Travissssz"},"content":"    public InvalidCardioException() {","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid cardio log command - add cardio \u003cexercise\u003e /s \u003cspeed\u003e /i \u003cincline\u003e /t \u003cduration\u003e /d \u003cdate\u003e\");","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":7,"kinneo":2,"Travissssz":5}},{"path":"src/main/java/seedu/healthbud/exception/InvalidClearException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid clear command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidClearException extends RuntimeException {","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidClearException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"    public InvalidClearException() {","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid clear command - clear \u003cpb|meal|workout|water\u003e\");","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":12,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/exception/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-24T21:09:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-24T21:09:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid date format.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"public class InvalidDateException extends RuntimeException {","lastModifiedDate":"2025-03-24T21:09:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidDateException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"    public InvalidDateException() {","lastModifiedDate":"2025-03-24T21:09:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"        super(\"Invalid date format! Please enter a valid date in the format: dd-MM-yyyy\");","lastModifiedDate":"2025-03-24T21:09:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-24T21:09:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-24T21:09:40","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":6,"keanneeee":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidDateFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid date format.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"public class InvalidDateFormatException extends Exception {","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidDateFormatException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"    public InvalidDateFormatException() {","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"        super(\"Invalid date, try DD/MM/YYYY\");","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":8,"Travissssz":6}},{"path":"src/main/java/seedu/healthbud/exception/InvalidDeleteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid delete command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidDeleteException extends Exception {","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidDeleteException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    public InvalidDeleteException() {","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid delete command - delete \u003cmeal|workout|water|pb\u003e \u003cindex\u003e\");","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-19T21:44:56","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":11,"kinneo":2}},{"path":"src/main/java/seedu/healthbud/exception/InvalidGoalException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid goal command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"public class InvalidGoalException extends RuntimeException {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidGoalException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"    public InvalidGoalException() {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"        super(\"Invalid Goal command. To change a goal, please enter /goalcode + value (e.g. /w 1000)\");","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":6,"keanneeee":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid list command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidListException extends Exception {","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidListException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"    public InvalidListException() {","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"        super(\"Invalid list command (e.g. list pb/meal/workout/water/cardio)\");","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":14}},{"path":"src/main/java/seedu/healthbud/exception/InvalidMLException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-20T11:26:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-20T11:26:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid water volume command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"public class InvalidMLException extends RuntimeException {","lastModifiedDate":"2025-03-20T11:26:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidMLException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"    public InvalidMLException() {","lastModifiedDate":"2025-03-20T11:26:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid water volume inputted, please input a valid number (e.g., 250, 1000, 1250)\");","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-20T11:26:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-20T11:26:18","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":6,"keanneeee":6,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/exception/InvalidMealException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-13T19:45:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13T19:45:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid meal command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"public class  InvalidMealException extends Exception {","lastModifiedDate":"2025-03-13T19:45:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidMealException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    public InvalidMealException() {","lastModifiedDate":"2025-03-13T19:45:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"        super(\"Invalid meal command (e.g. add meal \u003cmeal_name\u003e /cal \u003ccalories\u003e /d \u003cDD/MM/YYYY\u003e /t \u003ctime\u003e)\");","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-13T19:45:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-13T19:45:21","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":7,"kinneo":6}},{"path":"src/main/java/seedu/healthbud/exception/InvalidPersonalBestException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid personal best command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"public class InvalidPersonalBestException extends RuntimeException {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidPersonalBestException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    public InvalidPersonalBestException() {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"        super(\"Invalid pb log command (e.g. add pb \u003cexercise\u003e /w \u003cweight_in_kg\u003e /d \u003cDD/MM/YYYY\u003e)\");","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":8,"kinneo":6}},{"path":"src/main/java/seedu/healthbud/exception/InvalidRecommendException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid recommend command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"public class InvalidRecommendException extends Exception {","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidRecommendException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    public InvalidRecommendException() {","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"        super(\"Invalid recommend command (e.g. recommend chest/back/biceps/triceps/legs/shoulders/abs)\");","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-16T16:09:42","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":8,"kinneo":6}},{"path":"src/main/java/seedu/healthbud/exception/InvalidSearchException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * Exception thrown when the user inputs an invalid search command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"public class InvalidSearchException extends RuntimeException {","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs an InvalidSearchException with a default error message.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"    public InvalidSearchException() {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"        super(\"Invalid search command - Try search \u003clogType\u003e /d \u003cdate\u003e OR search \u003clogType\u003e /k \u003ckeyword\u003e\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":9,"Ahmish15":5}},{"path":"src/main/java/seedu/healthbud/exception/InvalidStatusException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"public class InvalidStatusException extends Exception {","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"     ","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"    public InvalidStatusException() {","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid status command - status change \u003ccutting/bulking\u003e or status report \u003cdate\u003e\");","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-24T21:06:21","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidSumException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidSumException extends Exception {","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"    public InvalidSumException() {","lastModifiedDate":"2025-03-20T11:39:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"        super(\"Invalid sum command - sum \u003ccal|vol\u003e /d \u003cdate\u003e\");","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":6,"kinneo":2}},{"path":"src/main/java/seedu/healthbud/exception/InvalidTrackException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"public class InvalidTrackException extends RuntimeException {","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"    public InvalidTrackException() {","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"        super(\"Unable to Track, Please enter a valid tracking command in the form of - track goal /d \u003cdate\u003e\");","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"keanneeee":7}},{"path":"src/main/java/seedu/healthbud/exception/InvalidWaterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:54:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidWaterException extends Exception {","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"    public InvalidWaterException() {","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"        super(\"Invalid water command (e.g. add water /v \u003cvolume\u003e /t \u003ctime\u003e /d \u003cDD/MM/YYYY\u003e)\");","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":4,"keanneeee":5}},{"path":"src/main/java/seedu/healthbud/exception/InvalidWorkoutException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"package seedu.healthbud.exception;","lastModifiedDate":"2025-03-18T02:09:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-18T02:09:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:54:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"public class InvalidWorkoutException extends Exception {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"    public InvalidWorkoutException() {","lastModifiedDate":"2025-03-18T02:09:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"        super(\"Invalid workout command (e.g. add workout \u003cexercise\u003e /w \u003cweight\u003e /r \u003creps\u003e /s \u003csets\u003e /d \u003cDD/MM/YYYY\u003e)\");","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-18T02:09:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-18T02:09:21","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":4,"Travissssz":5}},{"path":"src/main/java/seedu/healthbud/log/Cardio.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Travissssz"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * The Cardio class represents a cardio log entry.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" * It stores details about a cardio exercise including the exercise name, speed, incline, and duration.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":" * This class extends the Log class.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"public class Cardio extends Log{","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    private String name;","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    private String duration;","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    private String incline;","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private String speed;","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new Cardio log with the specified details.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param name     the name of the cardio exercise; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param speed    the speed during the cardio exercise; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param incline  the incline level during the cardio exercise; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @param duration the duration of the cardio exercise (in minutes); must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date     the date of the cardio log; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"    public Cardio(String name, String speed, String incline, String duration, String date) {","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"cardio\");","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        assert name !\u003d null : \"Name should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assert speed !\u003d null : \"Speed should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        assert incline !\u003d null : \"Incline should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        assert duration !\u003d null : \"Duration should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        this.incline \u003d incline;","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        this.speed \u003d speed;","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21T22:52:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the name of the cardio exercise.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the exercise name.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"    public String getName() {","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"        return name;","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the duration of the cardio exercise.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the duration as a string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"    public String getDuration() {","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        return duration;","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the incline level during the cardio exercise.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the incline as a string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    public String getIncline() {","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"        return incline;","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the speed during the cardio exercise.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the speed as a string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"    public String getSpeed() {","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"        return speed;","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns a string representation of the cardio log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"     * The format is: \"name (speed: speed, incline: incline, duration: duration mins) on date\".","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a formatted string representing the cardio log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Travissssz"},"content":"    @Override","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Travissssz"},"content":"    public String toString() {","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"        return name  + \" (speed: \" + speed + \", incline: \" + incline + \", duration: \" + duration + \" mins) on \" +","lastModifiedDate":"2025-03-24T21:09:40","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"                getDate();","lastModifiedDate":"2025-03-24T21:09:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-21T15:57:37","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":42,"kinneo":36,"Travissssz":8}},{"path":"src/main/java/seedu/healthbud/log/Goals.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * The Goals class represents a goal log entry and stores the daily water goal,","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" * daily calorie goal, weight goal, and weekly weight progress.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":" * It is implemented as a singleton to ensure that only one set of goals exists.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"public class Goals extends Log {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"    private static Goals instance;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"    private String dailyWaterGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    private String dailyCalorieGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"    private String weightGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"    private String weeklyWeightProgress;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new Goals object with the specified values.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param dailyWaterGoal      the daily water goal; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param dailyCalorieGoal    the daily calorie goal; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @param weightGoal          the weight goal; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @param weeklyWeightProgress the weekly weight progress; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date                the date for the goals log; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"    private Goals(String dailyWaterGoal, String dailyCalorieGoal,","lastModifiedDate":"2025-03-22T16:59:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"                  String weightGoal, String weeklyWeightProgress, String date) {","lastModifiedDate":"2025-03-22T16:59:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"goals\");","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        assert dailyWaterGoal !\u003d null : \"Daily water goal should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        assert dailyCalorieGoal !\u003d null : \"Daily calorie goal should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        assert weightGoal !\u003d null : \"Weight goal should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        assert weeklyWeightProgress !\u003d null : \"Weekly weight progress should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"        this.dailyWaterGoal \u003d dailyWaterGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"        this.dailyCalorieGoal \u003d dailyCalorieGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"        this.weightGoal \u003d weightGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"        this.weeklyWeightProgress \u003d weeklyWeightProgress;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the singleton instance of Goals. If no instance exists, a new one is created with default values.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the singleton Goals instance.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"    public static Goals getInstance() {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"            instance \u003d new Goals(\"0\", \"0\", \"0\", \"0\", \"0\");","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"keanneeee"},"content":"        return instance;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"     * Updates the goals with the specified water, calorie, and weight values.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"     * @param water   the new daily water goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"     * @param calorie the new daily calorie goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"     * @param weight  the new weight goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"keanneeee"},"content":"    public void updateGoals(String water, String calorie, String weight){","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"keanneeee"},"content":"        this.dailyWaterGoal \u003d water;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"keanneeee"},"content":"        this.dailyCalorieGoal \u003d calorie;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"keanneeee"},"content":"        this.weightGoal \u003d weight;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"     * Sets the daily water goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"     * @param dailyWaterGoal the daily water goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"keanneeee"},"content":"    public void setDailyWaterGoal(String dailyWaterGoal) {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"keanneeee"},"content":"        this.dailyWaterGoal \u003d dailyWaterGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"     * Sets the daily calorie goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonlobo21"},"content":"     * @param dailyCalorieGoal the daily calorie goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"keanneeee"},"content":"    public void setDailyCalorieGoal(String dailyCalorieGoal) {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"keanneeee"},"content":"        this.dailyCalorieGoal \u003d dailyCalorieGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonlobo21"},"content":"     * Sets the weight goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jasonlobo21"},"content":"     * @param weightGoal the weight goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"keanneeee"},"content":"    public void setWeightGoal(String weightGoal) {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"keanneeee"},"content":"        this.weightGoal \u003d weightGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jasonlobo21"},"content":"     * Sets the weekly weight progress.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jasonlobo21"},"content":"     * @param weeklyWeightProgress the weekly weight progress.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"keanneeee"},"content":"    public void setWeeklyWeightProgress(String weeklyWeightProgress) {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"keanneeee"},"content":"        this.weeklyWeightProgress \u003d weeklyWeightProgress;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the daily water goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the daily water goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"keanneeee"},"content":"    public String getDailyWaterGoal() {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"keanneeee"},"content":"        return dailyWaterGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the daily calorie goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the daily calorie goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"keanneeee"},"content":"    public String getDailyCalorieGoal() {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"keanneeee"},"content":"        return dailyCalorieGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the weight goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the weight goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"keanneeee"},"content":"    public String getWeightGoal() {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"keanneeee"},"content":"        return weightGoal;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the weekly weight progress.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the weekly weight progress.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"keanneeee"},"content":"    public String getWeeklyWeightProgress() {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"keanneeee"},"content":"        return weeklyWeightProgress;","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns a string representation of the goals.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jasonlobo21"},"content":"     * If a goal is set to \"0\", it indicates that the goal is not set yet.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a formatted string representing the current goals.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"keanneeee"},"content":"    public String toString() {","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"keanneeee"},"content":"        Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"keanneeee"},"content":"        String finalString;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"keanneeee"},"content":"        if (goal.getDailyWaterGoal().equals(\"0\")) {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"keanneeee"},"content":"            finalString \u003d \"    Daily Water Goal: Not set yet\\n\";","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"keanneeee"},"content":"        } else {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"keanneeee"},"content":"            finalString \u003d \"    Daily Water Goal: \" + goal.getDailyWaterGoal() + \" ml\\n\";","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"keanneeee"},"content":"        if (goal.getDailyCalorieGoal().equals(\"0\")) {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"keanneeee"},"content":"            finalString +\u003d \"    Daily Calorie Goal: Not set yet\\n\";","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"keanneeee"},"content":"        } else {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"keanneeee"},"content":"            finalString +\u003d \"    Daily Calorie Goal: \" + goal.getDailyCalorieGoal() + \" cal\\n\";","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"keanneeee"},"content":"        if (goal.getWeightGoal().equals(\"0\")) {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"keanneeee"},"content":"            finalString +\u003d \"    Weight Goal: Not set yet\\n\";","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"keanneeee"},"content":"        } else {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"keanneeee"},"content":"            finalString +\u003d \"    Weight Goal: \" + goal.getWeightGoal() + \" kg\\n\";","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"keanneeee"},"content":"        return finalString;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-22T16:12:07","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":73,"keanneeee":85,"kinneo":6}},{"path":"src/main/java/seedu/healthbud/log/Log.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * The Log class represents a generic log entry with a log type and date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" * It serves as the base class for all specific log types in the HealthBud application.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"public class Log {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"    private String logType;","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"    private String date;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new Log with the specified date and log type.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date    the date of the log; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * @param logType the type of the log; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"    public Log(String date, String logType) {","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        assert date !\u003d null : \"Date should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        assert logType !\u003d null : \"Log type should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"        this.logType \u003d logType;","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the type of the log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the log type as a String.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"    public String getLogType() {","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"        return logType;","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the date of the log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the date as a String.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"    public String getDate() {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"        return date;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-20T03:21:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":41,"kinneo":3}},{"path":"src/main/java/seedu/healthbud/log/Meal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * The Meal class represents a meal log entry.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" * It stores details about the meal including its name, calorie count, and the time the meal was logged.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":" * This class extends the Log class.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"public class Meal extends Log {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"    private String name;","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"    private String calories;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"    private String time;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new Meal log with the specified details.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @param name     the name of the meal; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param calories the calorie count of the meal; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date     the date of the meal log; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param time     the time at which the meal was logged; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"    public Meal(String name, String calories, String date, String time){","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"meal\");","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        assert name !\u003d null : \"Meal name should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        assert calories !\u003d null : \"Calories should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        assert time !\u003d null : \"Time should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the name of the meal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the meal name.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"    public String getName() {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"        return name;","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the calorie count of the meal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the calories as a string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    public String  getCalories() {","lastModifiedDate":"2025-03-13T12:05:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"        return calories;","lastModifiedDate":"2025-03-13T12:05:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-13T12:05:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13T12:05:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the time at which the meal was logged.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the time as a string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"    public String getTime() {","lastModifiedDate":"2025-03-13T12:05:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        return time;","lastModifiedDate":"2025-03-13T12:05:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-13T12:05:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns a string representation of the meal log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"     * The format is: \"meal name (calories cal) on: date at: time\".","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a formatted string representing the meal log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"    @Override","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"    public String toString() {","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"        return String.format(\"%s (%s cal) on: %s at: %s\", name, calories, getDate(), time);","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-13T11:06:22","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":59,"kinneo":10}},{"path":"src/main/java/seedu/healthbud/log/PersonalBest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * The PersonalBest class represents a personal best log entry.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" * It stores details about an exercise and the weight achieved, along with the date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":" * This class extends the Log class.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"public class PersonalBest extends Log {","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    private String exercise;","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    private String weight;","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new PersonalBest log with the specified exercise, weight, and date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * @param exercise the name of the exercise; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @param weight   the weight achieved (in kg); must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date     the date of the personal best log; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    public PersonalBest(String exercise, String weight, String date){","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"pb\");","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        assert exercise !\u003d null : \"Exercise should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        assert weight !\u003d null : \"Weight should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        this.exercise \u003d exercise;","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the exercise name.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the exercise name.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    public String getExercise() {","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        return exercise;","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the weight achieved.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the weight in kg.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    public String getWeight() {","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        return weight;","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns a string representation of the personal best log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"     * The format is: \" exercise weight kg on (date)\".","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a formatted string representing the personal best log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"    @Override","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"    public String toString() {","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        return String.format(\" %s %s kg on (%s)\", exercise, weight, getDate());","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":30,"kinneo":28}},{"path":"src/main/java/seedu/healthbud/log/Water.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-19T00:18:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T00:18:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * The Water class represents a water log entry.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" * It stores details about the water consumption including the amount (in milliliters)","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":" * and the time of consumption.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * This class extends the Log class.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"public class Water extends Log {","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"    private String amount;","lastModifiedDate":"2025-03-20T11:52:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"    private String time;","lastModifiedDate":"2025-03-20T11:52:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-20T11:52:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new Water log with the specified amount, date, and time.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @param amount the amount of water consumed (in milliliters); must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date   the date of the water log; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param time   the time at which the water was consumed; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"    public Water(String amount, String date, String time){","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"water\");","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        assert amount !\u003d null : \"Amount should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        assert time !\u003d null : \"Time should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-20T11:41:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-20T11:41:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the amount of water consumed.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the amount in milliliters.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"    public String getAmount() {","lastModifiedDate":"2025-03-19T01:43:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"        return amount;","lastModifiedDate":"2025-03-19T01:43:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-19T01:43:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the time at which the water was consumed.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the consumption time.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"    public String getTime() {","lastModifiedDate":"2025-03-19T01:43:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"        return time;","lastModifiedDate":"2025-03-19T01:43:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-19T01:43:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"     * Converts the given water amount (in milliliters) into glasses.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"     * Assumes that one glass is 250 ml.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"     * @param amount the water amount in milliliters.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a formatted string representing the number of glasses.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"    public String toGlass(String amount) {","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"        double ml \u003d Double.parseDouble(amount.trim());","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"        double glasses \u003d ml / 250.0;","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"        return String.format(\"%.1f glass\", glasses);","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-19T01:28:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-20T12:47:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns a string representation of the water log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"     * The format is: \"X glass of water on (date) at time\".","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a formatted string representing the water log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"    @Override","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"    public String toString() {","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"        return String.format(\"%s of water on (%s) at %s\", toGlass(amount), getDate(), time);","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-20T12:47:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-20T12:47:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-19T00:18:50","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":49,"keanneeee":20,"kinneo":4}},{"path":"src/main/java/seedu/healthbud/log/Workout.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.log;","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":" * The Workout class represents a workout log entry.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":" * It stores details about a workout such as the exercise name, number of repetitions,","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":" * number of sets, and the weight used during the workout.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * This class extends the Log class.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"public class Workout extends Log {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"    private String name;","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"    private String reps;","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"    private String sets;","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Travissssz"},"content":"    private String weight;","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * Constructs a new Workout log with the specified details.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param name   the name of the workout exercise; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param reps   the number of repetitions; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param sets   the number of sets; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @param date   the date of the workout; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @param weight the weight used during the workout (in kg); must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    public Workout(String name, String reps, String sets, String date, String weight) {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"        super(date, \"workout\");","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        assert name !\u003d null : \"Workout name should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assert reps !\u003d null : \"Reps should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        assert sets !\u003d null : \"Sets should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        assert weight !\u003d null : \"Weight should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"        this.reps \u003d reps;","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the name of the workout exercise.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the workout name.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"    public String getName() {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"        return name;","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the number of repetitions.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the reps.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"    public String getReps() {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"        return reps;","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the number of sets.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the sets.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"    public String getSets() {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"        return sets;","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns the weight used during the workout.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the weight.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Travissssz"},"content":"    public String getWeight() {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Travissssz"},"content":"        return weight;","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"     * Returns a string representation of the workout log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"     * The format is: \"name (sets sets of weight kg for reps reps) on date\".","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a formatted string representing the workout.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jasonlobo21"},"content":"    @Override","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jasonlobo21"},"content":"    public String toString() {","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Travissssz"},"content":"        return String.format(\"%s (%s sets of %s kg for %s reps) on %s\", name, sets,weight ,reps, getDate());","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-19T11:13:24","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":69,"kinneo":8,"Travissssz":7}},{"path":"src/main/java/seedu/healthbud/parser/BMIParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.input.BMICommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidBMIException;","lastModifiedDate":"2025-04-03T15:50:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Map;","lastModifiedDate":"2025-04-03T15:50:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * BMIParser is responsible for parsing the BMI command input.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" * It extracts the weight and height parameters from the input string and returns a BMICommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"public class BMIParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the given input string and returns a BMICommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input string containing the BMI command; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a BMICommand with the parsed weight and height values.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidBMIException if the input does not contain valid /h and /w parameters,","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     *                             or if the weight or height values are invalid.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"    public static BMICommand parse(String input) throws InvalidBMIException {","lastModifiedDate":"2025-04-03T15:50:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        if (!input.contains(\"/h\") || !input.contains(\"/w\")) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"            throw new InvalidBMIException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"        input \u003d input.substring(\"bmi\".length()).trim();","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"        if (!param.containsKey(\"w\") || param.get(\"w\").isEmpty()","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"                || !param.containsKey(\"h\") || param.get(\"h\").isEmpty()) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidBMIException();","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"        if (!param.get(\"w\").matches(\"\\\\d+\") || !param.get(\"h\").matches(\"^\\\\d+(\\\\.\\\\d+)?$\")) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"            throw new InvalidBMIException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"        double weight \u003d Double.parseDouble(param.get(\"w\"));","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"        double height \u003d Double.parseDouble(param.get(\"h\"));","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"        if(height \u003e 3.0 || height \u003c 0.2 || weight \u003c\u003d 0) {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidBMIException();","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        return new BMICommand(input, weight, height);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":30,"kinneo":20,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/parser/ClearParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.ClearCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidClearException;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * ClearParser is responsible for parsing the input command to clear logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * It returns a ClearCommand corresponding to the specified log type.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"public class ClearParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the given input string and returns a ClearCommand for the specified log type.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input command string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @param pbLogs the LogList for personal best logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs the LogList for meal logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList for workout logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs the LogList for water logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs the LogList for cardio logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a new ClearCommand corresponding to the specified log type.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidClearException if the input does not have exactly two parts or the log type is unrecognized.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    public static ClearCommand parse(String input, LogList pbLogs, LogList mealLogs,","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"                                     LogList workoutLogs, LogList waterLogs, LogList cardioLogs) throws","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"                                    InvalidClearException {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-04-03T15:40:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"            throw new InvalidClearException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"        switch (parts[1]) {","lastModifiedDate":"2025-04-03T15:40:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        case \"pb\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"            return new ClearCommand(pbLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        case \"meal\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"            return new ClearCommand(mealLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        case \"workout\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"            return new ClearCommand( workoutLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        case \"water\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"            return new ClearCommand(waterLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"            return new ClearCommand(cardioLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"            throw new InvalidClearException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":24,"kinneo":26}},{"path":"src/main/java/seedu/healthbud/parser/DateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"import java.text.ParseException;","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Travissssz"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"import java.util.Date;","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"import java.util.List;","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":" * DateParser provides utility methods for parsing and formatting date strings.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":" * It attempts to parse the input date using several predefined formats and returns the date","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":" * formatted as \"dd MMM yyyy\". If the input date cannot be parsed using any supported format,","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":" * an InvalidDateFormatException is thrown.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"public class DateParser {","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"    private static final String OUTPUT_FORMAT \u003d \"dd MMM yyyy\";","lastModifiedDate":"2025-03-31T00:57:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"    // List of possible input date formats to try","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"    private static final List\u003cString\u003e INPUT_FORMATS \u003d Arrays.asList(","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"            \"dd/MM/yy\",         // e.g., 12/11/25 -\u003e 12 Nov 2025 (due to pivot date)","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"            \"dd/MM/yyyy\",       // e.g., 25/12/2023","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"            \"dd-MM-yy\",         // e.g., 12-11-23 -\u003e 12 Nov 2023 (due to pivot date)","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"            \"dd-MM-yyyy\",       // e.g., 25-12-2023","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"            \"dd MM yy\",        // e.g., 25 12 23","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"            \"dd MM yyyy\",      // e.g., 25 12 2023","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"            \"ddMMyy\",       // e.g., 25 Nov 23","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"            \"ddMMyyyy\",     // e.g., 25112023","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"            \"dd MMM yy\",       // e.g., 25 Dec 23","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"            \"dd MMM yyyy\",     // e.g., 25 Dec 2023","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"            \"dd MMMM yy\",      // e.g., 25 December 23","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"            \"dd MMMM yyyy\",    // e.g., 25 December 2023","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"            \"MMM dd, yyyy\",     // e.g., Dec 25, 2023","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"            \"MMMM dd, yyyy\",    // e.g., December 25, 2023","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"            \"MMM dd yyyy\",","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"            \"MMM dd, yy\"        // e.g., Dec 25, 23","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"    );","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"     * Formats the input date string into the standard output format \"dd MMM yyyy\".","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"     * @param inputDate the input date string; must not be null or empty.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the formatted date string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidDateFormatException if the input date cannot be parsed using any supported format.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"    public static String formatDate(String inputDate) throws InvalidDateFormatException {","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        assert inputDate !\u003d null : \"Input date should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"        if (inputDate \u003d\u003d null || inputDate.trim().isEmpty()) {","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"        for (String format : INPUT_FORMATS) {","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":"            try {","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Travissssz"},"content":"                SimpleDateFormat sdf \u003d new SimpleDateFormat(format);","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Travissssz"},"content":"                sdf.setLenient(false); // Strict parsing","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"                // If using a two-digit year format, explicitly set the two-digit year start to 2000.","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"                if (format.contains(\"yy\") \u0026\u0026 !format.contains(\"yyyy\")) {","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"                    sdf.set2DigitYearStart(new SimpleDateFormat(\"yyyy\").parse(\"2000\"));","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"                }","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Travissssz"},"content":"                Date date \u003d sdf.parse(inputDate);","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Travissssz"},"content":"                SimpleDateFormat outputSdf \u003d new SimpleDateFormat(OUTPUT_FORMAT);","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Travissssz"},"content":"                return outputSdf.format(date);","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Travissssz"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Travissssz"},"content":"                // Try next format","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Travissssz"},"content":"            }","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"        throw new InvalidDateFormatException();","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":38,"kinneo":3,"Travissssz":35}},{"path":"src/main/java/seedu/healthbud/parser/DeleteParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.DeleteCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidDeleteException;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * DeleteParser is responsible for parsing the input command for deleting a log entry.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * It validates the input format, extracts the index, and returns the corresponding DeleteCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"public class DeleteParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the given input string and returns a DeleteCommand for the specified log type.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input      the input command string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs   the LogList for meal logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList for workout logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs  the LogList for water logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param pbLogs     the LogList for personal best logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs the LogList for cardio logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a new DeleteCommand for the specified log type and index.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidDeleteException if the input does not conform to the expected format or index is invalid.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    public static DeleteCommand parse(String input, LogList mealLogs, LogList workoutLogs, LogList waterLogs,","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"                                      LogList pbLogs, LogList cardioLogs)","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"            throws InvalidDeleteException {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T01:06:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2025-04-03T15:40:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        int index;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        try {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"            index \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"        switch (parts[1]) {","lastModifiedDate":"2025-04-03T15:40:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        case \"meal\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"            return new DeleteCommand(mealLogs, index);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"        case \"workout\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"            return new DeleteCommand(workoutLogs, index);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        case \"water\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"            return new DeleteCommand(waterLogs, index);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        case \"pb\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"            return new DeleteCommand(pbLogs, index);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"            return new DeleteCommand(cardioLogs, index);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":28,"kinneo":31}},{"path":"src/main/java/seedu/healthbud/parser/ListParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.ListCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidListException;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * ListParser is responsible for parsing the user input command for listing logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * It returns a new ListCommand corresponding to the specified log type.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"public class ListParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the given input string and returns a ListCommand for the specified log type.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input command string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs the LogList for meal logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList for workout logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs the LogList for water logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param pbLogs the LogList for personal best logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs the LogList for cardio logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a new ListCommand corresponding to the specified log type.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidListException if the input format is invalid or the log type is unrecognized.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    public static ListCommand parse(String input, LogList mealLogs, LogList workoutLogs,","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"                                    LogList waterLogs, LogList pbLogs, LogList cardioLogs)","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"            throws InvalidListException {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-04-03T15:40:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"            throw new InvalidListException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"        switch (parts[1]) {","lastModifiedDate":"2025-04-03T15:40:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        case \"meal\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"            return new ListCommand(mealLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        case \"workout\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"            return new ListCommand(workoutLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        case \"water\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"            return new ListCommand(waterLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        case \"pb\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"            return new ListCommand(pbLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"            return new ListCommand(cardioLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"            throw new InvalidListException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":24,"kinneo":26}},{"path":"src/main/java/seedu/healthbud/parser/ParserManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.Command;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.addcommandparser.AddParser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * ParserManager handles the parsing of user input and dispatches the corresponding commands.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" * It determines the type of command based on the first word of the input and calls the appropriate parser.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"public class ParserManager {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    public static final String NEW_LINE \u003d \"\\n     \";","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * Handles the user input by determining the function and executing the corresponding command.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param goalLogs   the LogList for goal logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param pbLogs     the LogList for personal best logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs   the LogList for meal logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList for workout logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs  the LogList for water logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs the LogList for cardio logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input      the user input; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     * @return true if the application should continue running; false if it should exit.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"    public static boolean handleInput(LogList goalLogs, LogList pbLogs, LogList mealLogs, LogList workoutLogs,","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"                                      LogList waterLogs, LogList cardioLogs, String input) {","lastModifiedDate":"2025-04-02T01:17:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"        String function \u003d input.split(\" \")[0];","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        try {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"            Command command;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"            switch (function) {","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"            case \"bye\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"                return Ui.printGoodbye();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"            case \"add\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"                command \u003d AddParser.parse(input, mealLogs, waterLogs, cardioLogs, pbLogs, workoutLogs, goalLogs);","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"            case \"help\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"                Ui.printHelp();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"                return true;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"            case \"list\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"                command \u003d ListParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"            case \"recommend\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"                command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"            case \"bmi\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"                command \u003d BMIParser.parse(input);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"            case \"delete\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"                command \u003d DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"            case \"clear\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"                command \u003d ClearParser.parse(input, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"            case \"sum\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"                command \u003d SumParser.parse(input, mealLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"            case \"status\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"                command \u003d StatusParser.parse(input, goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"                break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"            case \"search\":","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Ahmish15"},"content":"                command \u003d SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T11:17:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"                break;","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"keanneeee"},"content":"            case \"view\":","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"keanneeee"},"content":"                ViewGoalsParser.parse(input);","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"keanneeee"},"content":"                return true;","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"keanneeee"},"content":"            case \"track\":","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"keanneeee"},"content":"                command \u003d TrackGoalParser.parse(input, goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"keanneeee"},"content":"                break;","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"            default:","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"                Ui.printUnknownCommand();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"                return true;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"            command.execute();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"            return true;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ahmish15"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        return true;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":23,"keanneeee":6,"kinneo":52,"Ahmish15":5}},{"path":"src/main/java/seedu/healthbud/parser/ParserParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * ParserParameters provides utility methods for parsing command parameters.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * This class includes a method to extract key-value pairs from a command input string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"public class ParserParameters {","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the parameters from the given input string.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"     * The method splits the input by whitespace and extracts key-value pairs where keys start with a \u0027/\u0027.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input string containing parameters; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a Map containing parameter keys and their corresponding values.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"    public static Map\u003cString, String\u003e parseParameters(String input) {","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"        String[] tokens \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Travissssz"},"content":"        String currentKey \u003d null;","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"        StringBuilder currentValue \u003d new StringBuilder();","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"        for (String token : tokens) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Travissssz"},"content":"            if (token.startsWith(\"/\")) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"                // Save previous key-value pair","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"                if (currentKey !\u003d null) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"                    params.put(currentKey, currentValue.toString().trim());","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"                    currentValue.setLength(0);","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"                }","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Travissssz"},"content":"                currentKey \u003d token.substring(1); // Remove the \u0027/\u0027","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"            } else if (currentKey !\u003d null) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"                if (currentValue.length() \u003e 0) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"                    currentValue.append(\" \");","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"                }","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"                currentValue.append(token);","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"            }","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"        // Add the last parameter","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"        if (currentKey !\u003d null) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"            params.put(currentKey, currentValue.toString().trim());","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"        return params;","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":23,"kinneo":3,"Travissssz":23}},{"path":"src/main/java/seedu/healthbud/parser/RecommendParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.input.RecommendCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidRecommendException;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * RecommendParser is responsible for parsing the input command for workout recommendations.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * It validates the input format and returns a RecommendCommand containing a message","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * with recommended exercises for a specific muscle group.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"public class RecommendParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private static final String NEW_LINE \u003d \"\\n     \";","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"    ","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    public static RecommendCommand parse(String input) throws InvalidRecommendException {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"            throw new InvalidRecommendException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"        switch (parts[1]) {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        case \"chest\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended chest exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"                    + \"1. Incline Smith Machine Bench Press\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"                    + \"2. Dumbbell Chest Press\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"                    + \"3. Cable Chest Flys\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        case \"back\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended back exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"                    + \"1. Pull-Ups\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"                    + \"2. Barbell Bent-over Rows\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"                    + \"3. Lat Pulldown\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        case \"biceps\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended biceps exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"                    + \"1. Barbell Bicep Curls\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"                    + \"2. Hammer Curls\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"                    + \"3. Cable Curls\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        case \"triceps\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended triceps exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"                    + \"1. Close-Grip Bench Press\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"                    + \"2. Tricep Dips\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"                    + \"3. Skull Crushers\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"        case \"legs\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended leg exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"                    + \"1. Barbell Squats\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"                    + \"2. Leg Extension \u0026 Leg Curls\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"                    + \"3. Leg Press\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        case \"shoulders\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended shoulder exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"                    + \"1. Overhead Dumbell Shoulder Press (Front Delt)\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"                    + \"2. Lateral Raises (Side Delt)\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"                    + \"3. Rear Delt Flys (Rear Delt)\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"        case \"abs\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended ab exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"                    + \"1. Hanging Leg Raises\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"                    + \"2. Russian Twists\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"                    + \"3. Planks\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        case \"forearms\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are some recommended forearm exercises:\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"                    + \"1. Wrist Curls\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"                    + \"2. Reverse Wrist Curls\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"                    + \"3. Farmer\u0027s Walk\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"        case \"help\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"            return new RecommendCommand(\"Here are the list of muscle groups:\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"                    + \"1. chest\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"                    + \"2. back\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"                    + \"3. biceps\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"                    + \"4. triceps\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"                    + \"5. legs\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"                    + \"6. shoulders\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"                    + \"7. abs\" + NEW_LINE","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"                    + \"8. forearms\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidRecommendException();","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":11,"kinneo":75}},{"path":"src/main/java/seedu/healthbud/parser/SearchParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.SearchCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.exception.InvalidSearchException;","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * SearchParser is responsible for parsing the input command for searching logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" * It determines whether to search by date or keyword and returns a corresponding SearchCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"public class SearchParser {","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the given input string and returns a SearchCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs the LogList for meal logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList for workout logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs the LogList for water logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @param pbLogs the LogList for personal best logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs the LogList for cardio logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a new SearchCommand based on the log type and search parameter.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidSearchException if the input does not have exactly 4 parts or does not contain \"/k \" or \"/d \".","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidDateFormatException if the provided date is invalid.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"    public static SearchCommand parse(String input,","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"                                      LogList mealLogs, LogList workoutLogs,","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"                                      LogList waterLogs, LogList pbLogs, LogList cardioLogs)","lastModifiedDate":"2025-04-03T10:56:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"            throws InvalidSearchException, InvalidDateFormatException {","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T10:56:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"        if (parts.length !\u003d 4) {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidSearchException();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"        if (!input.contains(\"/k \") \u0026\u0026 !input.contains(\"/d \")) {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidSearchException();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"        String date \u003d null;","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"        String keyword \u003d null;","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"        if (input.contains(\"/d\")) {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"            date \u003d DateParser.formatDate(parts[3]);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"        } else {","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"            keyword \u003d parts[3];","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"        switch (parts[1]) {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"        case \"meal\":","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"            return new SearchCommand(mealLogs, date, keyword);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"        case \"workout\":","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"            return new SearchCommand(workoutLogs, date, keyword);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"        case \"water\":","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"            return new SearchCommand(waterLogs, date, keyword);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"        case \"pb\":","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"            return new SearchCommand(pbLogs, date, keyword);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"            return new SearchCommand(cardioLogs, date, keyword);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"        default:","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidSearchException();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-31T20:00:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-31T19:59:20","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":35,"kinneo":1,"Ahmish15":31}},{"path":"src/main/java/seedu/healthbud/parser/StatusParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.multilog.StatusCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidStatusException;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * StatusParser is responsible for parsing the input command to generate a StatusCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * It handles the \"change\" and \"report\" actions for status updates and reporting.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"public class StatusParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    private static String currentStatus \u003d \"neutral\";","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the given input and returns a StatusCommand based on the action and argument provided.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param goalLogs the LogList for goal logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param pbLogs the LogList for personal best logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs the LogList for meal logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList for workout logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs the LogList for water logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs the LogList for cardio logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a new StatusCommand based on the parsed input.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidStatusException if the input does not conform to the expected format.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"    public static StatusCommand parse(String input, LogList goalLogs, LogList pbLogs, LogList mealLogs,","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"                                      LogList workoutLogs, LogList waterLogs, LogList cardioLogs)","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"            throws InvalidStatusException {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"            throw new InvalidStatusException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        String action \u003d parts[1].toLowerCase();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        String arg \u003d parts[2].toLowerCase();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        String message;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"        switch (action) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        case \"change\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"            if (!arg.equals(\"cutting\") \u0026\u0026 !arg.equals(\"bulking\")) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"                throw new InvalidStatusException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"            currentStatus \u003d arg;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"            message \u003d \"Status updated to: \" + currentStatus;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"            break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        case \"report\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"            int caloriesEaten \u003d mealLogs.getCaloriesSum(arg);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"            int caloriesBurned \u003d cardioLogs.getCardioSum(arg);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"            int netCalories \u003d caloriesEaten - caloriesBurned;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"            sb.append(\"Current Status: \").append(currentStatus).append(\"\\n\");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"            if (currentStatus.equals(\"bulking\") \u0026\u0026 netCalories \u003e 0) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"                sb.append(\"You are on track for bulking! Net calories: \").append(netCalories);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"            } else if (currentStatus.equals(\"cutting\") \u0026\u0026 netCalories \u003c 0) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"                sb.append(\"You are on track for cutting! Net calories: \").append(netCalories);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"            } else {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"                sb.append(\"Your intake does not align with your goal. Net calories: \").append(netCalories);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"            message \u003d sb.toString();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"            break;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"            throw new InvalidStatusException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"        return new StatusCommand(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input, message);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":18,"kinneo":60}},{"path":"src/main/java/seedu/healthbud/parser/SumParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.SumCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03T02:23:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidSumException;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * SumParser is responsible for parsing the input command for the sum operation.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" * It extracts the log type and date and returns the corresponding SumCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"public class SumParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the given input string and returns a SumCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs the LogList for meal logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs the LogList for water logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs the LogList for cardio logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a new SumCommand based on the log type and date extracted from the input.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidSumException if the input does not conform to the expected format.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidDateFormatException if the date format is invalid.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    public static SumCommand parse(String input, LogList mealLogs, LogList waterLogs, LogList cardioLogs) throws","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"            InvalidSumException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03T02:23:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 4 || !parts[2].equals(\"/d\")) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"            throw new InvalidSumException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        String type \u003d parts[1].toLowerCase();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        String date \u003d parts[3];","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"        String parseDate \u003d DateParser.formatDate(date);","lastModifiedDate":"2025-04-03T02:23:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        switch (type) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        case \"cal\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"            return new SumCommand(mealLogs, type, parseDate);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        case \"vol\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"            return new SumCommand(waterLogs, type, parseDate);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"            return new SumCommand(cardioLogs, type, parseDate);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"            throw new InvalidSumException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":19,"keanneeee":3,"kinneo":28}},{"path":"src/main/java/seedu/healthbud/parser/TrackGoalParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.command.multilog.TrackGoalCommand;","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03T02:23:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidTrackException;","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * TrackGoalParser is responsible for parsing the input command to create a TrackGoalCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" * It checks for correct formatting and extracts the date parameter.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"public class TrackGoalParser {","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the given input string and creates a TrackGoalCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"     * @param goalLogs the LogList for goals.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"     * @param pbLogs the LogList for personal bests.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs the LogList for meals.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList for workouts.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs the LogList for water logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs the LogList for cardio logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a new TrackGoalCommand created from the input.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidTrackException if the input does not conform to the expected format.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidDateFormatException if the date parameter is invalid.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"    public static TrackGoalCommand parse(String input, LogList goalLogs, LogList pbLogs, LogList mealLogs,","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"                                         LogList workoutLogs, LogList waterLogs, LogList cardioLogs)","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"            throws InvalidTrackException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03T02:23:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"        if (parts.length \u003c 4 || !parts[2].equals(\"/d\")) {","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"            throw new InvalidTrackException();","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"        String date \u003d parts[3];","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"        return new TrackGoalCommand(date, goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-02T15:20:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T02:05:56","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":18,"keanneeee":24,"kinneo":2}},{"path":"src/main/java/seedu/healthbud/parser/ViewGoalsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.Ui;","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Goals;","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":" * ViewGoalsParser is responsible for displaying the current goals and prompting the user","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":" * to add new goals.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":" * This class fetches the current goal settings from the Goals singleton and prints them using","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":" * the Ui class.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":" *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":" * Usage: Call the static parse method to display the current goals and prompt for new goals.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":" *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":" * Note: The input parameter is currently not used for any parsing.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"public class ViewGoalsParser {","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"    Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the input and displays the current goals along with a prompt to add a new goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"    public static void parse(String input){","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"        Ui.printMessage(\"Welcome to goal setting! Here are your current goals: \\n\"","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"                + Goals.getInstance().toString());","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"        Ui.printMessage(\"What goal would you like to add today?\\n\");","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-04-02T02:33:19","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":16,"keanneeee":14,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddCardioParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddCardioCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidCardioException;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":" * AddCardioParser is responsible for parsing the input command for adding a cardio log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":" * It extracts the exercise name, speed, incline, duration, and date parameters from the input","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":" * string and returns an AddCardioCommand with the parsed details.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"public class AddCardioParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the input command for adding a cardio log and returns an AddCardioCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs the LogList for cardio logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input      the input command string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * @return an AddCardioCommand with the parsed cardio log details.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidCardioException if the input format is invalid, required parameters are missing,","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"     *                                or parameter values are not valid numbers.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidDateFormatException if the provided date cannot be parsed.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"    public static AddCardioCommand parse(LogList cardioLogs, String input)","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"            throws InvalidCardioException, InvalidDateFormatException {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"            throw new InvalidCardioException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        if (!input.contains(\"/s \") || !input.contains(\"/i \") || !input.contains(\"/t \") || !input.contains(\"/d \")) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"            throw new InvalidCardioException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"        input \u003d input.replaceFirst(\"add cardio\", \"\").trim();","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"        String name \u003d input.substring(0, input.indexOf(\"/\")).trim();","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"            throw new InvalidCardioException();","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"        }","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input.substring(name.length()));","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"        Set\u003cString\u003e allowedKeys \u003d new HashSet\u003c\u003e(Arrays.asList(\"s\", \"i\", \"t\", \"d\"));","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"        if (!param.keySet().equals(allowedKeys)) {","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidCardioException();","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"        if (name.isEmpty() ||","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"s\") || param.get(\"s\").isEmpty() ||","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"i\") || param.get(\"i\").isEmpty() ||","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"t\") || param.get(\"t\").isEmpty() ||","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"d\") || param.get(\"d\").isEmpty()) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"            throw new InvalidCardioException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Travissssz"},"content":"        if (!param.get(\"s\").matches(\"\\\\d+(\\\\.\\\\d+)?\") ||","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Travissssz"},"content":"                !param.get(\"i\").matches(\"\\\\d+(\\\\.\\\\d+)?\") ||","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Travissssz"},"content":"                !param.get(\"t\").matches(\"\\\\d+(\\\\.\\\\d+)?\")) {","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"            throw new InvalidCardioException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Travissssz"},"content":"        String formattedDate \u003d DateParser.formatDate(param.get(\"d\"));","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"        return new AddCardioCommand(cardioLogs, name,","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Travissssz"},"content":"                param.get(\"s\"), param.get(\"i\"), param.get(\"t\"),","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Travissssz"},"content":"                formattedDate);","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":28,"kinneo":30,"Ahmish15":4,"Travissssz":19}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddGoalParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keanneeee"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-31T12:39:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.command.singlelog.AddGoalCommand;","lastModifiedDate":"2025-04-02T13:32:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidGoalException;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Goals;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-31T12:39:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":" * AddGoalParser is responsible for parsing the input command for adding a goal log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":" * It checks for missing parameters and appends default values from the Goals singleton before","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":" * returning an AddGoalCommand with the parsed goal values.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"public class AddGoalParser {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"    static Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-03-31T00:41:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"     * Adds missing goal parameters to the input string if they are not present.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * If the input does not contain the calorie (/cal), water (/w), or weight (/kg) parameter,","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * the default value from the Goals instance is appended.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input string for adding a goal.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the modified input string with all required parameters.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"    private static String addMissingParameters(String input) {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"        if (!input.contains(\"/cal\")) {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"            input +\u003d \" /cal \" + Goals.getInstance().getDailyCalorieGoal();","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"        if (!input.contains(\"/w\")) {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"            input +\u003d \" /w \" + Goals.getInstance().getDailyWaterGoal();","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"        if (!input.contains(\"/kg\")) {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"            input +\u003d \" /kg \" + Goals.getInstance().getWeightGoal();","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"        return input;","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the input command for adding a goal and returns an AddGoalCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"     * The method first checks for a minimum number of parts in the input, then appends missing","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"     * parameters using default goal values if necessary. It then extracts the goal parameters","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"     * and creates a new AddGoalCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"     * @param goalLogs the LogList for goal logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input command string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"     * @return an AddGoalCommand with the parsed water, calorie, and weight goal values.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidGoalException if the input format is invalid, parameters are missing,","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"     *                              or if any of the parameters are not numeric.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"keanneeee"},"content":"    public static AddGoalCommand parse(LogList goalLogs, String input) throws InvalidGoalException {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"keanneeee"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"keanneeee"},"content":"        if (parts.length \u003c\u003d  2) {","lastModifiedDate":"2025-04-02T02:45:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"keanneeee"},"content":"            throw new InvalidGoalException();","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-02T02:45:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"keanneeee"},"content":"        input \u003d addMissingParameters(input);","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"keanneeee"},"content":"        input \u003d input.substring(\"add goal\".length()).trim();","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"keanneeee"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"keanneeee"},"content":"        if (!param.get(\"cal\").matches(\"\\\\d+\") || !param.get(\"w\").matches(\"\\\\d+\")","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"keanneeee"},"content":"                || !param.get(\"kg\").matches(\"\\\\d+\")) {","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"keanneeee"},"content":"            throw new InvalidGoalException();","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"keanneeee"},"content":"        }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"        return new AddGoalCommand(goalLogs, param.get(\"w\"), param.get(\"cal\"), param.get(\"kg\"));","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"keanneeee"},"content":"}","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":26,"keanneeee":44,"kinneo":1}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddMealParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddMealCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidMealException;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":" * AddMealParser is responsible for parsing the input command for adding a meal log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":" * It extracts the meal name, calorie count, date, and time parameters from the input string","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":" * and returns an AddMealCommand with the parsed details.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"public class AddMealParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the given input command for adding a meal log and returns an AddMealCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs the LogList for meal logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input command string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * @return an AddMealCommand with the parsed meal log details.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidMealException if the input format is invalid or required parameters are missing.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidDateFormatException if the provided date cannot be parsed.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"    //@@author Ahmish15","lastModifiedDate":"2025-03-30T22:43:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"    public static AddMealCommand parse(LogList mealLogs, String input)","lastModifiedDate":"2025-03-30T15:52:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"            throws InvalidMealException, InvalidDateFormatException {","lastModifiedDate":"2025-03-30T15:52:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"        if (!input.contains(\"/cal \") || !input.contains(\"/d \") || !input.contains(\"/t \")) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidMealException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"        input \u003d input.substring(\"add meal\".length()).trim();","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"        String name \u003d input.substring(0, input.indexOf(\"/\")).trim();","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input.substring(name.length()));","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"        Set\u003cString\u003e allowedKeys \u003d new HashSet\u003c\u003e(Arrays.asList(\"cal\", \"d\", \"t\"));","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"        if (!param.keySet().equals(allowedKeys)) {","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidMealException();","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"        if (name.isEmpty() || !param.containsKey(\"cal\") || param.get(\"cal\").isEmpty() || !param.containsKey(\"d\")","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"                || param.get(\"d\").isEmpty() || !param.containsKey(\"t\") || param.get(\"t\").isEmpty()) {","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidMealException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"        if (!param.get(\"cal\").matches(\"\\\\d+\")) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidMealException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"        String formattedDate \u003d DateParser.formatDate(param.get(\"d\"));","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"        return new AddMealCommand(mealLogs, name, param.get(\"cal\"), formattedDate, param.get(\"t\"));","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":18,"kinneo":8,"Ahmish15":36,"Travissssz":1}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.Command;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidAddLogException;","lastModifiedDate":"2025-04-03T15:50:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidCardioException;","lastModifiedDate":"2025-04-03T15:50:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03T15:50:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidGoalException;","lastModifiedDate":"2025-04-03T15:50:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidMealException;","lastModifiedDate":"2025-04-03T15:50:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidPersonalBestException;","lastModifiedDate":"2025-04-03T15:50:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidWaterException;","lastModifiedDate":"2025-04-03T15:50:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidWorkoutException;","lastModifiedDate":"2025-04-03T15:50:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":" * AddParser is responsible for parsing the input command for adding logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":" * It dispatches the command to the appropriate sub-parser based on the log type.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"public class AddParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the given input command and returns a Command for adding a log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input command string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs the LogList for meal logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs the LogList for water logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs the LogList for cardio logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * @param pbLogs the LogList for personal best logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList for workout logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"     * @param goalLogs the LogList for goal logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"     * @return a Command object corresponding to the log type to be added.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidAddLogException if the input command has insufficient parts or an unrecognized log type.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidCardioException if the input command for a cardio log is invalid.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidMealException if the input command for a meal log is invalid.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidPersonalBestException if the input command for a personal best log is invalid.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidWaterException if the input command for a water log is invalid.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidWorkoutException if the input command for a workout log is invalid.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidDateFormatException if the date in the input cannot be parsed.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidGoalException if the input command for a goal log is invalid.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"    public static Command parse(String input, LogList mealLogs, LogList waterLogs, LogList cardioLogs,","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"                                LogList pbLogs, LogList workoutLogs, LogList goalLogs) throws","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidAddLogException, InvalidCardioException, InvalidMealException,","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"                                InvalidPersonalBestException, InvalidWaterException, InvalidWorkoutException,","lastModifiedDate":"2025-04-01T15:41:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"                                InvalidDateFormatException, InvalidGoalException {","lastModifiedDate":"2025-04-01T15:41:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidAddLogException();","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"        switch (parts[1]) {","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"        case \"meal\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"            return AddMealParser.parse(mealLogs, input);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        case \"water\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"            return AddWaterParser.parse(waterLogs, input);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"        case \"cardio\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"            return AddCardioParser.parse(cardioLogs, input);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"        case \"pb\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"            return AddPersonalBestParser.parse(pbLogs, input);","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"        case \"workout\":","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"            return AddWorkoutParser.parse(workoutLogs, input);","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"keanneeee"},"content":"        case \"goal\":","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"keanneeee"},"content":"            return AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        default:","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidAddLogException();","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":45,"keanneeee":2,"kinneo":22,"Ahmish15":1}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddPersonalBestParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddPersonalBestCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidPersonalBestException;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":" * AddPersonalBestParser is responsible for parsing the input command for adding a personal best log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":" * It extracts the exercise name, weight, and date parameters from the input string and returns an","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":" * AddPersonalBestCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"public class AddPersonalBestParser {","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the input command for adding a personal best and returns an AddPersonalBestCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     * @param pbLogs the LogList for personal best logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input  the input command string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     * @return an AddPersonalBestCommand with the parsed exercise name, weight, and date.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidPersonalBestException if the input format is invalid or required parameters are missing.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidDateFormatException if the provided date cannot be parsed.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    public static AddPersonalBestCommand parse(LogList pbLogs, String input)","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"            throws InvalidPersonalBestException, InvalidDateFormatException {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        if (!input.contains(\"/w \") || !input.contains(\"/d \")) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"            throw new InvalidPersonalBestException();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"        input \u003d input.substring(\"add pb\".length()).trim();","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"        String name \u003d input.substring(0, input.indexOf(\"/\")).trim();","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input.substring(name.length()));","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"        Set\u003cString\u003e allowedKeys \u003d new HashSet\u003c\u003e(Arrays.asList(\"w\", \"d\"));","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"        if (!param.keySet().equals(allowedKeys)) {","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidPersonalBestException();","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"        if (name.isEmpty() ||","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"w\") || param.get(\"w\").isEmpty() ||","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"d\") || param.get(\"d\").isEmpty()) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"            throw new InvalidPersonalBestException();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"        if (!param.get(\"w\").matches(\"\\\\d+\")) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"            throw new InvalidPersonalBestException();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":"        String formattedDate \u003d DateParser.formatDate(param.get(\"d\"));","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"        return new AddPersonalBestCommand(pbLogs, name, param.get(\"w\"), formattedDate);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":26,"kinneo":26,"Ahmish15":4,"Travissssz":7}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddWaterParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddWaterCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidWaterException;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":" * AddWaterParser is responsible for parsing the input command for adding a water log.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":" * It extracts the water volume, date, and time parameters from the input string and returns an AddWaterCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"public class AddWaterParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the input command for adding a water log and returns an AddWaterCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs the LogList for water logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input     the input command string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     * @return an AddWaterCommand with the parsed water log details.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidWaterException if the input format is invalid or required parameters are missing.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidDateFormatException if the date provided cannot be parsed.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"    public static AddWaterCommand parse(LogList waterLogs, String input)","lastModifiedDate":"2025-03-30T15:52:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Travissssz"},"content":"            throws InvalidWaterException, InvalidDateFormatException {","lastModifiedDate":"2025-03-30T15:52:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"        input \u003d input.substring(\"add water\".length()).trim();","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"        if (!input.contains(\"/ml \") || !input.contains(\"/d \") || !input.contains(\"/t \") || !input.startsWith(\"/\")) {","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"            throw new InvalidWaterException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"        Set\u003cString\u003e allowedKeys \u003d new HashSet\u003c\u003e(Arrays.asList(\"ml\", \"d\", \"t\"));","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"        if (!param.keySet().equals(allowedKeys)) {","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"            throw new InvalidWaterException();","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"        if (!param.containsKey(\"ml\") || param.get(\"ml\").isEmpty() ||","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"d\") || param.get(\"d\").isEmpty() ||","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"                !param.containsKey(\"t\") || param.get(\"t\").isEmpty()) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"            throw new InvalidWaterException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"        if (!param.get(\"ml\").matches(\"\\\\d+\")) {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"            throw new InvalidWaterException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":"        String formattedDate \u003d DateParser.formatDate(param.get(\"d\"));","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"        return new AddWaterCommand(waterLogs, param.get(\"ml\"), formattedDate, param.get(\"t\"));","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":27,"kinneo":23,"Ahmish15":3,"Travissssz":9}},{"path":"src/main/java/seedu/healthbud/parser/addcommandparser/AddWorkoutParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ahmish15"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddWorkoutCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidWorkoutException;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.DateParser;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.ParserParameters;","lastModifiedDate":"2025-03-30T22:21:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":" * AddWorkoutParser is responsible for parsing the input command for adding a workout.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":" * It extracts the workout details from the input string and returns an AddWorkoutCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"public class AddWorkoutParser {","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses the input command for adding a workout and returns an AddWorkoutCommand.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList for workout logs; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"     * @param input the input command string; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"     * @return an AddWorkoutCommand containing the parsed workout details.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidWorkoutException if the input format is invalid or required parameters are missing.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws InvalidDateFormatException if the date provided cannot be parsed.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"    //@@author Ahmish15","lastModifiedDate":"2025-03-30T22:43:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"    public static AddWorkoutCommand parse(LogList workoutLogs, String input)","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"            throws InvalidWorkoutException, InvalidDateFormatException {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"        if (!input.contains(\"/r \") || !input.contains(\"/s \") || !input.contains(\"/d \") || !input.contains(\"/w \")) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidWorkoutException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"        input \u003d input.substring(\"add workout\".length()).trim();","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"        String name \u003d input.substring(0, input.indexOf(\"/\")).trim();","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"        Map\u003cString, String\u003e param \u003d ParserParameters.parseParameters(input.substring(name.length()));","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"        Set\u003cString\u003e allowedKeys \u003d new HashSet\u003c\u003e(Arrays.asList(\"r\", \"d\", \"s\", \"w\"));","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"        if (!param.keySet().equals(allowedKeys)) {","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidWorkoutException();","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"        if (name.isEmpty() ||","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"                !param.containsKey(\"r\") || param.get(\"r\").isEmpty() ||","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"                !param.containsKey(\"s\") || param.get(\"s\").isEmpty() ||","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"                !param.containsKey(\"d\") || param.get(\"d\").isEmpty() ||","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"                !param.containsKey(\"w\") || param.get(\"w\").isEmpty()) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidWorkoutException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"        if (!param.get(\"r\").matches(\"\\\\d+\") || !param.get(\"s\").matches(\"\\\\d+\") ||","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"                !param.get(\"w\").matches(\"\\\\d+(\\\\.\\\\d+)?\")) {","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"            throw new InvalidWorkoutException();","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"        }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"        String formattedDate \u003d DateParser.formatDate(param.get(\"d\"));","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Ahmish15"},"content":"        return new AddWorkoutCommand(workoutLogs, name, param.get(\"r\"), param.get(\"s\"),","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"                formattedDate, param.get(\"w\"));","lastModifiedDate":"2025-04-03T13:23:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-27T22:23:26","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":18,"kinneo":7,"Ahmish15":42,"Travissssz":1}},{"path":"src/main/java/seedu/healthbud/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.storage;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Workout;","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Water;","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Log;","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.PersonalBest;","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Cardio;","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Goals;","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"import java.util.List;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"/**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":" * Storage class for the HealthBud application.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":" * This class handles all file operations such as loading, appending, and rewriting logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":" * It also provides utility methods to parse log objects to and from strings.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":" */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"public class Storage {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"    public static final String DATA_DIRECTORY \u003d \"data\";","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"    public static final String DATA_FILE \u003d \"HealthBud.txt\";","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"    public static final Path DATA_PATH \u003d Paths.get(DATA_DIRECTORY, DATA_FILE);","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"     * Loads logs from the storage file into the provided LogLists.","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"     * If the file or directory does not exist, they are created.","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"     * @param mealLogs    the LogList to load meal logs into","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"     * @param workoutLogs the LogList to load workout logs into","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"     * @param waterLogs   the LogList to load water logs into","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"     * @param pbLogs      the LogList to load personal best logs into","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"     * @param cardioLogs  the LogList to load cardio logs into","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"     * @param goalLogs    the LogList to load goal logs into","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"    public static void loadLogs(LogList mealLogs, LogList workoutLogs, LogList waterLogs,","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"                                LogList pbLogs, LogList cardioLogs, LogList goalLogs) {","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"        try {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"            Files.createDirectories(Paths.get(DATA_DIRECTORY));","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"            if (!Files.exists(DATA_PATH)) {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"                Files.createFile(DATA_PATH);","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"                System.out.println(\"Created new text file in \" +","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"                        DATA_PATH.toString().replace(\"\\\\\", \"/\"));","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"                return;","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(DATA_PATH);","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"                try {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"                    Log log \u003d parseStringToLog(line);","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"                    // Distribute log based on its type","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"                    if (log instanceof Meal) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"                        mealLogs.loadLog(log);","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"                    } else if (log instanceof Workout) {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"                        workoutLogs.loadLog(log);","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"                    } else if (log instanceof Water) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"                        waterLogs.loadLog(log);","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"                    } else if (log instanceof PersonalBest){","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"                        pbLogs.loadLog(log);","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"                    } else if (log instanceof Cardio){","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"                        cardioLogs.loadLog(log);","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"                    } else if (log instanceof Goals){","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"                        goalLogs.loadLog(log);","lastModifiedDate":"2025-03-25T02:03:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"                    }","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonlobo21"},"content":"                    System.out.println(\"Warning: Ignoring invalid log in file: \" + line);","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonlobo21"},"content":"                }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"            System.out.println(\"Warning: Error loading logs from file. Starting with empty lists.\");","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jasonlobo21"},"content":"     * Parses a log string from the storage file into a Log object.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"     * @param line the line from the file representing a log","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the parsed Log object","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws IllegalArgumentException if the log format is invalid or unknown","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jasonlobo21"},"content":"    public static Log parseStringToLog(String line) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jasonlobo21"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jasonlobo21"},"content":"            throw new IllegalArgumentException(\"Invalid log format\");","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jasonlobo21"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jasonlobo21"},"content":"        switch (type) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jasonlobo21"},"content":"        case \"M\":","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonlobo21"},"content":"            if (parts.length !\u003d 5) {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jasonlobo21"},"content":"                throw new IllegalArgumentException(\"Invalid meal format\");","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jasonlobo21"},"content":"            return new Meal(parts[1], parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jasonlobo21"},"content":"        case \"WO\":","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Travissssz"},"content":"            if (parts.length !\u003d 6) {","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jasonlobo21"},"content":"                throw new IllegalArgumentException(\"Invalid workout format\");","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"            return new Workout(parts[1], parts[2], parts[3], parts[4], parts[5]);","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jasonlobo21"},"content":"        case \"WA\":","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jasonlobo21"},"content":"            if (parts.length !\u003d 4) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonlobo21"},"content":"                throw new IllegalArgumentException(\"Invalid water format\");","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jasonlobo21"},"content":"            return new Water(parts[1], parts[2], parts[3]);","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"        case \"P\":","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"            if (parts.length !\u003d 4) {","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"                throw new IllegalArgumentException(\"Invalid pb format\");","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"            return new PersonalBest(parts[1], parts[2], parts[3]);","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"        case \"C\":","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"            if (parts.length !\u003d 6) {","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"                throw new IllegalArgumentException(\"Invalid cardio format\");","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"            return new Cardio(parts[1], parts[2], parts[3], parts[4], parts[5]);","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"        case \"G\":","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"            if (parts.length !\u003d 4) {","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"                throw new IllegalArgumentException(\"Invalid goal format\");","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"            }","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"            Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"keanneeee"},"content":"            goals.setDailyWaterGoal(parts[1]);","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"keanneeee"},"content":"            goals.setDailyCalorieGoal(parts[2]);","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"            goals.setWeightGoal(parts[3]);","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"            return goals;","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jasonlobo21"},"content":"        default:","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jasonlobo21"},"content":"            throw new IllegalArgumentException(\"Unknown log type: \" + type);","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jasonlobo21"},"content":"     * Appends the given log to the storage file.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jasonlobo21"},"content":"     * @param log the log to append; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jasonlobo21"},"content":"    public static void appendLogToFile(Log log) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jasonlobo21"},"content":"        try (FileWriter fw \u003d new FileWriter(DATA_PATH.toString(), true)) {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jasonlobo21"},"content":"            fw.write(parseLogToString(log) + System.lineSeparator());","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jasonlobo21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jasonlobo21"},"content":"            System.out.println(\"Error appending log to file: \" + e.getMessage());","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jasonlobo21"},"content":"     * Rewrites the storage file with the current list of logs.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jasonlobo21"},"content":"     * @param logs the LogList containing all current logs","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jasonlobo21"},"content":"    public static void rewriteLogsToFile(LogList logs) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Jasonlobo21"},"content":"        try (FileWriter fw \u003d new FileWriter(DATA_PATH.toString())) {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jasonlobo21"},"content":"            for (int i \u003d 0; i \u003c logs.getSize(); i++) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Jasonlobo21"},"content":"                fw.write(parseLogToString(logs.getLog(i)) + System.lineSeparator());","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Jasonlobo21"},"content":"            }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Jasonlobo21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Jasonlobo21"},"content":"            System.out.println(\"Error rewriting logs to file: \" + e.getMessage());","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Jasonlobo21"},"content":"    /**","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jasonlobo21"},"content":"     * Converts a Log object into its string representation for storage.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Jasonlobo21"},"content":"     *","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Jasonlobo21"},"content":"     * @param log the log object to be converted; must not be null.","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Jasonlobo21"},"content":"     * @return the string representation of the log","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Jasonlobo21"},"content":"     * @throws IllegalArgumentException if the log type is unknown","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Jasonlobo21"},"content":"     */","lastModifiedDate":"2025-04-03T23:50:32","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Jasonlobo21"},"content":"    public static String parseLogToString(Log log) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Jasonlobo21"},"content":"        if (log instanceof Meal) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Jasonlobo21"},"content":"            Meal meal \u003d (Meal) log;","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Jasonlobo21"},"content":"            return \"M | \" + meal.getName() + \" | \" + meal.getCalories()","lastModifiedDate":"2025-03-19T14:37:45","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Jasonlobo21"},"content":"                    + \" | \" + meal.getDate() + \" | \" + meal.getTime();","lastModifiedDate":"2025-03-19T14:37:45","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kinneo"},"content":"        } else if (log instanceof Workout) {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kinneo"},"content":"            Workout workout \u003d (Workout) log;","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Travissssz"},"content":"            return \"WO | \" + workout.getName() + \" | \" + workout.getReps()","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Travissssz"},"content":"                    + \" | \" + workout.getSets() + \" | \" + workout.getDate()","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Travissssz"},"content":"                    + \" | \" + workout.getWeight();","lastModifiedDate":"2025-03-30T15:45:26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Jasonlobo21"},"content":"        } else if (log instanceof Water) {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Jasonlobo21"},"content":"            Water water \u003d (Water) log;","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Jasonlobo21"},"content":"            return \"WA | \" + water.getAmount() + \" | \" + water.getDate() + \" | \" + water.getTime();","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kinneo"},"content":"        } else if (log instanceof PersonalBest) {","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kinneo"},"content":"            PersonalBest pb \u003d (PersonalBest) log;","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kinneo"},"content":"            return \"P | \" + pb.getExercise() + \" | \" + pb.getWeight() + \" | \" + pb.getDate();","lastModifiedDate":"2025-03-20T00:42:31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kinneo"},"content":"        } else if (log instanceof Cardio) {","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kinneo"},"content":"            Cardio cardio \u003d (Cardio) log;","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kinneo"},"content":"            return \"C | \" + cardio.getName() + \" | \" + cardio.getDuration() + \" | \" + cardio.getIncline() +","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kinneo"},"content":"                    \" | \" + cardio.getSpeed() + \" | \" + cardio.getDate();","lastModifiedDate":"2025-03-21T22:48:13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kinneo"},"content":"        } else if (log instanceof Goals) {","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kinneo"},"content":"            Goals goals \u003d (Goals) log;","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"keanneeee"},"content":"            return \"G | \" + goals.getDailyWaterGoal() + \" | \" + goals.getDailyCalorieGoal()","lastModifiedDate":"2025-03-31T00:23:49","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kinneo"},"content":"                    + \" | \" + goals.getWeightGoal();","lastModifiedDate":"2025-03-22T19:47:20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Jasonlobo21"},"content":"        }else {","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Jasonlobo21"},"content":"            throw new IllegalArgumentException(\"Unknown log type\");","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Jasonlobo21"},"content":"        }","lastModifiedDate":"2025-03-19T13:25:25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Jasonlobo21"},"content":"}","lastModifiedDate":"2025-03-18T23:30:57","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":147,"keanneeee":3,"kinneo":43,"Travissssz":4}},{"path":"src/test/java/seedu/healthbud/LogListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Cardio;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Water;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"class LogListTest {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    void testAddLog() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        Meal meal \u003d new Meal(\"Lunch\", \"500\", \"12-04-2025\", \"12:00 PM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        logList.addLog(meal);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, logList.getSize());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        assertEquals(meal, logList.getLog(0));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    void testDeleteLog() throws HealthBudException {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        Meal meal \u003d new Meal(\"Lunch\", \"500\", \"12-04-2025\", \"12:00 PM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        logList.addLog(meal);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, logList.getSize());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        logList.deleteLog(1);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        assertEquals(0, logList.getSize());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    void testLoadLog() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        Meal meal \u003d new Meal(\"Lunch\", \"500\", \"12-04-2025\", \"12:00 PM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        logList.loadLog(meal);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, logList.getSize());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"        assertEquals(meal, logList.getLog(0));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    void testLoadNullLog() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e logList.loadLog(null));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"    void testDeleteLogIndexOutOfBounds() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"        assertThrows(HealthBudException.class, () -\u003e logList.deleteLog(1));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"    void testDeleteLogWhenEmpty() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"        assertThrows(HealthBudException.class, () -\u003e logList.deleteLog(1));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"    void testGetCaloriesSum() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        Meal meal1 \u003d new Meal(\"Breakfast\", \"300\", \"12-04-2025\", \"7:00 AM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"        Meal meal2 \u003d new Meal(\"Lunch\", \"500\", \"12-04-2025\", \"12:00 PM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"        logList.addLog(meal1);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"        logList.addLog(meal2);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"        assertEquals(800, logList.getCaloriesSum(\"12-04-2025\"));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"    void testGetCardioSum() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"        Cardio cardio1 \u003d new Cardio(\"Running\", \"5\", \"2\", \"30\", \"12-04-2025\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"        Cardio cardio2 \u003d new Cardio(\"Cycling\", \"10\", \"3\", \"40\", \"12-04-2025\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"        logList.addLog(cardio1);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        logList.addLog(cardio2);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"        assertEquals(3333, logList.getCardioSum(\"12-04-2025\"));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    void testGetWaterSum() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"        Water water1 \u003d new Water(\"500\", \"12-04-2025\", \"7:00 AM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"        Water water2 \u003d new Water(\"1000\", \"12-04-2025\", \"12:00 PM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        logList.addLog(water1);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"        logList.addLog(water2);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"        assertEquals(1500, logList.getWaterSum(\"12-04-2025\"));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"    void testClearLogs() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"        Meal meal \u003d new Meal(\"Lunch\", \"500\", \"12-04-2025\", \"12:00 PM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"        logList.addLog(meal);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, logList.getSize());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"        logList.clearLogs();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"        assertEquals(0, logList.getSize());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"    void testClearLogsEmpty() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"        logList.clearLogs();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"        assertTrue(logList.isEmpty());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"    void testClearLogsOnEmptyList() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"        logList.clearLogs();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"        assertTrue(logList.isEmpty());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"    void testIsEmpty() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"        assertTrue(logList.isEmpty());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"        Meal meal \u003d new Meal(\"Lunch\", \"500\", \"12-04-2025\", \"12:00 PM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"        logList.addLog(meal);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"        assertTrue(!logList.isEmpty());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"    void testFindLog() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"        Meal meal1 \u003d new Meal(\"Breakfast\", \"300\", \"12-04-2025\", \"7:00 AM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"        Meal meal2 \u003d new Meal(\"Lunch\", \"500\", \"12-04-2025\", \"12:00 PM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"        logList.addLog(meal1);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kinneo"},"content":"        logList.addLog(meal2);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kinneo"},"content":"        logList.findLog(\"Lunch\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kinneo"},"content":"        logList.findLog(\"Snack\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"    void testFindLogWithNullKeyword() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"        Meal meal \u003d new Meal(\"Lunch\", \"500\", \"12-04-2025\", \"12:00 PM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"        logList.addLog(meal);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e logList.findLog(null));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kinneo"},"content":"    void testListLogs() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kinneo"},"content":"        Meal meal \u003d new Meal(\"Lunch\", \"500\", \"12-04-2025\", \"12:00 PM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kinneo"},"content":"        logList.addLog(meal);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kinneo"},"content":"        logList.listLogs();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, logList.getSize());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kinneo"},"content":"    void testListLogsEmpty() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kinneo"},"content":"        logList.listLogs();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kinneo"},"content":"        assertTrue(logList.isEmpty());","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false}],"authorContributionMap":{"kinneo":174}},{"path":"src/test/java/seedu/healthbud/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"class UiTest {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    void testPrintMessage() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        String message \u003d \"Test message\";","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        assertTrue(outContent.toString().contains(\"    Test message\"));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    //    @Test","lastModifiedDate":"2025-04-03T22:00:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"    //    void testPrintHealthBuds() {","lastModifiedDate":"2025-04-03T22:00:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    //        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T22:00:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    //        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-03T22:00:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"    //        Ui.printHealthBuds();","lastModifiedDate":"2025-04-03T22:00:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"    //        assertTrue(outContent.toString().contains(\"⠤⣀⡀⠀⠀⠀⠀⠀⣀⣤⣤⣀⡀\"));","lastModifiedDate":"2025-04-03T22:00:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    //    }","lastModifiedDate":"2025-04-03T22:00:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    void testPrintGreeting() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        Ui.printGreeting();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"        assertTrue(outContent.toString().contains(\"Hello! I\u0027m HealthBud\"));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"    void testPrintGoodbye() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d Ui.printGoodbye();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        assertTrue(outContent.toString().contains(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"        assertFalse(result);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"    void testPrintHelp() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        Ui.printHelp();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"        assertTrue(outContent.toString().contains(\"1. help - Display this list of commands\"));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"    void testPrintUnknownCommand() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"        Ui.printUnknownCommand();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"        assertTrue(outContent.toString().contains(\"I don\u0027t recognize that command\"));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"    void testPrintListedFormat() {","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"        LogList logList \u003d new LogList();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        Meal meal \u003d new Meal(\"Lunch\", \"500\", \"12-04-2025\", \"12:00 PM\");","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"        logList.addLog(meal);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"        Ui.printListedFormat(logList, 0);","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"        assertTrue(outContent.toString().contains(\"1. Lunch (500 cal) on: 12-04-2025 at: 12:00 PM\"));","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false}],"authorContributionMap":{"kinneo":75}},{"path":"src/test/java/seedu/healthbud/command/forReferenceCanDeleteLater/JUnitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"/*","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud;","lastModifiedDate":"2025-03-13T12:05:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13T12:05:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-28T20:53:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.inputonly.RecommendCommand;","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.command.inputonly.BMICommand;","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.command.onelogandinput.ListCommand;","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidRecommendException;","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.exception.InvalidBMIException;","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.RecommendParser;","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.BMIParser;","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01T01:11:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-01T01:11:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01T01:11:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13T12:05:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-14T13:49:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"class JUnitTest {","lastModifiedDate":"2025-03-13T12:05:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-14T10:56:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Recommend Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_correctInput_expectSuccess() throws InvalidRecommendException, HealthBudException {","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend biceps\";","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended biceps exercises:\\n     \"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"                + \"1. Barbell Bicep Curls\\n     \"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"                + \"2. Hammer Curls\\n     \"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"                + \"3. Cable Curls\";","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_invalidMuscle_expectFailure() {","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend toes\";","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"        assertThrows(HealthBudException.class, () -\u003e RecommendParser.parse(input));","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_missingInput_expectFailure() {","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend\";","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidRecommendException.class, () -\u003e RecommendParser.parse(input));","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BMI Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"    void parse_validInput_expectSuccess() throws HealthBudException, InvalidBMIException {","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 70 /h 1.75\";","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"        BMICommand command \u003d BMIParser.parse(input);","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"        assertNotNull(command, \"BMICommand should not be null for valid input\");","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Ahmish15"},"content":"    void parse_withoutHeightOrWeight_expectInvalidBmiException() {","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi\";","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Ahmish15"},"content":"    void parse_tooFewParts_expectInvalidBmiException() {","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi 70 /h\";","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Ahmish15"},"content":"    void parse_invalidNumberFormat_expectInvalidBmiException() {","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi seventy /h 1.75\";","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ahmish15"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ListTests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-01T01:11:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ahmish15"},"content":"    void listCommand_creation_notNull() {","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs;","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ahmish15"},"content":"        mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Ahmish15"},"content":"        // Basic test to ensure the command is created properly","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Ahmish15"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list meal\", mealLogs);","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Ahmish15"},"content":"        assertNotNull(listCommand, \"ListCommand object should not be null after creation.\");","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-01T01:07:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d till here","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Water Log Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"    void waterLog_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"            InvalidCardioException {","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add water /ml 1000 /d 12-01-25 /t 8am\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"keanneeee"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, waterLogs.getSize());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"1000\", ((Water) waterLogs.getLog(0)).getAmount());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"12-01-25\", (waterLogs.getLog(0)).getDate());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"8am\", ((Water) waterLogs.getLog(0)).getTime());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"    void waterLog_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add water /ml 500 /d 12-01-25\"; // missing /t","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e new AddLogCommand().execute(","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"keanneeee"},"content":"                goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input));","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Workout Log Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"    void workoutLog_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"            InvalidCardioException {","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add workout Pushups /r 20 /s 3 /d 12-01-25\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"keanneeee"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, workoutLogs.getSize());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"Pushups\", ((WorkOUT) workoutLogs.getLog(0)).getName());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"20\", ((WorkOUT) workoutLogs.getLog(0)).getReps());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"3\", ((WorkOUT) workoutLogs.getLog(0)).getSets());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"12-01-25\", (workoutLogs.getLog(0)).getDate());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"    void workoutLog_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add workout Pushups /r 20 /d 12-01-25\"; // missing /s sets","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e new AddLogCommand().execute(","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"keanneeee"},"content":"                goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input));","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Cardio Log Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kinneo"},"content":"    void cardioLog_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kinneo"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kinneo"},"content":"            InvalidCardioException {","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add cardio treadmill /s 6 /i 2 /t 20 /d 12-01-25\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"keanneeee"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, cardioLogs.getSize());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"treadmill\", ((Cardio) cardioLogs.getLog(0)).getName());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"6\", ((Cardio) cardioLogs.getLog(0)).getSpeed());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2\", ((Cardio) cardioLogs.getLog(0)).getIncline());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"20\", ((Cardio) cardioLogs.getLog(0)).getDuration());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"12-01-25\", (cardioLogs.getLog(0)).getDate());","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kinneo"},"content":"    void cardioLog_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add cardio treadmill /s 6 /i 2 /d 12-01-25\"; // missing /t","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e new AddLogCommand().execute(","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"keanneeee"},"content":"                goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input));","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PB Log Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kinneo"},"content":"    //        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Recommend Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_correctInput_expectSuccess() throws InvalidRecommendException, HealthBudException{","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d new RecommendCommand();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend biceps\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended biceps exercises:\\n     \"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kinneo"},"content":"                + \"1. Barbell Bicep Curls\\n     \"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kinneo"},"content":"                + \"2. Hammer Curls\\n     \"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kinneo"},"content":"                + \"3. Cable Curls\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getRecommendation(input));","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_wrongInput_expectFailure(){","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidRecommendException.class, () -\u003e new RecommendCommand().execute(goalLogs, pbLogs, mealLogs,","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"keanneeee"},"content":"                workoutLogs, waterLogs, cardioLogs,  input));","lastModifiedDate":"2025-03-22T17:23:30","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-21T16:06:18","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-14T13:49:39","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Ahmish15"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BMI Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-14T13:49:39","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-03-14T13:49:39","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"kinneo"},"content":"    void calculateBmi_validInput_expectSuccess() throws Exception {","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"keanneeee"},"content":"        // Capture printed output.","lastModifiedDate":"2025-03-22T17:24:59","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w 70 /h 1.78\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"kinneo"},"content":"        BMICommand command \u003d new BMICommand(input);","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"keanneeee"},"content":"        command.execute( new LogList(), new LogList(), new LogList(), new LogList(),","lastModifiedDate":"2025-03-22T17:30:32","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"keanneeee"},"content":"                new LogList(), new LogList(), input);","lastModifiedDate":"2025-03-22T17:30:32","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"kinneo"},"content":"        // BMI \u003d 70 / (1.78^2) \u003d 22.09","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Your BMI is: 22.09\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"kinneo"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"kinneo"},"content":"    void calculateBmi_negativeNumbers_expectFailure() {","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w -68 /h 1.78\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"kinneo"},"content":"        assertThrows(HealthBudException.class, () -\u003e new BMICommand(input));","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"kinneo"},"content":"    void calculateBmi_missingWeight_expectFailure() {","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /h 1.78\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e new BMICommand(input));","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"kinneo"},"content":"    void calculateBmi_missingHeight_expectFailure() {","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w 70\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e new BMICommand(input));","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"kinneo"},"content":"    void calculateBmi_invalidNumberFormat_expectFailure() {","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w seventy /h 1.78\";","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"kinneo"},"content":"        assertThrows(HealthBudException.class, () -\u003e new BMICommand(input));","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-03-22T16:00:32","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Find Meal Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Jasonlobo21"},"content":"    void findMeal_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidFindException {","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-25 /t 9pm\";","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find meal chicken\";","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Jasonlobo21"},"content":"        new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"1. chicken rice (550 cal) on: 12-01-25 at: 9pm\";","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Jasonlobo21"},"content":"    void findMeal_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find meal\"; // missing keyword","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Find water Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Jasonlobo21"},"content":"    void findWater_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidFindException {","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add water /ml 500 /d 12-01-25 /t 8am\";","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find water 12-01-25\";","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Jasonlobo21"},"content":"        new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"1. 2.0 glass of water on (12-01-25) at 8am\";","lastModifiedDate":"2025-03-26T00:54:36","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Jasonlobo21"},"content":"    void findWater_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find water\"; // missing keyword","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Find water Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Jasonlobo21"},"content":"    void findWorkout_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidFindException {","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add workout bicep curls /r 20 /s 3 /d 12-01-25\";","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find workout bicep curls\";","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Jasonlobo21"},"content":"        new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"1. bicep curls (3 sets of 20) on 12-01-25\";","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Jasonlobo21"},"content":"    void findWorkout_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"find workout\"; // missing keyword","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:17:31","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Delete meal Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteMeal_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidDeleteException, HealthBudException {","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-25 /t 9pm\";","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Jasonlobo21"},"content":"        String deleteInput \u003d \"delete meal 1\";","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"Jasonlobo21"},"content":"        new DeleteCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, deleteInput);","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"Noted. I\u0027ve removed this log:\";","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(0, mealLogs.getSize());","lastModifiedDate":"2025-03-23T17:05:17","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteMeal_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"delete meal\"; // missing index","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Delete water Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteWater_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidDeleteException, HealthBudException {","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add water /ml 500 /d 12-01-25 /t 8am\";","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, input);","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"Jasonlobo21"},"content":"        String deleteInput \u003d \"delete water 1\";","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"Jasonlobo21"},"content":"        new DeleteCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, deleteInput);","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"Noted. I\u0027ve removed this log:\";","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(0, waterLogs.getSize());","lastModifiedDate":"2025-03-23T17:05:17","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"Jasonlobo21"},"content":"    void deleteWater_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"delete water\"; // missing index","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"Jasonlobo21"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Clear function Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"Jasonlobo21"},"content":"    void clear_correctInput_expectSuccess() throws InvalidMealException, InvalidWorkoutException,","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidWaterException, InvalidLogException, InvalidPBException, InvalidMLException,","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidClearException {","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"Jasonlobo21"},"content":"        String firstInput \u003d \"add workout bicep curls /r 20 /s 3 /d 12-01-25\";","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, firstInput);","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"Jasonlobo21"},"content":"        String secondInput \u003d \"add workout bench press /r 10 /s 3 /d 12-01-25\";","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"Jasonlobo21"},"content":"        new AddLogCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, secondInput);","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"Jasonlobo21"},"content":"        String deleteInput \u003d \"clear workout\";","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"Jasonlobo21"},"content":"        new ClearCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, deleteInput);","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"Noted. I\u0027ve removed all logs.\";","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.toString().contains(expected));","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(0, workoutLogs.getSize());","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"Jasonlobo21"},"content":"    void clear_wrongInput_expectFailure() {","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"Jasonlobo21"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"Jasonlobo21"},"content":"        String findInput \u003d \"clear\"; // missing index","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"Jasonlobo21"},"content":"            new FindCommand().execute(goalLogs, pbLogs, mealLogs, workoutLogs, waterLogs, cardioLogs, findInput);","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-03-23T16:57:03","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"Travissssz"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d formatDate function Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"Travissssz"},"content":"    public void formatDate_validDates_expectSuccess() throws InvalidDateFormatException {","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"2023-12-25\"));","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"12/25/2023\"));","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"25/12/2023\"));","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"Dec 25, 2023\"));","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"December 25, 2023\"));","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"20231225\"));","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"25-12-2023\"));","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"Mon, Dec 25, 2023\"));","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"2023/12/25\"));","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"Travissssz"},"content":"        assertEquals(\"Dec 25 2023\", DateParser.formatDate(\"12-25-2023\"));","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"Travissssz"},"content":"    public void formatDate_invalidDates_expectThrowsException() {","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e DateParser.formatDate(\"2023-13-25\")); // Invalid month","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e DateParser.formatDate(\"32/12/2023\")); // Invalid day","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e DateParser.formatDate(\"random text\")); // Random string","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class,","lastModifiedDate":"2025-03-24T18:10:53","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"Travissssz"},"content":"                () -\u003e DateParser.formatDate(\"2023-02-30\")); // Invalid day in month","lastModifiedDate":"2025-03-24T18:10:53","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e DateParser.formatDate(null)); // Null input","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e DateParser.formatDate(\"\")); // Empty string","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"kinneo"},"content":"    *//*","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-24T18:05:46","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-03-14T13:49:39","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-31T19:47:18","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"kinneo"},"content":"*/","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":260,"keanneeee":19,"kinneo":204,"Ahmish15":52,"Travissssz":29}},{"path":"src/test/java/seedu/healthbud/command/input/BMICommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.input;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.exception.InvalidBMIException;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.BMIParser;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"public class BMICommandTest {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"    private String executeAndCaptureOutput(BMICommand command) {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Ahmish15"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"        return outContent.toString().trim();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"    void parse_validInput_expectSuccess() throws InvalidBMIException {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 70 /h 1.75\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"        BMICommand command \u003d BMIParser.parse(input);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeAndCaptureOutput(command);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"        String expected \u003d \"Your BMI is: 22.86, you are of normal weight.\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"    void parse_missingParameters_expectInvalidBmiException() {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi 70\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input),","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"                \"Expected InvalidBMIException when missing \u0027/h\u0027 or height.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"    void parse_nonNumericValues_expectHealthBudException() {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w seventy /h onepointsevenfive\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input),","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"                \"Invalid number format for weight or height.\");","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"    void parse_zeroOrNegativeValues_expectHealthBudException() {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"        // Zero weight","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"        String zeroWeightInput \u003d \"bmi /w 0 /h 1.75\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(zeroWeightInput));","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"        // Negative height","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"        String negativeHeightInput \u003d \"bmi /w 70 /h -1.75\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(negativeHeightInput),","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"                \"Expected InvalidBMIException for negative height.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"    void parse_underweightInput_expectUnderweightMessage() throws InvalidBMIException {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 50 /h 1.75\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Ahmish15"},"content":"        BMICommand command \u003d BMIParser.parse(input);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeAndCaptureOutput(command);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Ahmish15"},"content":"        // 50 / (1.75^2) ~ 16.33","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"        String expected \u003d \"Your BMI is: 16.33, you are underweight.\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Ahmish15"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Ahmish15"},"content":"    void parse_overweightInput_expectOverweightMessage() throws InvalidBMIException {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 80 /h 1.75\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Ahmish15"},"content":"        BMICommand command \u003d BMIParser.parse(input);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeAndCaptureOutput(command);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Ahmish15"},"content":"        // 80 / (1.75^2) ~ 26.12","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Ahmish15"},"content":"        String expected \u003d \"Your BMI is: 26.12, you are overweight.\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Ahmish15"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ahmish15"},"content":"    void parse_obeseInput_expectObeseMessage() throws InvalidBMIException {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 100 /h 1.75\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ahmish15"},"content":"        BMICommand command \u003d BMIParser.parse(input);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeAndCaptureOutput(command);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Ahmish15"},"content":"        // 100 / (1.75^2) ~ 32.65","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Ahmish15"},"content":"        String expected \u003d \"Your BMI is: 32.65, you are obese.\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Ahmish15"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Ahmish15"},"content":"    void parse_missingWeightParameter_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /h 1.75\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input),","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Ahmish15"},"content":"                \"Expected exception when missing weight parameter.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Ahmish15"},"content":"    void parse_missingHeightParameter_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 70\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input),","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Ahmish15"},"content":"                \"Expected exception when missing height parameter.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Ahmish15"},"content":"    void parse_weightWithDecimal_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Ahmish15"},"content":"        // Weight must match \"\\\\d+\" so decimals are not allowed.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 70.5 /h 1.75\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input),","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Ahmish15"},"content":"                \"Expected exception for weight with decimals.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Ahmish15"},"content":"    void parse_invalidHeightFormat_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Ahmish15"},"content":"        // Height should match \"^\\\\d+(\\\\.\\\\d+)?$\"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 70 /h 1.75abc\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input),","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Ahmish15"},"content":"                \"Expected exception for height with non-digit characters.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Ahmish15"},"content":"    void parse_boundaryHeightLower_expectSuccess() throws InvalidBMIException {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Ahmish15"},"content":"        // Height exactly at 0.2 is allowed.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 70 /h 0.2\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Ahmish15"},"content":"        BMICommand command \u003d BMIParser.parse(input);","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Ahmish15"},"content":"        // BMI \u003d 70 / (0.2^2) \u003d 70 / 0.04 \u003d 1750.00, classified as obese.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeAndCaptureOutput(command);","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Ahmish15"},"content":"        String expected \u003d \"Your BMI is: 1750.00, you are obese.\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Ahmish15"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Ahmish15"},"content":"    void parse_boundaryHeightUpper_expectSuccess() throws InvalidBMIException {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Ahmish15"},"content":"        // Height exactly at 3.0 is allowed.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 70 /h 3.0\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Ahmish15"},"content":"        BMICommand command \u003d BMIParser.parse(input);","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Ahmish15"},"content":"        // BMI \u003d 70 / (3.0^2) \u003d 70 / 9 \u003d 7.78 (rounded) and classified as underweight.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeAndCaptureOutput(command);","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Ahmish15"},"content":"        String expected \u003d \"Your BMI is: 7.78, you are underweight.\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Ahmish15"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Ahmish15"},"content":"    void parse_weightOne_expectSuccess() throws InvalidBMIException {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Ahmish15"},"content":"        // Minimal weight that is positive.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w 1 /h 1.75\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Ahmish15"},"content":"        BMICommand command \u003d BMIParser.parse(input);","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Ahmish15"},"content":"        // BMI \u003d 1 / (1.75^2) ~ 0.33, underweight.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeAndCaptureOutput(command);","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Ahmish15"},"content":"        String expected \u003d \"Your BMI is: 0.33, you are underweight.\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Ahmish15"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Ahmish15"},"content":"    void parse_emptyWeightParameter_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Ahmish15"},"content":"        // Empty weight value should throw exception.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /w  /h 1.75\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input),","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Ahmish15"},"content":"                \"Expected exception for empty weight parameter.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Ahmish15"},"content":"    void parse_upperCaseFlags_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Ahmish15"},"content":"        // If the parser does not normalize flags, uppercase flags will not match.","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"bmi /W 70 /H 1.75\";","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input),","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Ahmish15"},"content":"                \"Expected exception for uppercase parameter flags.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kinneo"},"content":"    void execute_zeroWeight_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kinneo"},"content":"        BMICommand command \u003d new BMICommand(\"bmi /w 0 /h 1.75\", 0, 1.75);","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, command::execute);","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kinneo"},"content":"    void execute_negativeHeight_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kinneo"},"content":"        BMICommand command \u003d new BMICommand(\"bmi /w 70 /h -1.75\", 70, -1.75);","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, command::execute);","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kinneo"},"content":"    void parser_nullInput_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e BMIParser.parse(null));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kinneo"},"content":"    void parse_missingWeightKey_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /h 1.75\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kinneo"},"content":"    void parse_missingHeightKey_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w 70\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kinneo"},"content":"    void parse_emptyWeightValue_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w   /h 1.75\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kinneo"},"content":"    void parse_emptyHeightValue_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w 70 /h   \";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kinneo"},"content":"    void parse_heightTooSmall_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w 60 /h 0.1\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kinneo"},"content":"    void parse_heightTooLarge_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w 60 /h 3.1\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kinneo"},"content":"    void parse_weightZero_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w 0 /h 1.75\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"kinneo"},"content":"    void parse_weightNegative_expectInvalidBMIException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"bmi /w -50 /h 1.75\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidBMIException.class, () -\u003e BMIParser.parse(input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Ahmish15"},"content":"}","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":70,"Ahmish15":166}},{"path":"src/test/java/seedu/healthbud/command/input/RecommendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.input;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidRecommendException;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.RecommendParser;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"class RecommendCommandTest {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_chest_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend chest\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended chest exercises:\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"                + \"1. Incline Smith Machine Bench Press\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"                + \"2. Dumbbell Chest Press\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"                + \"3. Cable Chest Flys\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_back_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend back\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended back exercises:\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"                + \"1. Pull-Ups\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"                + \"2. Barbell Bent-over Rows\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"                + \"3. Lat Pulldown\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_triceps_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend triceps\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended triceps exercises:\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"                + \"1. Close-Grip Bench Press\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"                + \"2. Tricep Dips\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"                + \"3. Skull Crushers\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_legs_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend legs\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended leg exercises:\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"                + \"1. Barbell Squats\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"                + \"2. Leg Extension \u0026 Leg Curls\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"                + \"3. Leg Press\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_shoulders_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend shoulders\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended shoulder exercises:\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"                + \"1. Overhead Dumbell Shoulder Press (Front Delt)\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"                + \"2. Lateral Raises (Side Delt)\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"                + \"3. Rear Delt Flys (Rear Delt)\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_abs_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend abs\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended ab exercises:\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"                + \"1. Hanging Leg Raises\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"                + \"2. Russian Twists\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"                + \"3. Planks\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_forearms_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend forearms\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are some recommended forearm exercises:\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"                + \"1. Wrist Curls\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"                + \"2. Reverse Wrist Curls\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"                + \"3. Farmer\u0027s Walk\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_help_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend help\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d RecommendParser.parse(input);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here are the list of muscle groups:\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"                + \"1. chest\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"                + \"2. back\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"                + \"3. biceps\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"                + \"4. triceps\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"                + \"5. legs\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"                + \"6. shoulders\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"                + \"7. abs\\n     \"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"                + \"8. forearms\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, command.getMessage());","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_invalidMuscle_expectFailure() {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend toes\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidRecommendException.class, () -\u003e RecommendParser.parse(input));","lastModifiedDate":"2025-04-03T15:58:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"    void recommendWorkout_missingInput_expectFailure() {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"recommend\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidRecommendException.class, () -\u003e RecommendParser.parse(input));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"    void execute_recommendCommand_printsCorrectMessage() {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"    Test output\"; // match the indent from Ui.printMessage","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"        RecommendCommand command \u003d new RecommendCommand(\"Test output\");","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected + System.lineSeparator(), outContent.toString());","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":2,"kinneo":132}},{"path":"src/test/java/seedu/healthbud/command/multilog/StatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.multilog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddMealCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.command.singlelog.AddCardioCommand;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidStatusException;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.StatusParser;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"class StatusCommandTest {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    private String getCommandOutput(StatusCommand command) {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        return outContent.toString().trim();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    void statusChange_validCutting_expectSuccess() throws InvalidStatusException {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status change cutting\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(input, empty, empty, empty, empty, empty, empty);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"Status updated to: cutting\", getCommandOutput(command));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    void statusChange_validBulking_expectSuccess() throws InvalidStatusException {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status change bulking\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(input, empty, empty, empty, empty, empty, empty);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"Status updated to: bulking\", getCommandOutput(command));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    void statusChange_invalidKeyword_expectException() {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status change shreeding\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidStatusException.class, () -\u003e","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"                StatusParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"    void statusChange_missingArgument_expectException() {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status change\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidStatusException.class, () -\u003e","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"                StatusParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    void statusReport_bulkingNotOnTrack_expectMessage() throws InvalidStatusException {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        LogList cardio \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"        StatusParser.parse(\"status change bulking\", empty, empty, meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"        new AddMealCommand(meal, \"Lunch\", \"300\",","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"                \"2024-04-01\", \"12:00\").execute();","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"        new AddCardioCommand(cardio, \"Stairs\", \"4\",","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"                \"1\", \"30\", \"2024-04-01\").execute();","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(\"status report 2024-04-01\", empty,","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"                empty, meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Current Status: bulking\\nYour intake does not align with your goal. Net calories: -350\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, getCommandOutput(command));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"    void statusReport_bulkingOnTrack_expectSuccess() throws InvalidStatusException {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        LogList cardio \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"        StatusParser.parse(\"status change bulking\", empty, empty, meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"        new AddMealCommand(meal, \"Lunch\", \"300\", \"2024-04-01\", \"12:00\").execute();","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jasonlobo21"},"content":"        new AddCardioCommand(cardio, \"Jog\", \"1\", \"0\",","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"                \"30\", \"2024-04-01\").execute();","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(\"status report 2024-04-01\", empty, empty, meal,","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"                empty, empty, cardio);","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Current Status: bulking\\nYou are on track for bulking! Net calories: 200\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, getCommandOutput(command));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"    void statusReport_cuttingNotOnTrack_expectMessage() throws InvalidStatusException {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"        LogList cardio \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"        StatusParser.parse(\"status change cutting\", empty, empty, meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonlobo21"},"content":"        new AddMealCommand(meal,\"Dinner\", \"300\", \"2024-04-01\", \"18:00\").execute();","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jasonlobo21"},"content":"        new AddCardioCommand(cardio, \"Jog\", \"1\", \"0\",","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"                \"30\", \"2024-04-01\").execute();","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(\"status report 2024-04-01\", empty, empty,","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"                meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Current Status: cutting\\nYour intake does not align with your goal. Net calories: 200\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, getCommandOutput(command));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"    void statusReport_cuttingOnTrack_expectSuccess() throws InvalidStatusException {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"        LogList cardio \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"        StatusParser.parse(\"status change cutting\", empty, empty, meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jasonlobo21"},"content":"        new AddMealCommand(meal, \"Oats\", \"200\", \"2024-04-01\", \"08:00\").execute();","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jasonlobo21"},"content":"        new AddCardioCommand(cardio, \"HIIT\", \"3\", \"0\",","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"                \"30\", \"2024-04-01\").execute();","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d StatusParser.parse(\"status report 2024-04-01\", empty, empty,","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"                meal, empty, empty, cardio);","lastModifiedDate":"2025-04-01T15:38:27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Current Status: cutting\\nYou are on track for cutting! Net calories: -100\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, getCommandOutput(command));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"    void statusReport_missingDate_expectException() {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status report\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidStatusException.class, () -\u003e","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"                StatusParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kinneo"},"content":"    void statusReport_invalidAction_expectException() {","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"status update\";","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidStatusException.class, () -\u003e","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kinneo"},"content":"                StatusParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T15:33:50","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"    void execute_nullMessage_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"        StatusCommand command \u003d new StatusCommand(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T23:30:18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"                \"status change cutting\", null);","lastModifiedDate":"2025-04-03T23:30:18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, command::execute);","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":11,"kinneo":149}},{"path":"src/test/java/seedu/healthbud/command/multilog/TrackGoalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.command.multilog;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.singlelog.AddMealCommand;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.singlelog.AddWaterCommand;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidTrackException;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.TrackGoalParser;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.ViewGoalsParser;","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"class TrackGoalCommandTest {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    private String getCommandOutput(TrackGoalCommand command) {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        return outContent.toString().trim();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"    void trackGoal_validDate_expectCorrectOutput() throws Exception {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        LogList water \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"        new AddMealCommand(meal,\"Lunch\", \"300\", \"01/04/2024\", \"13:00\").execute();","lastModifiedDate":"2025-04-03T15:58:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"        new AddWaterCommand(water, \"500\", \"01/04/2024\", \"13:10\").execute();","lastModifiedDate":"2025-04-03T15:58:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"        TrackGoalCommand command \u003d new TrackGoalCommand(\"01/04/2024\", empty, empty, meal, empty, water, empty);","lastModifiedDate":"2025-04-03T15:58:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        String output \u003d getCommandOutput(command);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here is your goal progress for 01 Apr 2024: \";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, output.split(\"\\n\")[0]);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    void parse_validCommand_expectCorrectOutput() throws Exception {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"track goal /d 01/04/2024\";","lastModifiedDate":"2025-04-03T15:58:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        LogList meal \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"        LogList water \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"        new AddMealCommand(meal,\"Lunch\", \"300\", \"01/04/2024\", \"13:00\").execute();","lastModifiedDate":"2025-04-03T15:58:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"        new AddWaterCommand(water,\"500\", \"01/04/2024\", \"13:10\").execute();","lastModifiedDate":"2025-04-03T15:58:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        TrackGoalCommand command \u003d TrackGoalParser.parse(input, empty, empty, meal, empty, water, empty);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"        String output \u003d getCommandOutput(command);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"Here is your goal progress for 01 Apr 2024: \";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, output.split(\"\\n\")[0]);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"    void parse_missingDateArgument_expectException() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"track goal\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidTrackException.class, () -\u003e","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"                TrackGoalParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"    void parse_invalidSlash_expectException() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"track goal /date 2024-04-01\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidTrackException.class, () -\u003e","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"                TrackGoalParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"    void parse_missingSlash_expectException() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"track goal 2024-04-01\"; // 3 tokens, still fails !parts[2].equals(\"/d\")","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidTrackException.class, () -\u003e","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"                TrackGoalParser.parse(input, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"    void constructor_nullDate_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"                new TrackGoalCommand(null, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"    void parser_nullInput_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"                TrackGoalParser.parse(null, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"    void constructor_emptyDate_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"                new TrackGoalCommand(\"   \", empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"    void trackGoalConstructor_nullDate_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"                new TrackGoalCommand(null, empty, empty, empty, empty, empty, empty));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"    void viewGoalsParser_validInput_printsGoalMessage() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"        ViewGoalsParser.parse(\"view goal\");","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"        String output \u003d outContent.toString().trim();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"        assertTrue(output.contains(\"Welcome to goal setting! Here are your current goals:\"),","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"                \"Should print welcome message with current goals\");","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"        assertTrue(output.contains(\"What goal would you like to add today?\"),","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"                \"Should prompt the user to add a goal\");","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"    void viewGoalsParser_nullInput_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e ViewGoalsParser.parse(null));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":6,"kinneo":134}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddCardioCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidCardioException;","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.log.Cardio;","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.parser.addcommandparser.AddCardioParser;","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01T13:00:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01T13:00:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T13:00:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"class AddCardioCommandTest {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    void validCardioAddsToLogList_expectSuccess() throws InvalidCardioException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add cardio running /s 8.5 /i 2 /t 30 /d 25-12-2023\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        AddCardioCommand command \u003d AddCardioParser.parse(cardioLogs, input);","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        Cardio cardio \u003d (Cardio) cardioLogs.getLog(0);","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"running\", cardio.getName());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"8.5\", cardio.getSpeed());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2\", cardio.getIncline());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"30\", cardio.getDuration());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", cardio.getDate());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"running (speed: 8.5, incline: 2, duration: 30 mins) on 25 Dec 2023\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, cardio.toString());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    void cardioLog_missingName_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio /s 8 /i 5 /t 30 /d 2023-12-25\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"    void cardioLog_missingSpeed_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio Running /i 5 /t 30 /d 2023-12-25\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"    void cardioLog_missingIncline_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio Running /s 8 /t 30 /d 2023-12-25\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"    void cardioLog_missingTime_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:28:53","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio Running /s 8 /i 5 /d 2023-12-25\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"    void cardioLog_missingDate_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio Running /s 8 /i 5 /t 30\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"    void cardioLog_emptySpeedValue_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio Running /s /i 5 /t 30 /d 2023-12-25\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"    void cardioLog_emptyInclineValue_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio Running /s 8 /i /t 30 /d 2023-12-25\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"    void cardioLog_emptyTimeValue_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio Running /s 8 /i 5 /t /d 2023-12-25\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"    void cardioLog_emptyDateValue_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio Running /s 8 /i 5 /t 30 /d\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"    void cardioLog_nonNumericSpeed_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio Running /s abc /i 5 /t 30 /d 2023-12-25\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"    void cardioLog_nonNumericIncline_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio Running /s 8 /i abc /t 30 /d 2023-12-25\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"    void cardioLog_nonNumericDuration_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add cardio Running /s 8 /i 5 /t abc /d 2023-12-25\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(cardioLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"    void cardioLog_inputTooShort_expectThrowsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"        LogList logs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add cardio\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(logs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"    void cardioLog_inputEmptyAfterCommandPrefix_expectThrowsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"        LogList logs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add cardio     \"; // Only command with whitespace","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(logs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kinneo"},"content":"    void cardioLog_extraParameterKey_expectThrowsInvalidCardioException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kinneo"},"content":"        LogList logs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add cardio running /s 8.5 /i 2 /t 30 /d 25-12-2023 /x 99\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(logs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"    void parser_tooFewTokens_throwsInvalidCardioException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"        LogList logs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add\"; // only one token","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidCardioException.class, () -\u003e AddCardioParser.parse(logs, input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kinneo"},"content":"    void parser_nullInput_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kinneo"},"content":"        LogList logs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e AddCardioParser.parse(logs, null));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-03-31T23:58:30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:56:56","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":67,"Travissssz":99}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddGoalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03T04:09:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"import static seedu.healthbud.HealthBud.goalLogs;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Goals;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.parser.addcommandparser.AddGoalParser;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidGoalException;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"class AddGoalCommandTest {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"    @BeforeAll","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"    public static void setUp() {","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"    public void resetGoals() {","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"        Goals.getInstance().updateGoals(\"0\", \"0\", \"0\");","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"    public void testUpdateGoals_setsCorrectValues() {","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"        goals.updateGoals(\"2500\", \"2000\", \"70\");","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"2500\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"2000\", goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"70\", goals.getWeightGoal());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"    public void testToStringDisplaysCorrectly() {","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"        goals.updateGoals(\"2000\", \"1500\", \"60\");","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"        String output \u003d goals.toString();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"        assertTrue(output.contains(\"Daily Water Goal: 2000 ml\"));","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"        assertTrue(output.contains(\"Daily Calorie Goal: 1500 cal\"));","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"        assertTrue(output.contains(\"Weight Goal: 60 kg\"));","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"keanneeee"},"content":"    public void addGoal_emptyInput_expectFailure() {","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"keanneeee"},"content":"        Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"keanneeee"},"content":"        String input \u003d \"add goal\";","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidGoalException.class, () -\u003e AddGoalParser.parse(goalLogs, input));","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"keanneeee"},"content":"    public void addGoal_emptyParameters_expectFailure() {","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"keanneeee"},"content":"        Goals goal \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"keanneeee"},"content":"        String input \u003d \"add goal /w\";","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidGoalException.class, () -\u003e AddGoalParser.parse(goalLogs, input));","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"keanneeee"},"content":"    public void addGoal_updateOneParameter_expectSuccess(){","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"keanneeee"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"keanneeee"},"content":"        String preCal \u003d goals.getDailyCalorieGoal();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"keanneeee"},"content":"        String preWeight \u003d goals.getWeightGoal();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"keanneeee"},"content":"        String input \u003d \"add goal /w 2000\";","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"keanneeee"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"keanneeee"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"2000\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"keanneeee"},"content":"        assertEquals(preCal, goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"keanneeee"},"content":"        assertEquals(preWeight, goals.getWeightGoal());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"keanneeee"},"content":"    public void addGoal_updateTwoParameters_expectSuccess(){","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"keanneeee"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"keanneeee"},"content":"        String preWeight \u003d goals.getWeightGoal();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"keanneeee"},"content":"        String input \u003d \"add goal /w 2000 /cal 100\";","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"keanneeee"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"keanneeee"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"2000\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"100\", goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"keanneeee"},"content":"        assertEquals(preWeight, goals.getWeightGoal());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"    public void addGoal_sameAsExistingGoals_expectNoPrintButStillUpdate() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"        goals.updateGoals(\"3000\", \"2500\", \"80\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add goal /w 3000 /cal 2500 /kg 80\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"3000\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2500\", goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"80\", goals.getWeightGoal());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"    public void addGoal_missingCalorie_expectDefaultUsed() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"        goals.updateGoals(\"3000\", \"1500\", \"65\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add goal /w 2000 /kg 60\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2000\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"1500\", goals.getDailyCalorieGoal()); // default","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"60\", goals.getWeightGoal());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"    public void addGoal_missingWater_expectDefaultUsed() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"        goals.updateGoals(\"3000\", \"1500\", \"65\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add goal /cal 1800 /kg 70\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"3000\", goals.getDailyWaterGoal()); // default","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"1800\", goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"70\", goals.getWeightGoal());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"    public void addGoal_missingWeight_expectDefaultUsed() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"        Goals goals \u003d Goals.getInstance();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"        goals.updateGoals(\"3000\", \"1500\", \"65\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add goal /w 2500 /cal 2000\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kinneo"},"content":"        AddGoalCommand command \u003d AddGoalParser.parse(goalLogs, input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2500\", goals.getDailyWaterGoal());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2000\", goals.getDailyCalorieGoal());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"65\", goals.getWeightGoal()); // default","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"    public void addGoal_nullInput_expectAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e AddGoalParser.parse(goalLogs, null));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"keanneeee":90,"kinneo":67}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddMealCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:14:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:14:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidMLException;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidMealException;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidPersonalBestException;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidCardioException;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.parser.addcommandparser.AddMealParser;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"class AddMealCommandTest {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"    void mealLog_missingName_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal /cal 550 /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-01T20:14:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"    void mealLog_missingCaloriesParameter_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-01T20:14:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"    void mealLog_nonNumericCalories_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /cal high /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-01T20:14:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"    void addMeal_emptyInput_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal\";","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-01T20:14:50","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"    void validMealAddsToLogList_expectSuccess() throws InvalidPersonalBestException, InvalidMLException","lastModifiedDate":"2025-04-01T20:21:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"            , InvalidCardioException, InvalidMealException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"        AddMealCommand command \u003d AddMealParser.parse(mealLogs, input);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"        command.execute();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"        Meal meal \u003d (Meal) mealLogs.getLog(0);","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(\"chicken rice\", meal.getName());","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(\"550\", meal.getCalories());","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(\"12 Jan 2025\", meal.getDate());","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(\"9pm\", meal.getTime());","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"        String expected \u003d \"chicken rice (550 cal) on: 12 Jan 2025 at: 9pm\";","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(expected, meal.toString());","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"    void mealLog_nullInput_expectAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e AddMealParser.parse(mealLogs, null));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"    void mealLog_extraParameterKey_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-2025 /t 9pm /x extra\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"    void mealLog_missingCalorieKey_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add meal chicken rice /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"    void mealLog_missingDateKey_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /t 9pm\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"    void mealLog_missingTimeKey_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-2025\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"    void mealLog_emptyCalorieValue_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add meal chicken rice /cal   /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"    void mealLog_emptyDateValue_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d   /t 9pm\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"    void mealLog_emptyTimeValue_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-2025 /t   \";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"    void mealLog_onlyWhitespaceInName_expectThrowsInvalidMealException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add meal    /cal 550 /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidMealException.class, () -\u003e AddMealParser.parse(mealLogs, input));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":66,"kinneo":67}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddPersonalBestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidPersonalBestException;","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.PersonalBest;","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.addcommandparser.AddPersonalBestParser;","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01T22:34:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01T22:34:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"class AddPersonalBestCommandTest {","lastModifiedDate":"2025-04-01T12:58:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_validInput_success() throws Exception {","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb deadlift /w 120 /d 01-01-2025\";","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        AddPersonalBestCommand command \u003d AddPersonalBestParser.parse(pbLogs, input);","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, pbLogs.getSize());","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        PersonalBest pb \u003d (PersonalBest) pbLogs.getLog(0);","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"deadlift\", pb.getExercise());","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"120\", pb.getWeight());","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"01 Jan 2025\", pb.getDate());","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_missingWeight_throwsException() {","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb bench /d 01-01-25\";","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_missingDate_throwsException() {","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb squat /w 140\";","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_nonNumericWeight_throwsException() {","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb press /w heavy /d 01-01-25\";","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_invalidDateFormat_throwsException() {","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb squat /w 90 /d wrong-date\";","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_emptyName_throwsException() {","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb /w 100 /d 01-01-25\";","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_emptyWeight_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb pull-up /w  /d 01-01-2025\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_emptyDate_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb deadlift /w 100 /d  \";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_invalidKey_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb snatch /weight 90 /d 01-01-2025\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_extraKey_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb pushup /w 50 /d 01-01-2025 /note intense\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidPersonalBestException.class, () -\u003e AddPersonalBestParser.parse(pbLogs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"    void addPersonalBest_nullInput_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e AddPersonalBestParser.parse(pbLogs, null));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":104}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddWaterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"keanneeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidWaterException;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.log.Water;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"keanneeee"},"content":"import seedu.healthbud.parser.addcommandparser.AddWaterParser;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"keanneeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"keanneeee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"class AddWaterCommandTest {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"keanneeee"},"content":"    void addWater_correctInput_expectSuccess()","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"keanneeee"},"content":"            throws InvalidDateFormatException, InvalidWaterException {","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"keanneeee"},"content":"        String input \u003d \"add water /ml 1000 /d 12-04-2002 /t 1200\";","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"keanneeee"},"content":"        AddWaterCommand command \u003d AddWaterParser.parse(waterLogs, input);","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"keanneeee"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"keanneeee"},"content":"        Water water \u003d (Water) waterLogs.getLog(0);","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"1000\", water.getAmount());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"12 Apr 2002\", water.getDate());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"keanneeee"},"content":"        assertEquals(\"1200\", water.getTime());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"keanneeee"},"content":"        String expected \u003d \"4.0 glass of water on (12 Apr 2002) at 1200\";","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"keanneeee"},"content":"        assertEquals(expected, water.toString());","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"keanneeee"},"content":"    void addWater_missingML_expectThrowsInvalidWaterException(){","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water /d 12-02-2002 /t 1200\";","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"keanneeee"},"content":"    void addWater_missingDate_expectThrowsInvalidWaterException(){","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water /ml 1000 /t 1200\";","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"keanneeee"},"content":"    void addWater_missingTime_expectThrowsInvalidWaterException(){","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water /ml 1200 /d 12-02-2002\";","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"keanneeee"},"content":"    void addWater_emptyInput_expectThrowsInvalidWaterException(){","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water\";","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"keanneeee"},"content":"    void addWater_missingParameters_expectThrowsInvalidWaterException() {","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water /ml\";","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"keanneeee"},"content":"    void addWater_missingAllParameters_expectThrowsInvalidWaterException() {","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water /ml /d /t\";","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"keanneeee"},"content":"    void addWater_extraParameters_expectThrowsInvalidWaterException() {","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water /ml 1000 /d 12-02-2000 /t 1200 /e 10000\";","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"keanneeee"},"content":"    void addWater_wrongParametersML_expectThrowsInvalidWaterException(){","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water /ml messi /d 12-02-2000 /t 1000\";","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"keanneeee"},"content":"    @Test","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"keanneeee"},"content":"    void addWater_extraLines_expectThrowsInvalidWaterException(){","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water morning hydration /ml 1000 /d 12-02-2000 /t 1000\";","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"keanneeee"},"content":"    void addWater_missingTParameters_expectThrowsInvalidWaterException(){","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"keanneeee"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"keanneeee"},"content":"        String input  \u003d \"add water /ml 2000 /d 12-02-2002 /t\";","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"keanneeee"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"keanneeee"},"content":"    }","lastModifiedDate":"2025-04-03T14:46:47","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"keanneeee"},"content":"","lastModifiedDate":"2025-04-03T04:03:07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"    void addWater_noSlashPrefix_expectThrowsInvalidWaterException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add water ml 1000 /d 12-02-2002 /t 1000\"; // missing \u0027/\u0027 before \u0027ml\u0027","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"    void addWater_emptyMl_expectThrowsInvalidWaterException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add water /ml   /d 12-02-2002 /t 1000\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"    void addWater_emptyDate_expectThrowsInvalidWaterException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add water /ml 1000 /d   /t 1000\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"    void addWater_whitespaceOnlyInput_expectThrowsInvalidWaterException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add water     \";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"    void addWater_missingOneKey_expectThrowsInvalidWaterException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add water /ml 1000 /d 12-02-2002\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kinneo"},"content":"    void addWater_nullInput_expectThrowsAssertionError() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"        String input \u003d null;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kinneo"},"content":"    void addWater_missingSlashAtStart_expectThrowsInvalidWaterException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add water ml 1000 /d 12-02-2022 /t 1000\"; // missing \u0027/\u0027 before ml","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidWaterException.class, () -\u003e AddWaterParser.parse(waterLogs, input));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kinneo"},"content":"    void addWater_nullInput_expectAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e AddWaterParser.parse(waterLogs, null));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"keanneeee":107,"kinneo":61}},{"path":"src/test/java/seedu/healthbud/command/singlelog/AddWorkoutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Travissssz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Travissssz"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Travissssz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.exception.InvalidWorkoutException;","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.log.Workout;","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Travissssz"},"content":"import seedu.healthbud.parser.addcommandparser.AddWorkoutParser;","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Travissssz"},"content":"public class AddWorkoutCommandTest {","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"    void workoutLog_validInput_expectSuccess() throws Exception {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /s 3 /d 25-12-2023 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"        AddWorkoutCommand command \u003d AddWorkoutParser.parse(workoutLogs, input);","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        Workout workout \u003d (Workout) workoutLogs.getLog(0);","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"squats\", workout.getName());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"10\", workout.getReps());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"3\", workout.getSets());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", workout.getDate());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"50\", workout.getWeight());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        String expected \u003d \"squats (3 sets of 50 kg for 10 reps) on 25 Dec 2023\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, workout.toString());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    void workoutLog_missingName_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout /r 10 /s 3 /d 25-12-2023 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    void workoutLog_missingReps_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /s 3 /d 25-12-2023 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"    void workoutLog_missingSets_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /d 25-12-2023 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    void workoutLog_missingDate_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /s 3 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"    void workoutLog_missingWeight_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /s 3 /d 25-12-2023\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"    void workoutLog_nonNumericReps_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r ten /s 3 /d 25-12-2023 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"    void workoutLog_nonNumericSets_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /s three /d 25-12-2023 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"    void workoutLog_nonNumericWeight_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /s 3 /d 25-12-2023 /w fifty\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"    void workoutLog_emptyInput_throwsException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Travissssz"},"content":"    void parse_emptyRepsValue_throwsException() {","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r /s 3 /d 25-12-2023 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Travissssz"},"content":"    void parse_emptySetsValue_throwsException() {","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /s /d 25-12-2023 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Travissssz"},"content":"    void parse_emptyDateValue_throwsException() {","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /s 3 /d /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Travissssz"},"content":"    void parse_emptyWeightValue_throwsException() {","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /s 3 /d 25-12-2023 /w\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Travissssz"},"content":"    void parse_whitespaceOnlyName_throwsException() {","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout    /r 10 /s 3 /d 25-12-2023 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Travissssz"},"content":"    void parse_whitespaceOnlyReps_throwsException() {","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r    /s 3 /d 25-12-2023 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Travissssz"},"content":"    void parse_whitespaceOnlySets_throwsException() {","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /s    /d 25-12-2023 /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Travissssz"},"content":"    void parse_whitespaceOnlyDate_throwsException() {","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /s 3 /d    /w 50\";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Travissssz"},"content":"    void parse_whitespaceOnlyWeight_throwsException() {","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"add workout squats /r 10 /s 3 /d 25-12-2023 /w    \";","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidWorkoutException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Travissssz"},"content":"                AddWorkoutParser.parse(workoutLogs, input));","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:41:21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kinneo"},"content":"    void workoutConstructor_nullName_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kinneo"},"content":"                new Workout(null, \"10\", \"3\", \"25-12-2023\", \"50\")","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kinneo"},"content":"        );","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kinneo"},"content":"    void workoutConstructor_nullReps_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kinneo"},"content":"                new Workout(\"squats\", null, \"3\", \"25-12-2023\", \"50\")","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kinneo"},"content":"        );","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kinneo"},"content":"    void workoutConstructor_nullSets_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kinneo"},"content":"                new Workout(\"squats\", \"10\", null, \"25-12-2023\", \"50\")","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kinneo"},"content":"        );","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kinneo"},"content":"    void workoutConstructor_nullWeight_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kinneo"},"content":"                new Workout(\"squats\", \"10\", \"3\", \"25-12-2023\", null)","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kinneo"},"content":"        );","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"kinneo":55,"Travissssz":170}},{"path":"src/test/java/seedu/healthbud/command/singlelog/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidCardioException;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidClearException;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidMLException;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidPersonalBestException;","lastModifiedDate":"2025-04-01T20:17:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.parser.ClearParser;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonlobo21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"class ClearCommandTest {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonlobo21"},"content":"    void clear_correctInput_expectSuccess() throws InvalidPersonalBestException, InvalidMLException,","lastModifiedDate":"2025-04-01T20:17:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonlobo21"},"content":"            InvalidCardioException, InvalidClearException {","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonlobo21"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonlobo21"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"add meal chicken rice /cal 550 /d 12-01-2025 /t 9pm\";","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonlobo21"},"content":"        String secondInput \u003d \"add meal tom yum /cal 650 /d 13-01-2025 /t 8pm\";","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T15:44:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonlobo21"},"content":"        AddMealCommand addCommand1 \u003d new AddMealCommand(mealLogs,\"chicken rice\", \"550\", \"12 Jan 2025\", \"9pm\");","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"        AddMealCommand addCommand2 \u003d new AddMealCommand(mealLogs,\"tom yum\", \"650\", \"13 Jan 2025\", \"8pm\");","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonlobo21"},"content":"        addCommand1.execute();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"        addCommand2.execute();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(2, mealLogs.getSize());","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"        String clearInput \u003d \"clear meal\";","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"        ClearCommand clearCommand \u003d new ClearCommand(mealLogs);","lastModifiedDate":"2025-04-03T15:32:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"        clearCommand.execute();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(0, mealLogs.getSize());","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"    void clear_wrongInput_expectFailure() {","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"clear\"; // invalid input, missing log type","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidClearException.class, () -\u003e {","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"            ClearParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"        });","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"    void clear_workoutLogs_expectSuccess() throws InvalidClearException {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T12:01:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        ClearCommand command \u003d ClearParser.parse(\"clear workout\", empty, empty, empty, empty, workoutLogs);","lastModifiedDate":"2025-04-03T12:01:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        assertEquals(0, workoutLogs.getSize());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"    void clear_pbLogs_expectSuccess() throws InvalidClearException {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T12:01:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"        ClearCommand command \u003d ClearParser.parse(\"clear pb\", pbLogs, empty, empty, empty, empty);","lastModifiedDate":"2025-04-03T12:01:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"        assertEquals(0, pbLogs.getSize());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"    void clear_waterLogs_expectSuccess() throws InvalidClearException {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T12:01:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        ClearCommand command \u003d ClearParser.parse(\"clear water\", empty, empty, waterLogs, empty, empty);","lastModifiedDate":"2025-04-03T12:01:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"        assertEquals(0, waterLogs.getSize());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    void clear_cardioLogs_expectSuccess() throws InvalidClearException {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"        LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T12:01:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"        ClearCommand command \u003d ClearParser.parse(\"clear cardio\", empty, empty, empty, empty, cardioLogs);","lastModifiedDate":"2025-04-03T12:01:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        assertEquals(0, cardioLogs.getSize());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"    void clear_invalidLogType_expectFailure() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidClearException.class, () -\u003e {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"            ClearParser.parse(\"clear invalid\", new LogList(), new LogList(),","lastModifiedDate":"2025-04-03T12:06:46","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"                    new LogList(), new LogList(), new LogList());","lastModifiedDate":"2025-04-03T12:06:46","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"        });","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"    void parser_nullInput_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"        LogList logs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"                ClearParser.parse(null, logs, logs, logs, logs, logs));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":56,"kinneo":58}},{"path":"src/test/java/seedu/healthbud/command/singlelog/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.HealthBudException;","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.exception.InvalidDeleteException;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.parser.DeleteParser;","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Travissssz"},"content":"import static seedu.healthbud.HealthBud.pbLogs;","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"class DeleteCommandTest {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    void deleteWater_correctInput_expectSuccess() throws InvalidDeleteException {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Travissssz"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Travissssz"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Travissssz"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete water 3\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Travissssz"},"content":"        DeleteCommand command \u003d DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Travissssz"},"content":"        assertEquals(waterLogs, command.getLogList());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Travissssz"},"content":"        assertEquals(3, command.getIndex());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    void deleteMeal_correctInput_expectSuccess() throws InvalidDeleteException, HealthBudException {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Travissssz"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete meal 10\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Travissssz"},"content":"        DeleteCommand command \u003d DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Travissssz"},"content":"        assertEquals(mealLogs, command.getLogList());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Travissssz"},"content":"        assertEquals(10, command.getIndex());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    void deleteCardio_correctInput_expectSuccess() throws InvalidDeleteException, HealthBudException {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Travissssz"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Travissssz"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete cardio 3\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Travissssz"},"content":"        DeleteCommand command \u003d DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Travissssz"},"content":"        assertEquals(cardioLogs, command.getLogList());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Travissssz"},"content":"        assertEquals(3, command.getIndex());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    void deletePB_correctInput_expectSuccess() throws InvalidDeleteException, HealthBudException {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete pb 3\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Travissssz"},"content":"        DeleteCommand command \u003d DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Travissssz"},"content":"        assertEquals(pbLogs, command.getLogList());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Travissssz"},"content":"        assertEquals(3, command.getIndex());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T16:40:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"    void deleteWorkout_correctInput_expectSuccess() throws InvalidDeleteException{","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Travissssz"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Travissssz"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Travissssz"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete workout 3\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Travissssz"},"content":"        DeleteCommand command \u003d DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Travissssz"},"content":"        assertEquals(workoutLogs, command.getLogList());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Travissssz"},"content":"        assertEquals(3, command.getIndex());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"    void deleteWater_wrongInput_expectThrowsInvalidDeleteException(){","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Travissssz"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Travissssz"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Travissssz"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete water 1.5\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidDeleteException.class, () -\u003e","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jasonlobo21"},"content":"                DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs));","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"    void deletePB_wrongInput_throwsInvalidDeleteException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete PB one\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidDeleteException.class, () -\u003e","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Travissssz"},"content":"                DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs));","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"    void delete_invalidLogType_throwsInvalidDeleteException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Travissssz"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Travissssz"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Travissssz"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete invalid 1\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jasonlobo21"},"content":"        assertThrows(InvalidDeleteException.class, () -\u003e","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jasonlobo21"},"content":"                DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs));","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T22:32:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"    void delete_missingIndex_throwsInvalidDeleteException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Travissssz"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Travissssz"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Travissssz"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete meal\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDeleteException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Travissssz"},"content":"                DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs));","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"    void delete_missingLogType_throwsInvalidDeleteException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Travissssz"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Travissssz"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Travissssz"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Travissssz"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Travissssz"},"content":"        assertThrows(InvalidDeleteException.class, () -\u003e","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Travissssz"},"content":"                DeleteParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs));","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Travissssz"},"content":"    void deleteLog_indexOutOfBounds_expectThrowsHealthBudException() {","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete pb 3\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Jasonlobo21"},"content":"        DeleteCommand command \u003d new DeleteCommand(pbLogs, 3);","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Travissssz"},"content":"        assertThrows(HealthBudException.class, () -\u003e command.execute());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T16:40:16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Travissssz"},"content":"    void deleteLog_negativeIndex_expectThrowsHealthBudException() {","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete workout -1\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Jasonlobo21"},"content":"        DeleteCommand command \u003d new DeleteCommand(workoutLogs, -1);","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Travissssz"},"content":"        assertThrows(HealthBudException.class, () -\u003e command.execute());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Travissssz"},"content":"    }","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Travissssz"},"content":"    @Test","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Travissssz"},"content":"    void deleteLog_zeroIndex_expectThrowsHealthBudException() {","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Travissssz"},"content":"        String input \u003d \"delete pb 0\";","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Jasonlobo21"},"content":"        DeleteCommand command \u003d new DeleteCommand(pbLogs, 0);","lastModifiedDate":"2025-04-03T17:00:29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Travissssz"},"content":"","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Travissssz"},"content":"        assertThrows(HealthBudException.class, () -\u003e command.execute());","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kinneo"},"content":"    void delete_nullInput_expectThrowsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kinneo"},"content":"                DeleteParser.parse(null, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Travissssz"},"content":"}","lastModifiedDate":"2025-04-03T15:47:07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-01T20:05:16","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":53,"kinneo":42,"Travissssz":101}},{"path":"src/test/java/seedu/healthbud/command/singlelog/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Ahmish15"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Ahmish15"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.exception.InvalidListException;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.ListParser;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"class ListCommandTest {","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"    void setUpStream() {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"    @AfterEach","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"    void restoreStream() {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"        outputStream.reset();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"    private String executeListCommand(String input,","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"                                      LogList mealLogs, LogList workoutLogs,","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"                                      LogList pbLogs, LogList waterLogs, LogList cardioLogs)","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"            throws InvalidListException {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"        outputStream.reset();","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ahmish15"},"content":"        ListCommand command \u003d ListParser.parse(input, mealLogs, workoutLogs, pbLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ahmish15"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ahmish15"},"content":"        System.out.flush();","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Ahmish15"},"content":"        return outputStream.toString();","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ahmish15"},"content":"    void listMealLogsWithNoLogsExpectNoLogsAvailable() throws InvalidListException {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeListCommand(","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ahmish15"},"content":"                \"list meal\", mealLogs, new LogList(), new LogList(), new LogList(), new LogList());","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Ahmish15"},"content":"        assertTrue(output.contains(\"No logs available.\"),","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Ahmish15"},"content":"                \"Should print \u0027No logs available.\u0027 for empty mealLogs.\");","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ahmish15"},"content":"    void listMealLogsWithExistingLogsExpectListed() throws InvalidListException {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ahmish15"},"content":"        // Add logs to mealLogs","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ahmish15"},"content":"        AddMealCommand addMeal1 \u003d new AddMealCommand(","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"                mealLogs, \"chicken rice\", \"550\", \"12 Jan 2025\", \"9pm\");","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Ahmish15"},"content":"        AddMealCommand addMeal2 \u003d new AddMealCommand(","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Ahmish15"},"content":"                mealLogs, \"tom yum\", \"650\", \"13 Jan 2025\", \"8pm\");","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Ahmish15"},"content":"        addMeal1.execute();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"        addMeal2.execute();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Ahmish15"},"content":"        assertEquals(2, mealLogs.getSize());","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeListCommand(","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Ahmish15"},"content":"                \"list meal\", mealLogs, new LogList(), new LogList(), new LogList(), new LogList());","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Ahmish15"},"content":"        assertTrue(output.contains(\"chicken rice\"), \"Should list \u0027chicken rice\u0027 log.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Ahmish15"},"content":"        assertTrue(output.contains(\"tom yum\"), \"Should list \u0027tom yum\u0027 log.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Ahmish15"},"content":"    void listWorkoutLogsWithNoLogsExpectNoLogsAvailable() throws InvalidListException {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Ahmish15"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeListCommand(","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Ahmish15"},"content":"                \"list workout\", new LogList(), workoutLogs, new LogList(), new LogList(), new LogList());","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Ahmish15"},"content":"        assertTrue(output.contains(\"No logs available.\"),","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Ahmish15"},"content":"                \"Should print \u0027No logs available.\u0027 for empty workoutLogs.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Ahmish15"},"content":"    void listWaterLogsWithNoLogsExpectNoLogsAvailable() throws InvalidListException {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ahmish15"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeListCommand(","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ahmish15"},"content":"                \"list water\", new LogList(), new LogList(), new LogList(), waterLogs, new LogList());","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Ahmish15"},"content":"        assertTrue(output.contains(\"No logs available.\"),","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Ahmish15"},"content":"                \"Should print \u0027No logs available.\u0027 for empty waterLogs.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Ahmish15"},"content":"    void listPbLogsWithNoLogsExpectNoLogsAvailable() throws InvalidListException {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Ahmish15"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeListCommand(","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Ahmish15"},"content":"                \"list pb\", new LogList(), new LogList(), pbLogs, new LogList(), new LogList());","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Ahmish15"},"content":"        assertTrue(output.contains(\"No logs available.\"),","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Ahmish15"},"content":"                \"Should print \u0027No logs available.\u0027 for empty pbLogs.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Ahmish15"},"content":"    void listCardioLogsWithNoLogsExpectNoLogsAvailable() throws InvalidListException {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Ahmish15"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d executeListCommand(","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Ahmish15"},"content":"                \"list cardio\", new LogList(), new LogList(), new LogList(), new LogList(), cardioLogs);","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Ahmish15"},"content":"        assertTrue(output.contains(\"No logs available.\"),","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Ahmish15"},"content":"                \"Should print \u0027No logs available.\u0027 for empty cardioLogs.\");","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Ahmish15"},"content":"    void listMissingLogTypeExpectInvalidListException() {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Ahmish15"},"content":"        // Just \"list\" \u003d\u003e no second token","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidListException.class, () -\u003e","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Ahmish15"},"content":"                ListParser.parse(","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Ahmish15"},"content":"                        \"list\", new LogList(), new LogList(), new LogList(), new LogList(), new LogList()));","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Ahmish15"},"content":"    void listInvalidLogTypeExpectInvalidListException() {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Ahmish15"},"content":"        // \"list randomType\" \u003d\u003e not recognized","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidListException.class, () -\u003e","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Ahmish15"},"content":"                ListParser.parse(\"list randomType\", new LogList(), new LogList(),","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Ahmish15"},"content":"                        new LogList(), new LogList(), new LogList()));","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Ahmish15"},"content":"    void listEmptyInputExpectInvalidListException() {","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidListException.class, () -\u003e","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Ahmish15"},"content":"                ListParser.parse(\"\", new LogList(), new LogList(), new LogList(), new LogList(), new LogList()));","lastModifiedDate":"2025-04-03T21:33:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"    void list_nullInput_expectAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"                ListParser.parse(null, new LogList(), new LogList(), new LogList(), new LogList(), new LogList()));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":12,"Ahmish15":123}},{"path":"src/test/java/seedu/healthbud/command/singlelog/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonlobo21"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Ahmish15"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Ahmish15"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Ahmish15"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Ahmish15"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Ahmish15"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Ahmish15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.exception.InvalidSearchException;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Ahmish15"},"content":"import seedu.healthbud.parser.SearchParser;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Ahmish15"},"content":"public class SearchCommandTest {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Ahmish15"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Ahmish15"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ahmish15"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ahmish15"},"content":"    void setUpStream() {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ahmish15"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ahmish15"},"content":"    @AfterEach","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ahmish15"},"content":"    void restoreStream() {","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Ahmish15"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Ahmish15"},"content":"        outputStream.reset();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonlobo21"},"content":"    void execute_searchByDate_withMatchingLogs() {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonlobo21"},"content":"        Meal meal \u003d new Meal(\"chicken rice\", \"550\", \"12 Dec 2025\", \"9pm\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonlobo21"},"content":"        mealLogs.addLog(meal);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonlobo21"},"content":"        SearchCommand command \u003d new SearchCommand(mealLogs, \"12 Dec 2025\", null);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonlobo21"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonlobo21"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.contains(\"chicken rice\"), \"Should list the log with date \u002712 Dec 2025\u0027.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonlobo21"},"content":"        assertFalse(output.contains(","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonlobo21"},"content":"                \"No logs found for this date\"), \"Should not print \u0027No logs found\u0027 message.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonlobo21"},"content":"    void execute_searchByDate_noMatchingLogs() {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonlobo21"},"content":"        Meal meal \u003d new Meal(\"chicken rice\", \"550\", \"13 Dec 2025\", \"9pm\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonlobo21"},"content":"        mealLogs.addLog(meal);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonlobo21"},"content":"        SearchCommand command \u003d new SearchCommand(mealLogs, \"12 Dec 2025\", null);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonlobo21"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonlobo21"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.contains(\"No logs found for this date\"),","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonlobo21"},"content":"                \"Should print \u0027No logs found\u0027 message for non-matching date.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonlobo21"},"content":"    void execute_searchByKeyword_withMatchingLogs() {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jasonlobo21"},"content":"        // Prepare logs","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jasonlobo21"},"content":"        Meal meal1 \u003d new Meal(\"chicken salad\", \"400\", \"10 Jan 2025\", \"6pm\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonlobo21"},"content":"        Meal meal2 \u003d new Meal(\"beef burger\", \"800\", \"11 Jan 2025\", \"8pm\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonlobo21"},"content":"        mealLogs.addLog(meal1);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonlobo21"},"content":"        mealLogs.addLog(meal2);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonlobo21"},"content":"        SearchCommand command \u003d new SearchCommand(mealLogs, null, \"chicken\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Ahmish15"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Ahmish15"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.contains(\"chicken salad\"), \"Should list the log containing \u0027chicken salad\u0027.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jasonlobo21"},"content":"        assertFalse(output.contains(\"No matching \u0027chicken\u0027 logs found.\"),","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jasonlobo21"},"content":"                \"Should not print \u0027No matching logs found\u0027 for a matching keyword.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jasonlobo21"},"content":"    void execute_searchByKeyword_noMatchingLogs() {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jasonlobo21"},"content":"        Meal meal \u003d new Meal(\"chicken salad\", \"400\", \"10 Jan 2025\", \"6pm\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jasonlobo21"},"content":"        mealLogs.addLog(meal);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jasonlobo21"},"content":"        SearchCommand command \u003d new SearchCommand(mealLogs, null, \"beef\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jasonlobo21"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jasonlobo21"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jasonlobo21"},"content":"        assertTrue(output.contains(\"No matching \u0027beef\u0027 logs found.\"),","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonlobo21"},"content":"                \"Should print \u0027No matching logs found\u0027 message for a non-matching keyword.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jasonlobo21"},"content":"    }","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jasonlobo21"},"content":"    @Test","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jasonlobo21"},"content":"    void parse_validDateInput_returnsSearchCommand() throws InvalidSearchException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jasonlobo21"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Ahmish15"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Ahmish15"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Ahmish15"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Ahmish15"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"search meal /d 12/12/2025\";","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Ahmish15"},"content":"        SearchCommand command \u003d SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jasonlobo21"},"content":"        assertNotNull(command, \"Command should not be null for valid date input.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jasonlobo21"},"content":"    void parse_validKeywordInput_returnsSearchCommand() throws InvalidSearchException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Ahmish15"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Ahmish15"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Ahmish15"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Ahmish15"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Ahmish15"},"content":"        String input \u003d \"search meal /k chicken\";","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Ahmish15"},"content":"        SearchCommand command \u003d SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jasonlobo21"},"content":"        assertNotNull(command, \"Command should not be null for valid keyword input.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jasonlobo21"},"content":"    void parse_invalidPartsLength_throwsInvalidSearchException() {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Ahmish15"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Ahmish15"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Ahmish15"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Ahmish15"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"search meal /k jason extra\";","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidSearchException.class, () -\u003e","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jasonlobo21"},"content":"                SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs)","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jasonlobo21"},"content":"        );","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jasonlobo21"},"content":"    void parse_missingFlag_throwsInvalidSearchException() {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Ahmish15"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Ahmish15"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Ahmish15"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Ahmish15"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"search meal jason\";","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidSearchException.class, () -\u003e","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jasonlobo21"},"content":"                SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs)","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jasonlobo21"},"content":"        );","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jasonlobo21"},"content":"    void parse_invalidFlag_throwsInvalidSearchException() {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Ahmish15"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Ahmish15"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Ahmish15"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Ahmish15"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"search meal /x jason\";","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidSearchException.class, () -\u003e","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jasonlobo21"},"content":"                SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs)","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Jasonlobo21"},"content":"        );","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Jasonlobo21"},"content":"    void parse_invalidDateFormat_throwsInvalidDateFormatException() {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Ahmish15"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Ahmish15"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Ahmish15"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Ahmish15"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"search meal /d 31-02-2025\";","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Jasonlobo21"},"content":"                SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs)","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Jasonlobo21"},"content":"        );","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Jasonlobo21"},"content":"    void parse_invalidLogType_throwsInvalidSearchException() {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Ahmish15"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Ahmish15"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Ahmish15"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Ahmish15"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"search snacks /k chips\";","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Ahmish15"},"content":"        assertThrows(InvalidSearchException.class, () -\u003e","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Jasonlobo21"},"content":"                SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs)","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Jasonlobo21"},"content":"        );","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Jasonlobo21"},"content":"    void parse_validDateInputForWorkout_returnsSearchCommand()","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Jasonlobo21"},"content":"            throws InvalidSearchException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Ahmish15"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Ahmish15"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Ahmish15"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Ahmish15"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"search workout /d 01/01/2025\";","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Jasonlobo21"},"content":"        SearchCommand command \u003d SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Jasonlobo21"},"content":"        assertNotNull(command, \"Command should not be null for valid workout date search.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Jasonlobo21"},"content":"    void parse_validKeywordInputForWater_returnsSearchCommand()","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Jasonlobo21"},"content":"            throws InvalidSearchException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"search water /k hydration\";","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Jasonlobo21"},"content":"        SearchCommand command \u003d SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Jasonlobo21"},"content":"        assertNotNull(command, \"Command should not be null for valid water keyword search.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Jasonlobo21"},"content":"    void parse_validDateInputForPB_returnsSearchCommand() throws InvalidSearchException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"search pb /d 15/08/2025\";","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Jasonlobo21"},"content":"        SearchCommand command \u003d SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Jasonlobo21"},"content":"        assertNotNull(command, \"Command should not be null for valid pb date search.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Ahmish15"},"content":"    @Test","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Jasonlobo21"},"content":"    void parse_validDateInputForCardio_returnsSearchCommand()","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Jasonlobo21"},"content":"            throws InvalidSearchException, InvalidDateFormatException {","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Ahmish15"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Jasonlobo21"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Jasonlobo21"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Jasonlobo21"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Jasonlobo21"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Ahmish15"},"content":"","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Jasonlobo21"},"content":"        String input \u003d \"search cardio /d 20/11/2025\";","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Jasonlobo21"},"content":"        SearchCommand command \u003d SearchParser.parse(input, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs);","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Jasonlobo21"},"content":"        assertNotNull(command, \"Command should not be null for valid cardio date search.\");","lastModifiedDate":"2025-04-03T21:34:02","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Ahmish15"},"content":"    }","lastModifiedDate":"2025-04-03T19:41:00","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"kinneo"},"content":"    void parse_nullInput_expectAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"kinneo"},"content":"                SearchParser.parse(null, mealLogs, workoutLogs, waterLogs, pbLogs, cardioLogs)","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"kinneo"},"content":"        );","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":111,"kinneo":18,"Ahmish15":134}},{"path":"src/test/java/seedu/healthbud/command/singlelog/SumCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonlobo21"},"content":"package seedu.healthbud.command.singlelog;","lastModifiedDate":"2025-04-01T22:58:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidSumException;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Meal;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Cardio;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.log.Water;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.parser.SumParser;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"public class SumCommandTest {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"    public void sumCommand_calorieSum_correctSumReturned() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        LogList mealLogList \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        mealLogList.addLog(new Meal(\"Eggs\", \"150\", \"2024-04-03\", \"08:00\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        mealLogList.addLog(new Meal(\"Chicken\", \"300\", \"2024-04-03\", \"12:00\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        mealLogList.addLog(new Meal(\"Soda\", \"100\", \"2024-04-02\", \"15:00\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        SumCommand command \u003d new SumCommand(mealLogList, \"cal\", \"2024-04-03\");","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        int expected \u003d 450;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        int actual \u003d mealLogList.getCaloriesSum(\"2024-04-03\");","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"    public void sumCommand_waterSum_correctSumReturned() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"        LogList waterLogList \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        waterLogList.addLog(new Water(\"250\", \"2024-04-03\", \"09:00\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        waterLogList.addLog(new Water(\"500\", \"2024-04-03\", \"11:00\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        waterLogList.addLog(new Water(\"300\", \"2024-04-02\", \"18:00\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        SumCommand command \u003d new SumCommand(waterLogList, \"vol\", \"2024-04-03\");","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        int expected \u003d 750;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        int actual \u003d waterLogList.getWaterSum(\"2024-04-03\");","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    public void sumCommand_cardioSum_correctCaloriesBurned() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogList \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        cardioLogList.addLog(new Cardio(\"Run\", \"6\", \"2\", \"30\", \"2024-04-03\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"        cardioLogList.addLog(new Cardio(\"Cycle\", \"4\", \"1\", \"60\", \"2024-04-03\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        cardioLogList.addLog(new Cardio(\"Walk\", \"2\", \"1\", \"60\", \"2024-04-02\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"        SumCommand command \u003d new SumCommand(cardioLogList, \"cardio\", \"2024-04-03\");","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        int expected \u003d 2400;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        int actual \u003d cardioLogList.getCardioSum(\"2024-04-03\");","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    public void sumCommand_emptyLogList_returnsZero() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"        LogList mealLogList \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        SumCommand command \u003d new SumCommand(mealLogList, \"cal\", \"2024-04-03\");","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        int expected \u003d 0;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"        int actual \u003d mealLogList.getCaloriesSum(\"2024-04-03\");","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"    public void sumCommand_validCalInput_executesCorrectly() throws Exception {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"        mealLogs.addLog(new Meal(\"Chicken Rice\", \"500\", \"04-03-2024\", \"12:00\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"        mealLogs.addLog(new Meal(\"Soup\", \"200\", \"04-03-2024\", \"18:00\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"        SumCommand command \u003d SumParser.parse(\"sum cal /d 04-03-2024\", mealLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"        assertEquals(700, mealLogs.getCaloriesSum(\"04-03-2024\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"    public void sumCommand_validVolInput_executesCorrectly() throws Exception {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"        waterLogs.addLog(new Water(\"250\", \"04-03-2024\", \"09:00\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"        waterLogs.addLog(new Water(\"500\", \"04-03-2024\", \"14:00\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"        SumCommand command \u003d SumParser.parse(\"sum vol /d 04-03-2024\", mealLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"        int expected \u003d 750;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"        assertEquals(expected, waterLogs.getWaterSum(\"04-03-2024\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"    public void sumCommand_validCardioInput_executesCorrectly() throws Exception {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"        cardioLogs.addLog(new Cardio(\"Run\", \"5\", \"2\", \"60\", \"04-03-2024\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"        SumCommand command \u003d SumParser.parse(\"sum cardio /d 04-03-2024\", mealLogs, waterLogs, cardioLogs);","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"        command.execute();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"        assertEquals(2000, cardioLogs.getCardioSum(\"04-03-2024\"));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"    public void sumCommand_invalidType_throwsInvalidSumException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidSumException.class, () -\u003e","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kinneo"},"content":"                SumParser.parse(\"sum sleep /d 04-03-2024\", mealLogs, waterLogs, cardioLogs));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kinneo"},"content":"    public void sumCommand_missingDatePrefix_throwsInvalidSumException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidSumException.class, () -\u003e","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kinneo"},"content":"                SumParser.parse(\"sum cal 2024-04-03\", mealLogs, waterLogs, cardioLogs));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kinneo"},"content":"    void sumCommand_nullType_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kinneo"},"content":"        LogList dummyLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kinneo"},"content":"                new SumCommand(dummyLogs, null, \"2024-04-03\"));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kinneo"},"content":"    void sumCommand_nullDate_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kinneo"},"content":"        LogList dummyLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kinneo"},"content":"                new SumCommand(dummyLogs, \"cal\", null));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kinneo"},"content":"    void sumParser_nullInput_throwsAssertionError() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kinneo"},"content":"                SumParser.parse(null, mealLogs, waterLogs, cardioLogs));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kinneo"},"content":"    void sumParser_tooFewTokens_throwsInvalidSumException() {","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"sum cal\"; // Only 2 tokens","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidSumException.class, () -\u003e","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kinneo"},"content":"                SumParser.parse(input, mealLogs, waterLogs, cardioLogs));","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T23:26:39","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-01T12:48:30","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":1,"kinneo":172}},{"path":"src/test/java/seedu/healthbud/parser/DateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidDateFormatException;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"class DateParserTest {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    void formatDate_validFormats_expectCorrectOutput() throws InvalidDateFormatException {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"25-12-2023\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"Dec 25 2023\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"25 12 2023\"));","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonlobo21"},"content":"        assertEquals(\"25 Dec 2023\", DateParser.formatDate(\"25/12/2023\"));","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonlobo21"},"content":"","lastModifiedDate":"2025-04-03T16:36:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"    void formatDate_invalidFormat_expectException() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"                DateParser.formatDate(\"25th of December 2023\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    void formatDate_emptyInput_expectException() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"                DateParser.formatDate(\"\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    void formatDate_nullInput_expectException() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T21:43:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"                DateParser.formatDate(null));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false}],"authorContributionMap":{"Jasonlobo21":3,"kinneo":34}},{"path":"src/test/java/seedu/healthbud/parser/ParserManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"class ParserManagerTest {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"    private final LogList empty \u003d new LogList();","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    void handleInput_add_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"                \"add meal Lunch /c 300 /d 2024-04-01 /t 12:00\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    void handleInput_list_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"                \"list meal\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"    void handleInput_recommend_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"                \"recommend goal\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"    void handleInput_bmi_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"                \"bmi 70 1.75\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"    void handleInput_delete_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"                \"delete meal 1\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"    void handleInput_clear_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"                \"clear meal\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"    void handleInput_sum_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"                \"sum meal\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    void handleInput_status_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"                \"status change bulking\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"    void handleInput_search_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"                \"search meal rice\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"    void handleInput_view_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"                \"view goals\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"    void handleInput_track_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"                \"track goal /d 2024-04-01\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    void handleInput_help_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"                \"help\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"    void handleInput_bye_expectSuccess() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"                \"bye\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"        assertEquals(false, result); // \u0027bye\u0027 returns false","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"    void handleInput_unknownCommand_expectFailure() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"        boolean result \u003d ParserManager.handleInput(empty, empty, empty, empty, empty, empty,","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"                \"unknowncommand\");","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"        assertEquals(true, result); // still returns true, but error printed","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false}],"authorContributionMap":{"kinneo":109}},{"path":"src/test/java/seedu/healthbud/parser/ParserParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import java.util.Map;","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T12:01:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03T12:01:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"class ParserParametersTest {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"    void parseParameters_cardioParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/s 1.5 /i 2.0 /t 30 /d 2024-04-01\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"1.5\", params.get(\"s\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2.0\", params.get(\"i\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"30\", params.get(\"t\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"        assertEquals(4, params.size());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"    void parseParameters_goalParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/cal 2000 /w 8 /kg 70\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2000\", params.get(\"cal\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"8\", params.get(\"w\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"70\", params.get(\"kg\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"    void parseParameters_mealParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/cal 300 /d 2024-04-01 /t 12:00\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"300\", params.get(\"cal\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"12:00\", params.get(\"t\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    void parseParameters_pbParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/w 80 /d 2024-04-01\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"80\", params.get(\"w\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        assertEquals(2, params.size());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"    void parseParameters_waterParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/ml 500 /d 2024-04-01 /t 10:00\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"500\", params.get(\"ml\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"10:00\", params.get(\"t\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"    void parseParameters_workoutParams_expectCorrectMapping() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/r 4 /s 3 /d 2024-04-01 /w 60\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"4\", params.get(\"r\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"3\", params.get(\"s\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"60\", params.get(\"w\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"        assertEquals(4, params.size());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"    void parseParameters_multiWordValue_expectConcatenatedString() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/desc grilled chicken breast /cal 400\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"grilled chicken breast\", params.get(\"desc\")); // this triggers the space-append","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"400\", params.get(\"cal\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"        assertEquals(2, params.size());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"    void parseParameters_outOfOrder_expectCorrectMapping() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/d 2024-04-01 /t 08:00 /cal 350\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"2024-04-01\", params.get(\"d\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"08:00\", params.get(\"t\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"350\", params.get(\"cal\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"    void parseParameters_emptyInput_expectEmptyMap() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kinneo"},"content":"        assertTrue(params.isEmpty());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kinneo"},"content":"    void parseParameters_paramWithoutValue_expectEmptyString() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/cal\";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"\", params.get(\"cal\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kinneo"},"content":"        assertEquals(1, params.size());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kinneo"},"content":"    void parseParameters_extraSpaces_expectTrimmedValues() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"/ml     1000     /t     09:00  \";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"1000\", params.get(\"ml\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kinneo"},"content":"        assertEquals(\"09:00\", params.get(\"t\"));","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kinneo"},"content":"        assertEquals(2, params.size());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kinneo"},"content":"    void parseParameters_onlySpaces_expectEmptyMap() {","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"     \";","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kinneo"},"content":"        Map\u003cString, String\u003e params \u003d ParserParameters.parseParameters(input);","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kinneo"},"content":"        assertTrue(params.isEmpty());","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03T11:36:45","isFullCredit":false}],"authorContributionMap":{"kinneo":122}},{"path":"src/test/java/seedu/healthbud/parser/addcommandparser/AddParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinneo"},"content":"package seedu.healthbud.parser.addcommandparser;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kinneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.LogList;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.Command;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.singlelog.AddCardioCommand;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.singlelog.AddGoalCommand;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.singlelog.AddMealCommand;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.singlelog.AddPersonalBestCommand;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.singlelog.AddWaterCommand;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.command.singlelog.AddWorkoutCommand;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"import seedu.healthbud.exception.InvalidAddLogException;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"class AddParserTest {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kinneo"},"content":"    void parse_validMealInput_success() throws Exception {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"        LogList mealLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add meal chicken /cal 500 /d 12-04-2024 /t 1200\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"        Command command \u003d AddParser.parse(input, mealLogs, new LogList(), new LogList(),","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"                new LogList(), new LogList(), new LogList());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"        assertEquals(AddMealCommand.class, command.getClass());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kinneo"},"content":"    void parse_validWaterInput_success() throws Exception {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kinneo"},"content":"        LogList waterLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add water /ml 2000 /d 12-04-2024 /t 1200\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kinneo"},"content":"        Command command \u003d AddParser.parse(input, new LogList(), waterLogs, new LogList(),","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kinneo"},"content":"                new LogList(), new LogList(), new LogList());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kinneo"},"content":"        assertEquals(AddWaterCommand.class, command.getClass());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kinneo"},"content":"    void parse_validCardioInput_success() throws Exception {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kinneo"},"content":"        LogList cardioLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add cardio run /s 10 /i 5 /t 30 /d 12-04-2024\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kinneo"},"content":"        Command command \u003d AddParser.parse(input, new LogList(), new LogList(), cardioLogs,","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kinneo"},"content":"                new LogList(), new LogList(), new LogList());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kinneo"},"content":"        assertEquals(AddCardioCommand.class, command.getClass());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kinneo"},"content":"    void parse_validPersonalBestInput_success() throws Exception {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kinneo"},"content":"        LogList pbLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pb deadlift /w 100 /d 12-04-2024\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kinneo"},"content":"        Command command \u003d AddParser.parse(input, new LogList(), new LogList(), new LogList(),","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kinneo"},"content":"                pbLogs, new LogList(), new LogList());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kinneo"},"content":"        assertEquals(AddPersonalBestCommand.class, command.getClass());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kinneo"},"content":"    void parse_validWorkoutInput_success() throws Exception {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kinneo"},"content":"        LogList workoutLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add workout pushup /w 0 /r 10 /s 3 /d 12-04-2024\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kinneo"},"content":"        Command command \u003d AddParser.parse(input, new LogList(), new LogList(), new LogList(),","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kinneo"},"content":"                new LogList(), workoutLogs, new LogList());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kinneo"},"content":"        assertEquals(AddWorkoutCommand.class, command.getClass());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kinneo"},"content":"    void parse_validGoalInput_success() throws Exception {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kinneo"},"content":"        LogList goalLogs \u003d new LogList();","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add goal sleep 8h /d 12-04-2024\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kinneo"},"content":"        Command command \u003d AddParser.parse(input, new LogList(), new LogList(), new LogList(),","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kinneo"},"content":"                new LogList(), new LogList(), goalLogs);","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kinneo"},"content":"        assertEquals(AddGoalCommand.class, command.getClass());","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kinneo"},"content":"    void parse_invalidType_throwsInvalidAddLogException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add pizza /cal 1000 /d 12-04-2024 /t 1900\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidAddLogException.class, () -\u003e","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kinneo"},"content":"                AddParser.parse(input, new LogList(), new LogList(), new LogList(),","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kinneo"},"content":"                        new LogList(), new LogList(), new LogList()));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kinneo"},"content":"    void parse_insufficientArguments_throwsInvalidAddLogException() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kinneo"},"content":"        String input \u003d \"add\";","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kinneo"},"content":"        assertThrows(InvalidAddLogException.class, () -\u003e","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kinneo"},"content":"                AddParser.parse(input, new LogList(), new LogList(), new LogList(),","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kinneo"},"content":"                        new LogList(), new LogList(), new LogList()));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kinneo"},"content":"    @Test","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kinneo"},"content":"    void parse_nullInput_throwsAssertionError() {","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kinneo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kinneo"},"content":"                AddParser.parse(null, new LogList(), new LogList(), new LogList(),","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kinneo"},"content":"                        new LogList(), new LogList(), new LogList()));","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kinneo"},"content":"    }","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kinneo"},"content":"}","lastModifiedDate":"2025-04-03T20:23:04","isFullCredit":false}],"authorContributionMap":{"kinneo":95}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2025-03-13T15:01:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2025-03-13T15:01:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2025-03-13T15:01:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2025-03-13T15:01:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2025-03-13T15:01:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kinneo"},"content":"rem -- Force Java to run with UTF-8 encoding","lastModifiedDate":"2025-04-01T19:32:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kinneo"},"content":"chcp 65001 \u003e nul","lastModifiedDate":"2025-04-01T19:32:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"java -Dfile.encoding\u003dUTF-8 -jar ..\\build\\libs\\%jarloc% \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-04-01T19:32:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13T15:42:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T19:32:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T19:32:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-04-01T19:32:36","isFullCredit":false}],"authorContributionMap":{"kinneo":7,"-":17}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kinneo"},"content":"# Ensure correct JAR file is used","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kinneo"},"content":"java -jar ../build/libs/healthbud.jar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kinneo"},"content":"if [ $? -eq 0 ]; then","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2025-03-13T14:49:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kinneo"},"content":"","lastModifiedDate":"2025-03-13T15:42:49","isFullCredit":false}],"authorContributionMap":{"kinneo":5,"-":20}}]
