[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TayGuangSheng"},"content":"    mainClass.set(\"budgetbuddy.BudgetBuddy\")","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TayGuangSheng"},"content":"    //enableAssertions \u003d true","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":2,"-":45}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"Display |      Name       | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"--------|:---------------:|:--------------:|:---------:","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tay Guang Sheng |   [Github](https://github.com/TayGuangSheng)   | [Portfolio](docs/team/tayguangsheng.md)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneja999"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhe Hui | [Github](https://github.com/ae-24) | [Portfolio](docs/team/zhehui.md)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"manavm12"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Manav Mehta | [Github](https://github.com/manavm12) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneja999"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Juneja Akshat | [Github](https://github.com/juneja999) | [Portfolio](docs/team/JunejaAkshat.md)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tejaskumar0"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Tejas   | [Github](https://github.com/tejaskumar0) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"manavm12":1,"juneja999":2,"TayGuangSheng":2,"-":2,"tejaskumar0":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"## Table of Contents","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"- [Design and implementation](#design-and-implementation)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"- [Product scope](#product-scope)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TayGuangSheng"},"content":"    - [Target user profile](#target-user-profile)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TayGuangSheng"},"content":"    - [Value proposition](#value-proposition)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TayGuangSheng"},"content":"- [User stories](#user-stories)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TayGuangSheng"},"content":"- [Non-functional requirements](#non-functional-requirements)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TayGuangSheng"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TayGuangSheng"},"content":"- [Manual testing](#instructions-for-manual-testing) ","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TayGuangSheng"},"content":"Budget Buddy uses the following tools for development:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TayGuangSheng"},"content":"1. JUnit5 - For unit testing and ensuring code reliability.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TayGuangSheng"},"content":"2. Gradle - For efficient build automation and dependency management. ","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TayGuangSheng"},"content":"Budget Buddy is built for students who want a simple way to manage their finances.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TayGuangSheng"},"content":"Many students have a limited income, busy schedules, and need an easy tool to:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TayGuangSheng"},"content":"1. Track daily expenses","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TayGuangSheng"},"content":"2. Set budgets","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TayGuangSheng"},"content":"3. Stay financially aware","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TayGuangSheng"},"content":"Budget Buddy helps with common challenges like overspending, forgetfulness, and balancing expenses across different categories.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TayGuangSheng"},"content":"Budget Buddy helps students take control of their finances with a simple, intuitive tool for tracking expenses, setting budgets, and gaining financial insights.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TayGuangSheng"},"content":"Many students struggle with money management, leading to overspending and financial stress. Budget Buddy addresses this by providing:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TayGuangSheng"},"content":"- Real-time updates to keep spending in check","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TayGuangSheng"},"content":"- Spending alerts to prevent overspending","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TayGuangSheng"},"content":"- Budget summaries for a clear financial overview","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TayGuangSheng"},"content":"With Budget Buddy, students can build better financial habits, stay within budget, and make informed money decisions—effortlessly.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"|Version| As a ...                                                 | I want to ...                                         | So that I can ...                                            |","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TayGuangSheng"},"content":"|--------|----------------------------------------------------------|-------------------------------------------------------|--------------------------------------------------------------|","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ae-24"},"content":"|v1.0| financially conscious student                            | log my daily expenses                                 | track my spending habits effectively.                        |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TayGuangSheng"},"content":"|v1.0| busy student                                             | categorise my expenses                                | see where most of my money is spent.                         |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TayGuangSheng"},"content":"|v1.0| student on limited budget                                | set a monthly budget                                  | I can manage my finances and avoid overspending.             |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TayGuangSheng"},"content":"|v1.0| forgetful student woth hectic schedule                   | see the portion of my budget I have used              | be more financially aware.                                   |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TayGuangSheng"},"content":"|v1.0| time-strapped student managing multiple responsibilities | view a summary of my finances                         | quickly understand my financial situation.                   |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TayGuangSheng"},"content":"|v1.0| student prone to overspending                            | receive alerts when I am close to exceeding my budget | adjust my spending.                                          |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TayGuangSheng"},"content":"|v2.0| user                                                     | find a to-do item by name                             | locate a to-do without having to go through the entire list. |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":39,"-":31,"ae-24":1}},{"path":"src/main/java/budgetbuddy/BudgetBuddy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.storage.StorageManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.ui.InputManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.ui.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TayGuangSheng"},"content":"public class BudgetBuddy {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"        BudgetManager budgetManager \u003d new BudgetManager();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tejaskumar0"},"content":"        StorageManager.load(budgetManager);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"        InputManager inputManager \u003d new InputManager(budgetManager);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TayGuangSheng"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TayGuangSheng"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"        inputManager.processInputLoop();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tejaskumar0"},"content":"        StorageManager.save(budgetManager);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":9,"-":8,"ae-24":4,"tejaskumar0":2}},{"path":"src/main/java/budgetbuddy/command/AddExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":" * The AddExpenseCommand class represents a command that adds an expense to a specified budget.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneja999"},"content":" * \u003cp\u003eThis command parses the input description, extracts the amount, category, description of the expense,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneja999"},"content":" * and time of expense.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneja999"},"content":" * It then adds the expense to the specified budget using the BudgetManager.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"public class AddExpenseCommand extends Command {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"    public AddExpenseCommand(String description) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"        super(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"     * Executes the AddExpenseCommand by parsing the input and adding the expense to the appropriate budget.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"     * \u003cp\u003eThe method first splits the input description into its components: the expense amount, category,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneja999"},"content":"     * description and time.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneja999"},"content":"     * It then calls the {@link BudgetManager#addExpenseToBudget(String, double, String, String)}","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneja999"},"content":"     * method to add the expense","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"     * to the specified category of the budget.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"     * @param parser        The parser used to handle and parse the user input.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"     * @param budgetManager The BudgetManager responsible for managing expenses and budgets.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"     * @throws InvalidInputException If there is invalid input while parsing the description or adding the expense.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"    public void execute(Parser parser, BudgetManager budgetManager) throws InvalidInputException { //need to add UI and","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"        // Saving class","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"        String[] splitLine \u003d parser.parseAddCommand(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"        double amount \u003d Double.parseDouble(splitLine[0]);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"        String category \u003d splitLine[1];","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"        String description \u003d splitLine[2];","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneja999"},"content":"        String time \u003d splitLine[3];","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneja999"},"content":"        budgetManager.addExpenseToBudget(category, amount, description, time);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"     * Returns {@code false} as this command does not signify the end of the program.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ae-24"},"content":"     * @return {@code false} to indicate the program should not exit after executing this command.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ae-24"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ae-24"},"content":"        return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"juneja999":9,"TayGuangSheng":4,"ae-24":41}},{"path":"src/main/java/budgetbuddy/command/AlertCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":" * The AlertCommand class represents a command that sets an alert for a specific budget amount.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":" * \u003cp\u003eThis command parses the input description to extract the alert amount and then sets the alert using the","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":" * {@link BudgetManager#setBudgetAlert(double)} method.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"public class AlertCommand extends Command{","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"    public AlertCommand(String description) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"        super(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"     * Executes the AlertCommand by parsing the input and setting the alert for the budget.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"     * \u003cp\u003eThe method extracts the alert amount from the description using the {@link Parser#parseAlertCommand(String)}","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"     * method, and then calls the {@link BudgetManager#setBudgetAlert(double)} method to set the alert for the budget.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"     * @param parser The parser used to handle and parse the user input.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"     * @param budgetManager The BudgetManager responsible for managing budgets and setting alerts.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"     * @throws InvalidInputException If there is invalid input while parsing the description or setting the alert.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"    public void execute(Parser parser, BudgetManager budgetManager) throws InvalidInputException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TayGuangSheng"},"content":"        double amount \u003d parser.parseAlertCommand(description);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"        budgetManager.setBudgetAlert(amount);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"     * Returns {@code false} as this command does not signify the end of the program.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"     * @return {@code false} to indicate the program should not exit after executing this command.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"        return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":5,"ae-24":40}},{"path":"src/main/java/budgetbuddy/command/CheckBudgetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":" * The CheckBudgetCommand class represents a command that checks the budget for a specific category.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":" * \u003cp\u003eThis command parses the input description to extract the category name and then checks the budget for that","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":" * category using the {@link BudgetManager#checkBudget(String)} method.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"public class CheckBudgetCommand extends Command{","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"    public CheckBudgetCommand(String description) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"        super(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"     * Executes the CheckBudgetCommand by parsing the input to get the category and then checking the budget for that","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"     * category.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"     * \u003cp\u003eThe method extracts the category from the description using the {@link Parser#parseCheckBudgetCommand(String)}","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"     * method, and then calls the {@link BudgetManager#checkBudget(String)} method to check the budget for that","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"     * category.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"     * @param parser The parser used to handle and parse the user input.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"     * @param budgetManager The BudgetManager responsible for managing budgets and checking the budget for a category.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"     * @throws InvalidInputException If there is invalid input while parsing the description or checking the budget.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"    public void execute(Parser parser, BudgetManager budgetManager) throws InvalidInputException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"        String category \u003d parser.parseCheckBudgetCommand(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"        budgetManager.checkBudget(category);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"     * Returns {@code false} as this command does not signify the end of the program.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"     * @return {@code false} to indicate the program should not exit after executing this command.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"        return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":4,"ae-24":42}},{"path":"src/main/java/budgetbuddy/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":" * The abstract Command class represents a general command that can be executed within the budget management system.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":" * \u003cp\u003eEach specific command will extend this class and implement the {@link #execute(Parser, BudgetManager)}","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":" * method to define its functionality. The class also contains an abstract method {@link #isExit()} to determine","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":" * if the command signals the exit of the program.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"    protected final String description;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"    public Command(String description) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"     * Executes the command by interacting with the provided Parser and BudgetManager.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"     * \u003cp\u003eThis method is abstract and must be implemented by subclasses of Command. The subclasses should define","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"     * the specific behavior of the command, such as modifying the budget, adding an expense, etc.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"     * @param parser The parser used to handle and parse user input.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"     * @param budgetManager The BudgetManager that holds and manages budgets and expenses.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"     * @throws InvalidInputException If there is invalid input while executing the command.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"    public abstract void execute(Parser parser, BudgetManager budgetManager) throws InvalidInputException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"    //need to add UI and Saving class","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"     * Determines if this command is an exit command that will terminate the program.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"     * @return {@code true} if the command signals the end of the program, {@code false} otherwise.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":4,"ae-24":37}},{"path":"src/main/java/budgetbuddy/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":" * The DeleteCommand class represents a command that deletes an expense from a budget.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":" * \u003cp\u003eThis command parses the input description to extract the index of the expense to be deleted and","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":" * then deletes the corresponding expense using the {@link BudgetManager#deleteExpense(int)} method.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"    public DeleteCommand(String description) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"        super(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"     * Executes the DeleteCommand by parsing the input to get the index of the expense to be deleted","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"     * and then deleting the expense at that index.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"     * \u003cp\u003eThe method extracts the index from the description using the {@link Parser#parseDeleteCommand(String)} method,","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"     * and then calls the {@link BudgetManager#deleteExpense(int)} method to remove the expense from the budget.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"     * @param parser The parser used to handle and parse the user input.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"     * @param budgetManager The BudgetManager responsible for managing budgets and deleting the expense.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"     * @throws InvalidInputException If there is invalid input while parsing the description or deleting the expense.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"    public void execute(Parser parser, BudgetManager budgetManager) throws InvalidInputException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"        int index \u003d parser.parseDeleteCommand(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"        budgetManager.deleteExpense(index);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"     * Returns {@code false} as this command does not signify the end of the program.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"     * @return {@code false} to indicate the program should not exit after executing this command.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"        return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":4,"ae-24":41}},{"path":"src/main/java/budgetbuddy/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.ui.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":" * The ExitCommand class represents a command that exits the program.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":" * \u003cp\u003eThis command simply prints \"Bye\" to the console and signals the termination of the program.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"    public ExitCommand(String description) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"        super(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"     * Executes the ExitCommand by printing a goodbye message to the console.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"     * \u003cp\u003eThis method does not interact with the {@link BudgetManager} or {@link Parser}, as it simply","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"     * terminates the program by printing \"Bye\".\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"     * @param parser The parser used to handle and parse the user input (not used in this case).","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"     * @param budgetManager The BudgetManager responsible for managing budgets and expenses (not used in this case).","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"    public void execute(Parser parser, BudgetManager budgetManager) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TayGuangSheng"},"content":"        Ui.printGoodbyeMessage();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"     * Returns {@code true} as this command signifies the end of the program.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"     * @return {@code true} to indicate that the program should exit after executing this command.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"        return true;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":5,"ae-24":36}},{"path":"src/main/java/budgetbuddy/command/FindExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"manavm12"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"manavm12"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"manavm12"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"manavm12"},"content":" * The FindExpenseCommand class represents a command that searches for expenses in the Monthly budget.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"manavm12"},"content":" *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"manavm12"},"content":" * \u003cp\u003eThis command parses the input description, extracts the keyword after \"find\",","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"manavm12"},"content":" * and then calls the {@link BudgetManager#findExpense(String)} method to find and display matching expenses.\u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"manavm12"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"manavm12"},"content":"public class FindExpenseCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"manavm12"},"content":"    public FindExpenseCommand(String description) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"manavm12"},"content":"        super(description);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"manavm12"},"content":"     * Executes the FindExpenseCommand by parsing the input and searching for the keyword in the Monthly budget.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"manavm12"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"manavm12"},"content":"     * \u003cp\u003eThe method expects the user input to start with the keyword \"find\" followed by the search term.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"manavm12"},"content":"     * Example: \"find food\" will search for expenses containing \"food\" in the description.\u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"manavm12"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"manavm12"},"content":"     * @param parser        The parser used to handle and parse the user input.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"manavm12"},"content":"     * @param budgetManager The BudgetManager responsible for managing expenses and budgets.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"manavm12"},"content":"     * @throws InvalidInputException If there is invalid input while parsing the description.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"manavm12"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"manavm12"},"content":"    public void execute(Parser parser, BudgetManager budgetManager) throws InvalidInputException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"manavm12"},"content":"        String keyword \u003d parser.parseFindExpenseCommand(description);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"manavm12"},"content":"        budgetManager.findExpense(keyword);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"manavm12"},"content":"     * Returns {@code false} as this command does not signify the end of the program.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"manavm12"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"manavm12"},"content":"     * @return {@code false} to indicate the program should not exit after executing this command.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"manavm12"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"manavm12"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"manavm12"},"content":"        return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"manavm12"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"manavm12":42,"TayGuangSheng":2}},{"path":"src/main/java/budgetbuddy/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.ui.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TayGuangSheng"},"content":" * The HelpCommand class represents a command that displays a help message to the user.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TayGuangSheng"},"content":" *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TayGuangSheng"},"content":" * \u003cp\u003eThis command provides a summary of all available commands, including their format and examples of usage.\u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TayGuangSheng"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TayGuangSheng"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TayGuangSheng"},"content":"    public HelpCommand(String description) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TayGuangSheng"},"content":"        super(description);  // Pass the description to the parent class constructor","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TayGuangSheng"},"content":"     * Executes the HelpCommand by printing a help message to the user.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TayGuangSheng"},"content":"     * \u003cp\u003eThis method interacts with the {@link Ui} class to display the available commands and their formats.\u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TayGuangSheng"},"content":"     * @param parser The parser used to handle and parse the user input (not used in this case).","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TayGuangSheng"},"content":"     * @param budgetManager The BudgetManager responsible for managing budgets and expenses (not used in this case).","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TayGuangSheng"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TayGuangSheng"},"content":"    public void execute(Parser parser, BudgetManager budgetManager) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TayGuangSheng"},"content":"        Ui.printHelpMessage();  // Print the help message","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TayGuangSheng"},"content":"     * Returns {@code false} as this command does not exit the program.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TayGuangSheng"},"content":"     * @return {@code false} to indicate that the program should not exit after executing this command.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TayGuangSheng"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TayGuangSheng"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TayGuangSheng"},"content":"        return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TayGuangSheng"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":40}},{"path":"src/main/java/budgetbuddy/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":" * The ListCommand class represents a command to list all expenses.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":" * \u003cp\u003eThis command calls the {@link BudgetManager} to list all recorded expenses.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"    public ListCommand(String description) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"        super(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"     * Executes the ListCommand by requesting the {@link BudgetManager} to list all expenses.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"     * \u003cp\u003eThis method interacts with the {@link BudgetManager} to display a list of all the expenses","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"     * stored in the system.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"     * @param parser The parser used to handle and parse the user input (not used in this case).","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"     * @param budgetManager The BudgetManager responsible for managing budgets and expenses, used to list all expenses.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"     * @throws InvalidInputException If the input cannot be processed, this exception will be thrown.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"    public void execute(Parser parser, BudgetManager budgetManager) throws InvalidInputException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"        budgetManager.listAllExpenses();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"     * Returns {@code false} as this command does not signify the end of the program.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"     * @return {@code false} to indicate the program should not exit after executing this command.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"        return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":4,"ae-24":38}},{"path":"src/main/java/budgetbuddy/command/SetBudgetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":" * The SetBudgetCommand class represents a command to set a budget for a specific category.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":" * \u003cp\u003eThis command allows the user to set a budget for a given category by interacting with the","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":" * {@link BudgetManager} to store the specified budget value for that category.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"public class SetBudgetCommand extends Command{","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"    ","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"    public SetBudgetCommand(String description) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"        super(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"     * Executes the SetBudgetCommand by setting a budget for the specified category.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"     * \u003cp\u003eThis method parses the description for category and amount, then delegates the task of","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"     * setting the budget to the {@link BudgetManager}.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"     * @param parser The parser used to handle and parse the user input.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"     * @param budgetManager The BudgetManager responsible for managing budgets and expenses.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"     * @throws InvalidInputException If the input is invalid (e.g., parsing errors), this exception will be thrown.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"    public void execute(Parser parser, BudgetManager budgetManager) throws InvalidInputException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"        String[] splitline \u003d parser.parseSetBudgetCommand(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"        String category \u003d splitline[0];","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"        double amount \u003d Double.parseDouble(splitline[1]);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"        budgetManager.setBudget(category, amount);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"     * Returns {@code false} as this command does not signify the end of the program.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"     * @return {@code false} to indicate the program should not exit after executing this command.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"        return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":4,"ae-24":42}},{"path":"src/main/java/budgetbuddy/command/SummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetSummary;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":" * The SummaryCommand class represents a command that generates a summary of the user\u0027s budgets and expenses.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":" * \u003cp\u003eThis command allows the user to get a summary of the current budget status, including the details of all the","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":" * budgets and expenses. It interacts with the {@link BudgetSummary} class to produce the summary from the","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":" * data stored in the {@link BudgetManager}.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"public class SummaryCommand extends Command{","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"    public SummaryCommand(String description) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"        super(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"     * Executes the SummaryCommand by generating and displaying a summary of the user\u0027s budgets and expenses.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"     * \u003cp\u003eThis method creates a {@link BudgetSummary} instance and calls its {@link BudgetSummary#summariseBudget()}","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"     * method to generate and display the summary based on the data in the {@link BudgetManager}.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"     * @param parser The parser used to handle and parse the user input (not used in this case).","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"     * @param budgetManager The BudgetManager responsible for managing budgets and expenses.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"     * @throws InvalidInputException If the input is invalid (e.g., unexpected errors occur), this exception will be","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"     *     thrown.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"    public void execute(Parser parser, BudgetManager budgetManager) throws InvalidInputException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"        BudgetSummary budgetSummary \u003d new BudgetSummary(budgetManager);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"        budgetSummary.summariseBudget();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"     * Returns {@code false} as this command does not signify the end of the program.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"     * @return {@code false} to indicate the program should not exit after executing this command.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"        return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":5,"ae-24":41}},{"path":"src/main/java/budgetbuddy/exception/InvalidInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.exception;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ae-24"},"content":" * Exception thrown when user input is invalid.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":"        super(message);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":"    public void print() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":"        System.out.println(\"Invalid input format: \" + getMessage());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":1,"ae-24":15}},{"path":"src/main/java/budgetbuddy/model/Alert.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.ui.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tejaskumar0"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tejaskumar0"},"content":" * Manages budget alerts and notifies the user when expenses exceed a specified amount.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tejaskumar0"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tejaskumar0"},"content":"public class Alert {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tejaskumar0"},"content":"    private double alertAmount;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tejaskumar0"},"content":"    private boolean isActive;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tejaskumar0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tejaskumar0"},"content":"     * Initializes the Alert with no active limit.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tejaskumar0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tejaskumar0"},"content":"    public Alert() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tejaskumar0"},"content":"        this.alertAmount \u003d 0;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tejaskumar0"},"content":"        this.isActive \u003d false;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tejaskumar0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tejaskumar0"},"content":"     * Sets the alert amount. If the amount is 0, it disables the alert.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tejaskumar0"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tejaskumar0"},"content":"     * @param amount The amount to trigger an alert.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tejaskumar0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tejaskumar0"},"content":"    public void setAlert(double amount) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tejaskumar0"},"content":"        if (amount \u003c 0) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TayGuangSheng"},"content":"            Ui.printInvalidBudgetAlertWarning();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tejaskumar0"},"content":"        this.alertAmount \u003d amount;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tejaskumar0"},"content":"        this.isActive \u003d amount \u003e 0;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tejaskumar0"},"content":"        if (isActive) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TayGuangSheng"},"content":"            Ui.printSetBudgetAlert(alertAmount, false);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tejaskumar0"},"content":"        }else {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TayGuangSheng"},"content":"            Ui.printRemoveBudgetAlert();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tejaskumar0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tejaskumar0"},"content":"     * Checks if total expenses exceed the alert amount.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tejaskumar0"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tejaskumar0"},"content":"     * @param totalExpenses The current total expenses.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tejaskumar0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tejaskumar0"},"content":"    public void checkAlert(double totalExpenses) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TayGuangSheng"},"content":"        assert totalExpenses \u003e\u003d 0 : \"Total expenses cannot be negative\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tejaskumar0"},"content":"        if (isActive \u0026\u0026 totalExpenses \u003e alertAmount) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TayGuangSheng"},"content":"            Ui.printCheckAlert(totalExpenses, alertAmount);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tejaskumar0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tejaskumar0"},"content":"     * Gets the current alert amount.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tejaskumar0"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tejaskumar0"},"content":"     * @return The alert threshold.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tejaskumar0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tejaskumar0"},"content":"    public double getAlertAmount() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tejaskumar0"},"content":"        return alertAmount;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tejaskumar0"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tejaskumar0"},"content":"     * Edits the current alert amount.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tejaskumar0"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tejaskumar0"},"content":"     * @return The new alert threshold.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tejaskumar0"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TayGuangSheng"},"content":"    public double editAlertAmount(double amount) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tejaskumar0"},"content":"        if (amount \u003c 0) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TayGuangSheng"},"content":"            Ui.printInvalidBudgetAlertWarning();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tejaskumar0"},"content":"            return (int) alertAmount;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tejaskumar0"},"content":"        this.alertAmount \u003d amount;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tejaskumar0"},"content":"        this.isActive \u003d amount \u003e 0;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tejaskumar0"},"content":"        if (isActive) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TayGuangSheng"},"content":"            Ui.printSetBudgetAlert(alertAmount, true);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tejaskumar0"},"content":"        }else {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TayGuangSheng"},"content":"            Ui.printRemoveBudgetAlert();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tejaskumar0"},"content":"        return amount;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tejaskumar0"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":12,"tejaskumar0":72}},{"path":"src/main/java/budgetbuddy/model/Budget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.ui.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"import java.util.List;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":" * Represents a Budget that tracks expenses within a specific category.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":" * The budget can have an optional spending limit.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"public class Budget {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"    private final String category;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TayGuangSheng"},"content":"    private double limit; //Optional","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"    private final ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"     * Constructs a Budget object with the given category and spending limit.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"     * @param category The name of the budget category (e.g., \"Food\", \"Transport\").","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"     * @param limit The spending limit for the budget.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"    public Budget(String category, double limit) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"        if (category \u003d\u003d null) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"            throw new IllegalArgumentException(\"Category cannot be empty.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"        if (limit \u003c 0) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"            throw new IllegalArgumentException(\"Limit cannot be negative.\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"        this.category \u003d category;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"        this.expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"     * Adds an expense to the list of expenses for this budget.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"     * @param expense The expense to add to this budget.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"    public void addExpense (Expense expense) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"        expenses.add(expense);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ae-24"},"content":"     * Calculates the total amount of all expenses in this budget.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ae-24"},"content":"     * @return The total expenses for the budget.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ae-24"},"content":"    public double getTotalExpenses() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ae-24"},"content":"        return expenses.stream().mapToDouble(e -\u003e e.amount).sum();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TayGuangSheng"},"content":"     * Sets a new spending limit for this budget.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TayGuangSheng"},"content":"     * @param amount The new spending limit for this budget.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TayGuangSheng"},"content":"    public void setLimit(double amount) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TayGuangSheng"},"content":"        if (amount \u003c 0) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TayGuangSheng"},"content":"            throw new IllegalArgumentException(\"Budget limit cannot be negative.\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TayGuangSheng"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TayGuangSheng"},"content":"        this.limit \u003d amount;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TayGuangSheng"},"content":"     * Gets the spending limit of this budget.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TayGuangSheng"},"content":"     * @return The current spending limit for this budget.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TayGuangSheng"},"content":"    public double getLimit() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TayGuangSheng"},"content":"        return this.limit;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"manavm12"},"content":"     * Prints all expenses under this budget in reverse order (most recent first).","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"manavm12"},"content":"    public void printExpenses() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"manavm12"},"content":"        if (expenses.isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TayGuangSheng"},"content":"            Ui.printNoExpense();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TayGuangSheng"},"content":"        }else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TayGuangSheng"},"content":"            Ui.printExpensesList(expenses);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"manavm12"},"content":"    public void deleteExpense(int index) throws InvalidInputException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"manavm12"},"content":"        if (index \u003c 1 || index \u003e expenses.size()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"manavm12"},"content":"            throw new InvalidInputException(\"Invalid index. Please provide a valid expense number.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TayGuangSheng"},"content":"        Ui.printDeleteExpense(expenses, index);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ae-24"},"content":"    public List\u003cExpense\u003e getExpenses() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ae-24"},"content":"        return expenses;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"manavm12":15,"TayGuangSheng":29,"ae-24":56}},{"path":"src/main/java/budgetbuddy/model/BudgetManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ae-24"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TayGuangSheng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":" * The BudgetManager class is responsible for managing multiple budgets.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tejaskumar0"},"content":" * It allows tracking expenses and setting alerts when expenses exceed a threshold.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"public class BudgetManager {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TayGuangSheng"},"content":"    private static final Logger logger \u003d Logger.getLogger(BudgetManager.class.getName());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"    private final HashMap\u003cString, Budget\u003e budgets;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tejaskumar0"},"content":"    private final Alert alert;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"     * Constructs a BudgetManager with an initial \"Monthly\" budget.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"     * The \"Monthly\" budget is created with a default limit of 0.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"    public BudgetManager() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"        this.budgets \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"        this.alert \u003d new Alert(); // Initialise alert system","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"        budgets.put(\"Monthly\", new Budget(\"Monthly\", 0));","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TayGuangSheng"},"content":"        logger.info(\"BudgetManager initialized with Monthly budget.\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"        assert budgets !\u003d null : \"Budgets HashMap should be initialized.\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"        assert alert !\u003d null : \"Alert system should be initialized.\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"manavm12"},"content":"     * Adds an expense to a specified budget category.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"manavm12"},"content":"     * Always adds to the \"Monthly\" budget. If a valid category exists, it is added there too;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"manavm12"},"content":"     * otherwise, a prompt is shown to create the category.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"manavm12"},"content":"     * Also checks if total expenses exceed the budget alert threshold.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"manavm12"},"content":"     * @param category    The budget category (e.g., \"Food\"), or empty for \"Monthly\".","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"manavm12"},"content":"     * @param amount      The expense amount.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"     * @param description A brief description of the expense.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneja999"},"content":"    public void addExpenseToBudget(String category, double amount, String description, String time) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"manavm12"},"content":"        assert amount \u003e 0 : \"Error: Expense amount should be positive.\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"        try {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneja999"},"content":"            //instantiate a new expense","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneja999"},"content":"            Expense expense \u003d new Expense(amount, description, time);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"manavm12"},"content":"            if (!budgets.containsKey(\"Monthly\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"manavm12"},"content":"                budgets.put(\"Monthly\", new Budget(\"Monthly\", 0));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TayGuangSheng"},"content":"                logger.warning(\"Monthly budget was missing. Initialized a new Monthly budget.\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TayGuangSheng"},"content":"                assert budgets.get(\"Monthly\") !\u003d null : \"Monthly budget should be initialized.\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"manavm12"},"content":"                budgets.get(\"Monthly\").addExpense(expense);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneja999"},"content":"                //moved these inside the if block otherwise the expense was being added twice","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneja999"},"content":"            }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"manavm12"},"content":"            if (category !\u003d null \u0026\u0026 !category.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ae-24"},"content":"                if (!budgets.containsKey(category)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"manavm12"},"content":"                    System.out.println(\"Budget category \u0027\" + category + \"\u0027 not found. Added to Monthly Budget.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TayGuangSheng"},"content":"                    logger.warning(\"Budget category \u0027\" + category + \"\u0027 not found. Added to Monthly Budget.\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"manavm12"},"content":"                } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"manavm12"},"content":"                    budgets.get(category).addExpense(expense);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"manavm12"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TayGuangSheng"},"content":"                logger.info(\"Expense Added: \" + expense);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ae-24"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ae-24"},"content":"            System.out.println(\"Expense Added: \" + expense);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tejaskumar0"},"content":"            checkBudgetAlert();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ae-24"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ae-24"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ae-24"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tejaskumar0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tejaskumar0"},"content":"     * Sets a budget alert at the specified amount.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tejaskumar0"},"content":"     * If total expenses exceed this limit, a notification will be triggered.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tejaskumar0"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tejaskumar0"},"content":"     * @param amount The alert threshold. If 0, the alert is removed.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tejaskumar0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tejaskumar0"},"content":"    public void setBudgetAlert(double amount) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"manavm12"},"content":"        assert amount \u003e\u003d 0 : \"Error: Budget amount should not be negative.\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tejaskumar0"},"content":"        alert.setAlert(amount);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tejaskumar0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tejaskumar0"},"content":"     * Checks if total expenses exceed the alert limit.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tejaskumar0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tejaskumar0"},"content":"    private void checkBudgetAlert() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tejaskumar0"},"content":"        double totalExpenses \u003d getTotalExpenses();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tejaskumar0"},"content":"        alert.checkAlert(totalExpenses); // Alert system will notify if limit is exceeded","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tejaskumar0"},"content":"     * Retrieves all budgets managed by BudgetManager.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tejaskumar0"},"content":"     * @return A map of budget categories and their corresponding Budget objects.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tejaskumar0"},"content":"    public Map\u003cString, Budget\u003e getBudgets() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tejaskumar0"},"content":"        return this.budgets;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"manavm12"},"content":"     * Sets the budget for a given category or the \"Monthly\" budget if no category is specified.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"manavm12"},"content":"     * Creates a new budget if the category does not exist, otherwise updates its limit.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"manavm12"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"manavm12"},"content":"     * @param category The budget category (e.g., \"Food\"), or empty for \"Monthly\".","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"manavm12"},"content":"     * @param amount   The budget limit to set.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"manavm12"},"content":"    public void setBudget(String category, double amount) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ae-24"},"content":"        try {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"manavm12"},"content":"            if (Objects.equals(category, \"\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"manavm12"},"content":"                if (budgets.containsKey(\"Monthly\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"manavm12"},"content":"                    budgets.get(\"Monthly\").setLimit(amount);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"manavm12"},"content":"                } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tejaskumar0"},"content":"                    budgets.put(\"Monthly\", new Budget(\"Monthly\", amount));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"manavm12"},"content":"                }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ae-24"},"content":"                System.out.println(\"Monthly budget set to: $\" + amount);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"manavm12"},"content":"            } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tejaskumar0"},"content":"                if (!budgets.containsKey(category)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tejaskumar0"},"content":"                    budgets.put(category, new Budget(category, amount));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TayGuangSheng"},"content":"                    logger.info(\"Created new budget category: \" + category + \" with limit $\" + amount);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tejaskumar0"},"content":"                } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tejaskumar0"},"content":"                    budgets.get(category).setLimit(amount);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"TayGuangSheng"},"content":"                    logger.info(\"Updated budget for category \" + category + \" to: $\" + amount);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tejaskumar0"},"content":"                }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ae-24"},"content":"                System.out.println(\"Budget for category \" + category + \" set to: $\" + amount);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tejaskumar0"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ae-24"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ae-24"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ae-24"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tejaskumar0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tejaskumar0"},"content":"     * Calculates the total expenses across all budgets.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tejaskumar0"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tejaskumar0"},"content":"     * @return The sum of all expenses.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tejaskumar0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tejaskumar0"},"content":"    public double getTotalExpenses() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"manavm12"},"content":"        Budget monthlyBudget \u003d budgets.get(\"Monthly\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"manavm12"},"content":"        return (monthlyBudget !\u003d null) ? monthlyBudget.getTotalExpenses() : 0.0;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"manavm12"},"content":"     * Displays all expenses categorized under Monthly budget.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"manavm12"},"content":"    public void listAllExpenses() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"manavm12"},"content":"        assert budgets.containsKey(\"Monthly\") : \"Error: \u0027Monthly\u0027 budget should exist before listing expenses.\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"manavm12"},"content":"        Budget monthly \u003d budgets.get(\"Monthly\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"manavm12"},"content":"        monthly.printExpenses();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tejaskumar0"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"manavm12"},"content":"     * Deletes an expense from the Monthly Budget based on the index.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"manavm12"},"content":"     * Also deletes the same expense from the corresponding category budget.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tejaskumar0"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tejaskumar0"},"content":"     * @param index The index of the expense to delete.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"manavm12"},"content":"     * @throws InvalidInputException if the index is invalid.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tejaskumar0"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"manavm12"},"content":"    public void deleteExpense(int index) throws InvalidInputException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tejaskumar0"},"content":"        if (!budgets.containsKey(\"Monthly\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tejaskumar0"},"content":"            throw new InvalidInputException(\"No Monthly budget found.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"manavm12"},"content":"        Budget monthlyBudget \u003d budgets.get(\"Monthly\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"manavm12"},"content":"        if (index \u003c 1 || index \u003e monthlyBudget.getExpenses().size()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"manavm12"},"content":"            throw new InvalidInputException(\"Invalid index. Please provide a valid expense number.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"manavm12"},"content":"        Expense expenseToDelete \u003d monthlyBudget.getExpenses().get(monthlyBudget.getExpenses().size() - index);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"manavm12"},"content":"        System.out.println(\"Expense deleted successfully from Monthly Budget.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"manavm12"},"content":"        System.out.println(\"    \" + expenseToDelete);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"manavm12"},"content":"        monthlyBudget.deleteExpense(index);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"TayGuangSheng"},"content":"        logger.info(\"Expense at index \" + index + \" deleted from Monthly Budget.\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"manavm12"},"content":"        for (Map.Entry\u003cString, Budget\u003e entry : budgets.entrySet()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"manavm12"},"content":"            String category \u003d entry.getKey();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"manavm12"},"content":"            Budget categoryBudget \u003d entry.getValue();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"manavm12"},"content":"            if (category.equals(\"Monthly\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"manavm12"},"content":"                continue;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"manavm12"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"manavm12"},"content":"            for (int i \u003d 0; i \u003c categoryBudget.getExpenses().size(); i++) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"manavm12"},"content":"                Expense categoryExpense \u003d categoryBudget.getExpenses().get(i);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"manavm12"},"content":"                if (categoryExpense.equals(expenseToDelete)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"manavm12"},"content":"                    categoryBudget.getExpenses().remove(i);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"manavm12"},"content":"                    System.out.println(\"Expense also deleted from category \u0027\" + category + \"\u0027.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"manavm12"},"content":"                    logger.info(\"Expense deleted from category \u0027\" + category + \"\u0027.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"manavm12"},"content":"                    break;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"manavm12"},"content":"                }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"manavm12"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"manavm12"},"content":"        System.out.println(\"----------------------\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"manavm12"},"content":"     * Displays the budget allocation, amount spent, and remaining balance.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"manavm12"},"content":"     * If a category is specified, it shows details for that category.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"manavm12"},"content":"     * Otherwise, it shows the overall budget usage for the current month.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"manavm12"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"manavm12"},"content":"     * @param category The budget category (e.g., \"Food\"), or empty for \"Monthly\".","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"manavm12"},"content":"    public void checkBudget(String category) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"manavm12"},"content":"        if (category \u003d\u003d \"\" || category.trim().isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"manavm12"},"content":"            Budget monthlyBudget \u003d budgets.get(\"Monthly\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"manavm12"},"content":"            assert monthlyBudget !\u003d null : \"Error: \u0027Monthly\u0027 budget should always exist.\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"manavm12"},"content":"            double totalBudget \u003d monthlyBudget.getLimit();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"manavm12"},"content":"            double spent \u003d monthlyBudget.getTotalExpenses();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"manavm12"},"content":"            double remaining \u003d Math.max(0, totalBudget - spent);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d Overall Budget Usage \u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"Total Budget: $\" + totalBudget);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"Spent: $\" + spent);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"Remaining: $\" + remaining);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"manavm12"},"content":"        } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"manavm12"},"content":"            if (!budgets.containsKey(category)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"manavm12"},"content":"                System.out.println(\"Budget category \u0027\" + category + \"\u0027 not found.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"TayGuangSheng"},"content":"                logger.warning(\"Budget category \u0027\" + category + \"\u0027 not found.\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"manavm12"},"content":"                return;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"manavm12"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"TayGuangSheng"},"content":"            assert budgets.get(category) !\u003d null : \"Category budget should exist when checking.\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"manavm12"},"content":"            Budget categoryBudget \u003d budgets.get(category);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"manavm12"},"content":"            double totalBudget \u003d categoryBudget.getLimit();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"manavm12"},"content":"            double spent \u003d categoryBudget.getTotalExpenses();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"manavm12"},"content":"            double remaining \u003d Math.max(0, totalBudget - spent);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d Budget for \" + category + \" \u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"Total Budget: $\" + totalBudget);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"Spent: $\" + spent);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"Remaining: $\" + remaining);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ae-24"},"content":"    public Alert getBudgetAlert() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ae-24"},"content":"        return alert;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"manavm12"},"content":"     * Finds and displays expenses from the Monthly budget that match the given keyword.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"manavm12"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"manavm12"},"content":"     * @param keyword The keyword to search for in expense descriptions.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"manavm12"},"content":"    public void findExpense(String keyword) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"manavm12"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.trim().isEmpty() : \"Error: Keyword should not be null or empty.\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"manavm12"},"content":"        if (!budgets.containsKey(\"Monthly\")) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"No Monthly budget found.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"manavm12"},"content":"            return;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"manavm12"},"content":"        Budget monthlyBudget \u003d budgets.get(\"Monthly\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"manavm12"},"content":"        boolean found \u003d false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"manavm12"},"content":"        System.out.println(\"------- Expenses Matching: \u0027\" + keyword + \"\u0027 -------\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"manavm12"},"content":"        for (int i \u003d 0; i \u003c monthlyBudget.getExpenses().size(); i++) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"manavm12"},"content":"            Expense expense \u003d monthlyBudget.getExpenses().get(i);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"manavm12"},"content":"            if (expense.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"manavm12"},"content":"                System.out.println((i + 1) + \". \" + expense);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"manavm12"},"content":"                found \u003d true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"manavm12"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"manavm12"},"content":"        if (!found) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"manavm12"},"content":"            System.out.println(\"No matching expenses found for keyword: \" + keyword);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"manavm12"},"content":"        System.out.println(\"-------------------------------------\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"tejaskumar0"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"manavm12":154,"juneja999":6,"TayGuangSheng":21,"ae-24":48,"tejaskumar0":52}},{"path":"src/main/java/budgetbuddy/model/BudgetSummary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.ui.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneja999"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneja999"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneja999"},"content":" * This class summarizes the user budget by providing total expenses and spending limit.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneja999"},"content":" * This can summarize across multiple budgets.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneja999"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneja999"},"content":"public class BudgetSummary {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneja999"},"content":"    private final BudgetManager budgetManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneja999"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneja999"},"content":"     * Instantiate the class with a BudgetManager to access its private variable \"budgets\".","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneja999"},"content":"     * @param budgetManager is taken in the Duke class (main class).","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneja999"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneja999"},"content":"    public BudgetSummary(BudgetManager budgetManager) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneja999"},"content":"        this.budgetManager \u003d budgetManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneja999"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneja999"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneja999"},"content":"     * This is the method called to get the summary printed.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneja999"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneja999"},"content":"    public void summariseBudget() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneja999"},"content":"        Map\u003cString, Budget\u003e budgets \u003d budgetManager.getBudgets(); // Access the budgets map","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TayGuangSheng"},"content":"        Ui.printBudgetSummary(budgets);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneja999"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneja999"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"juneja999":26,"TayGuangSheng":4}},{"path":"src/main/java/budgetbuddy/model/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ae-24"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ae-24"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":" * Represents an expense with an amount, description, and timestamp.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneja999"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneja999"},"content":" * This class encapsulates all the necessary information related to an expense,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneja999"},"content":" * including the amount spent, a textual description, and the date and time the expense was recorded.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneja999"},"content":" * It offers multiple constructors, including one that accepts a date and time as a string.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneja999"},"content":" * If the string is in the correct format, that value is used; otherwise, the current system date and time is used.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneja999"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"public class Expense {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneja999"},"content":"    // Formatter to display date and time.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneja999"},"content":"    protected static final DateTimeFormatter DATETIME_FORMAT \u003d","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneja999"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy \u0027at\u0027 HH:mm\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneja999"},"content":"    // The date and time when the expense was recorded.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TayGuangSheng"},"content":"    public LocalDateTime dateTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneja999"},"content":"    // A textual description of the expense.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"    protected String description;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneja999"},"content":"    // The monetary amount of the expense.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"    protected double amount;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"     * Creates a new Expense with a specified amount and description.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneja999"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"     * The timestamp is automatically set to the current date and time.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneja999"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"     * @param amount      The amount spent. Must be non-negative.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"     * @param description The description of the expense. Cannot be null.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"     * @throws IllegalArgumentException If the description is null or the amount is negative.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"    public Expense(double amount, String description) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneja999"},"content":"        // Validate the description.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"            throw new IllegalArgumentException(\"Description cannot be empty.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneja999"},"content":"        // Validate the amount.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"        if (amount \u003c 0) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"            throw new IllegalArgumentException(\"Amount cannot be negative.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneja999"},"content":"        // Initialize instance variables.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ae-24"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ae-24"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneja999"},"content":"        // Set dateTime to the system\u0027s current date and time.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneja999"},"content":"        this.dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneja999"},"content":"        assert dateTime !\u003d null : \"DateTime cannot be null.\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneja999"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneja999"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneja999"},"content":"     * Creates a new Expense with a specified amount, description, and user-provided dateTime.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneja999"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneja999"},"content":"     * The provided dateTime is accepted only if it matches the expected format. If the format is incorrect,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneja999"},"content":"     * the system\u0027s current date and time is used instead.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneja999"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneja999"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneja999"},"content":"     * @param amount         The amount spent. Must be non-negative.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneja999"},"content":"     * @param description    The description of the expense. Cannot be null.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneja999"},"content":"     * @param dateTimeString The user provided date and time as a string.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneja999"},"content":"     * @throws IllegalArgumentException If the description is null or the amount is negative.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneja999"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneja999"},"content":"    public Expense(double amount, String description, String dateTimeString) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneja999"},"content":"        // Validate description.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneja999"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneja999"},"content":"            throw new IllegalArgumentException(\"Description cannot be empty.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneja999"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneja999"},"content":"        // Validate amount.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneja999"},"content":"        if (amount \u003c 0) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneja999"},"content":"            throw new IllegalArgumentException(\"Amount cannot be negative.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneja999"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneja999"},"content":"        // Initialize fields.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneja999"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneja999"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneja999"},"content":"        // Use the DateTimeUtil to parse the provided string.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneja999"},"content":"        this.dateTime \u003d budgetbuddy.parser.DateTimeParser.parseOrDefault(dateTimeString,false);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneja999"},"content":"        //we want to print error messages here, if applicable.Hence, noErrorPrint is false","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneja999"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneja999"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneja999"},"content":"     * This constructor is used when loading from .txt so that we can bypass all the error messages","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneja999"},"content":"     * @param amount The amount spent. Must be non-negative.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneja999"},"content":"     * @param description The description of the expense. Cannot be null.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneja999"},"content":"     * @param dateTimeString The user provided LocalDateTime.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneja999"},"content":"     * @param noErrorPrint Whether to print error messages or not. Connected to DateTimeParser","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneja999"},"content":"     *                     where messages is toggled on/off.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneja999"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneja999"},"content":"    public Expense(double amount, String description, String dateTimeString, Boolean noErrorPrint) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juneja999"},"content":"        // Validate description.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneja999"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juneja999"},"content":"            throw new IllegalArgumentException(\"Description cannot be empty.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juneja999"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juneja999"},"content":"        // Validate amount.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juneja999"},"content":"        if (amount \u003c 0) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juneja999"},"content":"            throw new IllegalArgumentException(\"Amount cannot be negative.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juneja999"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juneja999"},"content":"        // Initialize fields.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juneja999"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juneja999"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juneja999"},"content":"        // Use the DateTimeUtil to parse the provided string.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juneja999"},"content":"        this.dateTime \u003d budgetbuddy.parser.DateTimeParser.parseOrDefault(dateTimeString, noErrorPrint);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juneja999"},"content":"        //when noErrorPrint is true then we don\u0027t print error messages","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juneja999"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juneja999"},"content":"     * Creates a new Expense with a specified amount, description, and a LocalDateTime value.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juneja999"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juneja999"},"content":"     * This constructor is useful when the dateTime value has already been parsed and validated.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juneja999"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"juneja999"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"juneja999"},"content":"     * @param amount      The amount spent. Must be non-negative.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"juneja999"},"content":"     * @param description The description of the expense. Cannot be null.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"juneja999"},"content":"     * @param dateTime    The user provided LocalDateTime.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"juneja999"},"content":"     * @throws IllegalArgumentException If the description is null, the amount is negative, or the dateTime is null.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"juneja999"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tejaskumar0"},"content":"    public Expense(double amount, String description, LocalDateTime dateTime) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"juneja999"},"content":"        // Validate description.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tejaskumar0"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tejaskumar0"},"content":"            throw new IllegalArgumentException(\"Description cannot be empty.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"juneja999"},"content":"        // Validate amount.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tejaskumar0"},"content":"        if (amount \u003c 0) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tejaskumar0"},"content":"            throw new IllegalArgumentException(\"Amount cannot be negative.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"juneja999"},"content":"        // Validate dateTime.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tejaskumar0"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tejaskumar0"},"content":"            throw new IllegalArgumentException(\"DateTime cannot be null.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"juneja999"},"content":"        // Initialize instance variables.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tejaskumar0"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tejaskumar0"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"juneja999"},"content":"        this.dateTime \u003d (LocalDateTime) dateTime;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ae-24"},"content":"     * Returns a string representation of the expense, including the amount and timestamp.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"juneja999"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"juneja999"},"content":"     * The amount is formatted as currency, and the timestamp is formatted using a predefined pattern.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"juneja999"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ae-24"},"content":"     * @return A formatted string representing the expense.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ae-24"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ae-24"},"content":"    public String toString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"juneja999"},"content":"        // Format the dateTime using the specified formatter.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ae-24"},"content":"        String formattedDateTime \u003d dateTime.format(DATETIME_FORMAT);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"juneja999"},"content":"        // Format the amount as currency.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ae-24"},"content":"        String formattedAmount \u003d String.format(\"$%,.2f\", amount);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"juneja999"},"content":"        // Build and return the full string representation.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tejaskumar0"},"content":"        return formattedAmount + \" spent on \" + description + \" (\" + formattedDateTime + \")\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"juneja999"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"juneja999"},"content":"     * Retrieves the monetary amount of the expense.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"juneja999"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"juneja999"},"content":"     * @return The expense amount.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"juneja999"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ae-24"},"content":"    public double getAmount() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ae-24"},"content":"        return amount;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"juneja999"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"juneja999"},"content":"     * Retrieves the description of the expense.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"juneja999"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"juneja999"},"content":"     * @return The expense description.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"juneja999"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ae-24"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ae-24"},"content":"        return description;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"juneja999"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"juneja999"},"content":"     * this return string type of date time to preserve format","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"juneja999"},"content":"     * @return date time in string","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"juneja999"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"juneja999"},"content":"    public String getDateTimeString() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"juneja999"},"content":"        return dateTime.format(DATETIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"juneja999"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"juneja999":116,"TayGuangSheng":2,"ae-24":50,"tejaskumar0":15}},{"path":"src/main/java/budgetbuddy/parser/DateTimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juneja999"},"content":"package budgetbuddy.parser;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneja999"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneja999"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneja999"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneja999"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneja999"},"content":" * Utility class for handling date and time operations.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneja999"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneja999"},"content":" * This class provides helper methods for parsing and validating date and time values.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneja999"},"content":" * If a user-supplied date and time string does not conform to the expected format,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneja999"},"content":" * then the system\u0027s current date and time is used instead.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneja999"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneja999"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneja999"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneja999"},"content":"    // Define the formatter for both parsing and formatting.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneja999"},"content":"    public static final DateTimeFormatter DATETIME_FORMAT \u003d","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneja999"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy \u0027at\u0027 HH:mm\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneja999"},"content":"    //this format is used when loading tasks from .txt","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneja999"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneja999"},"content":"     * Attempts to parse the provided date and time string using the predefined formatter.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneja999"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneja999"},"content":"     * If the string is successfully parsed, the resulting LocalDateTime is returned.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneja999"},"content":"     * If the string cannot be parsed (i.e. it is in an incorrect format), the current system","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneja999"},"content":"     * date and time is returned as a default value.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneja999"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneja999"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneja999"},"content":"     * @param inputDateTimeStr The user provided date and time string.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneja999"},"content":"     * @param noErrorPrint     Whether to print error messages or not.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneja999"},"content":"     * @return The parsed LocalDateTime if the format is correct; otherwise, the system\u0027s current date and time.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneja999"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneja999"},"content":"    public static LocalDateTime parseOrDefault(String inputDateTimeStr, boolean noErrorPrint) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneja999"},"content":"        //we bypass the error messages when loading from .txt","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneja999"},"content":"        boolean isCorrectDateTimeFormat \u003d false;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneja999"},"content":"        LocalDateTime dateTimeParsed \u003d null;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneja999"},"content":"        try {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneja999"},"content":"            // Attempt to parse the string using the predefined formatter.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneja999"},"content":"            LocalDateTime parsedDateTime \u003d LocalDateTime.parse(inputDateTimeStr, DATETIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneja999"},"content":"            isCorrectDateTimeFormat \u003d true;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneja999"},"content":"            dateTimeParsed \u003d parsedDateTime;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneja999"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneja999"},"content":"            if (!noErrorPrint) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneja999"},"content":"                //when noErrorPrint is false, then only we will print this message","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneja999"},"content":"                System.out.println(\"Sorry wrong dateTime format used. \" +","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneja999"},"content":"                        \"Will use system current dateTime instead.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneja999"},"content":"                System.out.println(\"Format guide: \\\"MMM dd yyyy \u0027at\u0027 HH:mm\\\"\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneja999"},"content":"            }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneja999"},"content":"            LocalDateTime systemNow \u003d LocalDateTime.now();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneja999"},"content":"            dateTimeParsed \u003d systemNow;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneja999"},"content":"            // Assert that the system time is not null.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneja999"},"content":"            assert systemNow !\u003d null : \"System current dateTime should never be null.\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneja999"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneja999"},"content":"        return dateTimeParsed;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneja999"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneja999"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"juneja999":59}},{"path":"src/main/java/budgetbuddy/parser/InputParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.Command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.AddExpenseCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.AlertCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.CheckBudgetCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.DeleteCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.ExitCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.HelpCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.ListCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.SetBudgetCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.SummaryCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"manavm12"},"content":"import budgetbuddy.command.FindExpenseCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":" * The InputParser class is responsible for parsing the user input and converting it into the","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":" * corresponding command. It checks the input against predefined keywords and returns the appropriate","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":" * command to execute.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"public class InputParser {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"     * Parses the user input and returns the corresponding Command based on the keyword entered.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"     * \u003cp\u003eThis method splits the user input into a keyword and arguments. It then matches the","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"     * keyword against predefined commands and returns the corresponding Command object.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"     * If the input is invalid, an InvalidInputException is thrown with a message prompting the user","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"     * to enter a valid command.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"     * @param userInput The input entered by the user.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"     * @return A Command object corresponding to the user input.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"     * @throws InvalidInputException If the input does not match any valid command.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"     * @throws NoSuchElementException If no input is provided or the input is malformed.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"    public Command parseInput(String userInput) throws InvalidInputException, NoSuchElementException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"        String[] splitLine \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"        String keyword \u003d splitLine[0].toLowerCase();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"        return switch (keyword) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"        case \"bye\" -\u003e new ExitCommand(userInput);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"        case \"add\" -\u003e new AddExpenseCommand(userInput);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"        case \"alert\" -\u003e new AlertCommand(userInput);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"        case \"summary\" -\u003e new SummaryCommand(userInput);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ae-24"},"content":"        case \"list\" -\u003e new ListCommand(userInput);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ae-24"},"content":"        case \"delete\" -\u003e new DeleteCommand(userInput);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ae-24"},"content":"        case \"set-budget\" -\u003e new SetBudgetCommand(userInput);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ae-24"},"content":"        case \"check-budget\" -\u003e new CheckBudgetCommand(userInput);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TayGuangSheng"},"content":"        case \"help\" -\u003e new HelpCommand(userInput);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"manavm12"},"content":"        case \"find\" -\u003e new FindExpenseCommand(userInput);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ae-24"},"content":"        default -\u003e throw new InvalidInputException(\"Please try again with one of the valid commands:\" +","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ae-24"},"content":"                    \"\\nadd, alert, summary, list, delete, set-budget, bye\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ae-24"},"content":"        };","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"manavm12":2,"TayGuangSheng":13,"ae-24":43}},{"path":"src/main/java/budgetbuddy/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"manavm12"},"content":"public class Parser {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"manavm12"},"content":"    public Parser(){}","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneja999"},"content":"     * Parses an \"add\" command to extract the amount, category, description and time.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneja999"},"content":"     * Expected format:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneja999"},"content":"     * add `AMOUNT` c/ `CATEGORY` d/ `DESCRIPTION` t/ \u0027DATE TIME\u0027","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"manavm12"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"manavm12"},"content":"     * @param line The full command input.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"manavm12"},"content":"     * @return A string array containing [amount, category, description].","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"manavm12"},"content":"     * @throws InvalidInputException If the format is incorrect.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"    public String[] parseAddCommand(String line) throws InvalidInputException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"manavm12"},"content":"        if (line.length() \u003c 4) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneja999"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneja999"},"content":"                    \"Please use the format: add \u003cAMOUNT\u003e c/ \u003cCATEGORY\u003e d/ \u003cDESCRIPTION\u003e t/ \u003cDATE TIME\u003e\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneja999"},"content":"        //to remove the word \"add\"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"manavm12"},"content":"        line \u003d line.substring(4).trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"manavm12"},"content":"        String[] splitAmountCategory \u003d line.split(\"c/\", 2);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"manavm12"},"content":"        if (splitAmountCategory.length \u003c 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneja999"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneja999"},"content":"                    \"Please use the format: add \u003cAMOUNT\u003e c/ \u003cCATEGORY\u003e d/ \u003cDESCRIPTION\u003e t/ \u003cDATE TIME\u003e\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneja999"},"content":"        //this gives amount component from the splitAmountCategory","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"manavm12"},"content":"        String amount \u003d splitAmountCategory[0].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneja999"},"content":"        //this gives the rest of line component from the splitAmountCategory","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"manavm12"},"content":"        String remaining \u003d splitAmountCategory[1].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneja999"},"content":"        // Split by \"d/\" to separate Category and Description","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"manavm12"},"content":"        String[] splitCategoryDescription \u003d remaining.split(\"d/\", 2);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"manavm12"},"content":"        if (splitCategoryDescription.length \u003c 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneja999"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneja999"},"content":"                    \"Please use the format: add \u003cAMOUNT\u003e c/ \u003cCATEGORY\u003e d/ \u003cDESCRIPTION\u003e t/ \u003cDATE TIME\u003e\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneja999"},"content":"        //this gives category component from the splitCategoryDescription","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"manavm12"},"content":"        String category \u003d splitCategoryDescription[0].trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneja999"},"content":"        //this gives description component from the splitCategoryDescription","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneja999"},"content":"        //String description \u003d splitCategoryDescription[1].trim();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneja999"},"content":"        // Split by \"t/\" to separate Description and Time","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneja999"},"content":"        //this is all the command category onwards","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneja999"},"content":"        String[] splitDescriptionTime \u003d splitCategoryDescription[1].trim().split(\"t/\", 2);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneja999"},"content":"        if (splitDescriptionTime.length \u003c 2) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneja999"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneja999"},"content":"                    \"Please use the format: add \u003cAMOUNT\u003e c/ \u003cCATEGORY\u003e d/ \u003cDESCRIPTION\u003e t/ \u003cDATE TIME\u003e\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneja999"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneja999"},"content":"        //this gives time component from the splitDescriptionTime","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneja999"},"content":"        String dateTime \u003d splitDescriptionTime[1].trim();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneja999"},"content":"        //this gives only the string of description that we require","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneja999"},"content":"        //earlier it was giving description + time","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneja999"},"content":"        String description \u003d splitDescriptionTime[0].trim();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneja999"},"content":"        return new String[]{amount, category, description, dateTime};","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"manavm12"},"content":"     * Parses a \"set-budget\" command to extract the budget category and amount.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"manavm12"},"content":"     * Expected formats:","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"manavm12"},"content":"     * - \"set-budget `AMOUNT`\" (for Monthly budget)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"manavm12"},"content":"     * - \"set-budget c/CATEGORY `AMOUNT`\" (for a specific category)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"manavm12"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"manavm12"},"content":"     * @param command The full command input.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"manavm12"},"content":"     * @return A string array containing [category, amount].","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"manavm12"},"content":"     * @throws InvalidInputException If the format is incorrect.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"manavm12"},"content":"    public String[] parseSetBudgetCommand(String command) throws InvalidInputException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"manavm12"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"manavm12"},"content":"        if (parts.length !\u003d 2 \u0026\u0026 parts.length !\u003d 3) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"manavm12"},"content":"            throw new InvalidInputException(\"Invalid command format. Use set-budget c/CATEGORY AMOUNT\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"manavm12"},"content":"        String category \u003d \"\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"manavm12"},"content":"        String amount;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"manavm12"},"content":"        try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"manavm12"},"content":"            if (parts.length \u003d\u003d 2) { // Monthly budget setting","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"manavm12"},"content":"                amount \u003d parts[1];","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"manavm12"},"content":"            } else if (parts.length \u003d\u003d 3 \u0026\u0026 parts[1].startsWith(\"c/\")) { // Category budget setting","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"manavm12"},"content":"                category \u003d parts[1].substring(2).trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"manavm12"},"content":"                amount \u003d parts[2];","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"manavm12"},"content":"            } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"manavm12"},"content":"                throw new InvalidInputException(\"Invalid command format. Use set-budget c/CATEGORY AMOUNT\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"manavm12"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"manavm12"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"manavm12"},"content":"            throw new InvalidInputException(\"Invalid amount format. Please enter a valid number.\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"manavm12"},"content":"        return new String[]{category, amount};","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"manavm12"},"content":"     * Parses an \"alert\" command to extract the alert amount.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"manavm12"},"content":"     * Expected format: alert `AMOUNT`","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"manavm12"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"manavm12"},"content":"     * @param command The full command input.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"manavm12"},"content":"     * @return The alert amount as a double.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"manavm12"},"content":"     * @throws InvalidInputException If the format is incorrect.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"manavm12"},"content":"    public double parseAlertCommand(String command) throws InvalidInputException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"manavm12"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"manavm12"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"manavm12"},"content":"            throw new InvalidInputException(\"Please use the format: alert \u003cAMOUNT\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"manavm12"},"content":"        return Double.parseDouble(parts[1].trim());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tejaskumar0"},"content":"    public double parseDouble(String input) throws InvalidInputException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tejaskumar0"},"content":"        try {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tejaskumar0"},"content":"            return Double.parseDouble(input.trim());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tejaskumar0"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tejaskumar0"},"content":"            throw new InvalidInputException(\"Invalid number format. Please enter a valid number.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"manavm12"},"content":"     * Parses a \"delete\" command to extract the expense index to be deleted.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"manavm12"},"content":"     * Expected format: delete `INDEX`","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"manavm12"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"manavm12"},"content":"     * @param command The full command input.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"manavm12"},"content":"     * @return The index of the expense to delete.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"manavm12"},"content":"     * @throws InvalidInputException If the format is incorrect.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"manavm12"},"content":"    public int parseDeleteCommand(String command) throws InvalidInputException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"manavm12"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"manavm12"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"manavm12"},"content":"            throw new InvalidInputException(\"Please use the format: delete \u003cINDEX\u003e\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"manavm12"},"content":"        return Integer.parseInt(parts[1].trim());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"manavm12"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"manavm12"},"content":"     * Parses the \"check-budget\" command to extract the category (if provided).","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"manavm12"},"content":"     * Expected formats:","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"manavm12"},"content":"     * - \"check-budget\" (for overall budget)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"manavm12"},"content":"     * - \"check-budget c/CATEGORY\" (for category-specific budget)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"manavm12"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"manavm12"},"content":"     * @param command The full user command.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"manavm12"},"content":"     * @return The extracted category or an empty string if not provided.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"manavm12"},"content":"     * @throws InvalidInputException If the format is incorrect.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"manavm12"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"manavm12"},"content":"    public String parseCheckBudgetCommand(String command) throws InvalidInputException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"manavm12"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"manavm12"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"manavm12"},"content":"            return \"\"; // No category provided, check overall budget","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"manavm12"},"content":"        if (parts.length \u003d\u003d 2 \u0026\u0026 parts[1].startsWith(\"c/\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"manavm12"},"content":"            return parts[1].substring(2).trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"manavm12"},"content":"        throw new InvalidInputException(\"Invalid format. Use: check-budget [c/CATEGORY]\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"manavm12"},"content":"    public String parseFindExpenseCommand(String command) throws InvalidInputException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"manavm12"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"manavm12"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"manavm12"},"content":"            throw new InvalidInputException(\"Please use the format: find \u003cKEYWORD\u003e\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"manavm12"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"manavm12"},"content":"        return parts[1].trim();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"manavm12"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"manavm12":135,"juneja999":33,"TayGuangSheng":2,"ae-24":1,"tejaskumar0":8}},{"path":"src/main/java/budgetbuddy/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.storage;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.Budget;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.Expense;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tejaskumar0"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tejaskumar0"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tejaskumar0"},"content":"import java.io.File;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tejaskumar0"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tejaskumar0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tejaskumar0"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tejaskumar0"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tejaskumar0"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tejaskumar0"},"content":" * Handles saving and loading of budget and alert data to/from a local txt file.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tejaskumar0"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tejaskumar0"},"content":"public class StorageManager {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tejaskumar0"},"content":"    private static final String FILE_PATH \u003d \"budget_data.txt\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tejaskumar0"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tejaskumar0"},"content":"     * Saves all budgets and alert amount to a file.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tejaskumar0"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tejaskumar0"},"content":"    public static void save(BudgetManager manager) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tejaskumar0"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tejaskumar0"},"content":"            for (Map.Entry\u003cString, Budget\u003e entry : manager.getBudgets().entrySet()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tejaskumar0"},"content":"                String category \u003d entry.getKey();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tejaskumar0"},"content":"                Budget budget \u003d entry.getValue();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tejaskumar0"},"content":"                writer.write(\"CATEGORY:\" + category + \"|LIMIT:\" + budget.getLimit());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tejaskumar0"},"content":"                writer.newLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tejaskumar0"},"content":"                for (Expense e : budget.getExpenses()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TayGuangSheng"},"content":"                    writer.write(\"EXPENSE:\" + e.getAmount() + \"|\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TayGuangSheng"},"content":"                            + e.getDescription().replace(\"|\", \" \") + \"|\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneja999"},"content":"                            + e.getDateTimeString()); //string type to preserve date time format","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tejaskumar0"},"content":"                    writer.newLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tejaskumar0"},"content":"                }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tejaskumar0"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tejaskumar0"},"content":"            writer.write(\"ALERT:\" + manager.getBudgetAlert());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tejaskumar0"},"content":"            writer.newLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tejaskumar0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tejaskumar0"},"content":"            System.out.println(\"Error saving budget data: \" + e.getMessage());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tejaskumar0"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tejaskumar0"},"content":"     * Loads budgets and alert amount from a file into the BudgetManager.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tejaskumar0"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tejaskumar0"},"content":"    public static void load(BudgetManager manager) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tejaskumar0"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tejaskumar0"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tejaskumar0"},"content":"            return;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tejaskumar0"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tejaskumar0"},"content":"            String line;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tejaskumar0"},"content":"            Budget currentBudget \u003d null;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tejaskumar0"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tejaskumar0"},"content":"                if (line.startsWith(\"CATEGORY:\")) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tejaskumar0"},"content":"                    String[] parts \u003d line.split(\"\\\\|LIMIT:\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tejaskumar0"},"content":"                    String category \u003d parts[0].substring(9);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tejaskumar0"},"content":"                    double limit \u003d Double.parseDouble(parts[1]);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tejaskumar0"},"content":"                    currentBudget \u003d new Budget(category, limit);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tejaskumar0"},"content":"                    manager.getBudgets().put(category, currentBudget);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tejaskumar0"},"content":"                } else if (line.startsWith(\"EXPENSE:\") \u0026\u0026 currentBudget !\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tejaskumar0"},"content":"                    String[] parts \u003d line.substring(8).split(\"\\\\|\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tejaskumar0"},"content":"                    double amount \u003d Double.parseDouble(parts[0]);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tejaskumar0"},"content":"                    String description \u003d parts[1];","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneja999"},"content":"                    String timeStamp \u003d parts[2];","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneja999"},"content":"                    Expense e \u003d new Expense(amount, description, timeStamp, true);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tejaskumar0"},"content":"                    currentBudget.addExpense(e);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tejaskumar0"},"content":"                } else if (line.startsWith(\"ALERT:\")) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tejaskumar0"},"content":"                    double alertAmount \u003d Double.parseDouble(line.substring(6));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tejaskumar0"},"content":"                    manager.setBudgetAlert(alertAmount);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tejaskumar0"},"content":"                }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tejaskumar0"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tejaskumar0"},"content":"        } catch (IOException | NumberFormatException e) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tejaskumar0"},"content":"            System.out.println(\"Error loading budget data: \" + e.getMessage());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tejaskumar0"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tejaskumar0"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tejaskumar0"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tejaskumar0"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"juneja999":3,"TayGuangSheng":7,"tejaskumar0":74}},{"path":"src/main/java/budgetbuddy/ui/InputManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ae-24"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ae-24"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.Command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.InputParser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":" * The InputManager class is responsible for managing and processing user input in the application.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":" * It continuously listens for input and processes commands related to managing budgets and expenses.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":" * The loop continues until the user types the \"bye\" command, which will terminate the input loop.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":" * The class interacts with the BudgetManager and uses the Parser and InputParser to handle different","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":" * input formats and commands. It is also responsible for catching and handling exceptions related to","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":" * invalid user input, ensuring the program does not crash due to errors.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":" * \u003cp\u003eExample usage:\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":" *     InputManager inputManager \u003d new InputManager(budgetManager);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":" *     inputManager.processInputLoop();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":" *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TayGuangSheng"},"content":" * @see Command","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TayGuangSheng"},"content":" * @see InvalidInputException","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TayGuangSheng"},"content":" * @see Parser","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TayGuangSheng"},"content":" * @see InputParser","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"public class InputManager {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"    private final BudgetManager budgetManager;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"manavm12"},"content":"    private final Parser parser;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"    private final InputParser inputParser;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"     * Constructs an InputManager that interacts with the specified BudgetManager.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"     * @param budgetManager The BudgetManager instance to be used for managing budgets and expenses.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"    public InputManager(BudgetManager budgetManager) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"        assert budgetManager !\u003d null : \"BudgetManager cannot be null.\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"        this.budgetManager \u003d budgetManager;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"manavm12"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ae-24"},"content":"        inputParser \u003d new InputParser();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ae-24"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ae-24"},"content":"     * Starts an input processing loop where the user can enter commands.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ae-24"},"content":"     * The loop continues until the user types \"bye\", at which point the program will exit.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ae-24"},"content":"     * \u003cp\u003eDuring the loop, the user input is parsed and processed. The loop handles various","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ae-24"},"content":"     * exceptions, such as invalid input or formatting errors, and provides appropriate feedback","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ae-24"},"content":"     * to the user.\u003c/p\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ae-24"},"content":"     *","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ae-24"},"content":"     * @throws NoSuchElementException if no input is found during the process.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ae-24"},"content":"     * @throws InvalidInputException if the user provides invalid input.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ae-24"},"content":"     * @throws NumberFormatException if a number format is invalid in the input.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ae-24"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ae-24"},"content":"    public void processInputLoop() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ae-24"},"content":"        String line;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ae-24"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ae-24"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ae-24"},"content":"        while (!isExit) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ae-24"},"content":"            try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ae-24"},"content":"                line \u003d in.nextLine().trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ae-24"},"content":"                Command c \u003d inputParser.parseInput(line);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ae-24"},"content":"                c.execute(parser, budgetManager);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ae-24"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ae-24"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ae-24"},"content":"                e.print();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ae-24"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ae-24"},"content":"                System.out.println(\"Invalid input: Please enter a valid number.\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ae-24"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ae-24"},"content":"                System.out.println(\"No input found, exiting...\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ae-24"},"content":"                break;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ae-24"},"content":"            }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ae-24"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ae-24"},"content":"        in.close();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"manavm12":2,"juneja999":1,"TayGuangSheng":10,"ae-24":73}},{"path":"src/main/java/budgetbuddy/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.Budget;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TayGuangSheng"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TayGuangSheng"},"content":" * The Ui class provides methods for displaying messages to the user.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TayGuangSheng"},"content":" *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TayGuangSheng"},"content":" * \u003cp\u003eThis class is responsible for printing messages for various actions such as welcoming the user,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TayGuangSheng"},"content":" * displaying commands, showing expenses, and providing budget summaries.\u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TayGuangSheng"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TayGuangSheng"},"content":"public class Ui {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TayGuangSheng"},"content":"    private static final String SEPARATOR \u003d \"___________________________________________\";  // Separator for formatting","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TayGuangSheng"},"content":"    private Scanner scanner;  // Scanner to capture user input","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints a separator line for better output formatting.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TayGuangSheng"},"content":"    public static void printSeparator() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints a welcome message to the user when the program starts.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TayGuangSheng"},"content":"     * \u003cp\u003eThis method displays an ASCII art logo and a greeting message to introduce the program","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TayGuangSheng"},"content":"     * and prompt the user for input.\u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TayGuangSheng"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TayGuangSheng"},"content":"        // System.out.println(\" _____________________ \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"|                     |\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"|  $$$$       $$$$    |\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"| $    $     $    $   |\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"| $    $     $    $   |\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"|  $$$$       $$$$    |\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"|_____________________|\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Hello! I\u0027m your Budget Buddy\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Input \u0027help\u0027 if you want to know what I can do!!\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints a goodbye message when the program exits.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TayGuangSheng"},"content":"     * \u003cp\u003eThis method shows a farewell message to the user.\u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TayGuangSheng"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Thank you for using Budget Buddy.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints a help message that lists available commands and their formats.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TayGuangSheng"},"content":"     * \u003cp\u003eThis method provides a summary of all commands that the user can enter, along with","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TayGuangSheng"},"content":"     * their respective syntax and example usages.\u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TayGuangSheng"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Available Commands:\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"\\nAdd Expense: add\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneja999"},"content":"        System.out.println(\"Format: add AMOUNT c/ CATEGORY d/ DESCRIPTION t/ TIME \u003cMMM dd yyyy \u0027at\u0027 hh:mm\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneja999"},"content":"        System.out.println(\"Please Note: id dateTime format is incorrect, current system time would be used instead\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneja999"},"content":"        System.out.println(\"Examples: add 15.50 c/Food d/Lunch t/Oct 05 2025 at 12:30, \" +","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneja999"},"content":"                \"\\n\"+\"       add 40 c/Transport d/Taxi Ride t/Oct 10 2025 at 14:35\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"\\nDelete Expense: delete\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Format: delete INDEX\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Examples: delete 2, delete 5\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"\\nView Expenses: list\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Format: list\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Example: list\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"\\nSet Budget: set-budget\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Format: set-budget AMOUNT | set-budget c/CATEGORY AMOUNT\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Examples: set-budget 1000, set-budget c/Food 300\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"\\nCheck Budget: check-budget\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Format: check-budget [c/CATEGORY]\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Examples: check-budget, check-budget c/Groceries\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"\\nSet Budget Alert: alert\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Format: alert AMOUNT\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Examples: alert 500, alert 0\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"\\nView Spending Summary: summary\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Format: summary [c/CATEGORY]\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Examples: summary, summary c/Food\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints an error message when the budget alert amount is invalid.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TayGuangSheng"},"content":"     * \u003cp\u003eThis method alerts the user if the alert amount entered is invalid (e.g., negative number).\u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TayGuangSheng"},"content":"    public static void printInvalidBudgetAlertWarning() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Error: Alert amount must be a non-negative number.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints a message confirming the setting of a budget alert.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TayGuangSheng"},"content":"     * @param alertAmount The alert threshold amount.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TayGuangSheng"},"content":"     * @param isEdit A boolean indicating if this is an edit to an existing alert.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"TayGuangSheng"},"content":"    public static void printSetBudgetAlert(double alertAmount, boolean isEdit) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"TayGuangSheng"},"content":"        if (isEdit) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"TayGuangSheng"},"content":"            System.out.println(\"Alert amount updated to $\" + alertAmount);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"TayGuangSheng"},"content":"        } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"TayGuangSheng"},"content":"            System.out.println(\"Budget alert set at $\" + alertAmount +","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"TayGuangSheng"},"content":"                    \". You will be notified if expenses exceed this amount.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"TayGuangSheng"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints a message confirming the removal of a budget alert.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"TayGuangSheng"},"content":"     * \u003cp\u003eThis method notifies the user that the budget alert has been successfully removed.\u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"TayGuangSheng"},"content":"    public static void printRemoveBudgetAlert() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Budget alert has been removed.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints a warning if the total expenses exceed the budget alert threshold.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"TayGuangSheng"},"content":"     * @param totalExpenses The total expenses incurred by the user.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"TayGuangSheng"},"content":"     * @param alertAmount The threshold set for the budget alert.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"TayGuangSheng"},"content":"    public static void printCheckAlert(double totalExpenses, double alertAmount) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Warning: Your total expenses ($\" + totalExpenses +","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"TayGuangSheng"},"content":"                \") have exceeded the alert limit of $\" + alertAmount);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints a message when no expenses have been recorded yet.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"TayGuangSheng"},"content":"     * \u003cp\u003eThis method informs the user if there are no expenses in the system.\u003c/p\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"TayGuangSheng"},"content":"    public static void printNoExpense() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"No expenses recorded.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints a list of all recorded expenses.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"TayGuangSheng"},"content":"     * @param expenses A list of expenses to be displayed.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"TayGuangSheng"},"content":"    public static void printExpensesList(ArrayList expenses) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Expense List:\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"TayGuangSheng"},"content":"        for (int i \u003d expenses.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"TayGuangSheng"},"content":"            System.out.println((expenses.size() - i) + \". \" + expenses.get(i));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"TayGuangSheng"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints a message confirming the deletion of an expense.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"TayGuangSheng"},"content":"     * @param expenses A list of all expenses.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"TayGuangSheng"},"content":"     * @param index The index of the expense to be deleted.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"TayGuangSheng"},"content":"    public static void printDeleteExpense(ArrayList expenses, int index) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"The following expense has been deleted successfully.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"-\u003e \" + expenses.get(expenses.size() - index));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"TayGuangSheng"},"content":"        expenses.remove(expenses.size() - index);  // Remove the expense from the list","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"TayGuangSheng"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"TayGuangSheng"},"content":"     * Prints a summary of all budgets and their expenses.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"TayGuangSheng"},"content":"     *","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"TayGuangSheng"},"content":"     * @param budgets A map containing budget categories and their associated budgets.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"TayGuangSheng"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"TayGuangSheng"},"content":"    public static void printBudgetSummary(Map\u003cString, Budget\u003e budgets) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"TayGuangSheng"},"content":"        System.out.println(\"Budget Summary:\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"TayGuangSheng"},"content":"        for (String category : budgets.keySet()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"TayGuangSheng"},"content":"            Budget budget \u003d budgets.get(category);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"TayGuangSheng"},"content":"            System.out.println(\"\\nCategory: \" + category);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"TayGuangSheng"},"content":"            System.out.println(\"Total Expenses: $\" + budget.getTotalExpenses());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"TayGuangSheng"},"content":"            System.out.println(\"Spending Limit: $\" + budget.getLimit());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"TayGuangSheng"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"TayGuangSheng"},"content":"        printSeparator();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"TayGuangSheng"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"juneja999":4,"TayGuangSheng":202}},{"path":"src/test/java/budgetbuddy/BudgetBuddyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"class BudgetBuddyTest {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":2,"-":10}},{"path":"src/test/java/budgetbuddy/BudgetManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.Budget;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"manavm12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"manavm12"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"manavm12"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"manavm12"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TayGuangSheng"},"content":"public class BudgetManagerTest {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TayGuangSheng"},"content":"    private BudgetManager budgetManager;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TayGuangSheng"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TayGuangSheng"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TayGuangSheng"},"content":"        // Set up a new BudgetManager before each test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TayGuangSheng"},"content":"        budgetManager \u003d new BudgetManager();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TayGuangSheng"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TayGuangSheng"},"content":"    public void testSetMonthlyBudget_validAmount_budgetSet() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"manavm12"},"content":"        // Set a Monthly budget of 1000","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"manavm12"},"content":"        budgetManager.setBudget(\"\", 1000);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TayGuangSheng"},"content":"        // Assert the monthly budget is set to 1000","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TayGuangSheng"},"content":"        Budget monthlyBudget \u003d budgetManager.getBudgets().get(\"Monthly\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"manavm12"},"content":"        assertEquals(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"manavm12"},"content":"                1000,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"manavm12"},"content":"                monthlyBudget.getLimit(),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"manavm12"},"content":"                \"Monthly budget should be set to 1000\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"manavm12"},"content":"        );","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TayGuangSheng"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TayGuangSheng"},"content":"    public void testSetCategorySpecificBudget_validAmount_budgetSet() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TayGuangSheng"},"content":"        // Set a budget of 300 for the \"Food\" category","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"manavm12"},"content":"        budgetManager.setBudget(\"Food\", 300);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TayGuangSheng"},"content":"        // Assert the budget for the \"Food\" category is set to 300","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TayGuangSheng"},"content":"        Budget foodBudget \u003d budgetManager.getBudgets().get(\"Food\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"manavm12"},"content":"        assertEquals(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"manavm12"},"content":"                300,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"manavm12"},"content":"                foodBudget.getLimit(),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"manavm12"},"content":"                \"Food category budget should be set to 300\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"manavm12"},"content":"        );","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TayGuangSheng"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"manavm12"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"manavm12"},"content":"    public void testDeleteExpense_validIndex_expenseDeleted() throws InvalidInputException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"manavm12"},"content":"        // Add expenses to the Monthly budget","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneja999"},"content":"        budgetManager.addExpenseToBudget(\"Monthly\", 50, \"Lunch\",\"Oct 05 2025 at 12:30\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneja999"},"content":"        budgetManager.addExpenseToBudget(\"Monthly\", 20, \"Coffee\", \"Oct 05 2025 at 12:30\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"manavm12"},"content":"        // Ensure 2 expenses exist before deletion","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"manavm12"},"content":"        Budget monthlyBudget \u003d budgetManager.getBudgets().get(\"Monthly\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"manavm12"},"content":"        assertEquals(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"manavm12"},"content":"                70,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"manavm12"},"content":"                monthlyBudget.getTotalExpenses(),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"manavm12"},"content":"                \"The total expenses should be 70\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"manavm12"},"content":"        );","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"manavm12"},"content":"        // Delete the most recent expense (Coffee at index 1)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"manavm12"},"content":"        budgetManager.deleteExpense(1);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"manavm12"},"content":"        // Ensure 1 expense remains after deletion","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"manavm12"},"content":"        assertEquals(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"manavm12"},"content":"                50,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"manavm12"},"content":"                monthlyBudget.getTotalExpenses(),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"manavm12"},"content":"                \"The total expenses should be 20\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"manavm12"},"content":"        );","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"manavm12"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"manavm12"},"content":"    public void testDeleteExpense_invalidIndex_throwsException() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"manavm12"},"content":"        // Ensure Monthly budget exists but has no expenses","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"manavm12"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"manavm12"},"content":"            budgetManager.deleteExpense(0); // Invalid index","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"manavm12"},"content":"        }, \"Should throw InvalidInputException when deleting a non-existent expense\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"manavm12"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"manavm12"},"content":"    public void testCreateMonthlyBudget_defaultExists() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"manavm12"},"content":"        Budget monthlyBudget \u003d budgetManager.getBudgets().get(\"Monthly\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"manavm12"},"content":"        assertNotNull(monthlyBudget, \"Monthly budget should exist by default\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"manavm12"},"content":"        assertEquals(0,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"manavm12"},"content":"                monthlyBudget.getLimit(),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"manavm12"},"content":"                \"Default monthly budget should have a limit of 0\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"manavm12"},"content":"        );","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"manavm12"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"manavm12"},"content":"    public void testAddExpenseToNewCategory_budgetDoesNotExist() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juneja999"},"content":"        budgetManager.addExpenseToBudget(\"Travel\", 50, \"Bus fare\",","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juneja999"},"content":"                \"Oct 05 2025 at 12:30\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"manavm12"},"content":"        assertNull(","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"manavm12"},"content":"                budgetManager.getBudgets().get(\"Travel\"),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"manavm12"},"content":"                \"Budget category \u0027Travel\u0027 should not be created automatically\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"manavm12"},"content":"        );","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"manavm12"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"manavm12"},"content":"    public void testAddExpenseToExistingCategory() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"manavm12"},"content":"        budgetManager.setBudget(\"Food\", 500);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juneja999"},"content":"        budgetManager.addExpenseToBudget(\"Food\", 50, \"Lunch\",\"Oct 05 2025 at 12:30\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"manavm12"},"content":"        Budget foodBudget \u003d budgetManager.getBudgets().get(\"Food\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"manavm12"},"content":"        assertNotNull(foodBudget, \"Food budget should exist\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"manavm12"},"content":"        assertEquals(50,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"manavm12"},"content":"                foodBudget.getTotalExpenses(),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"manavm12"},"content":"                \"Food budget total expenses should be 50\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"manavm12"},"content":"        );","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"manavm12"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"manavm12"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"juneja999"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"juneja999"},"content":"    public void testAddExpenseToMonthlyBudget() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"juneja999"},"content":"        budgetManager.addExpenseToBudget(\"Monthly\", 100, \"Groceries\",\"Oct 05 2025 at 12:30\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"juneja999"},"content":"        Budget monthlyBudget \u003d budgetManager.getBudgets().get(\"Monthly\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"juneja999"},"content":"        assertEquals(100,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"juneja999"},"content":"                monthlyBudget.getTotalExpenses(),","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"juneja999"},"content":"                \"Monthly budget total expenses should be 100\"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"juneja999"},"content":"        );","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"juneja999"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"TayGuangSheng"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"manavm12":82,"juneja999":17,"TayGuangSheng":33}},{"path":"src/test/java/budgetbuddy/BudgetSummaryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneja999"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetSummary;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneja999"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneja999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneja999"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneja999"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneja999"},"content":"public class BudgetSummaryTest {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneja999"},"content":"    private BudgetSummary budgetSummary;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneja999"},"content":"    private BudgetManager budgetManager;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneja999"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneja999"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneja999"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneja999"},"content":"        // Redirect system output for testing","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneja999"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneja999"},"content":"        // Set up a new BudgetManager and BudgetSummary before each test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneja999"},"content":"        budgetManager \u003d new BudgetManager();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneja999"},"content":"        budgetSummary \u003d new BudgetSummary(budgetManager);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneja999"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneja999"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneja999"},"content":"    public void testSummariseBudget_noBudgets_printsEmptySummary() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneja999"},"content":"        budgetSummary.summariseBudget();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneja999"},"content":"        String output \u003d outputStream.toString().trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneja999"},"content":"        assertTrue(output.contains(\"Budget Summary:\"), \"Output should contain \u0027Budget Summary:\u0027\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneja999"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneja999"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneja999"},"content":"    public void testSummariseBudget_withBudgets_correctSummaryPrinted() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneja999"},"content":"        // Set up budgets","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"manavm12"},"content":"        budgetManager.setBudget(\"\", 2000);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"manavm12"},"content":"        budgetManager.setBudget(\"Food\", 500);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"manavm12"},"content":"        budgetManager.setBudget(\"Transport\", 300);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneja999"},"content":"        // Call the method","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneja999"},"content":"        budgetSummary.summariseBudget();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneja999"},"content":"        String output \u003d outputStream.toString().trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneja999"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneja999"},"content":"        // Assert the summary contains expected values","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneja999"},"content":"        assertTrue(output.contains(\"Budget Summary:\"), \"Output should contain \u0027Budget Summary:\u0027\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneja999"},"content":"        assertTrue(output.contains(\"Category: Monthly\"), \"Output should contain \u0027Category: Monthly\u0027\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneja999"},"content":"        assertTrue(output.contains(\"Spending Limit: $2000\"), \"Output should show the monthly\" +","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneja999"},"content":"                \" budget limit of 2000\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneja999"},"content":"        assertTrue(output.contains(\"Category: Food\"), \"Output should contain \u0027Category: Food\u0027\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneja999"},"content":"        assertTrue(output.contains(\"Spending Limit: $500\"), \"Output should show the Food category \" +","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneja999"},"content":"                \"budget limit of 500\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneja999"},"content":"        assertTrue(output.contains(\"Category: Transport\"), \"Output should contain \u0027Category: Transport\u0027\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneja999"},"content":"        assertTrue(output.contains(\"Spending Limit: $300\"), \"Output should show the Transport category \" +","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneja999"},"content":"                \"budget limit of 300\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneja999"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneja999"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"manavm12":3,"juneja999":53,"TayGuangSheng":3}},{"path":"src/test/java/budgetbuddy/ExpenseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ae-24"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ae-24"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ae-24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.Expense;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ae-24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ae-24"},"content":"public class ExpenseTest {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"    public void testValidExpenseCreation() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"        double amount \u003d 100.50;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"        String description \u003d \"Groceries\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"        Expense expense \u003d new Expense(amount, description);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TayGuangSheng"},"content":"        assertEquals(amount, expense.getAmount(), \"Amount should be 100.50\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TayGuangSheng"},"content":"        assertEquals(description, expense.getDescription(), \"Description should be \u0027Groceries\u0027\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"    public void addExpense_negativeAmount_exceptionThrown() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"        double amount \u003d -50.00;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"        String description \u003d \"Transport\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"        IllegalArgumentException exception \u003d assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"                () -\u003e new Expense(amount, description));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"        assertEquals(\"Amount cannot be negative.\", exception.getMessage());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"    public void addExpense_nullDescription_exceptionThrown() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"        double amount \u003d 100.00;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"        String description \u003d null;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"        IllegalArgumentException exception \u003d assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"                () -\u003e new Expense(amount, description));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"        assertEquals(\"Description cannot be empty.\", exception.getMessage());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"    public void testToString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"        double amount \u003d 250.00;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"        String description \u003d \"Dinner\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ae-24"},"content":"        Expense expense \u003d new Expense(amount, description);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ae-24"},"content":"        String result \u003d expense.toString();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ae-24"},"content":"        assertTrue(result.startsWith(\"$250.00 spent on\"),","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ae-24"},"content":"                \"The string should start with formatted amount and \u0027spent on\u0027\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ae-24"},"content":"        assertTrue(result.contains(\"Dinner\"), \"The string should contain the description\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TayGuangSheng"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":5,"ae-24":52}},{"path":"src/test/java/budgetbuddy/InputParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.InputParser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ae-24"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ae-24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.AddExpenseCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.AlertCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.Command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.SummaryCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.ListCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.DeleteCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.SetBudgetCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.command.CheckBudgetCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"public class InputParserTest {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"    private InputParser inputParser;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"        inputParser \u003d new InputParser();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"    public void testParseInput_validCommands() throws InvalidInputException, NoSuchElementException {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"        Command addCommand \u003d inputParser.parseInput(\"add 50 c/ food d/ lunch\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"        assertTrue(addCommand instanceof AddExpenseCommand, \"Expected AddExpenseCommand\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"        Command alertCommand \u003d inputParser.parseInput(\"alert 100\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"        assertTrue(alertCommand instanceof AlertCommand, \"Expected AlertCommand\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"        Command summaryCommand \u003d inputParser.parseInput(\"summary\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"        assertTrue(summaryCommand instanceof SummaryCommand, \"Expected SummaryCommand\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"        Command listCommand \u003d inputParser.parseInput(\"list\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"        assertTrue(listCommand instanceof ListCommand, \"Expected ListCommand\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"        Command deleteCommand \u003d inputParser.parseInput(\"delete 1\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"        assertTrue(deleteCommand instanceof DeleteCommand, \"Expected DeleteCommand\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ae-24"},"content":"        Command setBudgetCommand \u003d inputParser.parseInput(\"set-budget c/ food 100\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ae-24"},"content":"        assertTrue(setBudgetCommand instanceof SetBudgetCommand, \"Expected SetBudgetCommand\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ae-24"},"content":"        Command checkBudgetCommand \u003d inputParser.parseInput(\"check-budget\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ae-24"},"content":"        assertTrue(checkBudgetCommand instanceof CheckBudgetCommand, \"Expected CheckBudgetCommand\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ae-24"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ae-24"},"content":"    public void testParseInput_invalidCommand() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ae-24"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ae-24"},"content":"            inputParser.parseInput(\"invalid-command\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ae-24"},"content":"        }, \"Expected InvalidInputException to be thrown\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":11,"ae-24":51}},{"path":"src/test/java/budgetbuddy/command/AddExpenseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ae-24"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ae-24"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ae-24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.Budget;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.Expense;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":"import java.util.List;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"public class AddExpenseCommandTest {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"    private BudgetManager budgetManager;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"    private Parser parser;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"    private AddExpenseCommand addExpenseCommand;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"        budgetManager \u003d new BudgetManager();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"    public void testExecute_addExpenseSuccessfully() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"        String description \u003d \"add 50 c/ d/ lunch\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"        addExpenseCommand \u003d new AddExpenseCommand(description);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"        try {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"            addExpenseCommand.execute(parser, budgetManager);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"            Map\u003cString, Budget\u003e budgets \u003d budgetManager.getBudgets();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"            Budget monthlyBudget \u003d budgets.get(\"Monthly\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"            List\u003cExpense\u003e expenses \u003d monthlyBudget.getExpenses();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"            assertEquals(1, expenses.size(), \"Expense should be added to the monthly budget\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"            Expense addedExpense \u003d expenses.get(0);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"            assertEquals(50.0, addedExpense.getAmount(), \"Expense amount should be 50\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"            assertEquals(\"lunch\", addedExpense.getDescription(), \"Expense description should be \" +","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"                    \"\u0027lunch\u0027\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ae-24"},"content":"            System.out.println(\"Invalid input\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ae-24"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":6,"ae-24":43}},{"path":"src/test/java/budgetbuddy/command/AlertCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ae-24"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ae-24"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":"public class AlertCommandTest {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"    private BudgetManager budgetManager;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"    private Parser parser;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"        budgetManager \u003d new BudgetManager();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"    public void testExecute_validAlert_setsBudgetAlert() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"        try {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TayGuangSheng"},"content":"            AlertCommand alertCommand \u003d new AlertCommand(\"alert 100\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"            alertCommand.execute(parser, budgetManager);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"            assertEquals(100.0, budgetManager.getBudgetAlert().getAlertAmount(), \"Budget alert \" +","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"                    \"should be set to 100\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"            fail(\"Unexpected InvalidInputException: \" + e.getMessage());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":5,"ae-24":31}},{"path":"src/test/java/budgetbuddy/command/CheckBudgetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TayGuangSheng"},"content":"package budgetbuddy.command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ae-24"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ae-24"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ae-24"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ae-24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.model.BudgetManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TayGuangSheng"},"content":"import budgetbuddy.exception.InvalidInputException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ae-24"},"content":"public class CheckBudgetCommandTest {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ae-24"},"content":"    private BudgetManager budgetManager;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ae-24"},"content":"    private Parser parser;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ae-24"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ae-24"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ae-24"},"content":"        budgetManager \u003d new BudgetManager();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ae-24"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ae-24"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ae-24"},"content":"    public void testExecute_validCategory() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ae-24"},"content":"        try {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ae-24"},"content":"            budgetManager.setBudget(\"Food\", 100.0);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ae-24"},"content":"            CheckBudgetCommand command \u003d new CheckBudgetCommand(\"check-budget c/Monthly\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ae-24"},"content":"            command.execute(parser, budgetManager);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ae-24"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ae-24"},"content":"            fail(\"Unexpected InvalidInputException: \" + e.getMessage());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ae-24"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ae-24"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ae-24"},"content":"    public void testExecute_invalidCategory_throwsException() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ae-24"},"content":"        CheckBudgetCommand command \u003d new CheckBudgetCommand(\"check-budget UnknownCategory\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ae-24"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ae-24"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ae-24"},"content":"            command.execute(parser, budgetManager);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ae-24"},"content":"        }, \"Expected InvalidInputException for invalid category\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ae-24"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ae-24"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"TayGuangSheng":4,"ae-24":40}}]
