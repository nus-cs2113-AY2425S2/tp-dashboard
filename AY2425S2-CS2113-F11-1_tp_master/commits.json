{"authorDailyContributionsMap":{"amirhusaini06":[{"date":"2025-03-07","commitResults":[{"hash":"f3d256e2db01b27731b689a741d8fd3aca61448b","isMergeCommit":false,"messageTitle":"Update AboutUs.md","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":4,"deletions":7}}},{"hash":"89bb59671702d259a69fcf3d9472eb5085e16199","isMergeCommit":false,"messageTitle":"Update AboutUs.md too","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":1,"deletions":0}}},{"hash":"8e3379951a99f195c4554884f93c02c8e016d61d","isMergeCommit":false,"messageTitle":"Revert \"Update AboutUs.md too\"","messageBody":"This reverts commit 89bb59671702d259a69fcf3d9472eb5085e16199.\n","fileTypesAndContributionMap":{"docs":{"insertions":0,"deletions":1}}},{"hash":"303ea10e1ad48035b55b16d2160c4886898297fc","isMergeCommit":false,"messageTitle":"Update AboutUs.md for amir","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":1,"deletions":1}}},{"hash":"7b68d01bd43100885162a4490d2c6299f0768ef6","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"# Conflicts:\n#\tdocs/AboutUs.md\n","fileTypesAndContributionMap":{}},{"hash":"07bf8591109c3b89450356fb6c8f5076f4b53359","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into amirhusaini06-Update-AboutUs","messageBody":"# Conflicts:\n#\tdocs/AboutUs.md\n","fileTypesAndContributionMap":{}},{"hash":"4f2c044f15303c1e8672366605084561435b4979","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"# Conflicts:\n#\tdocs/AboutUs.md\n","fileTypesAndContributionMap":{}},{"hash":"18be38244fe9f5351711af4096fe4ea020df0d5e","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into amirhusaini06-Update-AboutUs","messageBody":"# Conflicts:\n#\tdocs/AboutUs.md\n","fileTypesAndContributionMap":{}}]},{"date":"2025-03-12","commitResults":[{"hash":"9e8637b9a706b7a15bb528670656ed7b62099881","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"75e86a45c79212ce8989bdd1760fee5190d1721f","isMergeCommit":false,"messageTitle":"Implement core BusynessManager class","messageBody":"- Added login and first-time business setup functionality\n- Integrated InventoryManager, SalesManager, RevenueCalculator, and SearchManager\n- Implemented command processing via CommandParser\n- Enabled interactive CLI loop for user commands\n","fileTypesAndContributionMap":{"functional-code":{"insertions":82,"deletions":16}}},{"hash":"289e781c45141fc01b6a65a718b476eca37b49c4","isMergeCommit":false,"messageTitle":"Add package declaration to BusynessManager.java","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":0}}}]},{"date":"2025-03-16","commitResults":[{"hash":"4dc71fdaaa3582fff36baad8ccd2abffd30a1ff9","isMergeCommit":false,"messageTitle":"Edited standalone BusynessManager class","messageBody":"- Temporarily commented out references to missing classes (CommandParser, InventoryManager, etc.)\n","fileTypesAndContributionMap":{"functional-code":{"insertions":6,"deletions":2}}},{"hash":"dccc9a7f295c4f3f05e8980ef2478632e00dfc38","isMergeCommit":false,"messageTitle":"fix: Resolve Checkstyle issues in BusynessManager.java","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":4,"deletions":3}}},{"hash":"6ca7a57ae2c6ce2bc0e305e1e4c7ed50cd7b602f","isMergeCommit":false,"messageTitle":"fix: Handle Scanner input errors and remove dos2unix dependency","messageBody":"Fixed NoSuchElementException by checking scanner.hasNextLine() before calling nextLine()\nPrevented crashes in non-interactive environments by handling missing input gracefully\nRemoved dos2unix dependency from runtest.sh to avoid failures in CI/CD pipelines\nEnsured expected test output matches actual program behavior\nImproved overall reliability of input handling and testing automation\n","fileTypesAndContributionMap":{"functional-code":{"insertions":37,"deletions":17},"other":{"insertions":1,"deletions":1}}},{"hash":"40eadb977e9fd594a99eef34e5f9dae47d7457ba","isMergeCommit":false,"messageTitle":"fix: resolve Scanner issues in BusynessManager run and start methods","messageBody":"- Fixed issues with Scanner in `BusynessManager.java` that were causing unexpected behavior.\n- Updated `EXPECTED.txt` and `input.txt` to align with actual input and expected output.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":3,"deletions":4}}},{"hash":"349f9ae9c99c3a48c67e8ac92fa78053b5867c55","isMergeCommit":false,"messageTitle":"fix: Revert changes on runtest.sh","messageBody":"","fileTypesAndContributionMap":{"other":{"insertions":1,"deletions":1}}}]},{"date":"2025-03-17","commitResults":[{"hash":"1a27845a8eede6c32686cd2cbe21d852307cf960","isMergeCommit":false,"messageTitle":"fix: Resolve issues with Busynessmanager.java and EXPECTED.TXT","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":6,"deletions":6}}},{"hash":"03a791e5ad5e86c94953395e04314281f184b4d6","isMergeCommit":false,"messageTitle":"fix: Resolve issues with BusynessManager.java","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1}}},{"hash":"00cbedd0a5596bff68ef596bacde85cacadf45b3","isMergeCommit":false,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":314,"deletions":0},"other":{"insertions":0,"deletions":20},"test-code":{"insertions":72,"deletions":0}}}]},{"date":"2025-03-18","commitResults":[{"hash":"7ddb0333213a0e07270e3052fa454735170464f3","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"608e8990fc7fc311fc5ba10949ab81514b6d6181","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into feature-BusynessManager","messageBody":"# Conflicts:\n#\tsrc/main/java/busynessmanager/BusynessManager.java\n","fileTypesAndContributionMap":{}},{"hash":"1f66a537e19f1b86a50f68263f745e66e6a4d38c","isMergeCommit":false,"messageTitle":"Revert \"Merge branch \u0027master\u0027 into feature-BusynessManager\"","messageBody":"This reverts commit 608e8990fc7fc311fc5ba10949ab81514b6d6181, reversing\nchanges made to 00cbedd0a5596bff68ef596bacde85cacadf45b3.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":3,"deletions":197}}},{"hash":"b6781b2961109ea61cbd7cc0ed44260cb6c9f8d4","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"e0cbb13787c4e7cbc6646ea515b5b49c71a5b40c","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into feature-BusynessManager","messageBody":"# Conflicts:\n#\tsrc/main/java/busynessmanager/BusynessManager.java\n#\tsrc/main/java/busynessmanager/InventoryManager.java\n#\tsrc/main/java/busynessmanager/Product.java\n#\tsrc/main/java/busynessmanager/SalesManager.java\n#\ttext-ui-test/EXPECTED.TXT\n","fileTypesAndContributionMap":{}},{"hash":"4007ffc97859e8e0797f7124ddbf6411a1369fa9","isMergeCommit":false,"messageTitle":"Update BusynessManager.java to import CommandParser and integrate other classes","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":7,"deletions":6}}}]},{"date":"2025-03-19","commitResults":[{"hash":"73afc87dc345e661f2f24eac66dc348be01a3af2","isMergeCommit":false,"messageTitle":"docs: add User Guide to README.md","messageBody":"- Added a detailed User Guide outlining the startup process, features, and command usage.\n- Included command syntax, descriptions, and example inputs/outputs for clarity.\n- Improved formatting for readability and ease of reference.\n\nThis update enhances documentation for new users and developers.\n","fileTypesAndContributionMap":{"docs":{"insertions":149,"deletions":47}}},{"hash":"25b1494547b71146d10f317e909608b6e9fe0fed","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"9b3506f89f2b1493546c3ba25c836c64fc37cc7f","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into feature-Update-README","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"58abf6b8bb0be7ddfc6e6e3be6cf6698fc324eda","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into feature-BusynessManager","messageBody":"# Conflicts:\n#\tsrc/main/java/busynessmanager/BusynessManager.java\n#\tsrc/main/java/busynessmanager/managers/InventoryManager.java\n#\tsrc/main/java/busynessmanager/managers/SalesManager.java\n#\tsrc/main/java/busynessmanager/product/Product.java\n","fileTypesAndContributionMap":{}},{"hash":"9522a025c40297a9596a483774e7f79e2d8042fc","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"158b6432aefa2f29aa777da553e9bab6c152e319","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"58ac33a17f8e765b7732512229d9b4aeaa8870c4","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into feature-Update-README","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"52333e2ebcf87d8f910ed56b16c5c9c018390c6f","isMergeCommit":false,"messageTitle":"fix: prevent duplicate product names and ensure alphabetical order in product list","messageBody":"- Updated `addProduct` method to check for existing product names before adding a new product to prevent duplicates.\n- Modified `printProducts` method to sort products alphabetically by product ID before printing.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":13,"deletions":16}}}]},{"date":"2025-03-20","commitResults":[{"hash":"60d225f9fb31faa60ea5f5a65bf932bdacd91c6e","isMergeCommit":false,"messageTitle":"fix: erroneous imports in InventoryManager","messageBody":"- deleted busynessmanager.UI_Constants.Constants.IM_ID_EXISTS_FORMAT and replaced with busynessmanager.UI_Constants.Constants.IM_NAME_EXISTS_FORMAT in Constants.java\n- updated UI print lines in InventoryManager.java\n","fileTypesAndContributionMap":{"functional-code":{"insertions":11,"deletions":7}}},{"hash":"17306dc624ce96a3bf0fe1e77da59d2775992434","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"de6e4fc731240e0f827c35c76f40155986912695","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into fix-InventoryManager-bug","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"4e60f5b405b4828e7e7301fa6cdfbc0eaccb8d12","isMergeCommit":false,"messageTitle":"feat: Add JavaDoc comments to BusynessManager, InventoryManager, and Product classes","messageBody":"- Added JavaDoc comments to BusynessManager, InventoryManager, and Product classes\n  to improve code readability and maintainability.\n- Documented class descriptions, method functionalities, parameters, and return values.\n- Included previously commented-out print statements in JavaDoc for reference.\n\nThis enhances documentation and makes the codebase easier to understand for future development.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":150,"deletions":10}}},{"hash":"ce154aa182ed9fe4f624d19c91d69c23c09c6525","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2e98462abf60996cd15ea71df0f23d165f29ffe4","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Add-JavaDoc","messageBody":"","fileTypesAndContributionMap":{}}]}],"b1inmeister":[{"date":"2025-02-21","commitResults":[{"hash":"19f151f545961a3c993ada4f176ece4beb7d46df","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":1,"deletions":1}}}]},{"date":"2025-03-07","commitResults":[{"hash":"21cb26a399e10fe72f5ebb5253e482f305556f60","isMergeCommit":false,"messageTitle":"Add personal particulars to project","messageBody":"Add name and GitHub ID to AboutUs.md\n","fileTypesAndContributionMap":{"docs":{"insertions":3,"deletions":7}}},{"hash":"daba6a67fbc84b7d28cad7171b7a284747868e1a","isMergeCommit":false,"messageTitle":"Modify particulars in AboutUs.md","messageBody":"Rename name portion to full name\n","fileTypesAndContributionMap":{"docs":{"insertions":3,"deletions":3}}},{"hash":"eec6ecb4596c4bdb18f59da539f3f8705a793666","isMergeCommit":true,"messageTitle":"Merge pull request #2 from b1inmeister/b1inmeister---AboutUs","messageBody":"Add personal particulars to project","fileTypesAndContributionMap":{}},{"hash":"3b8c50f732ed7c9119a3595227d778194e6576a8","isMergeCommit":true,"messageTitle":"Merge pull request #4 from LEESY02/LEESY02-AboutUs","messageBody":"Added Seung Yoon","fileTypesAndContributionMap":{}},{"hash":"d4e6c6b40391b6e4b26bc9edabca6e5d74328ed3","isMergeCommit":true,"messageTitle":"Merge pull request #6 from himethcodes/himethcodes-AboutUs","messageBody":"Updated AboutUs.md - Added my details","fileTypesAndContributionMap":{}},{"hash":"97acb993ffca9d8867e0e2efeb446bcf0e299c7a","isMergeCommit":true,"messageTitle":"Merge pull request #7 from amirhusaini06/amirhusaini06-Update-AboutUs","messageBody":"Amirhusaini06 update about us","fileTypesAndContributionMap":{}},{"hash":"7d0f61c4a0d977e9b307846d1bd7bb2b806f385f","isMergeCommit":false,"messageTitle":"Edit AboutUs.md","messageBody":"Fix missing links\nAdd pictures of members\nAdd portfolio .md files\n","fileTypesAndContributionMap":{"docs":{"insertions":24,"deletions":6}}},{"hash":"f90da9348e179777baaf46798e49b8bf01e3a68f","isMergeCommit":true,"messageTitle":"Merge pull request #8 from b1inmeister/AboutUsEdits","messageBody":"Edit AboutUs.md","fileTypesAndContributionMap":{}},{"hash":"5759f4442af8f2bbe9ccb7443db54b7d1239f8a9","isMergeCommit":false,"messageTitle":"Edit AboutUs.md","messageBody":"Fix pictures of members\nFix paths for portfolio files\n","fileTypesAndContributionMap":{"docs":{"insertions":4,"deletions":4}}},{"hash":"754f7c000f135ee582dc1297a4bbfc8419359ca4","isMergeCommit":true,"messageTitle":"Merge pull request #9 from b1inmeister/AboutUsEdits","messageBody":"Edit AboutUs.md","fileTypesAndContributionMap":{}}]},{"date":"2025-03-09","commitResults":[{"hash":"e0df10c3302c8de64c69ef9d9bc40fc5dd16a805","isMergeCommit":true,"messageTitle":"Merge pull request #5 from rozaliesmit/rozaliesmit-AboutUs","messageBody":"rozaliesmit AboutUs","fileTypesAndContributionMap":{}},{"hash":"c0cce12cc21cfb7c0ec1e24263a84867e0def7e5","isMergeCommit":false,"messageTitle":"Rename files and bug fixes","messageBody":"Rename main class to BusynessManager\nRename root package to BusynessManager\nCorrect README.md and AboutUs.md\n","fileTypesAndContributionMap":{"other":{"insertions":3,"deletions":3},"docs":{"insertions":8,"deletions":2}}},{"hash":"d421b7e598cb6084adc73be48f1e331f3e49e3f6","isMergeCommit":false,"messageTitle":"Rename DukeTest to BusynessManagerTest","messageBody":"","fileTypesAndContributionMap":{"other":{"insertions":1,"deletions":1}}},{"hash":"b37c23199dd94eafffe7e07b232c5bcb520fcc7c","isMergeCommit":false,"messageTitle":"Edit build.gradle to updated package and class name","messageBody":"","fileTypesAndContributionMap":{"other":{"insertions":1,"deletions":1}}},{"hash":"adc5f5b9dcfc3455bc6aa90d7b1aa7fec06508fc","isMergeCommit":true,"messageTitle":"Merge pull request #22 from b1inmeister/File-Renaming","messageBody":"Rename files and bug fixes","fileTypesAndContributionMap":{}}]},{"date":"2025-03-15","commitResults":[{"hash":"4bcbbcaccfc58296b2afb7fce17cc0e99d89f0e2","isMergeCommit":false,"messageTitle":"Add CommandParser class + corresponding test class","messageBody":"We need a CommandParser class to interpret the command and run the\nright methods after that.\n\nHaving a class with all these methods together allow for more\norganized code and easier debugging, as all the code relevant to\nthis functionality is in the same class.\n\nLet\u0027s create a CommandParser class that consolidates all the\nmethods required for interpreting the incoming commands and running\nthe appropriate methods from other classes.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":43,"deletions":0},"test-code":{"insertions":10,"deletions":0}}},{"hash":"d25c863b47d423b4b36a161a5922d38765f5553d","isMergeCommit":false,"messageTitle":"Troubleshoot Gradle check","messageBody":"The Gradle check is not passing.\n\nThe Javadoc comment are dangling, as the methods have been\ncommented out. This is because the other classes required in the\nCommandParser class have not been implemented yet.\n\nLet\u0027s change the Javadoc comment to a standard comment temporarily,\nand check if Gradle accepts it.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":4,"deletions":2}}}]},{"date":"2025-03-16","commitResults":[{"hash":"ecbdcbddb0394a99114218475f48911ce6b5fbff","isMergeCommit":false,"messageTitle":"Implement user input interpretation","messageBody":"We need a way to take the user input and convert it into\ninformation that the parser can understand.\n\nThese methods will help to isolate the command portion of the user\ninput and allow for easier calling of the appropriate commands\nlater.\n\nLet\u0027s,\n* create a few methods to split up the user input into the\ncommand portion and the information portion.\n* EXTRA: remove irrelevant files that were mistakenly committed\nand merged.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":55,"deletions":0},"other":{"insertions":0,"deletions":20},"test-code":{"insertions":50,"deletions":0}}},{"hash":"da36233e427ac8c930c27e84cc219227247edc1a","isMergeCommit":false,"messageTitle":"Implement command calling from other classes","messageBody":"The methods in the other system classes cannot be called from the\nmain BusynessManager class.\n\nWe need to connect the BusynessManager class to the methods in\nother system classes for BusynessManager to perform its tasks and\nfunctions.\n\nLet\u0027s create some methods in the parser to take in the command\nfrom the user input, decide on what the command is, and run the\nappropriate method from the other system classes.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":221,"deletions":0},"test-code":{"insertions":35,"deletions":0}}},{"hash":"c4e3ff52262d6af0081eac8793542b2173ee8046","isMergeCommit":false,"messageTitle":"Troubleshoot Gradle check","messageBody":"The Gradle check is not passing.\n\nThe import statement was mistakenly added to the code.\n\nLet\u0027s remove the import statement, and check if Gradle accepts\nit.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":0,"deletions":2}}},{"hash":"c1d17b35f97656a4f6a416081e2bd014c1e0be42","isMergeCommit":false,"messageTitle":"Add custom exceptions","messageBody":"The parser may perform unexpectedly when given the wrong inputs.\nWhen an error occurs, the user may not be able to understand\nwhat went wrong if we use the existing exceptions.\n\nAdding custom exceptions will allow users to immediately\nunderstand the mistake they made when providing input. Thus, they\nwill be able to correct their mistakes more quickly, instead\nof trying to find out what actually went wrong.\n\nLet\u0027s introduce some custom exceptions such as:\n* InvalidString for when the user inputs an invalid String.\n* InvalidCommand for when the command format is not followed.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":32,"deletions":0}}},{"hash":"ff1eacb8aeaa321aafb57fd93bdf6884c82285dd","isMergeCommit":true,"messageTitle":"Create CommandParser class and corresponding test class","messageBody":"Add CommandParser class + corresponding test class\n\nWe need a CommandParser class to interpret the command and run the right methods after that.\n\nHaving a class with all these methods together allow for more organized code and easier debugging, as all the code relevant to this functionality is in the same class.\n\nLet\u0027s create a CommandParser class that consolidates all the methods required for interpreting the incoming commands and running the appropriate methods from other classes.","fileTypesAndContributionMap":{}},{"hash":"d61edf916b1034e90d65d6daa93175a0156625a7","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Parser-Issue#31","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"bb8afb0f719eaf1b473e16b31d2f84f1c6178374","isMergeCommit":true,"messageTitle":"Implement command interpretation","messageBody":"Implement user input interpretation\n\nWe need a way to take the user input and convert it into information that the parser can understand.\n\nThese methods will help to isolate the command portion of the user input and allow for easier calling of the appropriate commands later.\n\nLet\u0027s,\n* create a few methods to split up the user input into the command portion and the information portion.\n* EXTRA: remove irrelevant files that were mistakenly committed and merged.","fileTypesAndContributionMap":{}},{"hash":"522434e51fb07a737b320d9fc42ceb4082d039d8","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Parser-Issue#32","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"324524fd1e00ef33061331702d70b7900dfae342","isMergeCommit":true,"messageTitle":"Add proper command calling from other classes","messageBody":"Implement command calling from other classes\n\nThe methods in the other system classes cannot be called from the main BusynessManager class.\n\nWe need to connect the BusynessManager class to the methods in other system classes for BusynessManager to perform its tasks and functions.\n\nLet\u0027s create some methods in the parser to take in the command from the user input, decide on what the command is, and run the appropriate method from the other system classes.","fileTypesAndContributionMap":{}},{"hash":"1525333eed869c06ea071794ff8d09115c67b319","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Parser-Issue#33","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"d51b563a74543b551812fc9219b54503f997c4d0","isMergeCommit":true,"messageTitle":"Incorporate exceptions","messageBody":"Add custom exceptions\n\nThe parser may perform unexpectedly when given the wrong inputs. When an error occurs, the user may not be able to understand what went wrong if we use the existing exceptions.\n\nAdding custom exceptions will allow users to immediately understand the mistake they made when providing input. Thus, they will be able to correct their mistakes more quickly, instead of trying to find out what actually went wrong.\n\nLet\u0027s introduce some custom exceptions such as:\n\n* InvalidString for when the user inputs an invalid String.\n* InvalidCommand for when the command format is not followed.","fileTypesAndContributionMap":{}}]},{"date":"2025-03-17","commitResults":[{"hash":"c3c84a8a33ff4df21c26f6f27c87ebd02993c03c","isMergeCommit":false,"messageTitle":"Modify JUnit tests and adjust extract method","messageBody":"Some JUnit tests are not tailored towards the possible inputs from\nthe user. Moreover, once the tests are modified, the method for\nextracting information does not work properly, as the actual output\ndiffers from the expected output.\n\nFocusing the tests on possible inputs can help to check on more\nspecific bugs that are more likely to occur during user input.\n\nLet\u0027s\n* edit the JUnit tests with possible command inputs instead of\nmore general ones.\n* modify extractInfo() to fix the wrong output bug.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1},"test-code":{"insertions":65,"deletions":23}}},{"hash":"6c0bbc38a7b6ebd07ca948c15b157683b8f5f2c8","isMergeCommit":false,"messageTitle":"Modify command extraction method + Edit JUnit tests","messageBody":"The command extraction does not work for single-word user inputs.\nMoreover, the JUnit tests are not as organized as desired.\n\nFixing the command extraction will expand the range of usability to\nencompass single-word user inputs that do not contain any information.\nOrganising the JUnit tests will help to clarify the different\nscenarios that the methods can face.\n\nLet\u0027s,\n* Fix extractCommand() to get single-word user inputs working.\n* Organise the JUnit tests for better clarity.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":6,"deletions":1},"test-code":{"insertions":32,"deletions":14}}}]},{"date":"2025-03-18","commitResults":[{"hash":"e8b22e94111affd8dd0b2a351b657ef2ba89655a","isMergeCommit":false,"messageTitle":"Rename custom exceptions and modify InvalidStringException","messageBody":"The custom exceptions are not named as exceptions. Moreover, the\nmessage printed in InvalidString is repeated in all scenarios.\n\nAdding the word \"Exception\" to the custom exceptions will\nexplicitly inform others that they are exceptions. Removing the\nmessage parameter will help to simplify the code.\n\nLet\u0027s,\n* Rename all custom exceptions and their class files to include\nthe word \"Exception\"\n* Modify InvalidString such that there is no more message\nparameter in the constructor.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":15,"deletions":16},"other":{"insertions":2,"deletions":2}}},{"hash":"88c9bdddfb5756986df64b5eddb90c108a6ffaa1","isMergeCommit":false,"messageTitle":"Implement exception handling for command interpretation","messageBody":"The command interpretation methods do not contain any exception\nhandling.\n\nAdding exceptions and handling them will allow the methods to end\nin a controlled manner when incorrect parameters are given to them,\nthereby protecting them from failing unexpectedly.\n\nLet\u0027s,\n* Modify the command interpretation methods to check for incorrect\ninputs, and throw exceptions when necessary.\n* Edit the main parsing method to catch any exception thrown.\n* Add JUnit tests for scenarios when exceptions are thrown.\n* Modify a few JUnit tests for correct format, but invalid user\ninputs.\n* EXTRA: add a Javadoc comment for the CommandParser class.\n(because I forgot)\n","fileTypesAndContributionMap":{"functional-code":{"insertions":35,"deletions":11},"test-code":{"insertions":85,"deletions":13}}},{"hash":"9a9f4754edea86c7d5acd35c49b46cadc084be2a","isMergeCommit":true,"messageTitle":"Implement Product class and InventoryManager class","messageBody":"Product inventory manager","fileTypesAndContributionMap":{}},{"hash":"de6a99c48fbd3f0a381d81b0b143dc6f1926ddbb","isMergeCommit":true,"messageTitle":"Implement SalesManager","messageBody":"Implement SalesManager","fileTypesAndContributionMap":{}},{"hash":"dc88dcd46862c33c62bc6a2543c1534aba95e8e0","isMergeCommit":false,"messageTitle":"Modify access levels for command interpretation methods","messageBody":"The command interpretation methods currently have a public access\nlevel.\n\nChanging the access levels to a more restrictive level will help to\nprevent incorrect and potentially destructive usage.\n\nLet\u0027s modify the access levels for these methods to protected, so\nthat we can still run JUnit tests on them.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":3,"deletions":3}}},{"hash":"06bc0434378fb3a72915b9583fbff1f7dfbb1d98","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Parser-Issue#34","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"dca72c82792767ba1f326093ef5ae8d6661e728a","isMergeCommit":false,"messageTitle":"Integrate InventoryManager and SalesManager into parser code","messageBody":"The code utilising SalesManager and InventoryManager are commented\nout, as these classes have not been implemented yet.\n\nIntegrating them into the code will allow these classes to be\ncalled, thereby enabling the parser to execute the methods present\nin these classes.\n\nLet\u0027s,\n* uncomment the code using SalesManager\n* uncomment some of the code using InventoryManager (as some of the\nfunctionality is incomplete)\n","fileTypesAndContributionMap":{"functional-code":{"insertions":20,"deletions":16}}}]},{"date":"2025-03-19","commitResults":[{"hash":"90988a5a5da2166772ef18c52db298d0710998ba","isMergeCommit":false,"messageTitle":"Implement exception handling for command calling","messageBody":"The command calling methods do not contain any exception\nhandling.\n\nAdding exceptions and handling them will allow the methods to end\nin a controlled manner when incorrect parameters are given to them,\nthereby protecting them from failing unexpectedly.\n\nLet\u0027s,\n* Modify the command calling methods to check for incorrect\ninputs, and throw exceptions when necessary.\n* Create a new exception for when converting a String to a\nnumber fails\n","fileTypesAndContributionMap":{"functional-code":{"insertions":219,"deletions":65}}},{"hash":"7727a06ffd02c7e9f8ef044bf4ab1eb1436f3d3b","isMergeCommit":false,"messageTitle":"Implement JUnit tests for command calling methods","messageBody":"There are no methods to test the exception handling of the command\ncalling methods.\n\nCreating methods to test the exception handling will help to\nassure that the exception handling is working as expected.\n\nLet\u0027s\n* Add JUnit tests for situations when exceptions are thrown\nfrom command calling methods.\n* Modify the exception handling slightly for the JUnit tests to\nwork.\n* Modify the method name of a few JUnit tests due to incorrect\nnaming conventions.\n* Modify a few JUnit tests for converting a String to a number.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":84,"deletions":81},"test-code":{"insertions":408,"deletions":7}}},{"hash":"e5fa43119d2b979a22eaffd20b51b17b465ff369","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Parser-Issue#34","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8d5fa202bf98b2d9fd8e6ca641333e3b59e25222","isMergeCommit":false,"messageTitle":"Integrate other required classes into parser code","messageBody":"The code utilising the other classes are commented out, as these\nclasses had not been implemented yet.\n\nIntegrating them into the code will allow these classes to be\ncalled, thereby enabling the parser to execute the methods present\nin these classes.\n\nLet\u0027s uncomment the rest of the code that utilises the other\nrequired classes.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":17,"deletions":21}}},{"hash":"b20f39fc9866e4d68b66fa1a08ec80be2271ba39","isMergeCommit":false,"messageTitle":"Troubleshoot Gradle check","messageBody":"The Gradle check is failing. This is due to incorrect indentation\nand missing param comments in a Javadoc comment.\n\nKeeping the indentation and Javadoc comment content consistent will\nhelp to maintain a high standard of code quality.\n\nLet\u0027s remedy these issues and see if the Gradle check passes.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":4,"deletions":4},"test-code":{"insertions":1,"deletions":1}}},{"hash":"b8c2678b6ade539e550a0dbba7e55057f6fe14ad","isMergeCommit":true,"messageTitle":"Add error handling and message printing","messageBody":"Add error handling and message printing","fileTypesAndContributionMap":{}},{"hash":"4c2fe3cf50352b61400921423f5dbf7ec0e835db","isMergeCommit":false,"messageTitle":"Organise classes into packages and create JUnit test classes","messageBody":"The classes used by BusynessManager are all in the main package.\nMoreover, some of these classes do not contain JUnit tests.\n\nPutting the classes into separate packages will help with keeping\nthe code organised and systematic. Implementing JUnit tests will\nhelp to test the code for unexpected issues, thereby increasing\nreliability.\n\nLet\u0027s\n* organise the different classes in BusynessManager into related\npackages.\n* create JUnit test classes for the classes in the main folder.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":9,"deletions":4},"other":{"insertions":20,"deletions":19},"test-code":{"insertions":20,"deletions":0}}},{"hash":"497d975121a47be647eda07e64ef812f8e081f30","isMergeCommit":true,"messageTitle":"Put Java class files into correct packages","messageBody":"Organise classes into packages and create JUnit test classes\n\nThe classes used by BusynessManager are all in the main package. Moreover, some of these classes do not contain JUnit tests.\n\nPutting the classes into separate packages will help with keeping the code organised and systematic. Implementing JUnit tests will help to test the code for unexpected issues, thereby increasing reliability.\n\nLet\u0027s,\n* organise the different classes in BusynessManager into related packages.\n* create JUnit test classes for the classes in the main folder.","fileTypesAndContributionMap":{}},{"hash":"3df4c24efb77fec18cbdee8264f54ab901c525b9","isMergeCommit":false,"messageTitle":"Enable assertions in Gradle","messageBody":"Our project does not have assertions enabled.\n\nEnabling assertions allows us to use assertions, which is useful\nin keeping our code running in the way it should. This is because\nit prevents incorrect inputs from running around our code.\n\nLet\u0027s edit the build.gradle file to enable assertions.\n","fileTypesAndContributionMap":{"other":{"insertions":1,"deletions":0}}},{"hash":"26d722fc7359d2de7a1d141c288be706b6ebaf06","isMergeCommit":false,"messageTitle":"Add assertions for some parser methods","messageBody":"For some of the command calling methods, the possibility of\nnegative values for quantity and price can cause the code to\nreceive incorrect inputs, resulting in the code not working as\nexpected.\n\nAssertions can help in this aspect by preventing the code from\nreceiving negative values for quantity and price. Thus, our code\nis kept safe from these potentially destructive values.\n\nLet\u0027s,\n* add assertions in the command calling methods that require\nquantity and price to be parameters.\n* EXTRA: uncomment printProducts(). (because I forgot).\n","fileTypesAndContributionMap":{"functional-code":{"insertions":9,"deletions":1}}},{"hash":"5e28ecf68742e170c62b4062bf9e28e1302387a3","isMergeCommit":true,"messageTitle":"Implement BusynessManager as Core Application Controller","messageBody":"Implement BusynessManager as Core Application Controller\n\nThis PR has failed the GitHub checks. As a team, we came to the conclusion that it is safe to merge this PR, as the error causing the checks to fail is too trivial. This is because the expected and the actual output are virtually identical. ","fileTypesAndContributionMap":{}},{"hash":"6c91b421e2f5a71bc1260bb6e5694361b5cd09c2","isMergeCommit":false,"messageTitle":"Integrate main class with other classes","messageBody":"As the main BusynessManager class has just been merged, it is\ndisconnected from the rest of the code.\n\nIntegrating the BusynessManager class will get the code into a\nusable state, allowing us to test its functionality.\n\nLet\u0027s integrate the main class into the code.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":40,"deletions":27}}},{"hash":"1d6f907c6634e66f64cee76970c04a8d63f64115","isMergeCommit":false,"messageTitle":"Troubleshoot Gradle check","messageBody":"The Gradle check is failing due to mismatch between the expected\nand actual output from the automated text UI tests.\n\nMatching the outputs ensure that the code performs exactly like\nhow we expect it to.\n\nLet\u0027s make some modifications for the automated text UI tests, and\ntest if the Gradle check continues to fail.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1}}},{"hash":"03245047029d5e1605daa1ce8e1d39e8136f1c8f","isMergeCommit":false,"messageTitle":"Troubleshoot Gradle check part 2","messageBody":"The Gradle check is failing due to mismatch between the expected\nand actual output from the automated text UI tests.\n\nMatching the outputs ensure that the code performs exactly like\nhow we expect it to.\n\nLet\u0027s make some modifications for the automated text UI tests, and\ntest if the Gradle check continues to fail.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":5,"deletions":6}}},{"hash":"ebb62ea68317e91cf80a5e8190a4a18f059f5d7e","isMergeCommit":false,"messageTitle":"Troubleshoot Gradle check part 3","messageBody":"The Gradle check is failing due to mismatch between the expected\nand actual output from the automated text UI tests.\n\nMatching the outputs ensure that the code performs exactly like\nhow we expect it to.\n\nLet\u0027s make some modifications for the automated text UI tests, and\ntest if the Gradle check continues to fail.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":6,"deletions":5},"other":{"insertions":15,"deletions":15}}},{"hash":"6e7afaec7994ba3c91912f858f269c5a4f37f7cb","isMergeCommit":false,"messageTitle":"Troubleshoot Gradle check part 4","messageBody":"The Gradle check is failing due to mismatch between the expected\nand actual output from the automated text UI tests.\n\nMatching the outputs ensure that the code performs exactly like\nhow we expect it to.\n\nLet\u0027s make some modifications for the automated text UI tests, and\ntest if the Gradle check continues to fail.\n","fileTypesAndContributionMap":{"other":{"insertions":15,"deletions":15}}},{"hash":"779c4c4ad974d9039532ae6a322ab8e6c3265c43","isMergeCommit":false,"messageTitle":"Troubleshoot Gradle check part 6","messageBody":"The Gradle check is failing due to mismatch between the expected\nand actual output from the automated text UI tests.\n\nMatching the outputs ensure that the code performs exactly like\nhow we expect it to.\n\nLet\u0027s make some modifications for the automated text UI tests, and\ntest if the Gradle check continues to fail.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1}}},{"hash":"4860c39deca78200624c6733b4237f6940961ad9","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Add-Assertions","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"ece25416eeec65e21490557fd19148918d90dd06","isMergeCommit":false,"messageTitle":"Troubleshoot Gradle check part 7","messageBody":"The Gradle check is failing due to mismatch between the expected\nand actual output from the automated text UI tests.\n\nMatching the outputs ensure that the code performs exactly like\nhow we expect it to.\n\nLet\u0027s make some modifications for the automated text UI tests, and\ntest if the Gradle check continues to fail.\n","fileTypesAndContributionMap":{"other":{"insertions":3,"deletions":1}}},{"hash":"8c63823acf906441bd7f310324b42d207b902c27","isMergeCommit":false,"messageTitle":"Troubleshoot Gradle check part 8","messageBody":"The Gradle check is failing due to mismatch between the expected\nand actual output from the automated text UI tests.\n\nMatching the outputs ensure that the code performs exactly like\nhow we expect it to.\n\nLet\u0027s make some modifications for the automated text UI tests, and\ntest if the Gradle check continues to fail.\n","fileTypesAndContributionMap":{"other":{"insertions":2,"deletions":2}}},{"hash":"05a68777caeaa5ccbe9369c2b5d4965ed2bfd980","isMergeCommit":true,"messageTitle":"Integrate main class with other classes","messageBody":"As the main BusynessManager class has just been merged, it is disconnected from the rest of the code.\n\nIntegrating the BusynessManager class will get the code into a usable state, allowing us to test its functionality.\n\nLet\u0027s integrate the main class into the code.","fileTypesAndContributionMap":{}},{"hash":"51c7bc82e2aa0a21deff53e03f20390ea4d372f4","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Add-Assertions","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"98bb9df7d12be04b3c0641979aee157bf10e7988","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Add-Assertions","messageBody":"# Conflicts:\n#\tsrc/main/java/busynessmanager/parser/CommandParser.java\n","fileTypesAndContributionMap":{}},{"hash":"02ec51a4aa29db1e5f5f35042627ee17eeed3cde","isMergeCommit":false,"messageTitle":"Add logging to parser class","messageBody":"The parser class does not contain any logging of what is going on\nin the class.\n\nLogging will help during debugging to find potential issues with\nthe code. Logging can also help to explain the flow of the code\nwithin the parser class.\n\nLet\u0027s add some logging ability to the parser class.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":6,"deletions":2}}},{"hash":"55bf670c896c0a2915c320a1a98eb5abd4bc1061","isMergeCommit":true,"messageTitle":"Resolve issue 90 and 91","messageBody":"Resolve issue 90 and 91","fileTypesAndContributionMap":{}},{"hash":"06e8b6e692a9850efd305938c2057dbd7edb74c2","isMergeCommit":false,"messageTitle":"Troubleshoot Gradle check","messageBody":"The Gradle check failed, as the static class member variables are\nbelow the non-static ones.\n\nMoving the static class member variables to a more suitable\nlocation can help with improved readability and maintaining\nconsistency with coding standards.\n\nLet\u0027s move the static class member variables to the top, and see\nhow the Gradle check responds.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1}}},{"hash":"05b0c31dd1dccd95361354a70b821ab9555d07b3","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Add-Assertions","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"56a951ccce874c41a7290a2b4b85ccf03cb732e7","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Add-Logging","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2b71381a91cd951dc2b3510445779b7a4830609a","isMergeCommit":true,"messageTitle":"Add assertions to parser class","messageBody":"Add assertions for some parser methods\n\nFor some of the command calling methods, the possibility of\nnegative values for quantity and price can cause the code to\nreceive incorrect inputs, resulting in the code not working as\nexpected.\n\nAssertions can help in this aspect by preventing the code from\nreceiving negative values for quantity and price. Thus, our code\nis kept safe from these potentially destructive values.\n\nLet\u0027s,\n\nadd assertions in the command calling methods that require quantity and price to be parameters.\nEXTRA: uncomment printProducts(). (because I forgot).","fileTypesAndContributionMap":{}},{"hash":"a5536d468bbe0f0e97c978d486304e0edb198a56","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Add-Logging","messageBody":"# Conflicts:\n#\tsrc/main/java/busynessmanager/parser/CommandParser.java\n","fileTypesAndContributionMap":{}},{"hash":"85ab1f3b537aecbb459d98ca9f5f04ee9fa9f154","isMergeCommit":true,"messageTitle":"Add logging to parser class","messageBody":"Add logging to parser class\n\nThe parser class does not contain any logging of what is going on in the class.\n\nLogging will help during debugging to find potential issues with the code. Logging can also help to explain the flow of the code within the parser class.\n\nLet\u0027s add some logging ability to the parser class.","fileTypesAndContributionMap":{}},{"hash":"1f882d8111252b47cbd1ef7ef055c6f15a8eafd6","isMergeCommit":true,"messageTitle":"Update README.md","messageBody":"docs: add User Guide to README.md\n\n* Added a detailed User Guide outlining the startup process, features, and command usage.\n* Included command syntax, descriptions, and example inputs/outputs for clarity.\n* Improved formatting for readability and ease of reference.\n\nThis update enhances documentation for new users and developers.","fileTypesAndContributionMap":{}},{"hash":"d19a6da5b5076e9f86bfa570da66bfa1e39b59b4","isMergeCommit":false,"messageTitle":"Add enumeration to fix invalid businessType bug","messageBody":"There is a bug where businessType is not limited to RETAIL or FNB.\nThe code allows any String to work as a businessType.\n\nThis may lead to unpredictable behaviour in the code, as the code\ndoes not expect the businessType to be anything else except FNB and\nRETAIL.\n\nLet\u0027s,\n* Create a enumeration for businessType, so that only RETAIL and\nFNB are allowed.\n* Modify the businessType input code to combat against incorrect\ninputs.\n* Convert any remaining Strings created to constants.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":48,"deletions":11}}},{"hash":"359565c1e7274fd7582cb8d8eadd47f17b2cf96d","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Fix-Issue#98","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"ac7824321482a291fa9ce47f2728f61c7819cdc9","isMergeCommit":true,"messageTitle":"Fix business type not FNB/RETAIL in BusynessManager bug","messageBody":"Add enumeration to fix invalid businessType bug\n\nThere is a bug where businessType is not limited to RETAIL or FNB.\nThe code allows any String to work as a businessType.\n\nThis may lead to unpredictable behaviour in the code, as the code\ndoes not expect the businessType to be anything else except FNB and\nRETAIL.\n\nLet\u0027s,\n* Create a enumeration for businessType, so that only RETAIL and\nFNB are allowed.\n* Modify the businessType input code to combat against incorrect\ninputs.\n* Convert any remaining Strings created to constants.","fileTypesAndContributionMap":{}}]},{"date":"2025-03-20","commitResults":[{"hash":"d6ac6f43ad9b7a85d1f933b578cfb7adfc946ab4","isMergeCommit":true,"messageTitle":"Fix: prevent duplicate product names and ensure alphabetical order","messageBody":"Fix: prevent duplicate product names and ensure alphabetical order in product list\n\n* Updated addProduct method to check for existing product names before adding a new product to prevent duplicates.\n* Modified printProducts method to sort products alphabetically by product ID before printing.","fileTypesAndContributionMap":{}},{"hash":"af8177ec75c600cf2a87e8972faba7ddcb6ffe00","isMergeCommit":true,"messageTitle":"Add JavaDoc comments to BusynessManager, InventoryManager, and Product classes","messageBody":"feat: Add JavaDoc comments to BusynessManager, InventoryManager, and Product classes\n\n* Added JavaDoc comments to BusynessManager, InventoryManager, and Product classes\nto improve code readability and maintainability.\n* Documented class descriptions, method functionalities, parameters, and return values.\n\nThis enhances documentation and makes the codebase easier to understand for future development.","fileTypesAndContributionMap":{}},{"hash":"3dba0edb602a2c7cbc4f5fe3a4b6d00b2c2053ee","isMergeCommit":false,"messageTitle":"Clean up code for v1.0 release","messageBody":"The code is at the final stage before release, and it is about time\nto release a .jar file for BusynessManager.\n\nReleasing the .jar file gives our product to users to use. Checking\nthe code before that will be a good habit which helps to make sure\nthat our code is good before releasing.\n\nLet\u0027s\n* Comb through the code and check for any irregularities\n* Edit the build.gradle file to generate the .jar file\n* Update any UI or JUnit tests if necessary\n","fileTypesAndContributionMap":{"functional-code":{"insertions":181,"deletions":182},"other":{"insertions":39,"deletions":24}}},{"hash":"d46aefbbf7ac4a1ea1dce4928b4df77884cfc9dd","isMergeCommit":true,"messageTitle":"Clean up code for v1.0 release","messageBody":"The code is at the final stage before release, and it is about time to release a .jar file for BusynessManager.\n\nReleasing the .jar file gives our product to users to use. Checking the code before that will be a good habit which helps to make sure that our code is good before releasing.\n\nLet\u0027s,\n* Comb through the code and check for any irregularities\n* Edit the build.gradle file to generate the .jar file\n* Update any UI or JUnit tests if necessary","tags":["v1.0"],"fileTypesAndContributionMap":{}}]},{"date":"2025-03-21","commitResults":[{"hash":"250427cc58d64ada26155787bbf087348b32625f","isMergeCommit":true,"messageTitle":"Add JUnit tests to test classes","messageBody":"Added JUnit test cases for:\n-InventoryManager\n-SalesManager\n-RevenueCalculator\n\nand other miscellaneous edits","fileTypesAndContributionMap":{}}]},{"date":"2025-03-23","commitResults":[{"hash":"6f451b75cd38a0ea5f934b81511cbaefed06b440","isMergeCommit":false,"messageTitle":"Refactor methods from main class","messageBody":"The first time setup method is very long.\n\nRefactoring the method into smaller sub-methods can improve\nreadability, maintainability and reusability.\n\nLet\u0027s,\n* Refactor the extraction of the three variables in the main class\ninto three separate methods.\n* Convert all the methods in the main class except for main() to\nprivate.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":91,"deletions":48}}},{"hash":"b1394d0402b9775ddb3baaeba92f27e7790a3928","isMergeCommit":false,"messageTitle":"Add incorrect input handling for variable extraction","messageBody":"When an incorrect input is given, some extraction methods do not\ngive an indication that the extraction has failed to the user.\nMoreover, all the extraction methods do not repeat the input\ninstruction message to the user after an incorrect input.\n\nGiving an error message will tell the user that their input is\nwrong, and they need to try again. Repeating the instruction\nmessage helps to remind users of what they need to input.\n\nLet\u0027s,\n* Add checks with error messages for the scenario when there is no\ninput for name and password extraction.\n* Add the ability for the instruction message to loop whenever the\nextraction is unsuccessful.\n* Modify the error message that is given when there is no input\nfrom the user.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":15,"deletions":8}}},{"hash":"dab401e63a62f24b9e52a3b7b2933c5e2d069693","isMergeCommit":false,"messageTitle":"Add confirmation check for first-time setup","messageBody":"When the business ID is invalid, the first-time setup instantly\nstarts without checking with the user if he/she wants to start it.\n\nChecking with the user first allows the user to cancel the first-\ntime setup and terminate the program. This is in the scenario where\nhe/she may have accidentally put in an incorrect business ID.\n\nLet\u0027s\n* Implement a confirmation check to start the first-time setup.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":21,"deletions":7}}},{"hash":"7408d0b417aedf170adb119e4f75b0c63bb5ae53","isMergeCommit":false,"messageTitle":"Modify automated text UI tests","messageBody":"Since the sequence of instructions for initialising BusynessManager\nis now different, the input and expected text files for the\nautomated text UI tests are outdated.\n\nUpdating these test files will help to check if the updated\nfunctionality works as expected.\n\nLet\u0027s update the automated text UI test files to include the new\nfunctionality.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1}}},{"hash":"06dfabfcb39182e45085b09efe5a351eb9102124","isMergeCommit":false,"messageTitle":"Improve SearchManager functionality","messageBody":"When an name inputted into the SearchManager cannot be found in the\nproduct list, there is no corresponding error message. Moreover,\nwhen searching for a product using the product name, the product\nname inputted is case-sensitive.\n\nAdding an error message will inform users that their name cannot be\nfound, rather than leaving them wondering what has happened.\nRemoving case-sensitivity when searching using the product name can\nhelp to make the functionality more user-friendly.\n\nLet\u0027s,\n* Add an error message for when the name cannot be found in the\nproduct list.\n* Improve the searching by name functionality by removing case-\nsensitivity.\n* EXTRA: rename some parser constants for improved clarity.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":32,"deletions":27}}},{"hash":"db797b7ecc2e76c69292b9d9d8db15810f0ac738","isMergeCommit":false,"messageTitle":"Fix invalid product ID bug","messageBody":"When an invalid product ID is inputted for some methods, the\nprogram will crash with a NullPointerException. This is because the\ninvalid product ID does not exist as a key in the productList hash\nmap.\n\nAdding proper handling of this error will allow the user to\ncontinue using the program, even when the invalid product ID is\ninputted.\n\nLet\u0027s,\n* Handle this invalid product ID bug.\n* Add new constants for the error handling.\n* Modify the text UI tests for regression testing.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":90,"deletions":39}}},{"hash":"e22e0908cd40b1a0f9503ab2c6e2b3b575ad3399","isMergeCommit":false,"messageTitle":"Fix JUnit tests","messageBody":"The Gradle check is failing, as some of the JUnit tests\u0027 actual\noutputs do not match the expected outputs.\n\nFixing these JUnit tests will help to check if the methods work as\nexpected, assuring us that the code is not buggy.\n\nLet\u0027s modify the JUnit tests\u0027 expected outputs, and see if the\nGradle check passes.\n","fileTypesAndContributionMap":{"test-code":{"insertions":5,"deletions":5}}},{"hash":"1e303c7159df34eabe1c73765790518855f3cc67","isMergeCommit":false,"messageTitle":"Create help command","messageBody":"BusynessManager does not have a description of what commands it can\ndo.\n\nCreating a help list will help users to quickly get to know what the\nprogram can do, without going all the way to documentation.\n\nLet\u0027s create a list of possible commands and their expected\nformats. For a more comprehensive description, users can consult\nthe User Guide.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":21,"deletions":1}}},{"hash":"1a727b55e1ca2cd579f4440ca0410dddcef86f70","isMergeCommit":false,"messageTitle":"Handle negative quantities and prices in parser","messageBody":"When negative numbers are inputted, the assertion will fail and the\nprogram terminates.\n\nInstead of terminating the program, handling the negative numbers\nproperly will allow users to correct their mistake and continue\nusing the program. This is better than making the user start from\nthe beginning.\n\nLet\u0027s,\n* Handle the presence of negative numbers by outputting error\nmessages rather than using assertions.\n* Modify the automated text UI tests for regression testing.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":28,"deletions":21}}},{"hash":"5abdbe834b46f44843398ec1dab249332962ada0","isMergeCommit":false,"messageTitle":"Create product ID detection","messageBody":"To input the product ID, the user needs to type the correct and\nentire format of the ID. (i.e. ID_XXXX)\n\nSimplifying this step to only requiring the number component of the\nproduct ID will make the program more user-friendly.\n\nLet\u0027s implement the creation of the product ID String from just an\ninputted number.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":128,"deletions":36}}},{"hash":"87fa4706c1e7ec70005387af4a1333de1cdd1e7a","isMergeCommit":false,"messageTitle":"Add proper authorship to code","messageBody":"The auto-generated authorship is inaccurate, as some members\u0027 code\nhave been overwritten in bug fixes. Thus, they lose authorship of\nthat portion of the code.\n\nExplicitly stating the authorship in the code can help to clarify\ndoubts on who did which parts of the code.\n\nLet\u0027s explicitly indicate authorship on the code.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":10,"deletions":0},"test-code":{"insertions":9,"deletions":2}}},{"hash":"7e8af57064759e7d356d64cf2151a5beeee6ed7a","isMergeCommit":false,"messageTitle":"Fix JUnit tests","messageBody":"The Gradle check is failing, as some of the JUnit tests\u0027 actual\noutputs do not match the expected outputs.\n\nFixing these JUnit tests will help to check if the methods work as\nexpected, assuring us that the code is not buggy.\n\nLet\u0027s modify the JUnit tests\u0027 expected outputs, and see if the\nGradle check passes.\n","fileTypesAndContributionMap":{"test-code":{"insertions":4,"deletions":4}}}]},{"date":"2025-03-24","commitResults":[{"hash":"90583bbe979d95c32710d4bdb077b4afe6729c00","isMergeCommit":true,"messageTitle":"Refactoring and Bug Fixing","messageBody":"This PR is a combination of issues in the issue tracker. Check the development section on the right for more information on the issues.\n\nTLDR:\n* Fix missing confirmation message when invalid business ID is inputted bug\n* Fix missing error message when searching by name fail bug\n* Fix crashing when invalid product ID is inputted bug\n* Refactor first-time setup\n* Make searching by name not case-sensitive","fileTypesAndContributionMap":{}},{"hash":"58519ca6d09337e5736b1d60709ffaba4f15ecd6","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Enhance-ModifyFeatures","messageBody":"# Conflicts:\n#\tsrc/main/java/busynessmanager/constants/Constants.java\n#\tsrc/main/java/busynessmanager/managers/InventoryManager.java\n#\tsrc/main/java/busynessmanager/parser/CommandParser.java\n#\tsrc/test/java/busynessmanager/parser/CommandParserTest.java\n#\ttext-ui-test/EXPECTED.TXT\n#\ttext-ui-test/input.txt\n","fileTypesAndContributionMap":{}},{"hash":"59bb5e406bf060bdaa9611d1866745eff4b3b234","isMergeCommit":false,"messageTitle":"Modify code after integrating upstream","messageBody":"Some sections of the code were not merged correctly after pulling\nfrom the upstream master.\n\nProperly integrating the upstream master will allow the code to\nwork seamlessly with the additional functionality that has been\nadded to the upstream master.\n\nLet\u0027s check the code for merging issues, and correct them if\nnecessary.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":10,"deletions":21}}},{"hash":"60d0f4c43f6c62791e3a1a52419901866dd95a56","isMergeCommit":false,"messageTitle":"Remove redundant constants","messageBody":"The Gradle check is failing, as some constants are not being used\nin the code.\n\nRemoving these redundant constants will improve readability of the\ncode, as well as reduce clutter.\n\nLet\u0027s remove the redundant constants, and see if the Gradle check\npasses.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":0,"deletions":8}}},{"hash":"5e6d83c8f961318b3313d4891642687b0cbbad10","isMergeCommit":true,"messageTitle":"Implement additional features","messageBody":"This PR is a combination of issues in the issue tracker. Check the development section on the right for more information on the issues.\n\nTLDR:\n* create help command\n* deal with negative qty / price\n* detect ID as number rather than formatted string (i.e. 1 instead of ID_0001)","fileTypesAndContributionMap":{}}]}],"rozaliesmit":[{"date":"2025-03-07","commitResults":[{"hash":"242310f6518c587605ebd7ec2c01559713186cc0","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":1,"deletions":1}}},{"hash":"38e14d683b411f83b6d951035b5cf40d25812d8b","isMergeCommit":false,"messageTitle":"Revert \"Update README.md\"","messageBody":"This reverts commit 242310f6518c587605ebd7ec2c01559713186cc0.\n","fileTypesAndContributionMap":{"docs":{"insertions":1,"deletions":1}}},{"hash":"160554793213a8bb661bbb23a8f41f9034730b3d","isMergeCommit":false,"messageTitle":"Updating AboutUs","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":7,"deletions":7}}},{"hash":"e12f44573154285729c8e96d9b0c203b2c276766","isMergeCommit":false,"messageTitle":"Updating AboutUs","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":0,"deletions":4}}},{"hash":"0867f537b6e6c6a7e51817c1da712292ca1e6bcc","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027upstream/master\u0027 into rozaliesmit-AboutUs # Please enter a commit message to explain why this merge is necessary, # especially if it merges an updated upstream into a topic branch. # # Lines starting with \u0027#\u0027 will be ignored, and an empty message aborts # the commit.","messageBody":"Merge master\n","fileTypesAndContributionMap":{}}]},{"date":"2025-03-09","commitResults":[{"hash":"e5c24138a9ceeb403f6af9fccabe3b2b3c2e1623","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp","messageBody":"# Conflicts:\n#\tdocs/AboutUs.md\n","fileTypesAndContributionMap":{}},{"hash":"185ab982f6197b7149a9042430f0dc36e3bd304b","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into rozaliesmit-AboutUs","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"97b55abb55caedc4f48ecb1dd30d2a6de8281cee","isMergeCommit":false,"messageTitle":"Updated info","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":1,"deletions":1}}},{"hash":"b1440fd2d22e87269d3ed9e889784e1abd8f0451","isMergeCommit":false,"messageTitle":"About us updates","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":1,"deletions":1}}},{"hash":"8941aa499661521a0c6f922071bf786bf108266f","isMergeCommit":true,"messageTitle":"Picture + portfolio update","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"55ca342745a14013749ce8ef0fd436816430b48e","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027upstream/master\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"ee76b80adc3b5f4e1fdbaadc473cd803d0bd3a43","isMergeCommit":true,"messageTitle":"Merge branch \u0027refs/heads/rozaliesmit-AboutUs\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"83b020a32064466d7ff25bbc8dd39f05c9b5928a","isMergeCommit":false,"messageTitle":"Updated info","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":1,"deletions":1}}}]},{"date":"2025-03-10","commitResults":[{"hash":"fcfba80545806937e15dde27845005f2286445cb","isMergeCommit":true,"messageTitle":"Merge pull request #63 from AY2425S2-CS2113-F11-1/rozaliesmit-AboutUs","messageBody":"updates to about us Rozalie","fileTypesAndContributionMap":{}},{"hash":"4c3270815de0d0c7ac007e023eb3b7d028b382af","isMergeCommit":false,"messageTitle":"picture update","messageBody":"","fileTypesAndContributionMap":{"other":{"insertions":20,"deletions":0},"docs":{"insertions":6,"deletions":0}}},{"hash":"a7363aa9aab2bd4a41830d6a2adea7d9ea63522b","isMergeCommit":false,"messageTitle":"Portfolio update","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":0,"deletions":6}}},{"hash":"949cf69a46c9575ce4991c2d5ca7725e4a98989a","isMergeCommit":true,"messageTitle":"Merge pull request #64 from rozaliesmit/master","messageBody":"Portfolio updating Rozalie","fileTypesAndContributionMap":{}}]},{"date":"2025-03-16","commitResults":[{"hash":"36839fca63222c75bbadea547c8c4799c397f140","isMergeCommit":false,"messageTitle":"Implement SalesManager","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":54,"deletions":0}}}]},{"date":"2025-03-18","commitResults":[{"hash":"e115619de030502f00398e258e5f8e04ae718632","isMergeCommit":false,"messageTitle":"SalesManager update","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":12,"deletions":7}}},{"hash":"d20715d063d8a3ca430abe09664e85e25f99b100","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into rozaliesmit-SalesManager","messageBody":"","fileTypesAndContributionMap":{}}]}],"himethcodes":[{"date":"2025-03-07","commitResults":[{"hash":"60e5425112ab914c3831d7bf9d90d3c3b4716b35","isMergeCommit":false,"messageTitle":"Updated AboutUs.md - Added my details","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":3,"deletions":7}}},{"hash":"fc2ea33b56f1314e9ce929210aa1406e7af9a52d","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into himethcodes-AboutUs","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-03-17","commitResults":[{"hash":"ce82e874f403205e1be531cca9c1449b5025c5fa","isMergeCommit":false,"messageTitle":"Added InventoryManager and Product class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":120,"deletions":0}}},{"hash":"3c96b0f413481d9d9d214e954ccbfbddcb5a105c","isMergeCommit":false,"messageTitle":"Added InventoryManager and Product class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":0,"deletions":88}}},{"hash":"1de0f0645d74ef0d919f26002b9cee0a5b7e45bd","isMergeCommit":false,"messageTitle":"Added InventoryManager and Product class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":26,"deletions":5}}}]},{"date":"2025-03-18","commitResults":[{"hash":"5e512a354aed0eb99f274ea6bf66514de0ddd719","isMergeCommit":false,"messageTitle":"Added InventoryManager and Product class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":8,"deletions":9}}},{"hash":"4a6fc8348298b93ca3259e1510ec213cb4848565","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into product-inventory-manager","messageBody":"","fileTypesAndContributionMap":{}}]}],"LEESY02":[{"date":"2025-03-07","commitResults":[{"hash":"8d679eec8dc33fdd070d98bec925770a7fc16739","isMergeCommit":false,"messageTitle":"Added Seung Yoon","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":1,"deletions":7}}},{"hash":"0d0e2d95a46cf238b8373658ec6f4c85f8a6f50f","isMergeCommit":true,"messageTitle":"merged me and Joshua","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-03-13","commitResults":[{"hash":"bd7cf7a02ad76743e3716a863d5fecefda37a21b","isMergeCommit":false,"messageTitle":"Implement RevenueCalculator and SearchManager","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":197,"deletions":0}}}]},{"date":"2025-03-16","commitResults":[{"hash":"711ca702a6adde25f4747e4ea2909f95eac62cf3","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp into RevenueCalculator","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"24c7df56ce84d1f251b505238888f3815a72449b","isMergeCommit":false,"messageTitle":"Minor changes for github merge stylechecks","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":3}}},{"hash":"dea9bd7bc35ea450eaf8be1855445621d49d969d","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S2-CS2113-F11-1/tp into RevenueCalculator","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-03-18","commitResults":[{"hash":"4a54c6abad43f1b5adb62887f7fc934da24e6234","isMergeCommit":true,"messageTitle":"pull from upstream, receive Product and InventoryManager class","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"33b415f0a2df9f9b3dcd71a3432e2419ee174845","isMergeCommit":false,"messageTitle":"Minor edits","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":114,"deletions":157}}},{"hash":"fdb49b2f9946d7690ba1a63b6c9ea2c63fe6c474","isMergeCommit":true,"messageTitle":"Merge upstream with RevenueCalculator branch","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"f65807499685adf6a97b9df7e8506cbf720f9391","isMergeCommit":false,"messageTitle":"Test and update functioanlities of InventoryManager, SalesManager, RevenueCalculator and SearchManager","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":57,"deletions":19}}},{"hash":"7a2e2d4e344c08f1111f3bc555d1bcbfdcbec922","isMergeCommit":false,"messageTitle":"Minor changes for github stylechecks","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":0,"deletions":2}}},{"hash":"a13649da4a98aabe6d4b7f222ff5b786a6a50426","isMergeCommit":false,"messageTitle":"Minor changes for stylechecks","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":3}}},{"hash":"0569ca6d610bdc173cbe4b172ae54edf6c54004d","isMergeCommit":false,"messageTitle":"Minor changes for stylechecks 3","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":3}}},{"hash":"369d1fc12004b788611c2a472fd2bb2e419c0fd5","isMergeCommit":true,"messageTitle":"Merge pull request #66 from LEESY02/RevenueCalculator","messageBody":"Implement RevenueCalculator and SearchManager, and minor fixes to improve compatibility of InventoryManager and SalesManager","fileTypesAndContributionMap":{}},{"hash":"e4522dccdfc65ef1013b3f602d9f850db5a44c5f","isMergeCommit":false,"messageTitle":"Added UI and Constants class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":55,"deletions":0}}}]},{"date":"2025-03-19","commitResults":[{"hash":"1dcab14dedd6abf7721a8ac367f4235e679b697e","isMergeCommit":false,"messageTitle":"Style check wdit","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":2,"deletions":1}}},{"hash":"3ba72a94ceafd7b4093a6de079f469173e743275","isMergeCommit":true,"messageTitle":"pull from upstream, receive Product and InventoryManager class","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"3ddc1a49f4f2f720809070afbb1c1b96c3dfcc09","isMergeCommit":false,"messageTitle":"Implement UI and Constants class and utilise in pre-existing classes","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":188,"deletions":104}}},{"hash":"4497efed94d8fed95d3f24bb55a1e8c0c7a6e37b","isMergeCommit":false,"messageTitle":"Style check edits from gradle","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":56,"deletions":10}}},{"hash":"ecf57c743d4cf0dd1c3895007b548deb0bef2178","isMergeCommit":false,"messageTitle":"Pass Gradle test checks","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":7,"deletions":3}}},{"hash":"ae63f3d950937ca4a68c5c33124b2f45b7371c1b","isMergeCommit":false,"messageTitle":"Minor edits for checkstyle","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":0,"deletions":2}}},{"hash":"b652236c91369e5107b86cdeb9562239fe1e946b","isMergeCommit":true,"messageTitle":"pull from upstream, receive Product and InventoryManager class","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"31d5614757854d584c19ad7a73e8b021e905b556","isMergeCommit":false,"messageTitle":"Integrated BusynessManager with UI and Constants","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":117,"deletions":45}}},{"hash":"76ed970077ee8a02a0231b61645a0530dd2d3497","isMergeCommit":false,"messageTitle":"Edit text-ui-test/EXPECTED.TXT","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":3,"deletions":2}}},{"hash":"810f9c90c170e72e34fa60bb8f9930e636a52b9e","isMergeCommit":false,"messageTitle":"Minor edits","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":159,"deletions":159}}},{"hash":"c532c118555e07cdbc2c2ec84137f07dce27e163","isMergeCommit":false,"messageTitle":"Minor edits","messageBody":"","fileTypesAndContributionMap":{"other":{"insertions":0,"deletions":1}}},{"hash":"1a68c71b10830b9736ea831f664a8d6348dbd953","isMergeCommit":false,"messageTitle":"Edit following forum #24","messageBody":"","fileTypesAndContributionMap":{"other":{"insertions":3,"deletions":2}}},{"hash":"189fa0bee894f54330b04ecd7fc96bf3bdc277f2","isMergeCommit":true,"messageTitle":"Merge after pulling from upstream","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"dd7976bdbf4386fed13681a8fd8c25be8444d851","isMergeCommit":true,"messageTitle":"Merge pull request #78 from LEESY02/UI-and-Constants","messageBody":"Add UI and Constants class, integrate with other functional classes and other miscellaneous changes","fileTypesAndContributionMap":{}},{"hash":"4eac2ce6db3d46e2e3fe19173691a6a93bf95108","isMergeCommit":false,"messageTitle":"Resolve issue 90 and 91","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":34,"deletions":8}}},{"hash":"5f0bbd3c0f8c422f3d9ff2079b4377e31f21fb9c","isMergeCommit":false,"messageTitle":"Checkstyle","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":8,"deletions":4}}}]},{"date":"2025-03-21","commitResults":[{"hash":"c924897dbda4ddb810aef2fe54c31acc1d11212d","isMergeCommit":false,"messageTitle":"Blank commit","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":1,"deletions":0}}},{"hash":"14579fdd9562e27381f170ee2dd73d591f02106a","isMergeCommit":false,"messageTitle":"JUnit for IventoryManager","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":53,"deletions":2}}},{"hash":"112558a1f6fcbbd03f50481d5c5919cbe9b7e90d","isMergeCommit":false,"messageTitle":"Add more InventoryManager test cases for Gradle","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":66,"deletions":28}}},{"hash":"c7f5e2335370966f52982d595a408b9bbe2abe45","isMergeCommit":false,"messageTitle":"Add JUnit tests for SalesManager","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":35,"deletions":4}}},{"hash":"4136b35ca57d90095c30ae76a0b144dd50f93447","isMergeCommit":false,"messageTitle":"Add JUnit test for RevenueCalculator and minor edits","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":6,"deletions":4},"test-code":{"insertions":59,"deletions":8}}},{"hash":"09bfe1d53f9a7ed44a34303e4a25d1817424845e","isMergeCommit":false,"messageTitle":"Checkstyle edit","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":10,"deletions":10}}},{"hash":"da76e4cfe3ec090e1b3aa6030232a69571544b31","isMergeCommit":false,"messageTitle":"Checkstyle edit","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":47,"deletions":47}}},{"hash":"dba1d424284b0bd9ee623159f8bd0216ed51955d","isMergeCommit":false,"messageTitle":"Checkstyle","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":1,"deletions":1}}},{"hash":"2e0062884c388d2b21c813e31e3432805c122957","isMergeCommit":false,"messageTitle":"Checkstyle","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":15,"deletions":15}}}]}]},"authorFileTypeContributionMap":{"amirhusaini06":{"docs":147,"functional-code":248,"test-code":0},"b1inmeister":{"docs":19,"functional-code":743,"test-code":619,"other":7},"rozaliesmit":{"docs":7,"functional-code":104,"test-code":0},"himethcodes":{"docs":0,"functional-code":228,"test-code":0},"LEESY02":{"docs":0,"functional-code":317,"test-code":187,"other":3}},"authorContributionVariance":{"amirhusaini06":8538.308,"b1inmeister":63373.395,"rozaliesmit":133.38184,"himethcodes":1728.0898,"LEESY02":34442.223},"authorDisplayNameMap":{"amirhusaini06":"CS2113-F11-1 AMIR..MUSA","b1inmeister":"CS2113-F11-1 LEE ..SHUA","rozaliesmit":"CS2113-F11-1 SMIT..ISEN","himethcodes":"CS2113-F11-1 KANK..MIKA","LEESY02":"CS2113-F11-1 LEE ..YOON"}}
