[{"path":".github/workflows/gradle.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"name: Java CI","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"on: [push, pull_request]","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"jobs:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  build:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    strategy:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"      matrix:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"        platform: [ubuntu-latest, macos-latest, windows-latest]","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    runs-on: ${{ matrix.platform }}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    steps:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"        uses: actions/checkout@master","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        uses: actions/checkout@master","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"          ref: master","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"      - name: Merge to master","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        run: git checkout --progress --force ${{ github.sha }}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"      - name: Validate Gradle Wrapper","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"        uses: gradle/actions/wrapper-validation@v3","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"      - name: Setup JDK 17","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"        uses: actions/setup-java@v4","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"          distribution: \u0027zulu\u0027","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"          java-version: \u002717\u0027","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"          java-package: jdk+fx","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"      - name: Build and check with Gradle","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        run: ./gradlew check","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"      - name: Perform IO redirection test (*NIX)","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        working-directory:  ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        run: ./runtest.sh","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"      - name: Perform IO redirection test (MacOS)","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if: always() \u0026\u0026 runner.os \u003d\u003d \u0027macOS\u0027","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        working-directory:  ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        run: ./runtest.sh","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"      - name: Perform IO redirection test (Windows)","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if: always() \u0026\u0026 runner.os \u003d\u003d \u0027Windows\u0027","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        working-directory:  ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        shell: cmd","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        run: runtest.bat","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"edwardrl101":3,"-":48}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"# FinTrek","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"FinTrek is a desktop app designed for university students to manage their expenses. It is optimized for use via the Command Line Interface (CLI) so that frequent tasks can be easily performed by keying in commands.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 17 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 17 in a previous Intellij project.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Verify the setup**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"venicephua":2,"-":63}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-params\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"    mainClass.set(\"fintrek.FinTrek\")","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    archiveBaseName.set(\"FinTrek\")","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"venicephua"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"randust":3,"-":44,"venicephua":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"| Display                                             |         Name         |                 Github Profile                 |                                  Portfolio                                   |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"|-----------------------------------------------------|:--------------------:|:----------------------------------------------:|:----------------------------------------------------------------------------:|","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |       Sze Ying       |     [Github](https://github.com/szeyingg)      |                            [Portfolio](szeyingg)                             |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Charly Chandra    |   [Github](https://github.com/charly2312/tp)   | [Portfolio](https://ay2425s2-cs2113-f12-1.github.io/tp/team/charly2312.html) |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Edward Rafael Lukito |    [Github](https://github.com/edwardrl101)    |                           [Portfolio](edwardrl101)                           |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |        Andrew        |         [Github](https://github.com/)          |                      [Portfolio](docs/team/johndoe.md)                       |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |        Venice        | [venicephua](https://github.com/venicephua/tp) | [Portfolio](https://ay2425s2-cs2113-f12-1.github.io/tp/team/venicephua.html) |","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"-":2,"venicephua":6,"Charly2312":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"* [Design \u0026 Implementation](#design--implementation)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"* [Architecture Overview](#architecture-overview)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"* [Core Module Roles](#core-module-roles)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"* [High-Level Flow Summary](#high-level-flow-summary)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":"* [Design Principles](#design-principles)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"* [Design \u0026 Implementation](#design--implementation)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"  * [Ui + Command Registry](#ui--command-registry)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"  * [Command](#command)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"  * [Command Parser](#command-parser)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"  * [Adding Expenses](#adding-expenses)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"  * [Delete Expenses](#delete-expenses)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"  * [Edit Expenses](#edit-expenses)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"  * [List Expenses](#list-expenses)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"  * [Sorting Expenses](#sorting-expenses)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"  * [Calculating Average Expenses](#calculating-average-expenses)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"  * [Adding Categories](#adding-categories)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"  * [Listing Categories](#listing-categories)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":"  * [Total of Expenses](#total-of-expenses)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"  * [Summary of Expenses](#summary-of-expenses)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"  * [Setting Budget](#setting-budget)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"  * [Budget Left](#budget-left-command)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"  * [Help Command](#help-command)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"* [Appendix A: Product Scope](#appendix-a-product-scope)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"  * [Target User Profile](#target-user-profile)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"  * [Value Proposition](#value-proposition)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"* [Appendix B: User Stories](#appendix-b-user-stories)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"* [Appendix C: Non-Functional Requirements](#appendix-c-non-functional-requirements)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"* [Appendix D: Glossary](#appendix-d-glossary)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"* [Appendix E: Instructions for manual testing](#appendix-e-instructions-for-manual-testing)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"First of all, we would like to thank our Teaching Assistant, Lee Jun Hao Bryan, for his invaluable guidance throughout the making of FinTrek","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"and throughout the tutorials.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"This application also takes inspiration from the SE-EDU organization for its User Guide and Developer Guide.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"## Design \u0026 Implementation","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Charly2312"},"content":"FinTrek is a desktop app designed for university students to manage their expenses, optimized for use via the Command Line Interface (CLI).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Charly2312"},"content":"## Architecture Overview","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"This diagram presents a high-level overview of the core components","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"that make up the FinTrek system. It illustrates how input flows","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"from the user to command execution, expense management, and data","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"persistence, with shared utilities supporting all layers.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"![](images/ArchitectureOverview.png)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"-------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"Core Module Roles","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"-------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"[User]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"- Represents the user providing input through the CLI interface.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"[Main]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"- The entry point of the application.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"- Initializes services and launches the UI.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"[Ui]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"- Interfaces directly with the user.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"- Accepts user input and forwards it to the command system.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"- Displays output and error messages to the user.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"[CommandRegistry]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"- Maintains a registry of all supported commands.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"- Responsible for resolving input commands to actual Command objects.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"[Command]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"- Represents the logic behind each user command (e.g., add, edit, list).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"- Interacts with budget, expense data and performs operations.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"[CommandParser]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"- Parses structured arguments (e.g., /edit 2 /d lunch /$ 10).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"randust"},"content":"- Used by commands that require detailed or optional arguments.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"randust"},"content":"[Expenses]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"randust"},"content":"- Manages both regular and recurring expenses.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"- Handles all expense-related logic and state.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"[Data]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"randust"},"content":"- Responsible for loading and saving expense and budget data.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"- Interacts with the file system for persistence.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"[Budget]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"randust"},"content":"- Store budget limit information.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"randust"},"content":"- Provide warnings to user if their expenses have exceeded a certain limit.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"randust"},"content":"[Util]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"randust"},"content":"- Provides shared utility functions like input validation and date handling.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"randust"},"content":"- Used across multiple modules for consistency and reuse.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"randust"},"content":"[Messages]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"randust"},"content":"- Central repository of user-facing messages and formatting templates.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"randust"},"content":"- Ensures consistent messaging across the UI and command responses.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"randust"},"content":"-------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"randust"},"content":"High-Level Flow Summary","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"randust"},"content":"-------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"szeyingg"},"content":"1. `Main` launches the application and starts `Ui`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"szeyingg"},"content":"2. `Ui`receives input from `User` and routes it to `CommandRegistry`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"szeyingg"},"content":"3. `CommandRegistry` locates the correct `Command` to execute.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"szeyingg"},"content":"4. If needed, `Command` invokes `CommandParser` to extract arguments.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"szeyingg"},"content":"5. `Command` operates on `Expenses` to modify data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"szeyingg"},"content":"6. `Command` interacts with `Budget` to set budget limit.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"szeyingg"},"content":"7. `Expenses` interacts with `Data` to persist changes.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"szeyingg"},"content":"8. Throughout the process, `Util` and `Messages` support validation","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"randust"},"content":"   and formatting for consistent behavior and output.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"randust"},"content":"-------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"randust"},"content":"Design Principles","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"randust"},"content":"-------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"randust"},"content":"- Modular and loosely coupled design.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"randust"},"content":"- Commands are pluggable and easy to extend.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"randust"},"content":"- Shared utilities reduce duplication and improve maintainability.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"randust"},"content":"- Centralized message system ensures consistency in user output.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"szeyingg"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"randust"},"content":"# Design \u0026 Implementation","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"randust"},"content":"## Ui + Command Registry","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"venicephua"},"content":"Here’s a (partial) class diagram of the Ui + Parser + Command Registry component:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"venicephua"},"content":"![](images/ui_parser_cmd.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"venicephua"},"content":"The sequence diagram below illustrates the interactions of Ui and the Command Registry component:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"randust"},"content":"![](images/parse_w_ref.png)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"randust"},"content":"### Example Flow","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"randust"},"content":"1. User Input","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"randust"},"content":"  - The user enters a command in the CLI, such as: `/add lunch $5 /c food`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"randust"},"content":"2. CommandRouter","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"randust"},"content":"  - Receives the raw input from the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"randust"},"content":"  - Splits the input into:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"randust"},"content":"    - Command token: `/add`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"randust"},"content":"    - Arguments: `lunch $5 /c food`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"randust"},"content":"  - Removes the leading \"/\" to get the command name: \"add\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"randust"},"content":"  - Forwards the command name and arguments to CommandExecutor.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"randust"},"content":"3. CommandExecutor","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"randust"},"content":"  - Checks if the command exists by querying CommandRegistry:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"randust"},"content":"    CommandRegistry.hasCommand(\"add\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"randust"},"content":"  - If the command is valid:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"randust"},"content":"    - Retrieves the corresponding Command instance:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"randust"},"content":"      CommandRegistry.getCommand(\"add\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"randust"},"content":"  - Passes the arguments to the command\u0027s execute() method.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"randust"},"content":"4. CommandRegistry","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"randust"},"content":"  - Holds a static mapping of command names to their Command objects.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"randust"},"content":"  - All commands are registered via CommandRegistrar during app initialization.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"randust"},"content":"  - Ensures that the correct Command subclass (e.g., AddCommand) is returned based on the name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"randust"},"content":"---\u003e The control now passes to the specific Command class for execution (e.g., AddCommand),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"randust"},"content":"which will parse arguments and perform the core business logic.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"randust"},"content":"## Command","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Charly2312"},"content":"Here is a (partial) class diagram for the Command class.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"edwardrl101"},"content":"![](images/CommandClass.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Charly2312"},"content":"In this diagram, the abstract `Command` class, has private attributes of `ExpenseService` and `ExpenseReporter`. These attributes are done by calling `AppServices` for ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Charly2312"},"content":"`RECURRING_SERVICE` with `RECURRING_REPORTER` for recurring expenses or `REGULAR_SERVICE` with `REGULAR_REPORTER` for regular expenses. Every command-related classes such as `AddCommand` and `EditCommand`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Charly2312"},"content":"will extend `Command` class. In this class, `CommandParser` will be called to parse the arguments and eventually returning","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Charly2312"},"content":"`CommandResult` which signifies the end of the process with its corresponding message if it is successful or failed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"edwardrl101"},"content":"## Command Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"edwardrl101"},"content":"Here is a (partial) class diagram for the Command Parser component.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"edwardrl101"},"content":"![](images/command_parser.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"edwardrl101"},"content":"Note that `XYZ` is a placeholder for Add, Edit or ListSort. Therefore, `XYZArgumentParser` ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"edwardrl101"},"content":"represents any one of `AddArgumentParser`, `EditArgumentParser`, or `ListSortArgumentParser`, similarly","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"edwardrl101"},"content":"for the `command.xyz` package and `XYZParseResult`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"edwardrl101"},"content":"In the above diagram, `XYZArgumentParser` implements the `CommandParser` interface. It uses a `ParseResult`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"edwardrl101"},"content":"object, and creates 1 `ParseResult\u003cXYZParseResult\u003e` object upon the completion of parsing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"edwardrl101"},"content":"## Implementation","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Charly2312"},"content":"---","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Charly2312"},"content":"\u003e ### ℹ️ Notes about differences for regular and recurring expense","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Charly2312"},"content":"\u003e- The main format difference between these two types is the additional `-recurring` for calling recurring expense functions.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Charly2312"},"content":"\u003e- In addition, each type has their own manager class: `RegularExpenseManager` and `RecurringExpenseManager` are for regular and recurring expenses respectively.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Charly2312"},"content":"All the sequential diagrams below will use `RegularExpenseManager` for regular expenses to ensure consistency.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Charly2312"},"content":"\u003e- However, `/budget` and `/budget-left` commands are only applicable for regular expenses.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"randust"},"content":"### Adding Expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"edwardrl101"},"content":"The `/add` command enables users to add an expense into the list of expenses.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"venicephua"},"content":"![](images/add.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"edwardrl101"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"edwardrl101"},"content":"1. `AddCommand` receives the user\u0027s argument, which is in the form `\u003cDESCRIPTION\u003e $\u003cAMOUNT\u003e [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"szeyingg"},"content":"2. Through a parsing process shown in the reference frame below, the user\u0027s","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"edwardrl101"},"content":"argument is then parsed to obtain the following parameters:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"edwardrl101"},"content":"   - `\u003cdesc\u003e`: The expense description, limited to 100 characters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"edwardrl101"},"content":"   - `\u003camt\u003e`: The expense amount, a positive number no higher than `1 000 000 000` (one billion)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"edwardrl101"},"content":"   - `[\u003ccategory\u003e]` The expense category, limited to 100 characters, and set by default to `UNCATEGORIZED` if left empty","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"edwardrl101"},"content":"   - `[\u003cdate\u003e]` The date for the expense of the format `dd-MM-yyyy`, which is set by default to today\u0027s date","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"edwardrl101"},"content":"   if left empty","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"edwardrl101"},"content":"3. `AddCommand` then creates a new `Expense` object called `newExpense`,  by instantiating `new Expense(\u003cdesc\u003e, \u003camt\u003e, \u003ccategory\u003e, \u003cdate\u003e)` which ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"edwardrl101"},"content":"is the constructor for the `Expense` object. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"edwardrl101"},"content":"4. `AddCommand` then proceeds to add this new expense into the list:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"edwardrl101"},"content":"   - It calls `addExpense(newExpense)` on `ExpenseService`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"edwardrl101"},"content":"   - This internally invokes `addExpense(newExpense)` on `RegularExpenseManager`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"edwardrl101"},"content":"   - `RegularExpenseManager` then adds `newExpense` into the current list of expenses, and the confirmation is","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"edwardrl101"},"content":"   subsequently returned to `AddCommand`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"szeyingg"},"content":"#### Parsing logic of `AddCommand` inputs:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"szeyingg"},"content":"![](images/add_parse.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"szeyingg"},"content":"1. `AddCommand` calls `parse()` in `AddArgumentParser` which validates arguments through regex matching,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"szeyingg"},"content":"and invoking various methods from `InputValidator`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"szeyingg"},"content":"2. Parser creates an instance of `AddParseResult` with validated inputs.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"szeyingg"},"content":"3. If parsing was successful and all inputs are valid, `AddArgumentParser` returns a successful result.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"szeyingg"},"content":"   - Otherwise, failure result is returned instead.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"randust"},"content":"### Delete Expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"randust"},"content":"The `/delete` command enables users to remove an expense from the expense list by specifying its index.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"venicephua"},"content":"![](images/delete.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"randust"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"randust"},"content":"1. DeleteCommand receives the user\u0027s argument (e.g., an index to delete).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"randust"},"content":"2. The command first checks for invalid or missing input:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"randust"},"content":"   - Calls InputValidator.isNullOrBlank(args)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"randust"},"content":"   - If the input is blank or null, an error is returned.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"randust"},"content":"3. It then checks whether the input is a valid positive integer:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"randust"},"content":"   - Calls InputValidator.isValidPositiveInteger(args)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"randust"},"content":"   - This ensures the input is a proper index number.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"randust"},"content":"4. The command calls countExpenses() to determine the total number (N)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"randust"},"content":"   of current expenses:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"randust"},"content":"   - This invokes ExpenseService.getLength()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"randust"},"content":"   - Which forwards to RegularExpenseManager.getLength()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"randust"},"content":"5. To ensure the index is within range:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"randust"},"content":"   - It calls InputValidator.isInValidIntRange(args, 1, N)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"randust"},"content":"6. If the index is valid, the command proceeds to delete:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"randust"},"content":"   - It calls popExpense(index) on ExpenseService","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"randust"},"content":"   - This internally calls remove(index) on RegularExpenseManager","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"randust"},"content":"   - The removed Expense object is returned to the command","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"randust"},"content":"7. After deletion, the command may call countExpenses() again:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"randust"},"content":"   - This allows it to report the new size (M) of the expense list","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"randust"},"content":"   - The new count is retrieved in the same way via getLength()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"szeyingg"},"content":"### Edit Expenses","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"szeyingg"},"content":"The `/edit` command allows us the user modify `DESCRIPTION`, `AMOUNT`, `CATEGORY` and `DATE` of an expense","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"szeyingg"},"content":"![](images/editCommand.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"szeyingg"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"szeyingg"},"content":"1. The user launches the application and adds some expenses into the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"szeyingg"},"content":"2. The user executes `/edit 2 /$ 10` to edit a regular expense with `INDEX` 2 in the list and change its `AMOUNT` to `$10` now.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"szeyingg"},"content":"   The `execute()` will call `parse(arguments)`to parse all the parameters needed to be edited.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"szeyingg"},"content":"3. The `INDEX` will be checked to see if it lies within the lower and upper bound.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"szeyingg"},"content":"   The lower bound is set to 1, while the upper bound is done by calling `countExpenses()`, on `ExpenseService`, \u0027- 1\u0027 is because the indexes start from zero.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"szeyingg"},"content":"4. Upon validation of the index, it will call `getExpense(index)` on `ExpenseService` to get an `Expense` object: `original` to be modified.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"szeyingg"},"content":"5. An `Expense` object called `updated` will be compared with the `original` with the parameter needed to be changed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"szeyingg"},"content":"6. Next, it will call `popExpense(index)` to remove `original` from the list and then `insertExpense(index, updated)` to insert the updated expense at the same `index`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"szeyingg"},"content":"7. Finally, it will return a confirmation by returning `new CommandResult(true, message)` in which `message` is the successful message after updating the expense.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"szeyingg"},"content":"   This signifies the end and successful process of `/edit`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"randust"},"content":"### List Expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"edwardrl101"},"content":"The `/list` command lists down the current list of expenses, according to the order the expenses","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"edwardrl101"},"content":"have been added.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"venicephua"},"content":"![](images/list.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"edwardrl101"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"edwardrl101"},"content":"1. The user launches the application and adds some expenses into the application.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"edwardrl101"},"content":"2. The user executes `/list` to view their current list of expenses.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"edwardrl101"},"content":"3. `ListCommand` then proceeds to obtain the `String` equivalent of the current list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"edwardrl101"},"content":"of expenses:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"edwardrl101"},"content":"   - It calls `listExpenses()` on `ExpenseReporter`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"edwardrl101"},"content":"   - This internally invokes `getAll()` on `RegularExpenseManager`, to which ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"edwardrl101"},"content":"   `RegularExpenseManager` would return `ArrayList\u003c\u003e(Expenses)`, the current list of ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"edwardrl101"},"content":"   expenses in the form of an `ArrayList\u003c\u003e` object.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"edwardrl101"},"content":"   - `ExpenseReporter` executes `listExpenseBuilder(Expenses)` to obtain","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"edwardrl101"},"content":"   the `String` equivalent of the list of expenses from `Expenses`, an `ArrayList\u003c\u003e` object.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"edwardrl101"},"content":"   - The list of expenses in the form of a `String` is then returned to `ListCommand`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"edwardrl101"},"content":"4. `ListCommand` displays the current list of expenses along with a successful command message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"szeyingg"},"content":"### Sorting Expenses","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"szeyingg"},"content":"The `/list-sort` command enables users to display expense list in a sorted order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"szeyingg"},"content":"![](images/list_sort.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Charly2312"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"szeyingg"},"content":"1. The user executes `/list-sort name asc` to view expense list for sorted a specific way: by `NAME` in `ASCENDING` order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"szeyingg"},"content":"2. The `execute()` method calls `parse(\u003cargs\u003e)` to invoke a parsing process to obtain the following parameters:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"szeyingg"},"content":"    - `\u003csortBy\u003e`: condition in which list would be sorted by, in this case `NAME`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"szeyingg"},"content":"    - `\u003csortDir\u003e`: direction in which list would be sorted by, in this case `ASC`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"szeyingg"},"content":"3. Using the parameters obtained, the type of comparator is determined through `getComaparator(sortBy)`,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"szeyingg"},"content":"   while `setDirection()` reverses the comparator if `sortDir` is descending.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"szeyingg"},"content":"4. The `getAllExpenses()` method in `ExpenseService` is then called,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"szeyingg"},"content":"   which retrieves an ArrayList of `Expense` objects from the `getAll()` method in `RegularExpenseManager`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"szeyingg"},"content":"5. This list of expenses is sorted using the comparator obtained in step 3,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"szeyingg"},"content":"   and converted to a string using `listExpenseBuilder()` in `ExpenseReporter`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"szeyingg"},"content":"### Calculating Average Expenses","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"szeyingg"},"content":"The `/average` command enables users to calculate the average amount out of their","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"szeyingg"},"content":"current list of expenses","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"szeyingg"},"content":"![](images/average.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"szeyingg"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"szeyingg"},"content":"1. The user executes `/average` to get the average amount from their list of expenses.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"szeyingg"},"content":"2. `AverageCommand` invokes `getAverage()` on `ExpenseReporter`, which then returns the `average`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"szeyingg"},"content":"### Adding Categories","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"szeyingg"},"content":"The `/add-category` command enables users to add custom categories to the list of valid categories.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"szeyingg"},"content":"![](images/add_category.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"szeyingg"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"szeyingg"},"content":"1. The user executes `/add-category shopping` to add category `SHOPPING`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"szeyingg"},"content":"2. The command calls methods in `InputValidator` to verify if input is valid:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"szeyingg"},"content":"   - `isNullOrBlank()` checks if input is empty.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"szeyingg"},"content":"   - `containsWhiteSpace()` checks if input contains spaces.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"szeyingg"},"content":"   - `isValidStringLength()` checks if input exceeds 100 characters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"szeyingg"},"content":"3. If input is valid, command assigns `newCategory` to the valid input","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"szeyingg"},"content":"4. Command checks if category already exists by calling `isValidCategory()` in `InputValidator`, which checks validity with `CategoryManager`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"szeyingg"},"content":"5. If category is valid, command calls `addCustomCategory()` which invokes `add()` in `CategoryManager` to successfully add category to list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"szeyingg"},"content":"### Listing Categories","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"szeyingg"},"content":"The `/list-category` command enables users to view the list of valid categories","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"szeyingg"},"content":"![](images/list_category.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"szeyingg"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"szeyingg"},"content":"1. The user executes `/list-category` to check list of valid categories.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"szeyingg"},"content":"2. Command calls `getDefaultCategories()` and `getCustomCategories()` in `CategoryManager`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"szeyingg"},"content":"which both internally invokes `getCategoriesAsString()` to convert a Hash Set of categories to a string.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"szeyingg"},"content":"3. CategoryManager returns default and custom categories as separate strings to be combined ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"szeyingg"},"content":"to form the list of categories displayed to user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Charly2312"},"content":"### Total of Expenses","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Charly2312"},"content":"The `/total` command allows users to get the total of all regular expenses in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Charly2312"},"content":"![](images/total.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Charly2312"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Charly2312"},"content":"1. The user launches the application and adds some expenses into the application.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Charly2312"},"content":"2. The user executes `/total` which will lead it to `TotalCommand`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Charly2312"},"content":"3. It will then invoke `getTotal()` on `ExpenseReporter.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Charly2312"},"content":"4. Next, `getAll()` is called onto `RegularExpenseManager` to get the whole `ArrayList` of regular expenses.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Charly2312"},"content":"5. Afterward, it will call set the direction of comparison by calling `setDirection(sortDir, comparator)`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Charly2312"},"content":"   If sortDir is `DSC`, it will reverse the comparator since it was initially built in the `ASC` - ascending direction.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Charly2312"},"content":"6. `ExpenseReporter` will call the function `sum()` to get the sum of all the expenses in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Charly2312"},"content":"7. The function will then return `double Total` to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"randust"},"content":"### Summary of Expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"venicephua"},"content":"The `/summary` command prints out the total spending for each category from the list of regular expenses. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Charly2312"},"content":"It also prints out the `HIGHEST SPENDING` category with the associated amount along with the `GRAND TOTAL` of the regular expenses. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"venicephua"},"content":"Alternatively, the command prints out the total spending in a specific category, together with all the expenses in that category.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"venicephua"},"content":"![](images/summary.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"randust"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"randust"},"content":"1. The user launches the application and adds some expenses into the application.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"venicephua"},"content":"2. The user executes `/summary \u003cargs\u003e` command to view the overall summary of the current expenses.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"venicephua"},"content":"   The `execute()` command calls `ExpenseReporter#getTotalByCategory()` and receives `categoryTotals`, a map of the categories and their total spending. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"venicephua"},"content":"3. `execute()` then calls `InputValidator#isNullorBlank(\u003cargs\u003e)` to check if `\u003cargs\u003e` is empty.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"venicephua"},"content":"![](images/summary_all.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"venicephua"},"content":"4. If `\u003cargs\u003e` is empty, `execute()` calls `ExpenseReporter#listAllCategoryTotals(categoryTotals)`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"venicephua"},"content":"   - The categories are sorted by name is ascending order and formatted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"venicephua"},"content":"   - `ExpenseReporter#getHighestCategory` finds the category with the highest spending.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"venicephua"},"content":"   - `ExpenseReporter#getTotal()` calculates the grand total.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"venicephua"},"content":"   - A formatted string with all category totals, highest spending category, and grand total is returned.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"venicephua"},"content":"![](images/summary_single.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"venicephua"},"content":"5. If `\u003cargs\u003e` is non-empty, `execute()` calls `ExpenseReporter#listSingleCategoryTotal(categoryTotals, \u003cargs\u003e)`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"venicephua"},"content":"   - For example, let `\u003cargs\u003e` be `food`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"venicephua"},"content":"   - `ExpenseReporter#getExpensesByCategory(\"food\")` filters the expense list and returns `categoryExpenses`, a list of expenses in the category `FOOD`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"venicephua"},"content":"   - `ExpenseReporter#listExpenseBuilder(categoryExpenses)` returns a formatted string of the expenses in the category `FOOD`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"venicephua"},"content":"   - A formatted string with the total spending and all the expenses in `FOOD` is returned.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"venicephua"},"content":"6. `SummaryCommand` returns the formatted summary string to the parser, which prints the message to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"Charly2312"},"content":"### Setting Budget","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"Charly2312"},"content":"The `/budget` command enables users to set a monthly budget.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"Charly2312"},"content":"![](images/budget.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"Charly2312"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"Charly2312"},"content":"1. The user executes `/budget $100` to set budget as `100`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"Charly2312"},"content":"2. The command calls methods in `InputValidator` to verify if input is valid:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Charly2312"},"content":"    - `isNullOrBlank()` checks if input is empty.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"Charly2312"},"content":"    - `isValidPostiveDouble()` checks if amount is a valid double value more than 0.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"Charly2312"},"content":"3. If input amount is valid, command instantiates `BudgetManager` which internally calls `setBudget()` to set amount as budget.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"Charly2312"},"content":"### Budget Left Command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Charly2312"},"content":"The `/budget-left` command allows users to check their monthly budget, total regular expenses and the budget left.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"Charly2312"},"content":"![](images/budgetLeft.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"Charly2312"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"Charly2312"},"content":"1. The user executes `/budget-left` to find out the current monthly budget, total expenses and budget left, also shown as a percentage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"Charly2312"},"content":"2. The `BudgetLeftCommand` class will call `getBudget()` on `BudgetManager` to know the monthly budget set up earlier.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"Charly2312"},"content":"This will return a `double` type of current `budget`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"Charly2312"},"content":"3. It will also call `getTotal()` on `ExpenseReporter` to get the total expenses of current regular expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"Charly2312"},"content":"This will return a `double` type of current `total` expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"Charly2312"},"content":"5. Afterward, it will calculate `budgetLeft` by `budget - total` and `leftPercentage` by `budgetLeft/total * 100.0`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"Charly2312"},"content":"6. These values will then be shown to the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"edwardrl101"},"content":"### Help Command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"edwardrl101"},"content":"The `/help` command allows users to get more information about the commands in the app. The user can input","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"edwardrl101"},"content":"a known command topic, e.g. `add`, after the `/help` command to get more information","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"edwardrl101"},"content":"about just the `add` command. Alternatively, if the user just keys in `/help` without additional","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"edwardrl101"},"content":"parameters, then information about all the commands will be displayed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"szeyingg"},"content":"![](images/help.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"edwardrl101"},"content":"#### Step-by-Step Execution Flow","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"edwardrl101"},"content":"1. The user executes `/help \u003cargs\u003e` to view more information about the commands in the app.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"edwardrl101"},"content":"2. The `execute()` command calls `InputValidator#isNullorBlank(\u003cargs\u003e)` to check if `\u003cargs\u003e` is empty.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"edwardrl101"},"content":"3. If `\u003cargs\u003e` is empty, `execute()` calls `CommandRegistry#getAllCommandDescriptions()`. This will return","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"edwardrl101"},"content":"all the available command descriptions and display them to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"edwardrl101"},"content":"4. If `\u003cargs\u003e` is non-empty, then `execute()` will trim whitespaces of `\u003cargs\u003e`,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"edwardrl101"},"content":"creating a String `keyword` object.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"edwardrl101"},"content":"5. `execute()` will then loop through all available commands `cmd`, checking if `keyword` matches one of them. If it does:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"edwardrl101"},"content":"   * `execute()` invokes `CommandRegistry#getCommand(cmd)` which will return the matched command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"edwardrl101"},"content":"   * `execute()` then calls the `getDescription()` method on the matched `Command` object to retrieve its description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"edwardrl101"},"content":"   * This description is then displayed to the user as part of the help output.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"szeyingg"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"randust"},"content":"## Expense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"randust"},"content":"![](images/Expense.png)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"randust"},"content":"### High-Level Responsibilities \u0026 Flow","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"randust"},"content":"1. [Command]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"randust"},"content":"   - Represents an abstract base for all user commands.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"randust"},"content":"   - Each command (e.g., AddCommand, EditCommand) interacts with","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"randust"},"content":"     expense-related logic via the service layer.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"randust"},"content":"2. [AppServices]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"randust"},"content":"   - A central factory that provides pre-instantiated shared services.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"randust"},"content":"   - Holds singleton instances of:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"randust"},"content":"     - ExpenseService (for data manipulation)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"randust"},"content":"     - ExpenseReporter (for analytics and summaries)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"randust"},"content":"   - It decouples command logic from low-level object creation.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"randust"},"content":"3. [ExpenseService]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"randust"},"content":"   - Provides a unified API to manipulate expenses.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"randust"},"content":"   - Delegates actual data operations to the appropriate expense manager","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"randust"},"content":"     (either regular or recurring).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"randust"},"content":"4. [ExpenseReporter]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"randust"},"content":"   - Offers read-only views over expense data.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"randust"},"content":"   - Used for listing, calculating totals, category summaries, etc.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"randust"},"content":"5. [RecurringExpenseManager] and [RegularExpenseManager]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"randust"},"content":"   - Singleton classes that manage recurring and regular expenses respectively.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"randust"},"content":"   - Internally maintain a list of Expense objects.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"randust"},"content":"   - Both implement the shared [ExpenseOperation] interface.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"randust"},"content":"6. [ExpenseOperation] (Interface)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"randust"},"content":"   - Abstracts core methods like `add`, `remove`, `get`, and `clear`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"randust"},"content":"   - Allows service and reporter classes to be reused across both","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"randust"},"content":"     recurring and regular modes.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"randust"},"content":"7. [Expense]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"randust"},"content":"   - The base model class represents a single financial transaction.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"randust"},"content":"   - Stores fields like description, amount, category, and date.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"randust"},"content":"8. [CategoryManager]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"randust"},"content":"   - Stores available categories of expenses.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"randust"},"content":"   - User-defined categories can be added through the command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"randust"},"content":"  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"randust"},"content":"### Example Flow","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"randust"},"content":"When a user runs a command like `/add`:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"randust"},"content":"1. The AddCommand class (a subclass of Command) is executed.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"randust"},"content":"2. Through AppServices, it obtains the correct ExpenseService instance.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"randust"},"content":"3. ExpenseService adds the new Expense to either the RegularExpenseManager or RecurringExpenseManager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"randust"},"content":"If the user runs a query command like `/summary`, the command calls ExpenseReporter to aggregate data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"randust"},"content":"If the user runs `/add-category`, the command adds a new category through CategoryManager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"randust"},"content":"## Logging","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"Charly2312"},"content":"`Logger.log` was used throughout the code to help the process of debugging and ensuring developers what commands or classes are called in the process.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"Charly2312"},"content":"This is set to `Level.FINE` to ensure the logs are not printed out when running the product. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"Charly2312"},"content":"All command executions, system errors, and critical warnings should be logged using Java\u0027s `Logger` to help with debugging and audits.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"randust"},"content":"## Input handling","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"randust"},"content":"All user inputs will be forced to be lowercase to be compared with the HashMap for the functions created for general and recurring expenses.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"edwardrl101"},"content":"## Appendix A: Product Scope","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"Charly2312"},"content":"University Students","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"Charly2312"},"content":"We would like to help students to manage their money wisely through creating a financial chatbot: FinTrek.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"Charly2312"},"content":"Hopefully, students will be more financially conscious and able to manage their budget wisely. ","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"Charly2312"},"content":"1. Provide easy access to track and record expenses","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"Charly2312"},"content":"2. Reduce the hassle of manually calculating expenses ","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"Charly2312"},"content":"3. Generate summaries and trends for user spending","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"Charly2312"},"content":"4. Provide financial awareness to users","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"Charly2312"},"content":"5. Simplify the process of splitting expenses amongst friends ","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"Charly2312"},"content":"6. Helpful for students to manage their budget","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"Charly2312"},"content":"7. More secure and portable than physical records","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"edwardrl101"},"content":"## Appendix B: User Stories","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"| Version | As a ...           | I want to ...                                                                         | So that I can ...                                                  |","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"edwardrl101"},"content":"|---------|--------------------|---------------------------------------------------------------------------------------|--------------------------------------------------------------------|","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"edwardrl101"},"content":"| v1.0    | new user           | ask the bot for a guide on the commands                                               | know how to use the application                                    |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"edwardrl101"},"content":"| v1.0    | student            | add an expense into the list of expenses                                              | keep track of my expenses                                          |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"edwardrl101"},"content":"| v1.0    | student            | delete an expense from the list of expenses                                           | remove something I wrongly listed                                  |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"edwardrl101"},"content":"| v1.0    | lazy student       | automatically calculate statistics pertaining to my expenses                          | save a lot of time by not counting manually                        |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"edwardrl101"},"content":"| v2.0    | student            | edit the details of an expense from the current list of expenses                      | have more flexibility to edit details in case I enter them wrongly |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"venicephua"},"content":"| v2.0    | analytical student | get a summary of the total spending for each category                                 | know where most of my monthly budget goes to                       |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"venicephua"},"content":"| v2.0    | lazy student       | set up recurring spending or expenses                                                 | save time by not adding them manually every month                  |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"edwardrl101"},"content":"| v2.0    | meticulous student | sort my list of expenses based on dates, categories, or amount                        | better organize my list of expenses                                |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"edwardrl101"},"content":"| v2.0    | forgetful student  | set up a budget limit or receive warnings when I will almost exceed my monthly budget | save money by not accidentally overspending                        |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"edwardrl101"},"content":"| v2.0    | typical user       | save my list of expenses into a save file                                             | easily load them whenever I enter the application                  |","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"edwardrl101"},"content":"    ","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"edwardrl101"},"content":"## Appendix C: Non-Functional Requirements","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"edwardrl101"},"content":"### 1. Usability","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"edwardrl101"},"content":"- The FinTrek app should be easy and intuitive to use through a Command Line Interface (CLI) -- no Graphical User Interface (GUI) required.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"edwardrl101"},"content":"- Users should be able to learn the basic commands within 5 minutes with assistance from the `/help`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"edwardrl101"},"content":"command or the User Guide.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"edwardrl101"},"content":"- A user with above average typing speed for regular English text (i.e. not code) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"edwardrl101"},"content":"### 2. Performance","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"edwardrl101"},"content":"- Commands should be processed within 1 second under normal usage (under 1000 expenses)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"edwardrl101"},"content":"- The system should support up to 1000 expense entries without noticeable lag.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"edwardrl101"},"content":"### 3. Portability","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"venicephua"},"content":"- The application should run on any mainstream OS with Java 17 installed (Windows, macOS, Linux, etc.).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"edwardrl101"},"content":"- No installation should be required other than compiling and running the `.jar` file via a Java-compatible terminal.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"edwardrl101"},"content":"### 4. Data Persistence","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"edwardrl101"},"content":"- All expense and budget data persists between local runs of the application as they saved to a local save file (`data.txt`).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"venicephua"},"content":"- Saving should occur automatically after each command (`/add`, `/delete`, `/edit`, etc.).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"edwardrl101"},"content":"## Appendix D: Glossary","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"Charly2312"},"content":"* *Regular Expense* - An expense that has been done, usually on the day of addition of expense.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"Charly2312"},"content":"* *Recurring Expense* - An expense that is repeated monthly and will be automatically added into the regular expense list on the stipulated date.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"randust"},"content":"* *Manager* - A class that helps to specify which list to target, Regular Expense or Recurring Expense list","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"Charly2312"},"content":"* *ExpenseService* - A class that manages simple `ArrayList` functions such as `add()` and `remove()`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"Charly2312"},"content":"* *ExpenseReporter* - A class that manages more complicated functions such as `getTotalByCategory()` and `getHighestCategory()`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"edwardrl101"},"content":"## Appendix E: Instructions for manual testing","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"randust"},"content":"### CommandRouter","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"randust"},"content":"**Purpose**: To verify that user input is correctly interpreted and dispatched to the appropriate command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"randust"},"content":"##### Correct behavior","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"randust"},"content":"1. Launch the app using `FinTrek.main()`.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"randust"},"content":"2. Type the following commands one at a time:","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"randust"},"content":"- `/add lunch $10 /c food`  ","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"randust"},"content":"  → Expected: Expense is added with category `food`. Success message is printed.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"randust"},"content":"- `/list`  ","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"randust"},"content":"  → Expected: Displays a list containing the added expense.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"randust"},"content":"- `/delete 1`  ","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"randust"},"content":"  → Expected: Deletes the first expense. Success message with updated count is printed.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"randust"},"content":"- `/total`  ","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"randust"},"content":"  → Expected: Displays the total amount of all current expenses.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"randust"},"content":"- `/average`  ","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"randust"},"content":"  → Expected: Displays the average amount of all current expenses.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"randust"},"content":"- `/help add`  ","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"randust"},"content":"  → Expected: Displays detailed help message for the `/add` command.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"randust"},"content":"- `/add-reccuring mobile plan $20 /c utilities`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"Charly2312"},"content":"  → Expected: The expense will be added to the recurring list. This recurring expense will be added once the app restarted.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"randust"},"content":"- `/add-recurring installment $10 /c utilities 01-01-2025`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"venicephua"},"content":"  → Expected: The expense will be added to the recurring list and will be added monthly to the regular expense list on the first day of every month.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"Charly2312"},"content":"    If the input is today\u0027s date, this recurring expense will be added to the regular list upon restarting the app. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"randust"},"content":"##### Invalid command formats","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"randust"},"content":"Type the following commands one at a time:","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"randust"},"content":"- `add lunch $10`  ","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"randust"},"content":"  → Expected: Error message — must start with \u0027/\u0027.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"randust"},"content":"- `/blah blah`  ","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"randust"},"content":"  → Expected: Error message — invalid command.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"randust"},"content":"- *(Empty input or whitespace only)*  ","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"randust"},"content":"  → Expected: Error message — must enter a command starting with \u0027/\u0027.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"Charly2312"},"content":"- `/add mobile plan $20 1-1-2025`  ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"Charly2312"},"content":"  → Expected: Error message — key in \u0027/help add\u0027 for more information","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"randust"},"content":"**Note:** All errors and successful command parsing are logged using the Java `Logger`.","lastModifiedDate":"2025-03-29","isFullCredit":false}],"authorContributionMap":{"edwardrl101":138,"szeyingg":93,"randust":240,"-":31,"Charly2312":131,"venicephua":42}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"# FinTrek","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"FinTrek is a desktop app designed for university students to manage their expenses. It is optimized for use via the Command Line Interface (CLI) so that frequent tasks can be easily performed by keying in commands.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"venicephua":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"**FinTrek** is a simple and intuitive Command Line Interface (CLI) tool that helps users track their personal expenses. Users can quickly add, view, analyze, and manage their expenses using short commands. It is designed for speed, simplicity, and ease of use.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"---","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"1. Ensure that you have **Java 17** or above installed on your computer.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"2. Download the latest release v2.1 `tp.jar`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"3. Copy the file into your desired folder on your computer. This folder will be set as the _home folder_ for FinTrek.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"4. Open a command terminal, `cd` into the folder you put the","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"`.jar` file in, and use the `java -jar tp.jar` command to run the application. You will see something similar to","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"what is shown below.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"   ![img.png](images/img.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":"5. Input some commands to start","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":"managing your expenses or type `/help` to learn about the commands.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"Alternatively, refer to the [Features](#Features) section for the full list of","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"commands and its details.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"\u003e #### ❗CAUTION","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"\u003e - Only enter a command after you see the leading input arrow `\u003e`. Commands will only be read in after `\u003e`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"\u003e - Do not enter Ctrl+C or Ctrl+Z as this will cause the program to end.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"## Types of Expenses","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Charly2312"},"content":"### Regular Expenses","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"1. Users can add regular expenses into the spending list by keying in the `DESCRIPTION` and `AMOUNT`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"with optional parameters `CATEGORY` and `DATE`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"2. There are functions to modify the list or a specific regular expense which are","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"elaborated in the Features section below.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Charly2312"},"content":"3. Additionally, users can also set a `Budget` through our function which will send out a reminder","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"upon comparison of the total spending with the set budget.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Charly2312"},"content":"### Recurring Expenses","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Charly2312"},"content":"1. A recurring expense reduces the need for users to key in their repeating monthly or yearly","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"expenses into a recurring expense list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"2. These expenses will be added automatically into the regular expenses list upon startup if the ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"`DATE` of this recurring expense matches today\u0027s date.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"venicephua"},"content":"3. This type of expense has similar functions above with a slight difference in format `/COMMAND-recurring`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Charly2312"},"content":"explained further in the [Features](#features) section for [recurring expenses](#recurring-expenses-1) below.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"---","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"## Features","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"---","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"\u003e ### ℹ️ Notes about the command format:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"\u003e- Words in `UPPER_CASE` are the parameters which are expected from the user,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"e.g. in `/add \u003cDESCRIPTION\u003e $\u003cAMOUNT\u003e`, `DESCRIPTION` is a parameter which can be input as `/add Food`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"venicephua"},"content":"\u003e- Items in square brackets are optional. e.g. `/add \u003cDESCRIPTION\u003e $\u003cAMOUNT\u003e [/c\u003cCATEGORY\u003e] [/d\u003cDATE\u003e]` can be instantiated as `/add ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"/Coffee $5.00 /c Beverages` or as `/add Coffee $5.00`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"\u003e- Extraneous parameters for commands that do not take in parameters (such as `list`, `average`, or `total`) will be ignored, ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"e.g. if the command specifies `list 2113`, it will be interpreted as `list`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"edwardrl101"},"content":"---","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Charly2312"},"content":"## Regular Expense","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Charly2312"},"content":"### ➕ Adding an Expense: `/add` (with `/add-category`)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Charly2312"},"content":"Adds a new expense to your list to an **existing** category or `UNCATEGORIZED`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"**Format**:","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Charly2312"},"content":"/add \u003cDESCRIPTION\u003e $\u003cAMOUNT\u003e [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Charly2312"},"content":"* `\u003cDESCRIPTION\u003e` has a maximum character limit of `100`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"edwardrl101"},"content":"* `\u003cAMOUNT\u003e` must be a positive number that is no higher than `1,000,000,000`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"edwardrl101"},"content":"  (one billion).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Charly2312"},"content":"* `\u003cDATE\u003e` must be in the format of `dd-MM-yyyy`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Charly2312"},"content":"* `\u003cCATEGORY\u003e` will be converted to uppercase in the list of expenses.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Charly2312"},"content":"* `/c` and `\u003cCATEGORY\u003e` are optional. Default is `UNCATEGORIZED`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Charly2312"},"content":"  * if a `NEW_CATEGORY` does not exist in the list, it must be added","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Charly2312"},"content":"  first into the list using `/add-category \u003cNEW_CATEGORY\u003e`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Charly2312"},"content":"* `/dt` and `\u003cDATE\u003e` are optional. Default is today\u0027s `date`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"edwardrl101"},"content":"**Examples**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"edwardrl101"},"content":"/add Coffee $5.00 ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"edwardrl101"},"content":"/add Textbook $12.00 /c studies ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Charly2312"},"content":"/add MRT $3.00 /dt 04-05-2025","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"edwardrl101"},"content":"**Example Outputs**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"edwardrl101"},"content":"Expense added successfully: Coffee | $5.00 | UNCATEGORIZED | 05-04-2025","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"edwardrl101"},"content":"Expense added successfully: Textbook | $12.00 | STUDIES | 05-04-2025","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"edwardrl101"},"content":"Expense added successfully: MRT | $3.00 | UNCATEGORIZED | 04-05-2025","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"randust"},"content":"---","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Charly2312"},"content":"### ❌ Deleting an Expense: `/delete` ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"randust"},"content":"Removes an expense by its number in the list.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"randust"},"content":"**Format**:","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"edwardrl101"},"content":"/delete \u003cEXPENSE_NUMBER\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"randust"},"content":"**Example**:","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"randust"},"content":"/delete 2","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"edwardrl101"},"content":"**Example Output**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"edwardrl101"},"content":"Expense \"Coffee | $5.00 | FOOD | 05-04-2025\" deleted successfully. Remaining expenses: 1","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"edwardrl101"},"content":"Expense \"Mobile Data | $20.00 | NECESSITIES | 05-03-2025\" deleted successfully. Remaining recurring expenses: 1","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"randust"},"content":"---","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Charly2312"},"content":"### ✏️ Editing an Expense: `/edit` ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"randust"},"content":"Edits an existing expense\u0027s description, amount, category, or date. This allows you to fix mistakes or update details of a previously recorded expense.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"randust"},"content":"**Format**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"randust"},"content":"/edit \u003cINDEX\u003e [/d \u003cDESCRIPTION\u003e] [/$ \u003cAMOUNT\u003e] [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"randust"},"content":"- `\u003cINDEX\u003e` is the 1-based position of the expense in the list (e.g., from `/list`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"randust"},"content":"- `/d`, `/$`, `/c`, and `/dt` are optional flags to update the description, amount, category, and date, respectively, but requires at least one optional flag. Their order cannot be swapped. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"randust"},"content":"- The arguments require at least a space character between the flag and the value, e.g. `/d some_description`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"randust"},"content":"- `\u003cCATEGORY\u003e` must be an existing category (case invariant).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"randust"},"content":"- `\u003cDESCRIPTION\u003e` has a maximum character limit of `100` and cannot accept any string that contains \u0027/$\u0027, \u0027/c\u0027 and \u0027/dt\u0027.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"edwardrl101"},"content":"- `\u003cAMOUNT\u003e` must be a positive number that is no higher than `1,000,000,000`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"edwardrl101"},"content":"  (one billion).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"randust"},"content":"- `\u003cDATE\u003e` must be in the format of `dd-MM-yyyy`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"randust"},"content":"- If a field is omitted, the original value will be retained.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"randust"},"content":"**Example**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"randust"},"content":"/edit 2 /d Dinner /$ 25.00 /c Food /dt 25-12-2024","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"edwardrl101"},"content":"**Example Output**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"edwardrl101"},"content":"Expense at index 2 updated successfully:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"randust"},"content":"Dinner | $25.00 | FOOD | 25-12-2024","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"randust"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Charly2312"},"content":"### 📋 Listing Expenses: `/list` ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"randust"},"content":"Displays all recorded expenses.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"randust"},"content":"**Format**:","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"randust"},"content":"/list","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"edwardrl101"},"content":"If extraneous parameters are supplied to `/list`, e.g. `/list everything please`, then","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"edwardrl101"},"content":"`/list` would simply behave as usual and display all recorded expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"szeyingg"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Charly2312"},"content":"### 🗃️ Sorting Expenses: `/list-sort` ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"szeyingg"},"content":"Sorts expense list based on a specified field and sorting order.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"szeyingg"},"content":"**Format**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Charly2312"},"content":"/list-sort \u003cSORT FIELD\u003e \u003cSORT DIRECTION\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"venicephua"},"content":"- `\u003cSORT FIELD\u003e` specifies the attribute to sort by. Available options are:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"szeyingg"},"content":"   - `name` - sorts alphabetically by description,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"szeyingg"},"content":"   - `amount` - sorts by amount","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"szeyingg"},"content":"   - `category` - sorts by category","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"szeyingg"},"content":"   - `date` - sorts chronologically by date,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"szeyingg"},"content":"- `\u003cSORT DIRECTION\u003e` determines the order in which list is display, Available options are:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Charly2312"},"content":"   - `asc` - A to Z for text, smallest to largest for numbers","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Charly2312"},"content":"   - `dsc` - Z to A for text, largest to smallest for numbers","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"szeyingg"},"content":"**Example**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Charly2312"},"content":"/list-sort name asc","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"szeyingg"},"content":"This will list out expenses sorted in ascending alphabetical order by name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"edwardrl101"},"content":"**Example Output:**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"edwardrl101"},"content":"Expenses sorted by NAME (ASCENDING): ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"edwardrl101"},"content":"1. Books | $20.00 | STUDIES | 05-04-2025","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"edwardrl101"},"content":"2. Coffee | $5.00 | FOOD | 05-04-2025","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"edwardrl101"},"content":"3. MRT | $3.00 | TRANSPORT | 05-04-2025","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"randust"},"content":"---","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Charly2312"},"content":"### 🧮 Calculating Total Expenses: `/total` ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"randust"},"content":"Shows the total amount spent.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"randust"},"content":"**Format**:","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"randust"},"content":"/total","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"edwardrl101"},"content":"Note that if the total amount is greater than `10,000,000,000` (ten billion),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"edwardrl101"},"content":"then an error message will be returned. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"edwardrl101"},"content":"Also note that if extraneous parameters are supplied to `/total`, e.g. `/total cs2113`, then","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"edwardrl101"},"content":"`/total` would simply behave as usual and return the total amount spent.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"randust"},"content":"---","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Charly2312"},"content":"### 📊 Calculating Average Expense: `/average` ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Charly2312"},"content":"#### General Expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"edwardrl101"},"content":"Displays the average amount spent per recorded expense. Note that `/average` would","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"edwardrl101"},"content":"fail to work and will return an error message if the `total` amount of expenses in the list","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"edwardrl101"},"content":"exceeds `10_000_000_000` (ten billion).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"randust"},"content":"**Format**:","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"randust"},"content":"/average","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"edwardrl101"},"content":"If extraneous parameters are supplied to `/average`, e.g. `/average hello!`, then","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"edwardrl101"},"content":"`/average` would simply behave as usual and return the average amount spent.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"randust"},"content":"---","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"szeyingg"},"content":"### 🛠️ Adding Custom Categories: `/add-category`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"szeyingg"},"content":"Adds a custom category to the list of valid categories.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"szeyingg"},"content":"**Format**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"szeyingg"},"content":"/add-category \u003cCATEGORY\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"szeyingg"},"content":"- `\u003cCATEGORY\u003e` has a maximum character limit of `100`, and cannot contain any whitespace.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"szeyingg"},"content":"**Example**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"szeyingg"},"content":"/add-category shopping","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"szeyingg"},"content":"**Example Output**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"szeyingg"},"content":"Category added successfully: SHOPPING","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"szeyingg"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"szeyingg"},"content":"### 📒 Listing Categories: `/list-category`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"szeyingg"},"content":"Displays list of valid categories, separated by default and custom.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"szeyingg"},"content":"**Format**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"szeyingg"},"content":"/list-category","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"szeyingg"},"content":"```","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"szeyingg"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"edwardrl101"},"content":"### 💲Setting Monthly Budgets: `/budget`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"edwardrl101"},"content":"Sets a monthly budget limit which will be the default for each month.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"edwardrl101"},"content":"**Format**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"edwardrl101"},"content":"/budget $\u003cAMOUNT\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"edwardrl101"},"content":"- `\u003cAMOUNT\u003e` must be a positive number greater than 0 and no higher than `1,000,000,000` (one billion).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"edwardrl101"},"content":"**Example:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"edwardrl101"},"content":"/budget $500","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"edwardrl101"},"content":"**Example Output:**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"edwardrl101"},"content":"Monthly budget successfully set to $500.00","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"edwardrl101"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Charly2312"},"content":"### 💸 Budget Left","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Charly2312"},"content":"Outputs the current monthly budget, total expenses and budget left, as a percentage as well.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Charly2312"},"content":"**Format**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Charly2312"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Charly2312"},"content":"/budget-left","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Charly2312"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Charly2312"},"content":"**Example Output:**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Charly2312"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Charly2312"},"content":"Your budget is currently $500.00.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Charly2312"},"content":"Total expenses: $180.80 ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Charly2312"},"content":"Monthly budget left: $319.20 (63.84% remaining)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Charly2312"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Charly2312"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"edwardrl101"},"content":"### ❗Budget Warnings","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"edwardrl101"},"content":"Budget warnings will be generated when the","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"edwardrl101"},"content":"monthly budget is exceeded or almost exceeded (10% short of being exceeded).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"edwardrl101"},"content":"**Format (if 10% short of reaching monthly budget limit):**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"edwardrl101"},"content":"WARNING: You are $\u003cBUDGET - TOTAL_EXPENSES\u003e short of reaching your monthly budget of $\u003cBUDGET\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"edwardrl101"},"content":"**Format (if exceeded monthly budget limit):**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"edwardrl101"},"content":"WARNING: You have exceeded your monthly budget of $\u003cBUDGET\u003e by $\u003cTOTAL_EXPENSE - BUDGET\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"edwardrl101"},"content":"**Example**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"edwardrl101"},"content":"Assuming the monthly budget is set to `$500.00` and the list of expenses is","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"edwardrl101"},"content":"currently empty, if the user adds the following expenses:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"edwardrl101"},"content":"/add Phone $450","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"edwardrl101"},"content":"/add Wine $700","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"edwardrl101"},"content":"then they can expect the following output.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"edwardrl101"},"content":"**Example Output**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"edwardrl101"},"content":"WARNING: You are $50.00 short of reaching your monthly budget of $500.00","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"edwardrl101"},"content":"WARNING: You have exceeded your monthly budget of $500.00 by $200.00 ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"edwardrl101"},"content":"---","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Charly2312"},"content":"### 📝 Getting Summary: `/summary` ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"venicephua"},"content":"Shows a brief summary of the current general expenses. This includes","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"edwardrl101"},"content":"the spending per category, the category which contributes to the","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"venicephua"},"content":"highest spending, and the grand total. Alternatively, include a category","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"venicephua"},"content":"to view the total spending and the expenses in that category.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"edwardrl101"},"content":"**Format:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"venicephua"},"content":"/summary [CATEGORY]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"venicephua"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"venicephua"},"content":"**Example:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"venicephua"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"venicephua"},"content":"/summary Food","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"venicephua"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"venicephua"},"content":"This returns the total spending in the category `FOOD`, ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"venicephua"},"content":"as well as the expenses in this category.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"venicephua"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"venicephua"},"content":"Summary of expenses: ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"venicephua"},"content":"FOOD             : $31.30","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"venicephua"},"content":"1. Coffee | $5.50 | FOOD | 03-03-2025","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"venicephua"},"content":"2. Dinner | $25.80 | FOOD | 03-04-2025","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Charly2312"},"content":"---","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Charly2312"},"content":"## Recurring Expenses","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Charly2312"},"content":"* The same restrictions of the input parameters for the commands apply with an extra","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"venicephua"},"content":"`-recurring` as the argument. Note that this does not apply to the commands `add-category`, `list-category`, and `budget`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Charly2312"},"content":"* The recurring expense will automatically be added to the list of expenses","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Charly2312"},"content":"  upon startup if","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Charly2312"},"content":"  `DATE` is today\u0027s date or before today\u0027s date.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Charly2312"},"content":"* Note that if the recurring expense is already in the list,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Charly2312"},"content":"  then no more duplicates of it will be added upon startup.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Charly2312"},"content":"**Example**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Charly2312"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Charly2312"},"content":"/add-recurring Mobile Data $20.00 /c Necessities /dt 05-03-2025","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Charly2312"},"content":"/delete-recurring 1","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Charly2312"},"content":"/list-recurring","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Charly2312"},"content":"/list-sort-recurring category dsc","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Charly2312"},"content":"/summary-recurring","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Charly2312"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Charly2312"},"content":"**Example Outputs**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"venicephua"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Charly2312"},"content":"Recurring expense added successfully: Mobile Data | $20.00 | NECESSITIES | 05-03-2025","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Charly2312"},"content":"Expense \"test | $5.00 | UNCATEGORIZED | 06-04-2025\" deleted successfully. Remaining recurring expenses: 0","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"venicephua"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Charly2312"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Charly2312"},"content":"#### Insertion of recurring expenses upon startup","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Charly2312"},"content":"Assuming today\u0027s date is `05-04-2025`, and that the user has no budget","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Charly2312"},"content":"or other expenses yet, then upon startup, the user","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"Charly2312"},"content":"can expect to see the following output:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"venicephua"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"Charly2312"},"content":"Hi there, welcome to FinTrek! What can I do for you?","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Charly2312"},"content":"You have not set a monthly budget yet. Set one now!","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Charly2312"},"content":"Found some recurring expenses: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Charly2312"},"content":"1. Coffee | $5.50 | UNCATEGORIZED | 04-03-2025","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Charly2312"},"content":"2. Mobile Data | $20.00 | NECESSITIES | 05-03-2025","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Charly2312"},"content":"If they are due, adding them to the main list of expenses now.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Charly2312"},"content":"This is your current list of expenses: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"Charly2312"},"content":"1. Coffee | $5.50 | UNCATEGORIZED | 04-03-2025","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Charly2312"},"content":"2. Mobile Data | $20.00 | NECESSITIES | 05-03-2025","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"venicephua"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"Charly2312"},"content":"## Extra Features","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"randust"},"content":"### 🆘 Getting Help: `/help`","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"randust"},"content":"Shows help messages for commands.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"randust"},"content":"**Format (general help)**:","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"randust"},"content":"/help","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"randust"},"content":"**Format (specific command)**:","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"edwardrl101"},"content":"/help \u003cCOMMAND\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"randust"},"content":"**Example**:","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"randust"},"content":"/help add","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"randust"},"content":"```","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"edwardrl101"},"content":"**Example Output:**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"Charly2312"},"content":"Format: /add \u003cDESCRIPTION\u003e $\u003cAMOUNT\u003e [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"venicephua"},"content":"AMOUNT must be a positive number greater than 0.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"venicephua"},"content":"CATEGORY is an optional argument.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"venicephua"},"content":"DATE is an optional argument which must be in the form dd-MM-yyyy.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"venicephua"},"content":"Example: /add concert tickets $35.80 /c LEISURE /dt 03-05-2025 -","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"venicephua"},"content":"         adds a regular expense with description \u0027concert tickets\u0027 with the amount $35.80,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"venicephua"},"content":"         category \u0027LEISURE\u0027 and date \u002703-05-2025\u0027.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"edwardrl101"},"content":"```","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"randust"},"content":"---","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"edwardrl101"},"content":"### 👋 Exiting the program: `bye`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"edwardrl101"},"content":"Exits the program.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"edwardrl101"},"content":"**Format: `bye`**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"edwardrl101"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"edwardrl101"},"content":"### ✅ Saving the data","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"edwardrl101"},"content":"FinTrek saves data of your expenses automatically in the hard disk","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"edwardrl101"},"content":"using a save file called `data.txt`. There is no need to save manually.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"edwardrl101"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"edwardrl101"},"content":"### ✏️ Editing the data file","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"edwardrl101"},"content":"FinTrek data are saved automatically inside a local `data.txt` file.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"edwardrl101"},"content":"Advanced users who know what they are doing are welcome to update","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"edwardrl101"},"content":"their list of expenses directly by editing the txt file.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"edwardrl101"},"content":"\u003e #### ❗CAUTION","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"edwardrl101"},"content":"\u003e - If your changes to one of the lines in the data file makes its format invalid, that line will be skipped","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"edwardrl101"},"content":"\u003eby FinTrek, and it will notify you on the Command Line.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"edwardrl101"},"content":"\u003e - Hence, that particular expense will not be included in your list of expenses.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"edwardrl101"},"content":"\u003e - Only update the data directly by editing the data file if you are","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"edwardrl101"},"content":"\u003e confident that you are making the right changes, following the ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"edwardrl101"},"content":"\u003e correct format.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"edwardrl101"},"content":"\u003e - Do not delete the save file while FinTrek is running! Doing so","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"edwardrl101"},"content":"will cause any budget or expense updates you did in the session to not be saved,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"edwardrl101"},"content":"and might even cause an unexpected behaviour.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"Charly2312"},"content":"---","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"edwardrl101"},"content":"**A**: Install the app in another computer and simply overwrite the empty `data.txt` save file","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"edwardrl101"},"content":"it creates with the `data.txt`save file that contains all your previous data.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"edwardrl101"},"content":"**Q**: Can I use this app in other languages?","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"edwardrl101"},"content":"**A**: Currently, FinTrek only supports the English language.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"edwardrl101"},"content":"Inputting foreign characters to command arguments might therefore cause","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"edwardrl101"},"content":"unexpected behaviour.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"edwardrl101"},"content":"**Q**: Do I need an internet connection to use this app?","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"edwardrl101"},"content":"**A**: Nope! FinTrek is readily available to use offline.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"randust"},"content":"---","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"randust"},"content":"Here’s a quick cheat sheet of commands:","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"randust"},"content":"| Command             | Format                                                                        | Description                                                                         |","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"Charly2312"},"content":"|---------------------|-------------------------------------------------------------------------------|-------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"Charly2312"},"content":"| Add Expense         | `/add \u003cDESCRIPTION\u003e $\u003cAMOUNT\u003e [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]`                   | Adds a new expense                                                                  |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"Charly2312"},"content":"| Add Category        | `/add-category \u003cCATEGORY\u003e`                                                    | Adds a new category to be used for both types of expenses                           |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"edwardrl101"},"content":"| Delete Expense      | `/delete \u003cEXPENSE_NUMBER\u003e`                                                    | Deletes an expense by its index                                                     |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"randust"},"content":"| Edit Expenses       | `/edit \u003cINDEX\u003e [/d \u003cDESCRIPTION\u003e] [/$ \u003cAMOUNT\u003e] [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]` | Edits an existing expense                                                           |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"randust"},"content":"| List Expenses       | `/list`                                                                       | Lists all expenses                                                                  |","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"randust"},"content":"| Total Expense       | `/total`                                                                      | Shows total expenses                                                                |","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"randust"},"content":"| Average Expense     | `/average`                                                                    | Shows average expense                                                               |","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"edwardrl101"},"content":"| Set Monthly Budget  | `/budget $\u003cAMOUNT\u003e`                                                           | Sets monthly budgets, and generate warnings if almost exceeded / exceeded           |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"Charly2312"},"content":"| Budget Left         | `/budget-left`                                                                | Gives a brief summary of the current budget, total expenses and monthly budget left |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"edwardrl101"},"content":"| Summary of Expenses | `/summary`                                                                    | Gives a brief summary of the expenses in the list                                   |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"Charly2312"},"content":"| Sort the Expenses   | `/list-sort \u003cSORT FIELD\u003e \u003cSORT DIRECTION\u003e`                                    | Sorts out the list based on the field and direction chosen                          |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"Charly2312"},"content":"| Add Category        | `/add-category \u003cCATEGORY\u003e`                                                    | Adds a category for regular expenses to use                                         |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"Charly2312"},"content":"| List Categories     | `/list-category`                                                              | Lists out all valid and present categories                                          |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"Charly2312"},"content":"| Help                | `/help [COMMAND]`                                                             | Shows help for all or specific cmd                                                  |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"edwardrl101"},"content":"| Bye                 | `bye`                                                                         | Exits the program                                                                   |","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"Charly2312"},"content":"### Recurring Expenses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"Charly2312"},"content":"| Command             | Format                                                                                  | Description                                                 |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"edwardrl101"},"content":"|---------------------|-----------------------------------------------------------------------------------------|-------------------------------------------------------------|","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"Charly2312"},"content":"| Add Expense         | `/recurring \u003cDESCRIPTION\u003e $\u003cAMOUNT\u003e [/c \u003cCATEGORY\u003e] /dt \u003cDATE\u003e`                         | Adds a new recurring expense to be added at stipulated date |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"Charly2312"},"content":"| Add Category        | `/add-category \u003cCATEGORY\u003e`                                                              | Adds a new category to be used for both types of expenses   |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"Charly2312"},"content":"| Delete Expense      | `/delete-recurring \u003cEXPENSE_NUMBER\u003e`                                                    | Deletes a recurring expense by its index                    |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"Charly2312"},"content":"| Edit Expenses       | `/edit-recurring \u003cINDEX\u003e [/d \u003cDESCRIPTION\u003e] [/$ \u003cAMOUNT\u003e] [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]` | Edits a recurring expense                                   |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"Charly2312"},"content":"| List Expenses       | `/list-recurring`                                                                       | Lists all recurring expenses                                |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"Charly2312"},"content":"| Total Expense       | `/total-recurring`                                                                      | Shows total recurring expenses                              |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"Charly2312"},"content":"| Average Expense     | `/average-recurring`                                                                    | Shows average recurring expense                             |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"Charly2312"},"content":"| Summary of Expenses | `/summary-recurring`                                                                    | Gives a brief summary of the recurring expenses in the list |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"Charly2312"},"content":"| Sort the Expenses   | `/list-sort-recurring \u003cSORT FIELD\u003e \u003cSORT DIRECTION\u003e`                                    | Sorts out the list based on the field and direction chosen  |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"randust"},"content":"---","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"edwardrl101":188,"szeyingg":49,"randust":100,"-":35,"Charly2312":133,"venicephua":36}},{"path":"docs/diagrams/class/Command.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"skinparam classArrowColor Black","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"skinparam defaultTextAlignment center","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"hide circle","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"hide members","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":"package \"fintrek.expense.service\" {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"  class ExpenseService","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"  class ExpenseReporter","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"  class AppServices","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"package fintrek.command.registry {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"    class CommandResult","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"package fintrek.command.parser {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"    class CommandParser \u003c\u003cinterface\u003e\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"package fintrek.expense.misc {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"    class MessageDisplayer","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Charly2312"},"content":"package fintrek.command {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"    abstract class Command {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"        # isRecurringExpense: boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Charly2312"},"content":"        + Command(isRecurring: boolean)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"        + supportsStructuredParsing(): boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"        + getDescription(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"\u0027 Relationships","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Charly2312"},"content":"Command --\u003e ExpenseService: service \"1\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Charly2312"},"content":"Command --\u003e ExpenseReporter: reporter \"1\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Charly2312"},"content":"Command --\u003e CommandResult: execute(arguments: String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Charly2312"},"content":"Command --\u003e CommandParser: getParser()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"Command --\u003e MessageDisplayer","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Charly2312"},"content":"AppServices -l\u003e ExpenseReporter: \u003c\u003ccreates\u003e\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Charly2312"},"content":"AppServices -r\u003e ExpenseService: \u003c\u003ccreates\u003e\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Charly2312"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"Charly2312":48}},{"path":"docs/diagrams/class/Expense.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"\u0027 --- Style Settings (similar to the example image) ---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"skinparam classArrowColor Black","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"skinparam defaultTextAlignment center","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"\u0027 Hide members (attributes/methods) for a higher-level view","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"hide members","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"hide circle","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"\u0027 --- Diagram Definition ---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"package \"expense.core\" {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"  class Expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"  interface \"\u003c\u003cinterface\u003e\u003e \\n ExpenseOperation\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"  class \"\u003c\u003csingleton\u003e\u003e \\n RecurringExpenseManager\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"  class \"\u003c\u003csingleton\u003e\u003e \\n RegularExpenseManager\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"  class CategoryManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"package \"expense.service\" {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"  class ExpenseService","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"  class ExpenseReporter","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"  class AppServices","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"package \"command\"{","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"\u0027 --- Relationships ---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"\"command\" ..\u003e AppServices","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"\"command\" ..\u003e CategoryManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"\u0027 Core Implementation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"\"\u003c\u003csingleton\u003e\u003e \\n RecurringExpenseManager\" ..|\u003e \"\u003c\u003cinterface\u003e\u003e \\n ExpenseOperation\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"\"\u003c\u003csingleton\u003e\u003e \\n RegularExpenseManager\" ..|\u003e \"\u003c\u003cinterface\u003e\u003e \\n ExpenseOperation\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"\"\u003c\u003csingleton\u003e\u003e \\n RegularExpenseManager\" ---\u003e \"     *\"Expense","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"\"\u003c\u003csingleton\u003e\u003e \\n RecurringExpenseManager\" ---\u003e\"  *\" Expense","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"\u0027 Service Dependencies/Usage","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"ExpenseService --\u003e \"1\"\"\u003c\u003cinterface\u003e\u003e \\n ExpenseOperation\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"ExpenseReporter --\u003e \"1\"\"\u003c\u003cinterface\u003e\u003e \\n ExpenseOperation\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"ExpenseService ..\u003e Expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"ExpenseReporter ..\u003e Expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"\u0027 AppServices Instantiation/Usage","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"\u0027 Note: AppServices uses singletons, so it doesn\u0027t directly \"create\" new managers,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"\u0027 but rather gets the existing instance. \"\u003c\u003cuse\u003e\u003e\" or \"\u003c\u003cget\u003e\u003e\" might be appropriate.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"AppServices ..\u003e \"\u003c\u003csingleton\u003e\u003e \\n RegularExpenseManager\" : \u003c\u003cget instance\u003e\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"AppServices ..\u003e \"\u003c\u003csingleton\u003e\u003e \\n RecurringExpenseManager\" : \u003c\u003cget instance\u003e\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"\u0027 AppServices creates/initializes service and reporter instances","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"AppServices ..\u003e ExpenseService : \u003c\u003cinstantiate\u003e\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"AppServices ..\u003e ExpenseReporter : \u003c\u003cinstantiate\u003e\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"randust":61,"Charly2312":1}},{"path":"docs/diagrams/class/command_parser.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edwardrl101"},"content":"@startuml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"skinparam classArrowColor Black","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"skinparam defaultTextAlignment center","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"skinparam groupInheritance 1","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"hide circle","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"hide members","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":"left to right direction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"\u0027 Parser package","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"package \"parser\" {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"    interface \"\u003c\u003cinterface\u003e\u003e\\nCommandParser\" as CommandParser {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"    class \"ParseResult\u003cT\u003e\" as ParseResult {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"        + success(result: T): ParseResult\u003cT\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":"        + failure(errorMessage: String): ParseResult\u003cT\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":"    class XYZArgumentParser {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"        + parse(input: String): ParseResult\u003cXYZParseResult\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"\u0027 Command packages","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"package \"command.xyz\" {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"    class XYZParseResult","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"\u0027 Relationships (keeping your exact arrow styles)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"CommandParser \u003c|.. XYZArgumentParser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"XYZArgumentParser .l.\u003e ParseResult","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"XYZArgumentParser ..\u003e XYZParseResult : \u003c\u003ccreates\u003e\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"ParseResult .right[dotted].\u003e XYZParseResult : \u003c\u003ctype parameter\u003e\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"@enduml","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"edwardrl101":39}},{"path":"docs/diagrams/class/overall.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"skinparam componentStyle rectangle","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"skinparam packageStyle rect","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"\u0027skinparam ArrowColor LightGreen","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"package \"Core Modules\" {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"  [Main]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"  [Ui]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"  [User]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"  [Command]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"  [CommandRegistry]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"  [CommandParser]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"  [Data]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"  [Expenses]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"  [Budget]","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"package \"Shared Utilities\" {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"  [Util]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"  [Messages]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"\u0027 Core flows","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"[User] ..\u003e [Ui]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"[Main] --\u003e [Ui]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"[Ui] ..\u003e [Data]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"[Data] ..\u003e [Expenses]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"[Ui] ..\u003e [CommandRegistry]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"[CommandRegistry] --\u003e [Command]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"[Command] --\u003e [CommandParser]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"[Command] --\u003e [Expenses]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"[Command] ..\u003e [Budget]","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"\u0027 Shared utilities usage","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"\u0027[Ui] ..\u003e [Util]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"[Ui] ..\u003e [Messages]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"[Command] ..\u003e [Util]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"[Command] ..\u003e [Messages]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"\u0027[Expenses] ..\u003e [Util]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"\u0027[Expenses] ..\u003e [Messages]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"\u0027[CommandRegistry] ..\u003e [Messages]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"[Data] ..\u003e [Messages]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"\u0027[Data] ..\u003e [Util]","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"randust":44}},{"path":"docs/diagrams/class/ui_parser_cmd.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"\u0027 Hide members (attributes/methods) for a higher-level view","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"hide circle","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"hide members","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"\u0027 --- Diagram Definition ---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"package \"ui \"{","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"    class \"FinTrekUi\" as UI {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"    + FinTrekUi()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"    + start(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"    + close(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"    - loadInitialData(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"    - processRecurringExpenses(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"    - runCommandLoop(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"    - processUserInput(userInput: String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"package \"parser\" {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"    class \"RouteResult\" as RR {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"    + RouteResult(success: Boolean, message: String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"    + isSuccess(): Boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"    + errorMessage(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"    + outputMessage(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"    class \"CommandRouter\" as CRouter {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"    + routeUserInput(userInput: String): RouteResult","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"package \"command.registry\" {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"    class \"CommandExecutor\" as Executor {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"    + dispatch(commandName: String, \\n arguments: String): CommandResult","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"    class \"CommandResult\" as CResult","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"    class \"CommandRegistry\" as Registry {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"    - commands: Map\u003cString, Command\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"    + getCommand(name: String): Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"venicephua"},"content":"    + hasCommand(name: String): Boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"venicephua"},"content":"    + getAllCommandDescriptions(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"venicephua"},"content":"    class \"CommandRegistrar\" as Registrar {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"venicephua"},"content":"    + registerAll(): Map\u003cString, Command\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"package \"command\" {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"venicephua"},"content":"    abstract class \"{abstract}\\nCommand\" as CMD","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"venicephua"},"content":"\u0027 --- Relationships ---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"venicephua"},"content":"UI ..r\u003e RR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"venicephua"},"content":"UI ..\u003e CRouter","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"venicephua"},"content":"CRouter ..u\u003e RR : \u003c\u003ccreates\u003e\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"venicephua"},"content":"CRouter ..r\u003e Executor","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"venicephua"},"content":"CRouter ..\u003e CResult","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"venicephua"},"content":"Executor ..u\u003e Registry","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"venicephua"},"content":"Registry ..r\u003e Registrar","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"venicephua"},"content":"Executor ..\u003e CResult : \u003c\u003ccreates\u003e\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"venicephua"},"content":"Executor ..u\u003e CMD","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"venicephua"},"content":"Registry --\u003e \"*\" CMD : \u003c\u003ccontains\u003e\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"venicephua"},"content":"Registrar ..\u003e CMD","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"venicephua"},"content":"CMD ..\u003e CResult","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"venicephua"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"venicephua":75}},{"path":"docs/diagrams/sequence/add.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"@startuml add","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"skinparam sequenceReferenceBackgroundColor #white","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"mainframe **sd** Add Command Execution","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"participant \":AddCommand\" as AC","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"ref over AC","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"Parse Add Inputs","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"end ref","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"create \":Expense\" as expense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"AC -\u003e expense: new Expense(\u003cdesc\u003e, \u003camt\u003e, \u003ccategory\u003e, \u003cdate\u003e)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"activate expense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"expense --\u003e AC: newExpense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"deactivate expense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"participant \":ExpenseService\" as ES","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"participant \":RegularExpenseManager\" as REM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"AC -\u003e ES: addExpense(newExpense)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"activate ES","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"ES -\u003e REM: addExpense(newExpense)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"activate REM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"REM --\u003e ES: confirmation","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"deactivate REM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"ES --\u003e AC: confirmation","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"deactivate ES","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"@enduml","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"szeyingg":32,"venicephua":1}},{"path":"docs/diagrams/sequence/add_category.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"@startuml add_category","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"mainframe **sd** Add Category Command Execution","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"participant \":AddCategoryCommand\" as command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"participant \"InputValidator\" as Validator \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"participant \"CategoryManager\" as manager \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"command -\u003e Validator : isNullOrBlank(\u003cargs\u003e)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"activate Validator","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"Validator --\u003e command :","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"deactivate Validator","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"command -\u003e Validator : isValidStringLength(\u003cargs\u003e)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"activate Validator","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"Validator --\u003e command :","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"deactivate Validator","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"command -\u003e Validator : containsWhiteSpace(\u003cargs\u003e)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"activate Validator","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"Validator --\u003e command :","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"deactivate Validator","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"|||","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"command -\u003e Validator : isValidCategory(newCategory)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"activate Validator","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"Validator -\u003e manager: isValid(newCategory)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"activate manager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"manager --\u003e Validator :","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"deactivate manager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"Validator --\u003e command :","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"deactivate Validator","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"command -\u003e manager : addCustomCategory(newCategory)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"activate manager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"manager -\u003e manager : add(newCategory)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"manager --\u003e command:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"deactivate manager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"szeyingg"},"content":"@enduml","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"szeyingg":51}},{"path":"docs/diagrams/sequence/add_parse.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"@startuml add_parse","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"mainframe **sd** Parse Add Inputs","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"participant \":AddCommand\" as AC","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"participant \":AddArgumentParser\" as parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"participant \"InputValidator\" as validator \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"AC -\u003e parser: parse(\u003cargs\u003e)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"activate parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"alt valid inputs","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"parser -\u003e validator: isNullOrBlank(\u003cargs\u003e)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"activate validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"validator --\u003e parser:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"deactivate validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"parser -\u003e parser: matcher.matches()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"note right: regex pattern match","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"    parser -\u003e validator: isValidAmountInput(amountStr)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"    activate validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"    validator --\u003e parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"    deactivate validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"    parser -\u003e validator: isValidCategory(category)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"    activate validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"    validator --\u003e parser:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"    deactivate validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"    parser -\u003e validator: isValidDate(dateStr)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"    activate validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"    validator --\u003e parser:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"    deactivate validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"    parser -\u003e parser: extractDate(dateStr)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"    |||","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"    create \":AddParseResult\" as APR","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"    parser -\u003e APR: new AddParseResult(\u003cdesc\u003e, \u003camt\u003e, \u003ccategory\u003e, \u003cdate\u003e)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"    activate APR","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"    APR --\u003e parser: result","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"    deactivate APR","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"    participant \":ParseResult\u003c\u003e\" as PR","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"alt valid inputs","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"    parser -\u003e PR: success(result)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"    activate PR","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"    PR --\u003e parser:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"    deactivate PR","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"szeyingg"},"content":"    parser --\u003e AC: successResult","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"szeyingg"},"content":"else invalid inputs","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"szeyingg"},"content":"    parser -\u003e PR: failure(errorMessage)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"    activate PR","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"szeyingg"},"content":"    PR --\u003e parser:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"szeyingg"},"content":"    deactivate PR","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"szeyingg"},"content":"    parser --\u003e AC: failureResult","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"szeyingg"},"content":"    deactivate parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"end","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"szeyingg"},"content":"deactivate parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"szeyingg"},"content":"@enduml","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"szeyingg":68}},{"path":"docs/diagrams/sequence/average.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edwardrl101"},"content":"@startuml average","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"edwardrl101"},"content":"skinparam sequenceReferenceBackgroundColor #fffff","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"mainframe **sd** Average Command Execution","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"participant \":AverageCommand\" as AC","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"participant \":ExpenseReporter\" as Reporter","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":"AC -\u003e Reporter : getAverage()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"activate Reporter","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"Reporter --\u003e AC : average","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"deactivate Reporter","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"@enduml","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"edwardrl101":15}},{"path":"docs/diagrams/sequence/budget.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"@startuml budget","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"mainframe **sd** Budget Command Execution","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"participant \":BudgetCommand\" as BC","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"participant \"InputValidator\" as Validator \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"BC -\u003e Validator : isNullOrBlank(\u003cargs\u003e)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"activate Validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"Validator --\u003e BC :","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"deactivate Validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"BC -\u003e Validator : isValidPositiveDouble(amountStr)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"activate Validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"Validator --\u003e BC :","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"deactivate Validator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"create \":BudgetManager\" as BM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"BC -\u003e BM : getInstance()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"activate BM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"BM -\u003e BM : setBudget(amount)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"BM --\u003e BC:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"deactivate BM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"@enduml","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"szeyingg":32}},{"path":"docs/diagrams/sequence/budgetLeft.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"@startuml budget","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"mainframe **sd** Budget Left Command Execution","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"participant \":BudgetLeftCommand\" as BLC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"participant \":BudgetManager\" as BM","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"participant \":ExpenseReporter\" as ExpRpt","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"BLC -\u003e BM: getBudget()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":"activate BM","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"BM --\u003e BLC: budget","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"deactivate BM","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"BLC -\u003e ExpRpt: getTotal()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"activate ExpRpt","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"ExpRpt --\u003e BLC: total","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"deactivate ExpRpt","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"BLC -\u003e BLC: budgetLeft \u003d budget - total","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"BLC -\u003e BLC: leftPercentage \u003d budgetLeft/total * 100.0","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Charly2312"},"content":"@enduml","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"Charly2312":26}},{"path":"docs/diagrams/sequence/delete.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"@startuml delete","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"participant \":DeleteCommand\" as DeleteCmd","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"participant \"InputValidator\" as Validator \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"participant \":ExpenseService\" as ExpenseSvc","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"participant \":RegularExpenseManager\" as RegExpMgr","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"mainframe **sd** Delete Command Execution","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"DeleteCmd -\u003e Validator : isNullOrBlank(\u003cargs\u003e)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"activate Validator","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"Validator --\u003e DeleteCmd : true/false","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"deactivate Validator","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"DeleteCmd -\u003e Validator : isValidPositiveInteger(\u003cargs\u003e)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"activate Validator","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"Validator --\u003e DeleteCmd : true/false","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"deactivate Validator","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"DeleteCmd -\u003e ExpenseSvc : countExpenses()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"activate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"ExpenseSvc -\u003e RegExpMgr : getLength()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"activate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"RegExpMgr --\u003e ExpenseSvc : N","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"deactivate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"ExpenseSvc --\u003e DeleteCmd : N","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"deactivate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"DeleteCmd -\u003e Validator : isInValidIntRange(\u003cargs\u003e, 1, N)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"activate Validator","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"Validator --\u003e DeleteCmd : true/false","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"deactivate Validator","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"DeleteCmd -\u003e ExpenseSvc : popExpense(index)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"activate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"ExpenseSvc -\u003e RegExpMgr : remove(index)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"activate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"RegExpMgr --\u003e ExpenseSvc : removedExpense","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"deactivate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"ExpenseSvc --\u003e DeleteCmd : removedExpense","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"deactivate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"DeleteCmd -\u003e ExpenseSvc : countExpenses()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"activate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"ExpenseSvc -\u003e RegExpMgr : getLength()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"activate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"RegExpMgr --\u003e ExpenseSvc : M","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"deactivate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"ExpenseSvc --\u003e DeleteCmd : M","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"deactivate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"randust":37,"venicephua":14}},{"path":"docs/diagrams/sequence/edit.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"@startuml editCommand","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"mainframe **sd** Edit Command Execution","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"participant \":EditCommand\" as EditCmd","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"\u0027participant \":EditArgumentParser\" as Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"participant \"InputValidator\" as Validator \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"participant \":ExpenseService\" as ExpenseSvc","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"participant \":RegularExpenseManager\" as RegExpMgr","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"ref over EditCmd","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"Parse Edit Inputs","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"end ref","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"\u0027EditCmd -\u003e Parser : parse(\u003cargs\u003e)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"\u0027activate Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"\u0027Parser --\u003e EditCmd : ParseResult(state, EditParseResult(index, descriptor))","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"\u0027deactivate Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"EditCmd -\u003e ExpenseSvc : countExpenses()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"activate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"ExpenseSvc -\u003e RegExpMgr : getLength()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"activate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"RegExpMgr --\u003e ExpenseSvc : N","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"deactivate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"ExpenseSvc --\u003e EditCmd : N","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"deactivate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"EditCmd -\u003e Validator : isInValidIntRange(index, 0, N-1)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"activate Validator","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"Validator --\u003e EditCmd : true/false","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"deactivate Validator","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"EditCmd -\u003e ExpenseSvc : getExpense(index)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"activate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"ExpenseSvc -\u003e RegExpMgr : get(index)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"activate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"RegExpMgr --\u003e ExpenseSvc : originalExpense","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"deactivate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"ExpenseSvc --\u003e EditCmd : originalExpense","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"deactivate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"EditCmd -\u003e EditCmd : buildUpdatedExpense(originalExpense, descriptor)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"activate EditCmd","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"EditCmd --\u003e EditCmd","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"deactivate EditCmd","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"EditCmd -\u003e ExpenseSvc : popExpense(index)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"activate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"ExpenseSvc -\u003e RegExpMgr : remove(index)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"activate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"RegExpMgr --\u003e ExpenseSvc : removedExpense","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"deactivate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"ExpenseSvc --\u003e EditCmd : removedExpense","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"deactivate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"EditCmd -\u003e ExpenseSvc : insertExpenseAt(index, updatedExpense)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"activate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"ExpenseSvc -\u003e RegExpMgr : insertAt(index, updatedExpense)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"activate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"RegExpMgr --\u003e ExpenseSvc : confirmation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"deactivate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"ExpenseSvc --\u003e EditCmd : confirmation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"deactivate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"szeyingg":3,"randust":71,"venicephua":6}},{"path":"docs/diagrams/sequence/help.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edwardrl101"},"content":"@startuml help","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"mainframe **sd** Help Command Execution","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"participant \":HelpCommand\" as HC","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"participant \":InputValidator\" as Validator","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"participant \":CommandRegistry\" as Registry","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":"participant \":Command\" as Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"HC -\u003e Validator : isNullOrBlank(\u003cargs\u003e)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"activate Validator","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"Validator --\u003e HC : true / false","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"deactivate Validator","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"alt \u003cargs\u003e is empty","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"    HC -\u003e Registry : getAllCommandDescriptions()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":"    activate Registry","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":"    Registry --\u003e HC : all command descriptions","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":"    deactivate Registry","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"else \u003cargs\u003e is non-empty","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"    loop for each cmd in COMMANDS","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"        HC -\u003e HC : keyword.equals(cmd)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"        alt keyword matches command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"            HC -\u003e Registry : getCommand(cmd)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"            activate Registry","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"            Registry --\u003e HC : command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"            deactivate Registry","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"            HC -\u003e Command : getDescription()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"            activate Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"            Command --\u003e HC : command description","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"            deactivate Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"        end","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"    end","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"end","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"edwardrl101":38}},{"path":"docs/diagrams/sequence/list.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"mainframe **sd** List Command Execution","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"participant \":ListCommand\" as ListCmd","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"participant \":ExpenseReporter\" as ExpenseSvc","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"participant \":RegularExpenseManager\" as RegExpMgr","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"ListCmd -\u003e ExpenseSvc : listExpenses()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"activate ExpenseSvc","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"ExpenseSvc -\u003e RegExpMgr : getAll()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"activate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"RegExpMgr --\u003e ExpenseSvc : ArrayList\u003c\u003e(Expenses)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"deactivate RegExpMgr","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"ExpenseSvc -\u003e ExpenseSvc: listExpenseBuilder(Expenses)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"ExpenseSvc --\u003e ListCmd : expense list string","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"deactivate ExpenseSvc","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"szeyingg":6,"Charly2312":15,"venicephua":3}},{"path":"docs/diagrams/sequence/list_category.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"@startuml list_category","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"mainframe **sd** List Category Command Execution","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"participant \":ListCategoryCommand\" as command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"participant \"CategoryManager\" as manager \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"command -\u003e manager : getDefaultCategoriesAsString()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"activate manager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"manager -\u003e manager : getCategoriesString(defaultCategories)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"manager --\u003e command:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"deactivate manager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"command -\u003e manager : getCustomCategoriesAsString()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"activate manager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"manager -\u003e manager : getCategoriesString(customCategories)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"manager --\u003e command:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"deactivate manager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"szeyingg":22}},{"path":"docs/diagrams/sequence/list_sort.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"@startuml list-sort","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"skinparam sequenceReferenceBackgroundColor #white","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"mainframe **sd** List Sort Command Execution","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"participant \":ListSortCommand\" as SC","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"participant \":ListSortArgumentParser\" as Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"SC -\u003e Parser : parse(\u003cargs\u003e)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"activate Parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"Parser --\u003e SC : ParseResult(success, ListSortParseResult(sortBy, sortDir))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"deactivate Parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"participant \":ExpenseService\" as ES","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"participant \":RegularExpenseManager\" as REM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"SC -\u003e ES: getAllExpenses()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"activate ES","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"ES -\u003e REM: getAll()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"activate REM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"REM --\u003e ES: ArrayList\u003c\u003e(Expenses)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"deactivate REM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"ES --\u003e SC: expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"deactivate ES","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"|||","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"SC -\u003e SC: getComparator(sortBy)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"activate SC","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"SC --\u003e SC: comparator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"deactivate SC","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"SC -\u003e SC: setDirection(sortDir, comparator)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"SC -\u003e SC: sort(comparator)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"participant \":ExpenseReporter\" as ER","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"SC -\u003e ER: listExpenseBuilder(expenses)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"activate ER","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"ER --\u003e SC: sortedExpenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"deactivate ER","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"@enduml","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"szeyingg":47}},{"path":"docs/diagrams/sequence/parse_w_ref.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"@startuml","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"skinparam sequenceReferenceBackgroundColor #white","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"actor \"User\" as user","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"participant \":FinTrekUi\" as FT","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"participant \"CommandRouter\" as router \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"participant \"CommandExecutor\" as executor \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"participant \"CommandRegistry\" as registry \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"participant \":\u003ccmd\u003eCommand\" as SC","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"user -\u003e FT: input \"/\u003ccmd\u003e \u003cargs\u003e\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"activate FT","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"FT -\u003e router: routeUserInput(/\u003ccmd\u003e \u003cargs\u003e)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"activate router","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"router -\u003e executor: dispatch(\u003ccmd\u003e, \u003cargs\u003e)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"activate executor","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"executor -\u003e registry: getCommand(\u003ccmd\u003e)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"activate registry","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"registry --\u003e executor: \u003ccmd\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"deactivate registry","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"executor -\u003e SC: execute(\u003cargs\u003e)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"activate SC","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"ref over SC","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"\u003ccmd\u003e Command Execution","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"end ref","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"SC --\u003e executor: CommandResult(state, message)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"deactivate SC","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"executor --\u003e router: CommandResult(state, message)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"deactivate executor","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"router --\u003e FT: RouteResult(state, message)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"deactivate router","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"FT --\u003e user: print message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"deactivate FT","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"@enduml","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"szeyingg":35,"venicephua":9}},{"path":"docs/diagrams/sequence/parser.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"@startuml","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"actor \"User\" as user","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"box Parser Logic #D7E4F4","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"participant \":FinTrekUi\" as FT","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"participant \":CommandRouter\" as router","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"participant \":CommandExecutor\" as executor","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"participant \":CommandRegistry\" as registry","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"end box","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"participant \":\u003ccmd\u003eCommand\" as SC","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"user -\u003e FT: input \"/\u003ccmd\u003e \u003cargs\u003e\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"activate FT","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"FT -\u003e router: routeUserInput(\"/\u003ccmd\u003e \u003cargs\u003e\")","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"activate router","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"router -\u003e executor: dispatch(\"\u003ccmd\u003e\", \"\u003cargs\u003e\")","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"activate executor","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"\u0027executor -\u003e registry: hasCommand(\"\u003ccmd\u003e\")","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"\u0027 alt successful case","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"executor -\u003e registry: getCommand(\"\u003ccmd\u003e\")","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"activate registry","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"registry --\u003e executor","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"deactivate registry","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"executor -\u003e SC: execute(\"\u003cargs\u003e\")","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"activate SC","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"SC --\u003e executor: CommandResult(success, message)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"deactivate SC","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"\u0027 else invalid command","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"\u0027registry --\u003e executor: CommandResult(failure, message)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"\u0027 end","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"executor --\u003e router: CommandResult(state, message)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"deactivate executor","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"venicephua"},"content":"router --\u003e FT: RouteResult(state, message)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"venicephua"},"content":"deactivate router","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"venicephua"},"content":"FT --\u003e user: print message","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"venicephua"},"content":"deactivate FT","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"@enduml","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"venicephua":52}},{"path":"docs/diagrams/sequence/summary.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"@startuml summary","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"skinparam sequenceReferenceBackgroundColor #fffff","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"mainframe **sd**  Summary Command Execution","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"participant \":SummaryCommand\" as SC","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"participant \"InputValidator\" as IV \u003c\u003cclass\u003e\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"participant \":ExpenseReporter\" as ER","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"participant \":RegularExpenseManager\" as REM","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"SC -\u003e ER: getTotalByCategory()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"activate ER","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"ER -\u003e REM ++ : getAll()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"REM --\u003e ER --","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"ER --\u003e SC: categoryTotals","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"SC -\u003e IV: isNullOrBlank(\u003cargs\u003e)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"activate IV","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"IV -\u003e SC: true/false","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"deactivate IV","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"alt \u003cargs\u003e is empty","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"SC -\u003e ER: listAllCategoryTotal(categoryTotals)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"ref over ER","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"List All Category Totals","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"end ref","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"else \u003cargs\u003e is non-empty","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"SC -\u003e ER: listSingleCategoryTotal(categoryTotals, \u003cargs\u003e)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"ref over ER","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"List Single Category Total","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"end ref","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"ER --\u003e SC: formatted category summary","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"deactivate ER","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"venicephua":43}},{"path":"docs/diagrams/sequence/summary_all.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"@startuml","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"participant \":ExpenseReporter\" as ER","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"participant \":RegularExpenseManager\" as REM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"mainframe **sd** List All Category Totals","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"ER -\u003e ER: sort categories by name","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"loop for each category in sortedCategories","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"ER -\u003e ER: format category-amount string","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"end","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"ER -\u003e ER: getHighestCategory(categoryTotals)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"ER -\u003e ER: getTotal()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"activate ER #white","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"ER -\u003e REM ++ : getAll()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"REM --\u003e ER -- : Expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"ER -\u003e ER: calculate total","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"deactivate ER","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"ER --\u003e ER: formatted string with categoryTotals, \\nhighest category and grand total","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"@enduml","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"szeyingg":1,"venicephua":25}},{"path":"docs/diagrams/sequence/summary_single.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"@startuml","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"skinparam SequenceGroupBackgroundColor white","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"participant \":ExpenseReporter\" as ER","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"participant \":RegularExpenseManager\" as REM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"mainframe **sd** List Single Category Total","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"ER -\u003e ER: getExpensesByCategory(\"food\")","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"activate ER #white","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"ER -\u003e REM: getAll()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"activate REM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"REM --\u003e ER: Expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"deactivate REM","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"ER -\u003e ER: filter expenses for category \u003d \"food\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"ER --\u003e ER: categoryExpenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"deactivate ER","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"|||","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"ER -\u003e ER: listExpenseBuilder(categoryExpenses)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"activate ER #white","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"loop for each category in categoryExpenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"ER -\u003e ER: format expense entry","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"end","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"ER --\u003e ER: formatted string with \\ntotal amount and Expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"deactivate ER","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"@enduml","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"szeyingg":3,"venicephua":29}},{"path":"docs/diagrams/sequence/total.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"@startuml list-sort","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"skinparam sequenceReferenceBackgroundColor #white","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"mainframe **sd** Total Command Execution","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"participant \":TotalCommand\" as TC","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"participant \":ExpenseReporter\" as ExpRpt","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"participant \":RegularExpenseManager\" as REM","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":"TC -\u003e ExpRpt: getTotal()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"activate ExpRpt","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"ExpRpt -\u003e REM: getAll()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"activate REM","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"REM --\u003e ExpRpt: new ArrayList\u003c\u003e(expenses)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"deactivate REM","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"ExpRpt -\u003e ExpRpt: sum()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"ExpRpt --\u003e TC: double total","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":"deactivate ExpRpt","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"Charly2312":24}},{"path":"docs/team/charly2312.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"# Charly Chandra - Project Portfolio Page","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"## Credits","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"1. My team F12-1 for being very productive, communicative and diligent in debugging and creating documentation","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"2. ChatGPT to help understand regex pattern","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"3. Teaching Assistant, Lee Jun Hao Bryan, on giving suggestions on how to move forward and what to improve on for TP and IP","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"## Overview","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"* Created a function to list out all commands with respective formats","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":"* Improved the code by creating and integrating codes for recurring expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"by applying OOP concept of abstraction and inheritance ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"* Performed JUnit Tests for recurring expenses functions such as","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"adding them automatically to the general expense list, ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"adding a recurring and deleting a recurring expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"  * This function was refactored by my team to make it more efficient and robust","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"* Created UML diagrams and outline of the developer guide","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"  * Diagrams include `Command` (abstract) class diagram and `Total` command sequential diagram","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"  * Create `/budget-edit` sequential diagram","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"* Maintaining the CI checks by refactoring or adjusting codes in the unit tests.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":"### Summary of Contributions:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"#### Code contributed:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Charly2312"},"content":"[Link to tP code Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dcharly2312\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Charly2312"},"content":"#### Enhancements implemented:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"1. Implement recurring expenses function such as adding and deleting","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"2. Implement the check of recurring expenses\u0027 dates to see if they should be added to the regular expense list","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Charly2312"},"content":"3. Implement `/budget-left` to show to the user the current monthly budget, total expenses and","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"#### Contributions to UG:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"1. Updating command summary","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"2. Updating commands to include recurring expenses and new features ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"   * Some examples are `/budget-left` `add-category`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Charly2312"},"content":"3. Update the format of explanation between regular and recurring expenses ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"   for better clarity in terms of format and differences","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Charly2312"},"content":"4. Put out all the latest features in UG","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Charly2312"},"content":"#### Contributions to DG:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Charly2312"},"content":"1. Edited Architecture Overview, Logging and Input Handling ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"2. Edited Recurring Expense section such as `Current implementation`, `Design Considerations`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Charly2312"},"content":"  and `Unit Testing`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Charly2312"},"content":"    * `Unit Testing` was eventually removed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Charly2312"},"content":"    * Improved the clarity of differences in format between `RegularExpenses` and `RecurringExpenses`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Charly2312"},"content":"3. Edited `User Stories`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Charly2312"},"content":"4. Helped to create sequential diagrams such as `List Expenses`, `total` and `BudgetLeft`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Charly2312"},"content":"5. Helped to create a class diagram for abstract `Command` class diagram","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Charly2312"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Charly2312"},"content":"1. Release Management of `jar` file and assets such as `UG` and `DG`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Charly2312"},"content":"2. Creating issues to be assigned and milestones","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Charly2312"},"content":"3. Merging pull requests upon review and approval of code changes","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Charly2312"},"content":"4. Resolved some PR with the team such as [Issue#169](https://github.com/AY2425S2-CS2113-F12-1/tp/issues/169), [Issue#152](https://github.com/AY2425S2-CS2113-F12-1/tp/issues/152)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Charly2312"},"content":"and [Issue#147](https://github.com/AY2425S2-CS2113-F12-1/tp/issues/147)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Charly2312"},"content":"5. Helped to maintain CI pipeline for checkstyle such as [PR#220](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/220), [PR#211](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/211)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Charly2312"},"content":"   and [PR#196](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/196)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Charly2312"},"content":"### Summary of Contributions","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Charly2312"},"content":"1. Maintaining CI pipeline by refactoring or adjusting unit test codes ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Charly2312"},"content":"2. Create class diagram and sequential diagram for new features","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Charly2312"},"content":"3. Adjust the coherent flow of UG and DG especially for regular and recurring expenses","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Charly2312"},"content":"4. Update DG and UG with new features","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"Charly2312":65}},{"path":"docs/team/edwardrl101.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edwardrl101"},"content":"# Edward Rafael Lukito - Project Portfolio Page","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"edwardrl101"},"content":"## Overview","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"**FinTrek** is a simple and intuitive Command Line Interface (CLI) tool","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"that helps users track their personal expenses. Users can quickly add, view,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"analyze, and manage their expenses using short commands.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"It is designed for speed, simplicity, and ease of use.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":"### Summary of Contributions","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"* Code contributed:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"  ([RepoSense Link](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dedwardrl101\u0026tabRepo\u003dAY2425S2-CS2113-F12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse))","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"* Enhancements implemented:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"  * Added the functionality to calculate average expenses in FinTrek","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"  * Enabled saving and loading of monthly budgets, regular expenses, and recurring expenses in FinTrek.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"  * Implemented a file data parser to read file data from the save file and load user data accordingly.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":"  * Enabled the addition of expenses with dates, and  added max amount limits for `/budget` and `/average` commands.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":"  * Refactored code to maintain coding standards, readability, and obey the SRP.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":"  * Wrote JUnit tests to ensure methods are tested with high coverage.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":"  * Extensively added JavaDoc comments to non-trivial methods.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"  * Added the feature to set monthly budgets, and receive budget warnings","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"when the monthly budget is exceeded or almost exceeded.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":" ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"* Contributions to the UG:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"  * Added important notes about the command format and a quick start guide.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"  * Added and updated descriptions for the `/summary`, `/add`, `bye`, and `/budget` commands","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"  * Updated the command summary to include the latest list of commands","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"  as well as their format","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"  * Listed out important cautionary information  regarding the saving and loading","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"  of data for FinTrek, and what not to do with the save file.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"  * Added examples to almost all of the features.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"  * Answered the FAQ section.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"* Contributions to the DG:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"  * Added and updated user stories ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"  * Wrote out the step-by-step execution flows for the `/add`, `/list`, `/average`, and `/help` commands.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"  * Drew out UML sequence diagrams for the `/average` and `/help` commands.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"  * Drew out UML class diagram for the Command Parser component and briefly explained","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"its implementation.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"  * Added Non-Functional Requirements (NFRs) to the DG","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"* Contributions to team-based tasks:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"    * Updated the gradle.yml to validate gradle wrapper which fixed the issue with the CI failing (PR [#39](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/39))","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"    * Code enhancements and refactoring whenever necessary","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"* Review contributions:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"    * Made 28 comments on others\u0027 PRs as of March 31 ([CS2113 tP Comments Dashboard](https://nus-cs2113-ay2425s2.github.io/dashboards/contents/tp-comments.html)) and likely","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"  to have made about 40 by now.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"    * Reviewed PRs (PR [#24](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/24#discussion_r1997640278),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"  PR [#19](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/19#discussion_r1995777073),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"  PR [#31](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/31#discussion_r1997669041))","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"edwardrl101"},"content":"* Contributions beyond the project team:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"    * Went the extra mile to deliver beyond the minimum review comments (19 comments) for others\u0027 iP, assessing them objectively ([CS2113 iP Comments Dashboard](https://nus-cs2113-ay2425s2.github.io/dashboards/contents/ip-comments.html))","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"edwardrl101":61}},{"path":"docs/team/randust.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"# Hung Ming Kin\u0027s Project Portfolio Page","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"## Project: FinTrek","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"FinTrek is a simple and intuitive Command Line Interface (CLI) tool that helps users track their personal expenses. Users can quickly add, view, analyze, and manage their expenses using short commands.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"- New Feature: Added delete command that allows user to delete expenses.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"- New Feature: Added the ability to edit entered expenses.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"    - What it does: allow the users to edit expenses by specifying the field(s) that he wants to edit, e.g., description, amount, etc.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"    - Justification: This feature improves the product significantly because the user can make mistakes when typing in the expenses, and they won\u0027t need to re-enter the whole expense every time they make a mistake. The app should provide a convenient way to rectify them. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"    - Highlights: The implementation was challenging as it requires to give users maximum flexibility to change whichever the field they want. This involves complex regex pattern matching of the user input string.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"    - Credits: ChatGPT teaches me the correct regex pattern matcher to accurately parse the user input.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"- Code Contributed: [RepoSense link](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003df12\u0026sort\u003dtotalCommits%20dsc\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003drandust\u0026tabRepo\u003dAY2425S2-CS2113-F12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse\u0026since\u003d2025-02-21)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"- Contributions to the UG: edit command and CRUD commands.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"- Contributions to the DG: overall architecture class diagram, expense component class diagram, delete command sequence diagram, edit command sequence diagram and instruction for manual testing for command router.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"- Review/mentoring contributions: PR review comments [#32](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/32), [#61](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/61), [#69](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/69), and many more.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"- Contributions to team based task: ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"    - setting up gradle (PR [#7](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/7/files))","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    - maintaining issue tracker (Issues [#21](https://github.com/AY2425S2-CS2113-F12-1/tp/issues/21), [#22](https://github.com/AY2425S2-CS2113-F12-1/tp/issues/22), [#23](https://github.com/AY2425S2-CS2113-F12-1/tp/issues/23))","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"    - Updating user/developer docs that are not specific to a feature: overall architecture class diagram in DG","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"    - Code refactoring:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"        - Refactor Command class to become more flexible, maintainable and ensures SRP (PR [#57](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/57))","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"        - Refactor ExpenseManager into separate classes implementing a common interface to ensure SRP (PR [#74](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/74))","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"        - Refactor Parser class to ensure SRP (PR [#76](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/76))","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"randust":24}},{"path":"docs/team/szeyingg.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"# Sze Ying - Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"## Overview","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"**FinTrek** is a simple and intuitive Command Line Interface (CLI) tool that helps users track their personal expenses.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"Users can quickly add, view, analyze, and manage their expenses using short commands.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"## Summary of Contributions","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"#### - Code contributed: [Link to tP code Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21T00%3A00%3A00\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dszeyingg\u0026tabRepo\u003dAY2425S2-CS2113-F12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"### Enhancements implemented","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"#### 📌 New Features","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"1. **Add Command:** allows users to add new expenses to the list","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"2. **List Sort Command**: allows users to sort expense list as desired","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"3. **Add Category Command**: allows users to add custom categories","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"4. **List Category Command**: allows users to see list of default \u0026 custom categories","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"#### 📝 JUnit tests","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"- Added JUnit test code for Add, Delete, Average, \u0026 Sort Commands","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"- Added Junit test code for Category related commands: Add \u0026 List Category","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"#### ✨ Highlights","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"- Introduced `TestUtils` helper functions to streamline JUnit assertions, making test code more concise and readable.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"- Developed the idea for `CategoryManager` while debugging `AddCommand`:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"  - **Bug:** Dates were mistakenly interpreted as categories for certain user inputs","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"  - **Solution:** Introduced centralized list of valid categories to improve input validation","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"  - **Added benefit:** Enabled users to create custom categories to allow for more personalized expense tracking","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"- Refined the input parsing process using `Pattern` and `Matcher`, enabling stricter and more reliable command validation.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"### Contributions to User Guide","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"- **Added descriptions and examples:** SortCommand, AddCategoryCommand, and ListCategoryCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"### Contributions to Developer Guide","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"- Created reference frames to simplify originally complicated diagrams.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"- **Updated UML sequence diagrams:** Add, AddCategory, Budget, List, ListSort Commands.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"- **Explained execution:** ListSort, AddCategory, ListCategory, and Budget Commands.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"### Team-based contributions","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"- Created GitHub team repo","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"- Peer PR Reviews: [#70](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/70), ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"                   [#190](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/190)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"### Contributions beyond project team","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"- Performed rigorous testing to report over 20 bugs for another team during [PE Dry Run](https://github.com/szeyingg/ped/issues)","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"szeyingg":47}},{"path":"docs/team/venicephua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"# Venice Phua - Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"## Overview","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"FinTrek is a simple and intuitive Command Line Interface (CLI) tool, designed to allow users to track and manage their ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"expenses efficiently. Users can quickly add, view, analyze, and manage their expenses using short commands. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"### Summary of Contributions","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"#### Enhancements Implemented","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"- Feature: Added `Summary` command that allows users to view a brief summary of their expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"  - What it does: Displays either the overall summary with all categories and their total spending, or the summary of one specific category and the expenses in it. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"  - Justification: This feature allows users to monitor and draw conclusions about their spending patterns, allowing them to better manage their expenditure and keep within their budget.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"  - Highlights: This feature was interesting to implement as I used HashMap to group the expenses by categories, instead of working with List which was used to manage the expenses.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"- Feature: Added Total command to display grand total of expenditure.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"- Feature: Contributed to Help command to display format instructions and examples for each command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"- JUnit Tests: Designed JUnit tests for `Help`, `List`, `Summary`, and `Total` commands ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"#### Code Contributed:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"[RepoSense Link](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dvenicephua\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dvenicephua\u0026tabRepo\u003dAY2425S2-CS2113-F12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"#### Contributions to Documentation","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"  - User Guide: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"    - Added descriptions and examples for `Summary` Command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"    - Added a caution section about user input for users to take note when using FinTrek.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"  - Developer Guide: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"    - Added Ui-Parser-CommandRegistry Component Class Diagram.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"    - Added Ui-CommandRegistry Sequence Diagram.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"    - Added `Add` Sequence Diagram.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"    - Added `Summary` Execution Flow and Sequence Diagram.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"    - Added `List All Category Totals`, and `List Single Category Total` Sequence Diagrams for `Summary`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"  - Set up team repo","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"  - Manage Issue Tracker (Issues [#51](https://github.com/AY2425S2-CS2113-F12-1/tp/issues/51), [#52](https://github.com/AY2425S2-CS2113-F12-1/tp/issues/52), [#53](https://github.com/AY2425S2-CS2113-F12-1/tp/issues/53), [#54](https://github.com/AY2425S2-CS2113-F12-1/tp/issues/54), [#55](https://github.com/AY2425S2-CS2113-F12-1/tp/issues/55))","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"  - Enabled Java CI Workflows ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"  - Reviewed PRs: [#41](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/41), [#98](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/98)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"  - Refactor FinTrek class into FinTrekUi and FinTrek [#100](https://github.com/AY2425S2-CS2113-F12-1/tp/pull/100)","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"venicephua":36}},{"path":"src/main/java/fintrek/FinTrek.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"import fintrek.ui.FinTrekUi;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":" * Main entry-point for the FinTrek application.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":" * Initializes the application and starts the UI.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"public class FinTrek {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"    private static final Logger logger \u003d Logger.getLogger(FinTrek.class.getName());","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"        logger.log(Level.FINE, \"FinTrek application started.\" );","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"        FinTrekUi ui \u003d new FinTrekUi();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"        ui.start();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"        logger.log(Level.FINE, \"FinTrek application shutting down.\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"        ui.close();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"randust":6,"Charly2312":10,"venicephua":8}},{"path":"src/main/java/fintrek/budget/core/BudgetManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardrl101"},"content":"package fintrek.budget.core;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":" * Singleton manager for handling monthly budgets.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":" * This class provides the operations to get and set the current monthly budget.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"public class BudgetManager {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"    /** The singleton instance of this manager. */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"    private static final BudgetManager instance \u003d new BudgetManager();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"    private double monthlyBudget;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"    /** Private constructor to prevent instantiation and to enforce Singleton pattern */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"    private BudgetManager() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":"        this.monthlyBudget \u003d 0.0; // Default budget is 0","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"     * Returns the singleton instance of this manager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"     * @return the shared instance of {@code BudgetManager}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"    public static BudgetManager getInstance() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"        return instance;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"     * Returns the current monthly budget.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"     * @return a {@code double} object containing the current monthly budget.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"    public double getBudget() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"        return monthlyBudget;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"     * Sets the monthly budget to the desired amount.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"     * @param amount the desired monthly budget","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"    public void setBudget(double amount) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"        this.monthlyBudget \u003d amount;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"     * Indicates whether monthly budget has been set by checking if it is greater than 0.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"     * @return a {@code boolean} value indicating whether budget has been set.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"    public boolean isBudgetSet() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"        return monthlyBudget \u003e 0;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"     * Overrides the toString() method in Java and returns the String equivalent","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"     * of the monthly budget.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"     * @return a {@code String} equivalent object of the monthly budget.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"    public String toString() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"edwardrl101"},"content":"        return \"Monthly Budget: $\" + monthlyBudget;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"edwardrl101":62}},{"path":"src/main/java/fintrek/budget/service/BudgetWarningService.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardrl101"},"content":"package fintrek.budget.service;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"import fintrek.budget.core.BudgetManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.service.AppServices;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"public class BudgetWarningService {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"    public static final double NINETY_PERCENT \u003d 0.9;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"     * This function will generate warnings if the total regular expenses of the current month","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"     * almost exceeds or exceeds the current monthly budget. Note that expenses in","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"     * the previous month will not be accounted for anymore.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"     * @param date the date today, which will be used to generate the current year and month","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":"     * @return warnings depending on whether total expenses exceeds or almost exceeds the monthly budget.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":"    public static String generateBudgetWarnings(LocalDate date) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":"        BudgetManager budgetManager \u003d BudgetManager.getInstance();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"        if (!budgetManager.isBudgetSet()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"            return \"\"; // No budget set, no warning needed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"        double budget \u003d budgetManager.getBudget();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"        double totalExpenses \u003d AppServices.REGULAR_REPORTER.getTotalByMonthOfYear(date.getYear(), date.getMonthValue());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"        if (totalExpenses \u003e\u003d budget) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"            return String.format(MessageDisplayer.EXCEEDED_BUDGET_MESSAGE, budget, totalExpenses-budget);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"        } else if (totalExpenses \u003e\u003d budget * NINETY_PERCENT) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"            return String.format(MessageDisplayer.ALMOST_EXCEEDED_BUDGET_MESSAGE, budget-totalExpenses, budget);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"        return \"\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"edwardrl101":35}},{"path":"src/main/java/fintrek/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.expense.service.AppServices;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import fintrek.expense.service.ExpenseReporter;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import fintrek.expense.service.ExpenseService;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import fintrek.parser.CommandParser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" * Abstract base class for all user commands.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":" * \u003cp\u003eEach {@code Command} subclass represents a specific action the user can take,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":" * such as adding, editing, or deleting expenses. Commands may operate on either","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":" * regular or recurring expenses, which determines the backing service and reporter used.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":" * \u003cp\u003eCommands can support either free-form string execution or structured parsing","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":" * via {@link CommandParser}. Subclasses may override the relevant methods to support","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":" * the intended execution style.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":" * @see fintrek.command.registry.CommandInfo","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":" * @see fintrek.command.registry.CommandResult","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"     * The service layer used to manipulate expense data (regular or recurring).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"    protected final ExpenseService service;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"     * The reporter used to generate summaries, totals, and other views.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"    protected final ExpenseReporter reporter;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"     * The reporter used to generate summaries, totals, and other views.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"    protected final boolean isRecurringExpense;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"     * Constructs a command and assigns the appropriate service and reporter based on recurrence mode.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"     * @param isRecurring whether the command operates on recurring expenses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"    public Command(boolean isRecurring) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"            this.service \u003d AppServices.RECURRING_SERVICE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"            this.reporter \u003d AppServices.RECURRING_REPORTER;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"        } else {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"            this.service \u003d AppServices.REGULAR_SERVICE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"            this.reporter \u003d AppServices.REGULAR_REPORTER;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Charly2312"},"content":"        this.isRecurringExpense \u003d isRecurring;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"     * Executes the command with the given raw string arguments.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"     * \u003cp\u003eThis method should be overridden by subclasses that support string-based execution.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"     * @param arguments raw user input passed to the command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"     * @return a {@link CommandResult} representing the outcome","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"     * @throws UnsupportedOperationException if not implemented","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"        throw new UnsupportedOperationException(MessageDisplayer.REQUIRES_STRUCTURED_PARSER_MESSAGE);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"     * Executes the command with parsed arguments for structured parsing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"     * \u003cp\u003eOverride this method in commands that support structured execution via a {@link CommandParser}.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"     * @param parsedArgs parsed object representing the command input","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"     * @return a {@link CommandResult} representing the outcome","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"     * @throws UnsupportedOperationException if not implemented","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"    public CommandResult executeStructured(Object parsedArgs) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"        throw new UnsupportedOperationException(MessageDisplayer.STRUCTURED_EXECUTION_NOT_SUPPORTED_MESSAGE);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"randust"},"content":"     * Indicates whether this command supports structured parsing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"     * @return true if structured parsing is supported, false otherwise","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"    public boolean supportsStructuredParsing() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"randust"},"content":"        return false;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"randust"},"content":"     * Returns the parser associated with this command, if structured parsing is supported.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"randust"},"content":"     * @return the {@link CommandParser}, or {@code null} if unsupported","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"randust"},"content":"    public CommandParser\u003c?\u003e getParser() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"randust"},"content":"        return null;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"randust"},"content":"     * Retrieves the command\u0027s description from its {@link CommandInfo} annotation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"randust"},"content":"     * @return the command\u0027s usage description or a default message if not annotated","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"randust"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"randust"},"content":"        CommandInfo info \u003d this.getClass().getAnnotation(CommandInfo.class);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"venicephua"},"content":"        String format;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"venicephua"},"content":"        String example;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"venicephua"},"content":"        if (this.isRecurringExpense) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"venicephua"},"content":"            format \u003d info.recurringFormat();","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"venicephua"},"content":"            example \u003d info.recurringExample();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"venicephua"},"content":"            format \u003d info.regularFormat();","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"venicephua"},"content":"            example \u003d info.regularExample();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"venicephua"},"content":"        String fullDescription \u003d format + \"\\n\" + info.description() + example;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"venicephua"},"content":"        return info !\u003d null ? fullDescription : MessageDisplayer.NO_DESCRIPTION_AVAILABLE_MESSAGE;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-03-15","isFullCredit":false}],"authorContributionMap":{"randust":103,"Charly2312":6,"venicephua":11}},{"path":"src/main/java/fintrek/command/add/AddCategoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"package fintrek.command.add;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.core.CategoryManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"import fintrek.util.InputValidator;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"@CommandInfo(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"        recurringFormat \u003d \"Format: /add-category \u003cCATEGORY\u003e\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"        regularFormat \u003d \"Format: /add-category \u003cCATEGORY\u003e\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"        description \u003d \"\"\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"                CATEGORY has a character limit of 100, and cannot contain spaces.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"                Example: /add-category drinks - adds category \u0027DRINKS\u0027 to list of valid categories.\"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"        recurringExample \u003d \"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"        regularExample \u003d \"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":")","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"public class AddCategoryCommand extends Command {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"    private static final String COMMAND_NAME \u003d \"Category\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"    public AddCategoryCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"     * This function allows user to add a new category into the expense list","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"     *                  to be used now or in the future","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"     * The arguments are first validated whether they are null or blank. Aferwards, we check if","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Charly2312"},"content":"     *                  it contains white space and is a valid String","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Charly2312"},"content":"     * Upon validation the argument will be trimmed and changed to upper case.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"     * @param arguments raw user input passed to the command which contains the","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"     *                  new category to be added","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"     * @return a successful {@code CommandResult} object with the success message, or a","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"     *                  failed {@code CommandResult} object with the error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"        if (InputValidator.isNullOrBlank(arguments)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"            String message \u003d String.format(MessageDisplayer.CANNOT_BE_NULL_MESSAGE_TEMPLATE, COMMAND_NAME);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"            return new CommandResult(false, message);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"        if (InputValidator.containsWhiteSpace(arguments.trim())) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"            return new CommandResult(false, MessageDisplayer.CATEGORY_WHITESPACE_ERROR);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"        if (!InputValidator.isValidStringLength(arguments)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"szeyingg"},"content":"            String message \u003d String.format(MessageDisplayer.STRING_OUT_OF_RANGE_FORMAT_MESSAGE, COMMAND_NAME);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"szeyingg"},"content":"            return new CommandResult(false, message);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"szeyingg"},"content":"        String newCategory \u003d arguments.trim().toUpperCase();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"szeyingg"},"content":"        if (InputValidator.isValidCategory(newCategory)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"            return new CommandResult(false, MessageDisplayer.CATEGORY_ALREADY_EXISTS);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"szeyingg"},"content":"        CategoryManager.addCustomCategory(newCategory);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"szeyingg"},"content":"        String message \u003d String.format(MessageDisplayer.ADD_CATEGORY_SUCCESS_MESSAGE_TEMPLATE, newCategory);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"szeyingg"},"content":"        return new CommandResult(true, message);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"szeyingg":50,"venicephua":3,"Charly2312":12}},{"path":"src/main/java/fintrek/command/add/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"//@@author szeyingg","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"package fintrek.command.add;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"import fintrek.budget.service.BudgetWarningService;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"import fintrek.parser.CommandParser;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"import fintrek.parser.AddArgumentParser;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"import fintrek.parser.ParseResult;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"@CommandInfo(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"        recurringFormat \u003d \"Format: /add-recurring \u003cDESCRIPTION\u003e $\u003cAMOUNT\u003e [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"        regularFormat \u003d \"Format: /add \u003cDESCRIPTION\u003e $\u003cAMOUNT\u003e [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"        description \u003d \"\"\"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"                AMOUNT must be a positive number greater than 0.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"                CATEGORY is an optional argument.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"                DATE is an optional argument which must be in the form dd-MM-yyyy.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"                \"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"        recurringExample \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"                Example: /add-recurring concert tickets $35.80 /c LEISURE /dt 03-05-2025 -","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"                         adds a recurring expense with description \u0027concert tickets\u0027 with the amount $35.80,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"                         category \u0027LEISURE\u0027 and date \u002703-05-2025\u0027.\"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"        regularExample \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"                Example: /add concert tickets $35.80 /c LEISURE /dt 03-05-2025 -","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"                         adds a regular expense with description \u0027concert tickets\u0027 with the amount $35.80,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"                         category \u0027LEISURE\u0027 and date \u002703-05-2025\u0027.\"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":")","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"    private final AddArgumentParser parser \u003d new AddArgumentParser();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"    public AddCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"    public CommandParser\u003c?\u003e getParser() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"        return parser;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"    public boolean supportsStructuredParsing() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"        return true;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"szeyingg"},"content":"     * Adds an expense into the expense list, and also checks for any invalid inputs","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"szeyingg"},"content":"     * @param arguments the string containing important parameters pertaining to the expense","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"szeyingg"},"content":"     * @return a successful {@code CommandResult} object with the success message, or a","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"szeyingg"},"content":"     *      failed {@code CommandResult} object with the error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"szeyingg"},"content":"        ParseResult\u003cAddParseResult\u003e result \u003d parser.parse(arguments);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"szeyingg"},"content":"        if (!result.isSuccess()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"szeyingg"},"content":"            return new CommandResult(false, result.getError());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"szeyingg"},"content":"        AddParseResult args \u003d result.getResult();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"        String description \u003d args.desc();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"szeyingg"},"content":"        double amount \u003d args.amount();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"szeyingg"},"content":"        String category \u003d args.category();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"szeyingg"},"content":"        LocalDate date \u003d args.date();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"szeyingg"},"content":"        Expense newExpense \u003d new Expense(description, amount, category, date);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"szeyingg"},"content":"        service.addExpense(newExpense);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"szeyingg"},"content":"        return getCommandResult(newExpense);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"szeyingg"},"content":"     * This function returns a successful command result containing the correct success message","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"szeyingg"},"content":"     * for the type of expense, i.e. recurring or regular, that is to be added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"szeyingg"},"content":"     * @param newExpense is the Expense object of general or recurring expense to be added","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"szeyingg"},"content":"     * @return a successful {@code CommandResult} with the appropriate success message for the type","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"     *      expense.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"szeyingg"},"content":"    private CommandResult getCommandResult(Expense newExpense) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"szeyingg"},"content":"        String budgetWarning \u003d BudgetWarningService.generateBudgetWarnings(LocalDate.now());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"szeyingg"},"content":"        String successMessage \u003d (isRecurringExpense) ?","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"szeyingg"},"content":"                String.format(MessageDisplayer.ADD_RECURRING_SUCCESS_MESSAGE_TEMPLATE, newExpense):","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"szeyingg"},"content":"                String.format(MessageDisplayer.ADD_SUCCESS_MESSAGE_TEMPLATE, newExpense);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"szeyingg"},"content":"        if(budgetWarning.equals(\"\")) { // If no budget warning is generated","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"szeyingg"},"content":"            return new CommandResult(true, successMessage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"szeyingg"},"content":"        String successAndWarningMessage \u003d budgetWarning + \"\\n\" + successMessage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"szeyingg"},"content":"        return new CommandResult(true, successAndWarningMessage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"szeyingg":93}},{"path":"src/main/java/fintrek/command/add/AddParseResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"package fintrek.command.add;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":" * Represents the result of parsing an add command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":" * \u003cp\u003eThis record bundles the description, amount, category, and date of the expense to add.\u003c/p\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":" * \u003cp\u003eUsed internally by {@link AddCommand} after parsing the user\u0027s input.\u003c/p\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":" * @param desc the description of expense to be added","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":" * @param amount the amount of expense to be added","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":" * @param category the category of expense to be added","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":" * @param date the date the expense occurred","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"public record AddParseResult(String desc, double amount, String category, LocalDate date) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"szeyingg":18}},{"path":"src/main/java/fintrek/command/budget/BudgetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardrl101"},"content":"package fintrek.command.budget;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"import fintrek.budget.core.BudgetManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":"import fintrek.util.InputValidator;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"@CommandInfo(","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"        recurringFormat \u003d \"Format: /budget $\u003cAMOUNT\u003e\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"        regularFormat \u003d \"Format: /budget $\u003cAMOUNT\u003e\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"        description \u003d \"\"\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"                AMOUNT must be a positive number greater than 0.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"                Example: /budget $500 - sets the monthly spending budget to $500.\"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"        recurringExample \u003d \"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"        regularExample \u003d \"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"public class BudgetCommand extends Command {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"    private static final String COMMAND_NAME \u003d \"budget\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"    public BudgetCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"     * This function helps to create a budget for a user","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"     *      which will be compared with the total amount for general expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Charly2312"},"content":"     * @param arguments is the amount to be set as the budget","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Charly2312"},"content":"     * @return a {@code CommandResult} object telling whether","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"     *      the execution is successful or not, and an error/success message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"    @Override","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"        if (InputValidator.isNullOrBlank(arguments)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"            return new CommandResult(false,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"                    String.format(MessageDisplayer.ARG_EMPTY_MESSAGE_TEMPLATE, COMMAND_NAME));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\$\\\\s*(\\\\d+(?:\\\\.\\\\d{1,2})?)\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"        Matcher matcher \u003d pattern.matcher(arguments.trim());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"            return new CommandResult(false,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"                    String.format(MessageDisplayer.INVALID_FORMAT_MESSAGE_TEMPLATE, COMMAND_NAME));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"        String amountStr \u003d matcher.group(1);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"        if (!InputValidator.isValidPositiveDouble(amountStr)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"            return new CommandResult(false, MessageDisplayer.INVALID_AMT_MESSAGE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"        double amount \u003d Double.parseDouble(amountStr);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"        if(amount \u003e MessageDisplayer.MAX_AMOUNT) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"            return new CommandResult(false, MessageDisplayer.BUDGET_EXCEEDS_LIMIT_MSG);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"edwardrl101"},"content":"        BudgetManager.getInstance().setBudget(amount);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"        return new CommandResult(true,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"                String.format(MessageDisplayer.SET_BUDGET_SUCCESS_MESSAGE_TEMPLATE, amount));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"edwardrl101"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"edwardrl101":52,"venicephua":6,"Charly2312":7}},{"path":"src/main/java/fintrek/command/budget/BudgetLeftCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"package fintrek.command.budget;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"import fintrek.budget.core.BudgetManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"@CommandInfo(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":"        recurringFormat \u003d \"Format: /budget-left-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"        regularFormat \u003d \"Format: /budget-left\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"        description \u003d \"\"\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"                It will return the user\u0027s monthly budget and current budget left","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"                \"\"\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"        recurringExample \u003d \"\"\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"                Example: /budget-left","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"                Assuming an initial monthly budget of $500, with total expenses of $280.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"                It will print out the monthly budget $500 and current budget left of $220.\"\"\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"        regularExample \u003d \"\"\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"                Example: /budget-left","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"                Assuming an initial monthly budget of $500, with total expenses of $280.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":"                It will print out the monthly budget $500 and current budget left of $220.\"\"\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"public class BudgetLeftCommand extends Command {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Charly2312"},"content":"    private static final String COMMAND_NAME \u003d \"budget-left\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Charly2312"},"content":"    public BudgetLeftCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Charly2312"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Charly2312"},"content":"     * This function helps to print out the current monthly budget","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Charly2312"},"content":"     *      and budget left after deducting total expenses","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"     * @param arguments is the raw input of the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"     * @return a {@code CommandResult} object telling whether","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"     *      the execution is successful or not, and an error/success message","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Charly2312"},"content":"    @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Charly2312"},"content":"        double budgetNow \u003d BudgetManager.getInstance().getBudget();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Charly2312"},"content":"        double total \u003d reporter.getTotal();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Charly2312"},"content":"        double budgetLeft \u003d budgetNow - total;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Charly2312"},"content":"        double leftPercentage \u003d budgetLeft / budgetNow * 100.0;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Charly2312"},"content":"        if (budgetLeft \u003c 0) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Charly2312"},"content":"            return new CommandResult(true,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Charly2312"},"content":"                    String.format(MessageDisplayer.EXCEEDED_BUDGET_MESSAGE, budgetNow, -budgetLeft));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Charly2312"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Charly2312"},"content":"        return new CommandResult(true,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Charly2312"},"content":"                String.format(MessageDisplayer.CURRENT_BUDGET_LEFT, budgetNow, total, budgetLeft,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Charly2312"},"content":"                        leftPercentage));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"Charly2312":54}},{"path":"src/main/java/fintrek/command/delete/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.delete;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import fintrek.util.InputValidator;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" * Handles the deletion of a specified expense from the list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis command expects a single positive integer argument representing the","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":" * index of the expense to delete. It performs input validation, checks index bounds,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":" * removes the specified expense, and returns a formatted success or error message.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThe index is 1-based (i.e., the first expense has index 1).\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":" * \u003cp\u003eSupports both normal and recurring expenses depending on the value of {@code isRecurring}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":" * passed to the constructor.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":" * \u003cp\u003eExample usage:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":" * /delete 2","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":" * Deletes the expense at index 2 from the list.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":" * @see Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":" * @see fintrek.expense.service.ExpenseService","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"@CommandInfo(","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"        recurringFormat \u003d \"Format: /delete-recurring \u003cRECURRING_EXPENSE_NUMBER\u003e\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"        regularFormat \u003d \"Format: /delete \u003cEXPENSE_NUMBER\u003e\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"        description \u003d \"\"\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"            INDEX must be a positive integer \u003e 0.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"            \"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"        recurringExample \u003d \"Example: /delete-recurring 2 - deletes the recurring expense with index 2 on the list.\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"        regularExample \u003d \"Example: /delete 2 - deletes the regular expense with index 2 on the list.\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":")","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"    public DeleteCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Charly2312"},"content":"     * Delete a recurring or general expense of a valid index","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Charly2312"},"content":"     * @param arguments is the index of the expense to be removed from the list","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Charly2312"},"content":"     * @return a {@code CommandResult} object telling whether","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Charly2312"},"content":"     *      the execution is successful or not, and an error/success message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"        if (InputValidator.isNullOrBlank(arguments)) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"            return new CommandResult(false, MessageDisplayer.IDX_EMPTY_MESSAGE);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"        if (!InputValidator.isValidPositiveInteger(arguments)) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"            return new CommandResult(false, MessageDisplayer.INVALID_IDX_FORMAT_MESSAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"        int expenseIndex \u003d Integer.parseInt(arguments.trim());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"        int smallestValidIndex \u003d 1;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"        int upperBound \u003d service.countExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"        if (!InputValidator.isInValidIntRange(expenseIndex, smallestValidIndex, upperBound)) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"            return new CommandResult(false, MessageDisplayer.IDX_OUT_OF_BOUND_MESSAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"        int zeroBaseExpenseIndex \u003d expenseIndex - 1;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"        Expense removedExpense \u003d service.popExpense(zeroBaseExpenseIndex);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"        int remaining \u003d service.countExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"        String expenseStr \u003d \u0027\"\u0027 + removedExpense.toString() + \u0027\"\u0027;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Charly2312"},"content":"        String message \u003d (isRecurringExpense)?","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Charly2312"},"content":"                String.format(MessageDisplayer.DELETE_RECURRING_SUCCESS_MESSAGE_TEMPLATE, expenseStr, remaining):","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Charly2312"},"content":"                String.format(MessageDisplayer.DELETE_SUCCESS_MESSAGE_TEMPLATE, expenseStr, remaining);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"        return new CommandResult(true, message);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"edwardrl101":3,"randust":60,"venicephua":6,"Charly2312":9}},{"path":"src/main/java/fintrek/command/edit/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.edit;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"import fintrek.parser.CommandParser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import fintrek.parser.EditArgumentParser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"import fintrek.parser.ParseResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"import static fintrek.util.InputValidator.isInValidIntRange;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":" * Handles the editing of an existing expense entry.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis command allows partial or full updates to an expense\u0027s description, amount,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":" * category, and date using optional flags. It parses the input using","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":" * {@link EditArgumentParser}, performs index validation, and updates the specified","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":" * expense in-place within the expense list.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":" * \u003cp\u003eExample usage:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":" * /edit 2 /d dinner /$ 25 /c Dining /dt 25-12-2024","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":" * Edits the expense at index 2 with the provided updates.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":" * \u003cp\u003eSupports both normal and recurring expenses depending on the constructor flag {@code isRecurring}.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":" * @see Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":" * @see EditArgumentParser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":" * @see fintrek.expense.core.Expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"@CommandInfo(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"        recurringFormat \u003d","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"                \"Format: /edit-recurring \u003cINDEX\u003e [/d \u003cDESCRIPTION\u003e] [/$ \u003cAMOUNT\u003e] [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"        regularFormat \u003d \"Format: /edit \u003cINDEX\u003e [/d \u003cDESCRIPTION\u003e] [/$ \u003cAMOUNT\u003e] [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"        description \u003d \"\"\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"                INDEX is the position of the expense in the list (from /list or /list-recurring).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"                DESCRIPTION, AMOUNT, CATEGORY, DATE are optional arguments, but at least one field is required.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"                \"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"        recurringExample \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"                Example: /edit-recurring 2 /d dinner /$ 25 /c Dining /dt 25-12-2024 -","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"venicephua"},"content":"                         edits recurring expense 2 to have a description \u0027dinner\u0027 with the amount $25.00,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"venicephua"},"content":"                         category \u0027DINING\u0027 and date \u002725-12-2024\u0027.\"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"venicephua"},"content":"        regularExample \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"venicephua"},"content":"                Example: /edit 2 /d dinner /$ 25 /c Dining /dt 25-12-2024 -","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"venicephua"},"content":"                         edits regular expense 2 to have a description \u0027dinner\u0027 with the amount $25.00,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"venicephua"},"content":"                         category \u0027DINING\u0027 and date \u002725-12-2024\u0027.\"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"    private static final int INDEX_LOWER_BOUND \u003d 0;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"    private final EditArgumentParser parser \u003d new EditArgumentParser();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"     * Constructs an EditCommand.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"     * @param isRecurring true if this command operates on recurring expenses, false otherwise","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"    public EditCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"     * Indicates that this command supports structured parsing (via {@link EditArgumentParser}).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"     * @return true always, since EditCommand uses structured parsing","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"    public boolean supportsStructuredParsing() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"        return true;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"     * Returns the structured parser used by this command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"     * @return an instance of {@link EditArgumentParser}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"randust"},"content":"    public CommandParser\u003c?\u003e getParser() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"randust"},"content":"        return parser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"randust"},"content":"     * Executes the edit operation on an existing expense.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"randust"},"content":"     * @param arguments the user input string containing the index and optional update fields","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"     * @return a CommandResult indicating success or failure with a message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"randust"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"randust"},"content":"        ParseResult\u003cEditParseResult\u003e result \u003d parser.parse(arguments);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"randust"},"content":"        if (!result.isSuccess()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"randust"},"content":"            return new CommandResult(false, result.getError());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"randust"},"content":"        EditParseResult args \u003d result.getResult();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"randust"},"content":"        int index \u003d args.zeroBaseIndex();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"        if (!isInValidIntRange(index, INDEX_LOWER_BOUND, service.countExpenses() - 1)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"randust"},"content":"            return new CommandResult(false, MessageDisplayer.IDX_OUT_OF_BOUND_MESSAGE);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"randust"},"content":"        Expense original \u003d service.getExpense(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"randust"},"content":"        Expense updated \u003d buildUpdatedExpense(original, args.descriptor());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"randust"},"content":"        service.popExpense(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"randust"},"content":"        service.insertExpenseAt(index, updated);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"randust"},"content":"        return new CommandResult(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"randust"},"content":"                true,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"randust"},"content":"                String.format(MessageDisplayer.EDIT_SUCCESS_MESSAGE_FORMAT, index + 1, updated)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"randust"},"content":"        );","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"randust"},"content":"     * Builds a new Expense object using the original values and the provided descriptor fields.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"randust"},"content":"     * \u003cp\u003eFields in the descriptor that are null will retain the original values.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"randust"},"content":"     * @param original the original Expense to update","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"randust"},"content":"     * @param descriptor an EditExpenseDescriptor containing updated fields (nullable)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"randust"},"content":"     * @return a new Expense instance with updated fields","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"randust"},"content":"    private Expense buildUpdatedExpense(Expense original, EditExpenseDescriptor descriptor) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"randust"},"content":"        String description \u003d descriptor.getDescription() !\u003d null","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"randust"},"content":"                ? descriptor.getDescription() : original.getDescription();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"randust"},"content":"        double amount \u003d descriptor.getAmount() !\u003d null","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"randust"},"content":"                ? descriptor.getAmount() : original.getAmount();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"randust"},"content":"        String category \u003d descriptor.getCategory() !\u003d null","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"randust"},"content":"                ? descriptor.getCategory() : original.getCategory();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"randust"},"content":"        LocalDate date \u003d descriptor.getDate() !\u003d null","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"randust"},"content":"                ? descriptor.getDate() : original.getDate();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"randust"},"content":"        return new Expense(description, amount, category, date);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"edwardrl101":2,"randust":126,"venicephua":14,"Charly2312":2}},{"path":"src/main/java/fintrek/command/edit/EditExpenseDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.edit;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":" * A mutable descriptor class that holds optional updated fields for an","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":" * {@link fintrek.expense.core.Expense}.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis class is used by the {@link EditCommand} to represent user-provided","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":" * updates to an expense. Each field may be {@code null}, which indicates that the","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" * corresponding property should remain unchanged.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":" * \u003cp\u003eSupports trimming and parsing of user input values into their appropriate types,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":" * such as {@code double} and {@code LocalDate}.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"public class EditExpenseDescriptor {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"    private String description;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    private Double amount;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"    private String category;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"    private LocalDate date;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"     * Returns true if at least one field in the descriptor is non-null.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"     * @return true if any field is set, false otherwise","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"    public boolean hasAnyField() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"        return description !\u003d null || amount !\u003d null || category !\u003d null || date !\u003d null;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"     * Gets the updated description, if any.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"     * @return the description or {@code null} if not set","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    public String getDescription() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"        return description;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"     * Sets the updated description, trimming leading and trailing whitespace.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"     * @param description the new description as a string","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"     * Gets the updated amount, if any.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"     * @return the amount or {@code null} if not set","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"    public Double getAmount() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"        return amount;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"     * Sets the updated amount by parsing the given string as a double.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"     * @param amountStr the new amount as a string","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"     * @throws NumberFormatException if the string is not a valid double","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"    public void setAmount(String amountStr) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"        this.amount \u003d Double.parseDouble(amountStr);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"     * Gets the updated category, if any.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"     * @return the category or {@code null} if not set","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"    public String getCategory() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"        return category;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"     * Sets the updated category, trimming leading and trailing whitespace.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"     * @param category the new category as a string","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"randust"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"randust"},"content":"        this.category \u003d category.trim();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"     * Gets the updated date, if any.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"     * @return the date or {@code null} if not set","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"randust"},"content":"        return date;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"randust"},"content":"     * Sets the updated date by parsing the given string using the format \"dd-MM-yyyy\".","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"randust"},"content":"     * @param dateStr the new date as a string","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"randust"},"content":"     * @throws java.time.format.DateTimeParseException if the string is not a valid date","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"randust"},"content":"    public void setDate(String dateStr) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"        this.date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":105}},{"path":"src/main/java/fintrek/command/edit/EditParseResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.edit;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":" * Represents the result of parsing an edit command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis record bundles the zero-based index of the expense to edit","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":" * along with a descriptor containing any updated fields.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":" * \u003cp\u003eUsed internally by {@link EditCommand} after parsing the user\u0027s input.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":" * @param zeroBaseIndex the 0-based index of the expense in the list","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" * @param descriptor an {@link EditExpenseDescriptor} containing the updated fields","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"public record EditParseResult(int zeroBaseIndex, EditExpenseDescriptor descriptor) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":15}},{"path":"src/main/java/fintrek/command/help/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"//@@author Charly2312","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"package fintrek.command.help;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.registry.CommandRegistry;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"@CommandInfo(","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"        recurringFormat \u003d \"Format: /help [COMMAND]\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"        regularFormat \u003d \"Format: /help [COMMAND]\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"        description \u003d \"\"\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"            Displays help message for all commands.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"            Optionally pass a keyword to show usage for a specific command.\"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"        recurringExample \u003d \"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"        regularExample \u003d \"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":")","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"//@@author venicephua","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"    // List of commands","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"    private static final Set\u003cString\u003e COMMANDS \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"            \"add\", \"add-category\", \"average\", \"budget\", \"budget-left\", \"delete\", \"edit\", \"help\", \"list\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"            \"list-category\", \"list-sort\", \"summary\", \"total\", \"add-recurring\", \"average-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"            \"delete-recurring\", \"edit-recurring\", \"list-sort-recurring\", \"list-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"            \"summary-recurring\", \"total-recurring\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"    ));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"    public HelpCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"     * This functions prints out the format for a function based on the argument","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"     * @param arguments raw user input passed to the command","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"     * @return a {@code CommandResult} which object telling whether the","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"     *      execution is successful or not, and an error/success message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"    @Override","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"venicephua"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"venicephua"},"content":"        String message;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"venicephua"},"content":"        String keyword;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"venicephua"},"content":"        if (arguments !\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"venicephua"},"content":"            keyword \u003d arguments.trim().toLowerCase();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"venicephua"},"content":"            message \u003d CommandRegistry.getAllCommandDescriptions();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"            return new CommandResult(true, message);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"        if (COMMANDS.contains(keyword)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"venicephua"},"content":"            message \u003d CommandRegistry.getCommand(keyword).getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"venicephua"},"content":"            return new CommandResult(true, message);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"venicephua"},"content":"        message \u003d MessageDisplayer.HELP_UNKNOWN_TOPIC;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"venicephua"},"content":"        return new CommandResult(false, message);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"Charly2312":23,"venicephua":39}},{"path":"src/main/java/fintrek/command/list/ListCategoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"package fintrek.command.list;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.core.CategoryManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"@CommandInfo(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"        recurringFormat \u003d \"Format: /list-category\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"        regularFormat \u003d \"Format: /list-category\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"        description \u003d \"Lists all valid categories.\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"        recurringExample \u003d \"\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"        regularExample \u003d \"\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"public class ListCategoryCommand extends Command {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"    private static final String COMMAND_NAME \u003d \"list-category\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"    public ListCategoryCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"     * This function allows users to add custom category on top of the default","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Charly2312"},"content":"     *              valid categories","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Charly2312"},"content":"     * @param arguments raw user input passed to the command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Charly2312"},"content":"     * @return a successful {@code CommandResult} object with the success message, or a","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"     *              failed {@code CommandResult} object with the error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"        String defaultList \u003d CategoryManager.getDefaultCategoriesAsString();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"        String customList \u003d CategoryManager.getCustomCategoriesAsString();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"        String message \u003d String.format(MessageDisplayer.LIST_CATEGORIES_MESSAGE_TEMPLATE, defaultList, customList);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"        return new CommandResult(true, message);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"szeyingg":31,"venicephua":1,"Charly2312":7}},{"path":"src/main/java/fintrek/command/list/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"//@@author szeyingg","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"package fintrek.command.list;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"@CommandInfo(","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"        recurringFormat \u003d \"Format: /list-recurring\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"        regularFormat \u003d \"Format: /list\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"        description \u003d \"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"        recurringExample \u003d \"Lists all recorded recurring expenses.\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"        regularExample \u003d \"Lists all recorded expenses.\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":")","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"    public ListCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"     * This functions list out all the recurring or general expenses based on the argument received","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"     * @param arguments raw user input passed to the command","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"     * @return a {@code CommandResult} object telling whether the","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"     *      execution is successful or not, and an error/success message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"        String template \u003d (isRecurringExpense) ? MessageDisplayer.LIST_RECURRING_SUCCESS_MESSAGE_TEMPLATE :","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"                MessageDisplayer.LIST_SUCCESS_MESSAGE_TEMPLATE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"        String message \u003d String.format(template,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"                reporter.listExpenses());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"        return new CommandResult(true, message);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"szeyingg":35}},{"path":"src/main/java/fintrek/command/registry/CommandExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.registry;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":" * Dispatches parsed user commands to the appropriate handlers.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis class is responsible for executing user commands by name,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":" * looking them up in the {@link CommandRegistry}, and invoking their logic","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":" * with the provided arguments.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":" * \u003cp\u003eIf the command name is unrecognized, it returns an appropriate error message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":" * Execution logs are recorded via {@link java.util.logging.Logger}.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"public class CommandExecutor {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"    private static final Logger logger \u003d Logger.getLogger(CommandExecutor.class.getName());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"     * Dispatches the command to the appropriate handler based on its name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"     * @param commandName the name of the command (e.g. \"add\", \"delete\", \"edit\")","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"     * @param arguments the arguments passed to the command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"     * @return a {@link CommandResult} indicating the success or failure of the command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"    public static CommandResult dispatch(String commandName, String arguments) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"        if (!CommandRegistry.hasCommand(commandName)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"            return new CommandResult(false, MessageDisplayer.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"        Command command \u003d CommandRegistry.getCommand(commandName);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"        logger.log(Level.FINE, MessageDisplayer.EXECUTING_COMMAND_MESSAGE + commandName);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"        return command.execute(arguments);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":36,"Charly2312":2}},{"path":"src/main/java/fintrek/command/registry/CommandInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.registry;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import java.lang.annotation.ElementType;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import java.lang.annotation.Retention;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import java.lang.annotation.RetentionPolicy;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import java.lang.annotation.Target;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":" * Annotation used to provide metadata for commands.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis annotation can be applied to classes that extend {@link fintrek.command.Command}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" * to supply a human-readable description for help messages, documentation, or command discovery.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThe description is typically shown in command listings or user guides","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":" * to explain the expected usage format and behavior of the command.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis annotation is retained at runtime and targets types (i.e., classes).\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"@Retention(RetentionPolicy.RUNTIME)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"@Target(ElementType.TYPE)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"public @interface CommandInfo {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"     * A brief description or usage guide for the command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"     * @return the format + description + example string","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"    String recurringFormat();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"    String regularFormat();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"    String description();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"    String recurringExample();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"    String regularExample();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-03-29","isFullCredit":false}],"authorContributionMap":{"randust":27,"venicephua":6}},{"path":"src/main/java/fintrek/command/registry/CommandRegistrar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.registry;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.add.AddCategoryCommand;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.command.add.AddCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"import fintrek.command.budget.BudgetCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.budget.BudgetLeftCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.list.ListCategoryCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import fintrek.command.delete.DeleteCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"import fintrek.command.edit.EditCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"import fintrek.command.help.HelpCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"import fintrek.command.list.ListCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"import fintrek.command.sort.ListSortCommand;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"import fintrek.command.summary.AverageCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"import fintrek.command.summary.SummaryCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"import fintrek.command.summary.TotalCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"import java.util.Map;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":" * Registers all available commands (regular, recurring, and misc) into a command map.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis class is responsible for instantiating each {@link Command} subclass and mapping it","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":" * to its associated command keyword. It is typically invoked once during system initialization","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":" * to populate the {@link CommandRegistry}.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"public class CommandRegistrar {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"     * Register all commands and returns a mapping of command keywords to their corresponding {@link Command} instances.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"     * \u003cp\u003eThe following categories are registered:\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"     *     \u003cli\u003eRegular commands: {@code add}, {@code delete}, {@code edit}, {@code list}, {@code total},","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"     *     {@code average}, {@code summary}, {@code budget}\u003c/li\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"     *     \u003cli\u003eRecurring commands: {@code recurring}, {@code delete-recurring}, {@code edit-recurring}, etc.\u003c/li\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"     *     \u003cli\u003eMisc commands: {@code help}\u003c/li\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"     * @return a map from command names to {@link Command} instances","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"    public static Map\u003cString, Command\u003e registerAll() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"        Map\u003cString, Command\u003e commands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"        // Regular commands","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"        commands.put(\"add\", new AddCommand(false));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"        commands.put(\"delete\", new DeleteCommand(false));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"        commands.put(\"edit\", new EditCommand(false));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"        commands.put(\"list\", new ListCommand(false));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"        commands.put(\"total\", new TotalCommand(false));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"        commands.put(\"average\", new AverageCommand(false));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"        commands.put(\"summary\", new SummaryCommand(false));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"        commands.put(\"budget\", new BudgetCommand(false));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Charly2312"},"content":"        commands.put(\"budget-left\", new BudgetLeftCommand(false));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"venicephua"},"content":"        commands.put(\"list-sort\", new ListSortCommand(false));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"        commands.put(\"add-category\", new AddCategoryCommand(false));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"szeyingg"},"content":"        commands.put(\"list-category\", new ListCategoryCommand(false));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"        // Recurring commands","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"venicephua"},"content":"        commands.put(\"add-recurring\", new AddCommand(true));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"        commands.put(\"delete-recurring\", new DeleteCommand(true));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"        commands.put(\"edit-recurring\", new EditCommand(true));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"        commands.put(\"list-recurring\", new ListCommand(true));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"        commands.put(\"total-recurring\", new TotalCommand(true));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"        commands.put(\"average-recurring\", new AverageCommand(true));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"        commands.put(\"summary-recurring\", new SummaryCommand(true));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"venicephua"},"content":"        commands.put(\"list-sort-recurring\", new ListSortCommand(true));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"        // Misc","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"        commands.put(\"help\", new HelpCommand(false));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"        return commands;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"edwardrl101":2,"szeyingg":4,"randust":63,"Charly2312":2,"venicephua":4}},{"path":"src/main/java/fintrek/command/registry/CommandRegistry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.registry;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import java.util.List;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":" * Central registry for all available commands in the system.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis class maintains a mapping of command names (strings) to their corresponding","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":" * {@link Command} instances. It provides utilities for retrieving, checking, and listing","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":" * registered commands. All commands are registered via {@link CommandRegistrar} on initialization.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"public class CommandRegistry {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"    private static final Map\u003cString, Command\u003e commands \u003d CommandRegistrar.registerAll();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"     * Retrieves the {@link Command} instance associated with the given name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"     * @param name the name of the command (case-insensitive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"     * @return the corresponding {@link Command}, or {@code null} if not found","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"     * @throws AssertionError if the provided name is {@code null}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"    public static Command getCommand(String name) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"        assert name !\u003d null : String.format(MessageDisplayer.CANNOT_BE_NULL_MESSAGE_TEMPLATE, \"Command name\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"        return commands.get(name.toLowerCase());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"     * Checks whether a command with the given name is registered.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"     * @param name the name of the command to check (case-insensitive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"     * @return true if the command exists, false otherwise","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"     * @throws AssertionError if the provided name is {@code null}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"    public static boolean hasCommand(String name) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"        assert name !\u003d null : String.format(MessageDisplayer.CANNOT_BE_NULL_MESSAGE_TEMPLATE, \"Command name\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"        return commands.containsKey(name.toLowerCase());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"     * Returns a formatted string containing all registered command names and their descriptions.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"     * \u003cp\u003eThis is used primarily for generating help text.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"     * @return a newline-separated list of command descriptions","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"    public static String getAllCommandDescriptions() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"        List\u003cString\u003e descriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"        for (Map.Entry\u003cString, Command\u003e entry : commands.entrySet()) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"            descriptions.add(\"/\" + entry.getKey() + \": \\n\" + entry.getValue().getDescription() + \"\\n\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"venicephua"},"content":"        descriptions.sort(String::compareTo);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"        return String.join(\"\\n\", descriptions);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"randust":57,"venicephua":2}},{"path":"src/main/java/fintrek/command/registry/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.registry;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":" * The {@code CommandResult} record represents the outcome of processing a command,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":" * whether it fails during validation (parsing) or encounters an issue during execution.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":" * @param isSuccess    {@code true} if the command was successfully processed;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":" *                     {@code false} if an error occurred.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":" * @param message   a descriptive message providing details on the command\u0027s outcome;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":" *                  An error messages in case of failure execution or the desired display output if successful.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"public record CommandResult(boolean isSuccess, String message) {}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"randust":11}},{"path":"src/main/java/fintrek/command/sort/ListSortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"package fintrek.command.sort;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"import fintrek.parser.CommandParser;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"import fintrek.parser.ParseResult;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"import fintrek.parser.ListSortArgumentParser;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"import java.util.List;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"@CommandInfo(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"        recurringFormat \u003d \"Format: /list-sort-recurring \u003cSORT FIELD\u003e \u003cSORT DIRECTION\u003e\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"        regularFormat \u003d \"Format: /list-sort \u003cSORT FIELD\u003e \u003cSORT DIRECTION\u003e\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"        description \u003d \"\"\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"                SORT FIELD valid inputs: name, amount, category, date","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"                SORT DIRECTION valid inputs: asc, dsc","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"                \"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"        recurringExample \u003d \"Example: /list-sort-recurring name asc - \" +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"                \"prints sorted recurring list in ascending alphabetical order.\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"        regularExample \u003d \"Example: /list-sort name asc - \" +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"                \"prints regular sorted list in ascending alphabetical order.\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":")","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"public class ListSortCommand extends Command {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"    //@@author szeyingg","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"    private static final Comparator\u003cExpense\u003e AMOUNT_ASC \u003d Comparator.comparingDouble(Expense::getAmount);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"    private static final Comparator\u003cExpense\u003e CATEGORY_ASC \u003d Comparator.comparing(Expense::getCategory);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"    private static final Comparator\u003cExpense\u003e DATE_ASC \u003d Comparator.comparing(Expense::getDate);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"    private static final Comparator\u003cExpense\u003e NAME_ASC \u003d","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"            Comparator.comparing(expense -\u003e expense.getDescription().toLowerCase());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"    private final ListSortArgumentParser parser \u003d new ListSortArgumentParser();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"    public ListSortCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"    public CommandParser\u003c?\u003e getParser() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"        return parser;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"    public boolean supportsStructuredParsing() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"        return true;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"szeyingg"},"content":"     * This function will sort general or recurring expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"szeyingg"},"content":"     *      based on the type and direction the user wants","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"szeyingg"},"content":"     * @param arguments has important inputs which are how is it sorted by (e.g. category)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"     *                  and direction either ascending or descending","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"szeyingg"},"content":"     * @return a {@code CommandResult} object telling whether the","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"szeyingg"},"content":"     *      execution is successful or not, and an error/success message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"szeyingg"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"szeyingg"},"content":"        ParseResult\u003cListSortParseResult\u003e result \u003d parser.parse(arguments);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"        if (!result.isSuccess()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"szeyingg"},"content":"            return new CommandResult(false, result.getError());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"szeyingg"},"content":"        ListSortParseResult args \u003d result.getResult();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"szeyingg"},"content":"        String sortBy \u003d args.sortBy();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"szeyingg"},"content":"        String sortDir \u003d args.sortDir();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"szeyingg"},"content":"        List\u003cExpense\u003e expenses \u003d service.getAllExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"szeyingg"},"content":"        if (expenses.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"szeyingg"},"content":"            return new CommandResult(false, MessageDisplayer.EMPTY_LIST_MESSAGE);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"szeyingg"},"content":"        Comparator\u003cExpense\u003e comparator \u003d getComparator(sortBy);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"szeyingg"},"content":"        if (comparator \u003d\u003d null) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"            return new CommandResult(false, MessageDisplayer.INVALID_SORT_FIELD);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"szeyingg"},"content":"        comparator \u003d setDirection(sortDir, comparator);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"szeyingg"},"content":"        if (comparator \u003d\u003d null) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"szeyingg"},"content":"            return new CommandResult(false, MessageDisplayer.INVALID_SORT_DIRECTION);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"szeyingg"},"content":"        return getCommandResult(expenses, comparator, sortBy, sortDir, isRecurringExpense);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"szeyingg"},"content":"     * The function sets the direction of the comparator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"szeyingg"},"content":"     *      which will be used to sort the expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"szeyingg"},"content":"     * @param sortDir is the direction to sort the list","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"szeyingg"},"content":"     * @param comparator to compare the expenses in the list","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"szeyingg"},"content":"     * @return the comparator if it is reversed or not","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"szeyingg"},"content":"    //@@Charly2312","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"szeyingg"},"content":"    private static Comparator\u003cExpense\u003e setDirection(String sortDir, Comparator\u003cExpense\u003e comparator) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"szeyingg"},"content":"        if (sortDir.equals(\"DSC\")) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"szeyingg"},"content":"            return comparator.reversed();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"szeyingg"},"content":"        } else if (!sortDir.equals(\"ASC\")) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"szeyingg"},"content":"            return null;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"szeyingg"},"content":"        return comparator;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"szeyingg"},"content":"     * This function returns the CommandResult after validating all the inputs","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"szeyingg"},"content":"     * @param expenses the list to be sorted","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"szeyingg"},"content":"     * @param comparator the comparator used for the list","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"szeyingg"},"content":"     * @param sortBy the type on how the expenses are sorted","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"szeyingg"},"content":"     * @param sortDir the direction on how the expenses are sorted","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"szeyingg"},"content":"     * @return a {@code CommandResult} object telling whether the","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"szeyingg"},"content":"     *      execution is successful or not, and an error/success message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"szeyingg"},"content":"    //@@Charly2312","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"szeyingg"},"content":"    private CommandResult getCommandResult(List\u003cExpense\u003e expenses, Comparator\u003cExpense\u003e comparator,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"szeyingg"},"content":"                                           String sortBy, String sortDir, boolean isRecurringExpense) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"szeyingg"},"content":"        expenses.sort(comparator);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"szeyingg"},"content":"        String sortedExpenses \u003d reporter.listExpenseBuilder(expenses);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"szeyingg"},"content":"        String message \u003d (isRecurringExpense)?","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"szeyingg"},"content":"                String.format(MessageDisplayer.SORT_RECUR_SUCCESS_MESSAGE_TEMPLATE, sortBy, sortDir, sortedExpenses):","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"szeyingg"},"content":"                String.format(MessageDisplayer.SORT_SUCCESS_MESSAGE_TEMPLATE, sortBy, sortDir, sortedExpenses);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"szeyingg"},"content":"        return new CommandResult(true, message);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"szeyingg"},"content":"     * This function sets the type of the comparator","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"szeyingg"},"content":"     * @param sortBy is how the expenses in the list is sorted by","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"szeyingg"},"content":"     * @return the type of comparator to be used","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"szeyingg"},"content":"    //@@Charly2312","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"szeyingg"},"content":"    private Comparator\u003cExpense\u003e getComparator (String sortBy) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"szeyingg"},"content":"        return switch (sortBy) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"szeyingg"},"content":"        case \"NAME\" -\u003e NAME_ASC;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"szeyingg"},"content":"        case \"AMOUNT\" -\u003e AMOUNT_ASC;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"szeyingg"},"content":"        case \"CATEGORY\" -\u003e CATEGORY_ASC;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"szeyingg"},"content":"        case \"DATE\" -\u003e DATE_ASC;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"szeyingg"},"content":"        default -\u003e null;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"szeyingg"},"content":"        };","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"szeyingg":134,"venicephua":8}},{"path":"src/main/java/fintrek/command/sort/ListSortParseResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"package fintrek.command.sort;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":" * Represents the result of parsing a list-sort command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":" * \u003cp\u003eThis record bundles the sorting parameters, sortBy and sortDir.\u003c/p\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":" * \u003cp\u003eUsed internally by {@link ListSortCommand} after parsing the user\u0027s input.\u003c/p\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":" * @param sortBy the field by which list will be sorted in","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":" * @param sortDir the direction in which sorted list is displayed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"public record ListSortParseResult(String sortBy, String sortDir) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"szeyingg":14}},{"path":"src/main/java/fintrek/command/summary/AverageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardrl101"},"content":"//@@author edwardrl101","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"edwardrl101"},"content":"package fintrek.command.summary;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"@CommandInfo(","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"        recurringFormat \u003d \"Format: /average-recurring\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"        regularFormat \u003d \"Format: /average\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"        description \u003d \"\"\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"            Returns average of all expenses in list, but will return 0 if the list is empty.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"            Example: For a list of expenses: TransportExpense1, TransportExpense2, FoodExpense1","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"            \"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"        recurringExample \u003d \"/average-recurring returns (TransportExpense1 + TransportExpense2 + FoodExpense1) / 3.\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":"        regularExample \u003d \"/average returns (TransportExpense1 + TransportExpense2 + FoodExpense1) / 3.\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":")","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":"public class AverageCommand extends Command {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":"    private static final double MAX_EXCEEDED \u003d -1;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"    private final boolean isRecurringExpense;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"    public AverageCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"        isRecurringExpense \u003d isRecurring;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"     * this function will find the average of general or recurring expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"     * @param arguments raw user input passed to the command","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"     * @return a {@code CommandResult} which object telling whether the","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"     *      execution is successful or not, and an error/success message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"    @Override","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"        try {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"            double average \u003d reporter.getAverage();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"            if(average \u003d\u003d MAX_EXCEEDED) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"                String errorMessage \u003d MessageDisplayer.ERROR_CALCULATING_AVERAGE_EXPENSES +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"                        MessageDisplayer.TOTAL_EXCEEDS_LIMIT_MSG;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"                return new CommandResult(false, errorMessage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"            }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"            String message \u003d (isRecurringExpense) ?","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"                    String.format(MessageDisplayer.AVERAGE_RECURRING_SUCCESS_MESSAGE_TEMPLATE, average):","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"                    String.format(MessageDisplayer.AVERAGE_SUCCESS_MESSAGE_TEMPLATE, average);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"            return new CommandResult(true, message);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"            return new CommandResult(false,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"                    MessageDisplayer.ERROR_CALCULATING_AVERAGE_EXPENSES + e.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"edwardrl101":51}},{"path":"src/main/java/fintrek/command/summary/SummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"//@@author venicephua","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"package fintrek.command.summary;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"import java.util.Map;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"import fintrek.util.InputValidator;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"@CommandInfo(","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"        recurringFormat \u003d \"Format: /summary-recurring [CATEGORY]\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"        regularFormat \u003d \"Format: /summary [CATEGORY]\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"        description \u003d \"\"\"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"            Returns a summary of the total spending in each category.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"            Optionally pass a keyword to show the total spending and expenses in that category.\"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"        recurringExample \u003d \"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"        regularExample \u003d \"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":")","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"public class SummaryCommand extends Command {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"    public SummaryCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"     * This function summarizes general or recurring expense in each category","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"     * @param arguments is the category to be summarised,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"     *                  but can be empty to summarise all categories","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"     * @return a {@code CommandResult} which object telling whether the","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"     *      execution is successful or not, and an error/success message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"    @Override","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"        String message;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"        String categorySummary;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"        Map\u003cString, Double\u003e categoryTotals \u003d reporter.getTotalByCategory();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"        if (InputValidator.isNullOrBlank(arguments)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"            if (categoryTotals.isEmpty()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"                categorySummary \u003d MessageDisplayer.EMPTY_LIST_MESSAGE;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"            } else {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"                categorySummary \u003d reporter.listAllCategoryTotals(categoryTotals);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"venicephua"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"venicephua"},"content":"            String category \u003d arguments.trim().toUpperCase();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"venicephua"},"content":"            if (!categoryTotals.containsKey(category)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"venicephua"},"content":"                String errorMessage \u003d  MessageDisplayer.ERROR_LOADING_SUMMARY","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"venicephua"},"content":"                        + MessageDisplayer.CATEGORY_NOT_FOUND;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"venicephua"},"content":"                return new CommandResult(false, errorMessage);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"            } else {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"venicephua"},"content":"                categorySummary \u003d reporter.listSingleCategoryTotal(categoryTotals, category);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"            }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"venicephua"},"content":"        message \u003d (isRecurringExpense)?","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"venicephua"},"content":"                String.format(MessageDisplayer.LIST_SUMMARY_RECURRING_SUCCESS_MESSAGE_TEMPLATE, categorySummary) :","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"venicephua"},"content":"                String.format(MessageDisplayer.LIST_SUMMARY_SUCCESS_MESSAGE_TEMPLATE, categorySummary);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"venicephua"},"content":"        return new CommandResult(true, message);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-03-30","isFullCredit":false}],"authorContributionMap":{"venicephua":61}},{"path":"src/main/java/fintrek/command/summary/TotalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"//@@author venicephua","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"package fintrek.command.summary;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"import fintrek.command.registry.CommandInfo;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"@CommandInfo(","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"        recurringFormat \u003d \"Format: /total-recurring\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"        regularFormat \u003d \"Format: /total\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"        description \u003d \"\"\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"            Returns sum of all expenses in the list, but will return 0 if the list is empty.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"            Example: For a list of expenses: TransportExpense1, TransportExpense2, FoodExpense1","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"            \"\"\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"        recurringExample \u003d \"/total-recurring returns (TransportExpense1 + TransportExpense2 + FoodExpense1).\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"        regularExample \u003d \"/total returns (TransportExpense1 + TransportExpense2 + FoodExpense1).\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":")","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"public class TotalCommand extends Command {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"    public static final double MAX_EXCEEDED \u003d -1.0;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"    public TotalCommand(boolean isRecurring) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"        super(isRecurring);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"     * The function calculates the total of the expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"     * @param arguments raw user input passed to the command","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"     * @return a {@code CommandResult} which object telling whether the","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"     *      execution is successful or not, and an error/success message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"    @Override","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"    public CommandResult execute(String arguments) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"        double total \u003d reporter.getTotal();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"        if (total \u003d\u003d MAX_EXCEEDED) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"            String errorMessage \u003d MessageDisplayer.ERROR_CALCULATING_TOTAL_EXPENSES +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"                    MessageDisplayer.TOTAL_EXCEEDS_LIMIT_MSG;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"            return new CommandResult(false, errorMessage);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"        String message \u003d (isRecurringExpense) ?","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"                String.format(MessageDisplayer.TOTAL_RECURRING_SUCCESS_MESSAGE_TEMPLATE, total):","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"                String.format(MessageDisplayer.TOTAL_SUCCESS_MESSAGE_TEMPLATE, total);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"        return new CommandResult(true, message);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"venicephua":44}},{"path":"src/main/java/fintrek/data/DataHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardrl101"},"content":"package fintrek.data;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"edwardrl101"},"content":"import fintrek.budget.core.BudgetManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.core.CategoryManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.core.RecurringExpenseManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"import fintrek.parser.ParseResult;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":"import fintrek.parser.FileDataParser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"import java.io.File;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":"/**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":" * The {@code DataHandler} class is responsible for ensuring that the user\u0027s expenses","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":" * are saved and loaded correctly.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":" * It creates a new save file if none is found, loads the expenses from the save file","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":" * and saves the expenses properly in the save file.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":" */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"public class DataHandler {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"    private static final Logger logger \u003d Logger.getLogger(DataHandler.class.getName());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"    private static final String FILE_PATH \u003d \"data.txt\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"    private static final String RECURRING_EXPENSE_SEPARATOR \u003d \" | R\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"     * Saves each expense in data.txt in the following format:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"     * \"DESCRIPTION | $AMOUNT | CATEGORY | DATE\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"     * Prints our an error message if there is an error saving data","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"      */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"    public static void saveData() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"            if(BudgetManager.getInstance().isBudgetSet()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"                fw.write(BudgetManager.getInstance() + MessageDisplayer.LINE_SEPARATOR);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"            }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"            if(CategoryManager.hasCustomCategories()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"                String categoryList \u003d \"Custom Categories: \" + CategoryManager.getCustomCategoriesAsString();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"                fw.write( categoryList + MessageDisplayer.LINE_SEPARATOR);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"            }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"            for(int i \u003d 0; i \u003c RegularExpenseManager.getInstance().getLength(); i++) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"                Expense expense \u003d RegularExpenseManager.getInstance().get(i);;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"                fw.write(expense.toString() + MessageDisplayer.LINE_SEPARATOR);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"            for(int i \u003d 0; i \u003c RecurringExpenseManager.getInstance().getLength(); i++) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"                Expense expense \u003d RecurringExpenseManager.getInstance().get(i);;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"                fw.write(expense.toString() + RECURRING_EXPENSE_SEPARATOR +","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"                        MessageDisplayer.LINE_SEPARATOR);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"            fw.close();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"        } catch(IOException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"            System.out.println(MessageDisplayer.ERROR_SAVING_DATA_MESSAGE + e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"edwardrl101"},"content":"     * Loads the current list of expenses upon startup","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"edwardrl101"},"content":"     * Creates a new save file if the desired \u0027data.txt\u0027 file is not found","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"edwardrl101"},"content":"     * Prints an error message if there is a problem while loading data","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"edwardrl101"},"content":"    public static void loadData() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Charly2312"},"content":"        logger.log(Level.FINE, \"Loading data...\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"edwardrl101"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"edwardrl101"},"content":"        if(f.exists() \u0026\u0026 !f.isDirectory()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"edwardrl101"},"content":"            try(Scanner s \u003d new Scanner(f)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"edwardrl101"},"content":"                while(s.hasNext()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"edwardrl101"},"content":"                    String currExpense \u003d s.nextLine();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"edwardrl101"},"content":"                    ParseResult result \u003d FileDataParser.parseFileData(currExpense);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"edwardrl101"},"content":"                    printPotentialErrorMessage(result);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"edwardrl101"},"content":"                }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"edwardrl101"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"edwardrl101"},"content":"                System.out.println(String.format(MessageDisplayer.FILE_LOAD_ERROR_MESSAGE, FILE_PATH) +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"edwardrl101"},"content":"                        e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"edwardrl101"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"edwardrl101"},"content":"            createNewSaveFile();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"edwardrl101"},"content":"     * Creates a new \u0027data.txt\u0027 save file if none is found","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"edwardrl101"},"content":"     * Prints an error message if problems are encountered while creating the file","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"edwardrl101"},"content":"    public static void createNewSaveFile() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"edwardrl101"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Charly2312"},"content":"            logger.log(Level.FINE, \"Creating new save file...\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"edwardrl101"},"content":"            File f \u003d new File(FILE_PATH);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"edwardrl101"},"content":"            f.createNewFile();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"edwardrl101"},"content":"        } catch(IOException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"edwardrl101"},"content":"            System.out.println(String.format(MessageDisplayer.FILE_CREATION_ERROR_MESSAGE, FILE_PATH) +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"edwardrl101"},"content":"                    e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"edwardrl101"},"content":"    public static void printPotentialErrorMessage(ParseResult result) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"edwardrl101"},"content":"        if(!result.isSuccess()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"edwardrl101"},"content":"            System.out.println(result.getError());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"edwardrl101"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"edwardrl101":99,"szeyingg":6,"Charly2312":3}},{"path":"src/main/java/fintrek/expense/core/CategoryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"package fintrek.expense.core;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":" * This class is responsible for managing expense categories by maintaining a predefined set","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":" * of default categories and a modifiable set of custom categories in-memory using a hash set.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":" * It supports operations such as adding new custom categories and clearing the list of custom","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":" * categories.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"public class CategoryManager {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"    // Pre-defined set of default categories.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"    private static final Set\u003cString\u003e defaultCategories \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"            \"FOOD\", \"TRANSPORT\", \"HEALTH\", \"ENTERTAINMENT\", \"UTILITIES\", \"GIFTS\", \"UNCATEGORIZED\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"    ));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":"    // Initially empty.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"    private static final Set\u003cString\u003e customCategories \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"     * Verifies if the custom category to be added is valid, that is, it does not already exist","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"     * in the list of default categories.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"     * @param input the user input containing the custom category to be added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"     * @return a {@code boolean} value indicating whether the user input is valid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"    public static boolean isValid(String input) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"        String inputUp \u003d input.toUpperCase();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"        return defaultCategories.contains(inputUp) || customCategories.contains(inputUp);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"     * Adds a new custom category into the list of custom categories in uppercase.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"     * @param newCategory the new category to be added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"    public static void addCustomCategory(String newCategory) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"        customCategories.add(newCategory.toUpperCase());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"     * Indicates whether the user has custom categories, that is, the set","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"     * of custom categories is not empty.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"     * @return a boolean value indicating if the user has custom categories.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"    public static boolean hasCustomCategories() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"        return !customCategories.isEmpty();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"     * Erases all custom categories from the list of custom categories.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"szeyingg"},"content":"    public static void clearCustomCategories() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"szeyingg"},"content":"        customCategories.clear();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"     * Returns a comma-separated String equivalent of the given category set,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"edwardrl101"},"content":"     * sorted alphabetically.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"     * @param categories the set of category strings to be formatted.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"     * @return a sorted string of categories joined by commas.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"szeyingg"},"content":"    public static String getCategoriesString(Set\u003cString\u003e categories) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"venicephua"},"content":"        return categories.stream()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"venicephua"},"content":"                .sorted()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"venicephua"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"edwardrl101"},"content":"     * Returns a comma-separated {@code String} of all custom categories,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"edwardrl101"},"content":"     * sorted alphabetically.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"edwardrl101"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"edwardrl101"},"content":"     * @return a sorted string of custom categories joined by commas.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"szeyingg"},"content":"    public static String getCustomCategoriesAsString() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"szeyingg"},"content":"        return getCategoriesString(customCategories);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"edwardrl101"},"content":"     * Returns a comma-separated {@code String} of all default categories,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"edwardrl101"},"content":"     * sorted alphabetically.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"edwardrl101"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"edwardrl101"},"content":"     * @return a sorted string of default categories joined by commas.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"szeyingg"},"content":"    public static String getDefaultCategoriesAsString() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"szeyingg"},"content":"        return getCategoriesString(defaultCategories);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"edwardrl101":45,"szeyingg":39,"venicephua":6}},{"path":"src/main/java/fintrek/expense/core/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.expense.core;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"public class Expense {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"    private final String description;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"    private final double amount;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"    private final String category;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"    private LocalDate date;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"     * Constructor for the expense object based on the parameters below","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"     * @param description is the description of the expense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"     * @param amount is the amount spent in this expense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"     * @param category is the category of the expense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"     * @param date is when the expense is made","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"    public Expense(String description, double amount, String category, LocalDate date) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"        if (amount \u003c\u003d 0) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"            throw new IllegalArgumentException(MessageDisplayer.INVALID_AMOUNT);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"        assert amount \u003e 0 : MessageDisplayer.INVALID_AMOUNT;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"        this.category \u003d category;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"     * Gets the date for the expense.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"     * @return the date for the expense.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"        return date;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"    /** Updates the date for the expense */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"    public void updateDate(LocalDate date) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"     * Gets the expense description.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"     * @return the expense description.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"venicephua"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"venicephua"},"content":"        return description;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"     * Gets the expense category.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"     * @return the expense category.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"    public String getCategory() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"venicephua"},"content":"        return category.toUpperCase();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"     * Gets the expense amount.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"     * @return the expense amount.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"venicephua"},"content":"    public double getAmount() {","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"edwardrl101"},"content":"        assert amount \u003e 0 : MessageDisplayer.INVALID_AMOUNT;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"venicephua"},"content":"        return amount;","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"edwardrl101"},"content":"     * Overrides the original toString() method in Java.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"edwardrl101"},"content":"     * @return a {@code String} equivalent of the expense, in the format as follows,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"edwardrl101"},"content":"     *      \"DESCRIPTION | $AMOUNT | CATEGORY | DATE\" where DATE is in the form \"dd-MM-yyyy\".","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"szeyingg"},"content":"    public String toString() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"edwardrl101"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"edwardrl101"},"content":"        return description + \" | $\" + String.format(\"%.2f\", amount) + \" | \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"edwardrl101"},"content":"                + category.toUpperCase() + \" | \" + date.format(formatter);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"edwardrl101":35,"szeyingg":11,"randust":4,"Charly2312":12,"venicephua":19}},{"path":"src/main/java/fintrek/expense/core/ExpenseOperation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.expense.core;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import java.util.List;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":" * Defines the basic operations supported by an expense collection.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis interface abstracts operations over both regular and recurring expenses,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":" * allowing command logic to interact with them uniformly. Implementations may vary","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":" * in how data is stored or persisted, but must support core CRUD operations,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":" * indexing, and retrieval.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"public interface ExpenseOperation {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"     * Adds a new expense to the collection.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"     * @param expense the expense to add","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"    void add(Expense expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"     * Retrieves the expense at the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"     * @param index the zero-based index of the expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"     * @return the expense at the specified index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"    Expense get(int index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"     * Removes and returns the expense at the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"     * @param index the zero-based index of the expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"     * @return the removed expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"    Expense remove(int index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"     * Returns the number of expenses currently in the collection.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"     * @return the size of the collection","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"    int getLength();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"     * Returns an unmodifiable list of all expenses in the collection.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"     * @return a list of all expenses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"    List\u003cExpense\u003e getAll();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"     * Removes all expenses from the collection.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"    void clear();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"     * Inserts an expense at the specified index, shifting subsequent expenses to the right.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"     * @param index the index at which to insert the expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"     * @param expense the expense to insert","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"    void insertAt(int index, Expense expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"     * Indicates whether this operation instance is for recurring expenses.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"     * @return true if the expenses are recurring, false if regular","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"    boolean isRecurring();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":74}},{"path":"src/main/java/fintrek/expense/core/RecurringExpenseManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.expense.core;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.util.InputValidator;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import java.util.List;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":" * Singleton manager for handling recurring expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":" * \u003cp\u003eThis class implements the {@link ExpenseOperation} interface and stores","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":" * expenses in-memory using a dynamic list. It provides operations to add, remove,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":" * retrieve, and clear expenses, while logging all state-changing actions.\u003c/p\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"public class RecurringExpenseManager implements ExpenseOperation {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    private static final Logger logger \u003d Logger.getLogger(RecurringExpenseManager.class.getName());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"    /** The singleton instance of this manager. */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"    private static final RecurringExpenseManager instance \u003d new RecurringExpenseManager();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"    /** The internal list storing regular expenses. */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"    private final List\u003cExpense\u003e recurringExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"    /** Private constructor to prevent instantiation, or enforce Singleton pattern */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"    private RecurringExpenseManager() {}","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"     * Returns the singleton instance of this manager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"     * @return the shared instance of {@code RecurringExpenseManager}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"    public static RecurringExpenseManager getInstance() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"        return instance;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"     * Indicates that this manager handles recurring expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"     * @return {@code true}, since this manager is for recurring expenses","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"    public boolean isRecurring() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"        return true;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"     * Adds a new recurring expense to the list of recurring expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"     * @param expense the expense to add (must not be null)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Charly2312"},"content":"    //@@author Charly2312","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Charly2312"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Charly2312"},"content":"    public void add(Expense expense) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Charly2312"},"content":"        assert expense !\u003d null : MessageDisplayer.NULL_EXPENSE_ERROR;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Charly2312"},"content":"        logger.log(Level.FINE, MessageDisplayer.ADDING_REGULAR_EXPENSE_MESSAGE + expense);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Charly2312"},"content":"        recurringExpenses.add(expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Charly2312"},"content":"     * Retrieves the recurring expense at the specified index.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Charly2312"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Charly2312"},"content":"     * @param index the index to retrieve (0-based)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Charly2312"},"content":"     * @return the expense at the given index","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Charly2312"},"content":"     * @throws AssertionError if the index is out of bounds","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Charly2312"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Charly2312"},"content":"    public Expense get(int index) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Charly2312"},"content":"        assert InputValidator.isInValidIntRange(index, 0, recurringExpenses.size() - 1)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Charly2312"},"content":"                : MessageDisplayer.INVALID_IDX_MESSAGE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Charly2312"},"content":"        return recurringExpenses.get(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Charly2312"},"content":"     * Removes and returns the recurring expense at the specified index.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Charly2312"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Charly2312"},"content":"     * @param index the index of the expense to remove (0-based)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Charly2312"},"content":"     * @return the removed expense","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Charly2312"},"content":"     * @throws AssertionError if the index is out of bounds","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Charly2312"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Charly2312"},"content":"    public Expense remove(int index) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Charly2312"},"content":"        assert InputValidator.isInValidIntRange(index, 0, recurringExpenses.size() - 1)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Charly2312"},"content":"                : MessageDisplayer.INVALID_IDX_MESSAGE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Charly2312"},"content":"        Expense removed \u003d recurringExpenses.remove(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Charly2312"},"content":"        logger.log(Level.FINE, String.format(MessageDisplayer.REMOVED_EXPENSE_MESSAGE_TEMPLATE, index, removed));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Charly2312"},"content":"        return removed;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Charly2312"},"content":"     * Returns the number of recurring expenses currently stored.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Charly2312"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Charly2312"},"content":"     * @return the size of the recurring expense list","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Charly2312"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Charly2312"},"content":"    public int getLength() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Charly2312"},"content":"        return recurringExpenses.size();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Charly2312"},"content":"     * Returns a defensive copy of all recurring expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Charly2312"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Charly2312"},"content":"     * @return a list of all current recurring expenses","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Charly2312"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Charly2312"},"content":"    public List\u003cExpense\u003e getAll() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Charly2312"},"content":"        return new ArrayList\u003c\u003e(recurringExpenses); // defensive copy","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Charly2312"},"content":"     * Removes all recurring expenses from the list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Charly2312"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Charly2312"},"content":"    public void clear() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Charly2312"},"content":"        recurringExpenses.clear();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Charly2312"},"content":"        logger.log(Level.FINE, MessageDisplayer.CLEARED_ALL_REGULAR_EXPENSES_MESSAGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Charly2312"},"content":"     * Inserts a recurring expense at the given index, shifting subsequent items to the right.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Charly2312"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Charly2312"},"content":"     * @param index the index at which to insert the recurring expense (0-based)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Charly2312"},"content":"     * @param expense the recurring expense to insert (must not be null)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Charly2312"},"content":"     * @throws AssertionError if index is out of bounds","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Charly2312"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Charly2312"},"content":"    public void insertAt(int index, Expense expense) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Charly2312"},"content":"        assert InputValidator.isInValidIntRange(index, 0, recurringExpenses.size())","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Charly2312"},"content":"                : MessageDisplayer.INVALID_IDX_MESSAGE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Charly2312"},"content":"        logger.log(Level.FINE, String.format(MessageDisplayer.INSERTING_EXPENSE_MESSAGE_TEMPLATE, index, expense));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Charly2312"},"content":"        recurringExpenses.add(index, expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"edwardrl101":24,"randust":28,"Charly2312":83}},{"path":"src/main/java/fintrek/expense/core/RegularExpenseManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.expense.core;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.util.InputValidator;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import java.util.List;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" * Singleton manager for handling regular (non-recurring) expenses.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis class implements the {@link ExpenseOperation} interface and stores","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":" * expenses in-memory using a dynamic list. It provides operations to add, remove,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":" * retrieve, and clear expenses, while logging all state-changing actions.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"public class RegularExpenseManager implements ExpenseOperation {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    private static final Logger logger \u003d Logger.getLogger(RegularExpenseManager.class.getName());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"    /** The smallest valid index for accessing the list. */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"    private static final int INDEX_LOWER_BOUND \u003d 0;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"    /** The singleton instance of this manager. */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"    private static final RegularExpenseManager instance \u003d new RegularExpenseManager();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"    /** The internal list storing regular expenses. */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"    private final List\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"    /** Private constructor to enforce singleton pattern. */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"    private RegularExpenseManager() {}","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"     * Returns the singleton instance of this manager.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"     * @return the shared instance of {@code RegularExpenseManager}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"    public static RegularExpenseManager getInstance() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"        return instance;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"     * Indicates that this manager handles regular (not recurring) expenses.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"     * @return {@code false}, since this manager is for regular expenses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"    public boolean isRecurring() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"        return false;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"     * Adds a new expense to the list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"     * @param expense the expense to add (must not be null)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"    public void add(Expense expense) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"        assert expense !\u003d null : MessageDisplayer.NULL_EXPENSE_ERROR;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"        logger.log(Level.FINE, MessageDisplayer.ADDING_REGULAR_EXPENSE_MESSAGE + expense);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"        expenses.add(expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"     * Retrieves the expense at the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"     * @param index the index to retrieve (0-based)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"     * @return the expense at the given index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"     * @throws AssertionError if the index is out of bounds","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"    public Expense get(int index) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"        assert InputValidator.isInValidIntRange(index, INDEX_LOWER_BOUND, expenses.size() - 1)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"                : MessageDisplayer.INVALID_IDX_MESSAGE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"        return expenses.get(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"     * Removes and returns the expense at the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"     * @param index the index of the expense to remove (0-based)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"randust"},"content":"     * @return the removed expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"randust"},"content":"     * @throws AssertionError if the index is out of bounds","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"    public Expense remove(int index) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"randust"},"content":"        assert InputValidator.isInValidIntRange(index, INDEX_LOWER_BOUND, expenses.size() - 1)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"                : MessageDisplayer.INVALID_IDX_MESSAGE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"randust"},"content":"        Expense removed \u003d expenses.remove(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"        logger.log(Level.FINE, String.format(MessageDisplayer.REMOVED_EXPENSE_MESSAGE_TEMPLATE, index, removed));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"        return removed;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"randust"},"content":"     * Returns the number of expenses currently stored.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"randust"},"content":"     * @return the size of the expense list","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"randust"},"content":"    public int getLength() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"randust"},"content":"        return expenses.size();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"randust"},"content":"     * Returns a defensive copy of all expenses.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"randust"},"content":"     * @return a list of all current expenses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"randust"},"content":"    public List\u003cExpense\u003e getAll() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"randust"},"content":"        return new ArrayList\u003c\u003e(expenses);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"randust"},"content":"     * Removes all expenses from the list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"randust"},"content":"    public void clear() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"randust"},"content":"        expenses.clear();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"randust"},"content":"        logger.log(Level.FINE, MessageDisplayer.CLEARED_ALL_REGULAR_EXPENSES_MESSAGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"randust"},"content":"     * Inserts an expense at the given index, shifting subsequent items to the right.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"randust"},"content":"     * @param index the index at which to insert the expense (0-based)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"randust"},"content":"     * @param expense the expense to insert (must not be null)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"randust"},"content":"     * @throws AssertionError if index is out of bounds","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"randust"},"content":"    public void insertAt(int index, Expense expense) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"randust"},"content":"        assert InputValidator.isInValidIntRange(index, INDEX_LOWER_BOUND, expenses.size())","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"randust"},"content":"                : MessageDisplayer.INVALID_IDX_MESSAGE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"randust"},"content":"        logger.log(Level.FINE, String.format(MessageDisplayer.INSERTING_EXPENSE_MESSAGE_TEMPLATE, index, expense));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"randust"},"content":"        expenses.add(index, expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"edwardrl101":1,"randust":136,"Charly2312":1}},{"path":"src/main/java/fintrek/expense/service/AppServices.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.expense.service;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.RecurringExpenseManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":" * This class helps to create new reporter and service from the ExpenseService","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":" *          and ExpenseReporter. This will be done depending on if it is for","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":" *          a regular or recurring expense.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":" * This reporter and service will be used by other classes to call the","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":" *          respective functions for either regular or recurring expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"public class AppServices {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"    public static final ExpenseService REGULAR_SERVICE \u003d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"            new ExpenseService(RegularExpenseManager.getInstance());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"    public static final ExpenseService RECURRING_SERVICE \u003d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"            new ExpenseService(RecurringExpenseManager.getInstance());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"    public static final ExpenseReporter REGULAR_REPORTER \u003d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"            new ExpenseReporter(RegularExpenseManager.getInstance());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"    public static final ExpenseReporter RECURRING_REPORTER \u003d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"            new ExpenseReporter(RecurringExpenseManager.getInstance());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"    private AppServices() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"        // Prevent instantiation","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":22,"Charly2312":7}},{"path":"src/main/java/fintrek/expense/service/ExpenseReporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.expense.service;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.ExpenseOperation;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"import java.util.List;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import java.util.Map;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"/**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":" * This class holds all the functions that will report a result to the user","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":" *","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":" * Some examples include total, average and get highest","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":" */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"public class ExpenseReporter {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":"    public static final double MAX_EXCEEDED \u003d -1.0;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    private final ExpenseOperation manager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"     * Constructs an {@code ExpenseReporter} backed by the given manager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"     * @param manager an implementation of {@link ExpenseOperation}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"     * @throws IllegalArgumentException if {@code manager} is null","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"    public ExpenseReporter(ExpenseOperation manager) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"        if (manager \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"            throw new IllegalArgumentException(MessageDisplayer.NULL_EXPENSE_ERROR);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"        this.manager \u003d manager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"    //@@author venicephua","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"     * Adds up amounts of all expenses in ExpenseManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"     * @return total value of amounts","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"    public double getTotal() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"        double total \u003d manager.getAll().stream()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"                .mapToDouble(Expense::getAmount)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"                .sum();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"        if (total \u003e MessageDisplayer.MAX_AMOUNT) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"            return MAX_EXCEEDED;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"venicephua"},"content":"        return total;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"    //@@author edwardrl101","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"     * Obtains the total expense in a particular month of a year","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"     * @param year the desired year in the form \"yyyy\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"     * @param month the desired month in the form \"MM\" where MM is between 1 and 12 inclusive","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"     * @return the total expense in a particular month of a year","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"    public double getTotalByMonthOfYear(int year, int month) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"        return manager.getAll().stream()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"                .filter(expense -\u003e expense.getDate().getYear() \u003d\u003d year","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"                        \u0026\u0026 expense.getDate().getMonthValue() \u003d\u003d month) // Filter by year and month","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"edwardrl101"},"content":"                .collect(Collectors.summingDouble(Expense::getAmount)); // Sum the amounts of the filtered expenses","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"    public double getAverage() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"edwardrl101"},"content":"        int count \u003d manager.getLength();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"edwardrl101"},"content":"        if(getTotal() \u003d\u003d MAX_EXCEEDED) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"edwardrl101"},"content":"            return MAX_EXCEEDED;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"edwardrl101"},"content":"        return (count \u003d\u003d 0) ? 0 : getTotal() / count;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"szeyingg"},"content":"    //@@author szeyingg","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"szeyingg"},"content":"     * Helper method for building an expense list string.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"szeyingg"},"content":"     * @param expenseList list of expenses to be converted","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"szeyingg"},"content":"     * @return list of expenses that has been concatenated into a string","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"szeyingg"},"content":"    public String listExpenseBuilder(List\u003cExpense\u003e expenseList) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"szeyingg"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"szeyingg"},"content":"        for (Expense expense : expenseList) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"szeyingg"},"content":"            assert expense !\u003d null : MessageDisplayer.NULL_EXPENSE_ERROR;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"szeyingg"},"content":"            list.append(String.format(MessageDisplayer.LIST_EXPENSE_FORMAT, i++, expense));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"szeyingg"},"content":"        return list.toString();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"szeyingg"},"content":"     * Gets list of expenses from {@code ExpenseManager}.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"szeyingg"},"content":"     * @return list of expenses as a string","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"szeyingg"},"content":"    public String listExpenses() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"szeyingg"},"content":"        List\u003cExpense\u003e expenses \u003d manager.getAll();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"szeyingg"},"content":"        if (expenses.isEmpty()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"szeyingg"},"content":"            return manager.isRecurring()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"szeyingg"},"content":"                    ? MessageDisplayer.EMPTY_RECURRING_LIST_MESSAGE","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"szeyingg"},"content":"                    : MessageDisplayer.EMPTY_LIST_MESSAGE;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"szeyingg"},"content":"        return listExpenseBuilder(expenses);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"venicephua"},"content":"    //@@author venicephua","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"venicephua"},"content":"     * Retrieves the total amount spent for each expense category.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"venicephua"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"venicephua"},"content":"     * @return A map where keys are category names and values are the total amounts spent.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"venicephua"},"content":"     * */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"venicephua"},"content":"    public Map\u003cString, Double\u003e getTotalByCategory() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"venicephua"},"content":"        return manager.getAll().stream()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"venicephua"},"content":"                .collect(Collectors.groupingBy(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"venicephua"},"content":"                        Expense::getCategory,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"venicephua"},"content":"                        Collectors.summingDouble(Expense::getAmount)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"venicephua"},"content":"                ));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"venicephua"},"content":"     * Retrieves a list of expenses belonging to a specified category.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"venicephua"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"venicephua"},"content":"     * @param category The category name to filter expenses by.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"venicephua"},"content":"     * @return A list of expenses in the specified category.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"venicephua"},"content":"     * @throws IllegalArgumentException if the category is null.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"venicephua"},"content":"    public List\u003cExpense\u003e getExpensesByCategory(String category) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"venicephua"},"content":"        if (category \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"venicephua"},"content":"            String message \u003d String.format(MessageDisplayer.CANNOT_BE_NULL_MESSAGE_TEMPLATE, \"Category\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"venicephua"},"content":"            throw new IllegalArgumentException(message);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"venicephua"},"content":"        return manager.getAll().stream()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"venicephua"},"content":"                .filter(e -\u003e e.getCategory().equals(category))","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"venicephua"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"venicephua"},"content":"     * Determines the category with the highest total expense.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"venicephua"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"venicephua"},"content":"     * @return A formatted string indicating the highest spending category and the total amount spent.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"venicephua"},"content":"     *         Returns a predefined message if there are no expenses.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"venicephua"},"content":"    public String getHighestCategory(Map\u003cString, Double\u003e categoryTotals) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"venicephua"},"content":"        return categoryTotals.entrySet().stream()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"venicephua"},"content":"                .max(Map.Entry.comparingByValue())","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"venicephua"},"content":"                .map(e -\u003e String.format(MessageDisplayer.HIGHEST_CAT_AMT_FORMAT, e.getKey(), e.getValue()))","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"venicephua"},"content":"                .orElse(MessageDisplayer.EMPTY_LIST_MESSAGE);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"venicephua"},"content":"     * Lists total expenses for all categories in a formatted string.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"venicephua"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"venicephua"},"content":"     * @param categoryTotals The map where keys are category names and values are the total amounts spent.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"venicephua"},"content":"     * @return A formatted string displaying category-wise totals, the highest spending category, and the grand total.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"venicephua"},"content":"     *         Returns a predefined message if there are no expenses.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"venicephua"},"content":"    public String listAllCategoryTotals(Map\u003cString, Double\u003e categoryTotals) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"venicephua"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"venicephua"},"content":"        List\u003cMap.Entry\u003cString, Double\u003e\u003e sortedCategories \u003d new ArrayList\u003c\u003e(categoryTotals.entrySet());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"venicephua"},"content":"        sortedCategories.sort(Map.Entry.comparingByKey());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"venicephua"},"content":"        for (Map.Entry\u003cString, Double\u003e entry : sortedCategories) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"venicephua"},"content":"            String category \u003d entry.getKey();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"venicephua"},"content":"            double amount \u003d entry.getValue();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"venicephua"},"content":"            assert amount \u003e\u003d 0 : MessageDisplayer.INVALID_AMOUNT;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"venicephua"},"content":"            list.append(String.format(MessageDisplayer.CAT_AMT_FORMAT, category, amount));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"venicephua"},"content":"        String highestCategory \u003d getHighestCategory(categoryTotals);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"venicephua"},"content":"        double grandTotal \u003d getTotal();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"venicephua"},"content":"        list.append(String.format(MessageDisplayer.HIGHEST_CAT_FORMAT,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"venicephua"},"content":"                MessageDisplayer.SUMMARY_HIGHEST_SPEND, highestCategory));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"venicephua"},"content":"        list.append(String.format(MessageDisplayer.GRAND_TOTAL_FORMAT,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"venicephua"},"content":"                MessageDisplayer.SUMMARY_GRAND_TOTAL, grandTotal));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"venicephua"},"content":"        return list.toString();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"venicephua"},"content":"     * Lists the total expense for a single category in a formatted string.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"venicephua"},"content":"     *","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"venicephua"},"content":"     * @param categoryTotals The map where keys are category names and values are the total amounts spent.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"venicephua"},"content":"     * @param category The category name to retrieve the total expense for.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"venicephua"},"content":"     * @return A formatted string displaying the total amount spent for the specified category,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"venicephua"},"content":"     *         along with details of individual expenses in that category.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"venicephua"},"content":"     *         Returns a predefined message if the category is not found.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"venicephua"},"content":"    public String listSingleCategoryTotal(Map\u003cString, Double\u003e categoryTotals, String category) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"venicephua"},"content":"        if (!categoryTotals.containsKey(category)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"venicephua"},"content":"            return MessageDisplayer.CATEGORY_NOT_FOUND;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"venicephua"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"venicephua"},"content":"        double amount \u003d categoryTotals.get(category);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"venicephua"},"content":"        assert amount \u003e\u003d 0 : MessageDisplayer.INVALID_AMOUNT;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"venicephua"},"content":"        list.append(String.format(MessageDisplayer.CAT_AMT_FORMAT, category, amount));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"venicephua"},"content":"        List\u003cExpense\u003e categoryExpenses \u003d getExpensesByCategory(category);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"venicephua"},"content":"        list.append(listExpenseBuilder(categoryExpenses));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"venicephua"},"content":"        return list.toString();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"edwardrl101":23,"szeyingg":36,"randust":21,"Charly2312":5,"venicephua":107}},{"path":"src/main/java/fintrek/expense/service/ExpenseService.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.expense.service;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.ExpenseOperation;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import java.util.List;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" * Service layer for managing expenses through an underlying {@link ExpenseOperation} implementation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis class provides high-level methods for manipulating expense data, abstracting away","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":" * the internal details of whether the data is regular or recurring. It includes utility methods","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":" * for adding, removing, retrieving, and counting expenses, and logs relevant operations.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"public class ExpenseService {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    private static final Logger logger \u003d Logger.getLogger(ExpenseService.class.getName());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"    private final ExpenseOperation manager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"     * Constructs an {@code ExpenseService} backed by the given manager.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"     * @param manager an implementation of {@link ExpenseOperation}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"     * @throws IllegalArgumentException if {@code manager} is null","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"    public ExpenseService(ExpenseOperation manager) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"        if (manager \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"            throw new IllegalArgumentException(MessageDisplayer.NULL_EXPENSE_ERROR);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"        this.manager \u003d manager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"     * Adds an expense to the underlying manager.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"     * @param expense the expense to add","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"    public void addExpense(Expense expense) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"        manager.add(expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"     * Inserts an expense at the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"     * @param index the position to insert the expense at (0-based)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"     * @param expense the expense to insert","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"    public void insertExpenseAt(int index, Expense expense) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"        manager.insertAt(index, expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"     * Retrieves the expense at the given index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"     * @param index the index of the expense to retrieve (0-based)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"     * @return the expense at the specified index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"    public Expense getExpense(int index) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"        return manager.get(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"     * Removes and returns the expense at the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"     * @param index the index of the expense to remove (0-based)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"     * @return the removed expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"    public Expense removeExpense(int index) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Charly2312"},"content":"        logger.log(Level.FINE, MessageDisplayer.POPPING_EXPENSE_AT_INDEX_MESSAGE + index);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"        return manager.remove(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"     * Alias for {@link #removeExpense(int)}. Removes and returns the expense at the specified index.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"     * @param index the index of the expense to remove (0-based)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"     * @return the removed expense","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"    public Expense popExpense(int index) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Charly2312"},"content":"        logger.log(Level.FINE, MessageDisplayer.POPPING_EXPENSE_AT_INDEX_MESSAGE + index);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"randust"},"content":"        return manager.remove(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"randust"},"content":"     * Returns a list of all expenses currently stored.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"randust"},"content":"     * @return a list of all expenses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"    public List\u003cExpense\u003e getAllExpenses() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"        return manager.getAll();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"randust"},"content":"     * Clears all expenses from the collection.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"randust"},"content":"    public void clearExpenses() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"randust"},"content":"        manager.clear();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"     * Returns the number of expenses in the collection.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"randust"},"content":"     * @return the count of stored expenses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"randust"},"content":"    public int countExpenses() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"randust"},"content":"        return manager.getLength();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":107,"Charly2312":3}},{"path":"src/main/java/fintrek/misc/MessageDisplayer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.misc;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"import fintrek.budget.core.BudgetManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.core.RecurringExpenseManager;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.service.AppServices;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":" * Utility class containing predefined messages for user interactions and command usage.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"public class MessageDisplayer {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"    // General Messages","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"    public static final String ASK_FOR_INPUT \u003d \"Please input your command\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"    public static final String ARROW_FOR_INPUT \u003d \"\u003e \";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Hi there, welcome to FinTrek! What can I do for you?\";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"    public static final String CONVERSATION_STARTER \u003d \"If you are new, please type /help to learn all the functions\";","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"    public static final String END_CONVERSATION_MESSAGE \u003d \"bye\";","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":"    public static final String LANDING_MESSAGE_NONEMPTY_LIST \u003d \"This is your current list of expenses: %s\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":"    public static final String LANDING_MESSAGE_EMPTY_LIST \u003d \"You currently have no expenses. Add some now!\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"    public static final String EXECUTING_COMMAND_MESSAGE \u003d \"Executing command: \";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"    public static final String LANDING_MESSAGE_BUDGET_FOUND \u003d \"Your current monthly budget is $%.2f\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"    public static final String LANDING_MESSAGE_BUDGET_NOT_FOUND \u003d \"You have not set a monthly budget yet. Set one now!\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"    public static final String LANDING_MESSAGE_NONEMPTY_RECURRING_MSG \u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"            \"Found some recurring expenses: %s\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"    public static final String LANDING_MESSAGE_ADDING_RECURRING_MSG \u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"            \"If the date matches today\u0027s date, adding them to the main list of expenses now.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"    public static final String LANDING_MESSAGE_EMPTY_RECURRING_MSG\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"            \"Found no recurring expenses.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"    public static final String LINE_SEPARATOR \u003d \"\\n\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"    public static final String BYE_MESSAGE \u003d \"Bye now! See you soon!\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"    // Error Messages","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"    public static final String INVALID_AMOUNT \u003d \"Amount must be positive\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"    public static final String INVALID_LOAD_BUDGET_AMOUNT_MESSAGE \u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"            \"Invalid Amount in Monthly Budget. Skipping the loading process for monthly budget.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"    public static final String INVALID_FORMAT_MESSAGE_TEMPLATE \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"            \"Invalid format. Please key in \u0027/help %s\u0027 for more information\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"    public static final String INVALID_DATE_MESSAGE \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"            \"Invalid date format. Please enter a valid date in the form \\\"dd-MM-yyyy\\\"\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"    public static final String INVALID_DATE_DATA_MESSAGE \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"            \"Invalid data. The given date is not in the correct format.\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"    public static final String INVALID_DATA_FORMAT_MESSAGE \u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"            \"Invalid data format. Skipping over this line.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"    public static final String INVALID_AMT_MESSAGE \u003d \"Please enter a valid amount\";","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"    public static final String INVALID_AMT_DATA_MESSAGE \u003d \"Expense with invalid amount found.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"    public static final String INVALID_IDX_MESSAGE \u003d \"Please enter a valid index\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"    public static final String INVALID_IDX_FORMAT_MESSAGE \u003d \"Invalid index format. Please enter a valid index.\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"    public static final String IDX_OUT_OF_BOUND_MESSAGE \u003d \"Index out of bound. Please enter a valid index.\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"    public static final String IDX_EMPTY_MESSAGE \u003d \"Index cannot be empty\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"venicephua"},"content":"    public static final String ERROR_CALCULATING_TOTAL_EXPENSES \u003d \"Error calculating total expenses: \";","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"    public static final String BUDGET_EXCEEDS_LIMIT_MSG \u003d \"Budget exceeds $1 billion. Please input a lower amount.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"    public static final String TOTAL_EXCEEDS_LIMIT_MSG \u003d \"Total expenses exceed $10 billion.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"    public static final String AVERAGE_EXCEEDS_LIMIT_MSG \u003d \"Average expenses exceed $1 billion.\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"    public static final String ERROR_CALCULATING_AVERAGE_EXPENSES \u003d \"Error calculating average expenses: \";","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"    public static final String NO_COMMAND_MESSAGE \u003d","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"            \"Please enter a command starting with \u0027/\u0027. Type \u0027/help\u0027 for more information.\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"    public static final String INVALID_COMMAND_MESSAGE \u003d","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"            \"Please enter a valid command. Type \u0027/help\u0027 for more information.\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"    public static final String ARG_EMPTY_MESSAGE_TEMPLATE \u003d \"Argument of \u0027/%s\u0027 command cannot be empty\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Charly2312"},"content":"    public static final String ARG_MUST_BE_EMPTY_MESSAGE_TEMPLATE \u003d \"Argument of \u0027/%s\u0027 must be empty\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"    public static final String FILE_LOAD_ERROR_MESSAGE \u003d \"Error loading file %s: \";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"    public static final String FILE_CREATION_ERROR_MESSAGE \u003d \"Error creating file %s: \";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"edwardrl101"},"content":"    public static final String ERROR_SAVING_DATA_MESSAGE \u003d \"Error saving data: \";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"szeyingg"},"content":"    public static final String CATEGORY_LOAD_ERROR_MESSAGE \u003d \"Error loading custom categories. Resetting to default.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"szeyingg"},"content":"    public static final String CATEGORY_ALREADY_EXISTS \u003d \"Category already exists\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"szeyingg"},"content":"    public static final String CATEGORY_WHITESPACE_ERROR \u003d \"Category cannot contain whitespace\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"szeyingg"},"content":"    public static final String INVALID_CATEGORY_MESSAGE \u003d","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Charly2312"},"content":"            \"Invalid Category. Use \u0027/add-category %s\u0027 to add as new category to be used.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"    public static final String EDIT_FORMAT_HINT \u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"            \"Invalid format. Usage: /edit [INDEX] [/d DESC] [/$ AMOUNT] [/c CATEGORY] [/dt DATE in DD-MM-YYYY]\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"    public static final String EDIT_NO_FIELD_PROVIDED_MSG \u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"            \"Please provide at least one field to edit using /d, /$, /c or /dt.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"szeyingg"},"content":"    public static final String EMPTY_LIST_MESSAGE \u003d \"No expenses found\";","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"szeyingg"},"content":"    public static final String RESERVED_DESC_ERROR \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"            \"Description cannot contain reserved command symbols like $, /c, or /dt.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"edwardrl101"},"content":"    public static final String EMPTY_DESC_AND_AMT_MESSAGE \u003d \"Invalid input: Description and amount cannot be empty\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Charly2312"},"content":"    public static final String INVALID_ADD_RECURRING_FORMAT_MESSAGE \u003d \"Invalid input: Description, amount or date \" +","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Charly2312"},"content":"            \"is in the wrong format or cannot be empty\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"edwardrl101"},"content":"    public static final String EMPTY_DATA_MESSAGE \u003d \"Invalid data. The current line is empty.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"edwardrl101"},"content":"    public static final String EMPTY_DESC_DATA_MESSAGE \u003d \"Invalid data. The current expense has no description.\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"edwardrl101"},"content":"    public static final String EMPTY_AMOUNT_DATA_MESSAGE \u003d \"Invalid data. The current expense has no amount.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"edwardrl101"},"content":"    public static final String EMPTY_CATEGORY_DATA_MESSAGE \u003d \"Invalid data. Category is null.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"edwardrl101"},"content":"    public static final String EMPTY_DATE_DATA_MESSAGE \u003d \"Invalid data. The current expense is not dated.\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"venicephua"},"content":"    public static final String NULL_EXPENSE_ERROR \u003d \"Expense cannot be null\";","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Charly2312"},"content":"    public static final String EMPTY_RECURRING_LIST_MESSAGE \u003d \"No recurring expenses found\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Charly2312"},"content":"    public static final String EMPTY_DATE_MESSAGE \u003d \"No date for recurring expense found\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Charly2312"},"content":"    public static final String WRONG_DATE_FORMAT_MESSAGE \u003d \"Please enter the date in the right format\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"venicephua"},"content":"    public static final String ERROR_LOADING_SUMMARY \u003d \"Error loading summary: \";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"szeyingg"},"content":"    public static final String CATEGORY_NOT_FOUND \u003d \"Category not found. \";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"edwardrl101"},"content":"    public static final String EXCEEDED_BUDGET_MESSAGE \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"edwardrl101"},"content":"            \"WARNING: You have exceeded your monthly budget of $%.2f by $%.2f\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"edwardrl101"},"content":"    public static final String ALMOST_EXCEEDED_BUDGET_MESSAGE \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"edwardrl101"},"content":"            \"WARNING: You are $%.2f short of reaching your monthly budget of $%.2f\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"venicephua"},"content":"    public static final double MAX_AMOUNT \u003d 10000000000D;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"szeyingg"},"content":"    public static final String STRING_OUT_OF_RANGE_FORMAT_MESSAGE \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"szeyingg"},"content":"            \"%s too long. Input cannot exceed the length of 100.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Charly2312"},"content":"    public static final String CURRENT_BUDGET_LEFT \u003d \"Your budget is currently $%.2f.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Charly2312"},"content":"            \"Total expenses: $%.2f \\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Charly2312"},"content":"            \"Monthly budget left: $%.2f (%.2f%% remaining)\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"szeyingg"},"content":"    public static final String INVALID_SORT_FIELD \u003d \"Invalid sort field.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"szeyingg"},"content":"    public static final String INVALID_SORT_DIRECTION \u003d \"Invalid sort direction.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"randust"},"content":"    // Success Messages","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"szeyingg"},"content":"    public static final String ADD_SUCCESS_MESSAGE_TEMPLATE \u003d \"Expense added successfully: %s\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"szeyingg"},"content":"    public static final String ADD_CATEGORY_SUCCESS_MESSAGE_TEMPLATE \u003d \"Category added successfully: %s\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"edwardrl101"},"content":"    public static final String SET_BUDGET_SUCCESS_MESSAGE_TEMPLATE \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"edwardrl101"},"content":"            \"Monthly budget successfully set to $%.2f\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"randust"},"content":"    public static final String ADDING_REGULAR_EXPENSE_MESSAGE \u003d \"Adding regular expense: \";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"randust"},"content":"    public static final String CLEARED_ALL_REGULAR_EXPENSES_MESSAGE \u003d \"Cleared all regular expenses.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"randust"},"content":"    public static final String DELETE_SUCCESS_MESSAGE_TEMPLATE \u003d","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"randust"},"content":"            \"Expense %s deleted successfully. Remaining expenses: %d\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Charly2312"},"content":"    public static final String DELETE_RECURRING_SUCCESS_MESSAGE_TEMPLATE \u003d","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Charly2312"},"content":"            \"Expense %s deleted successfully. Remaining recurring expenses: %d\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"randust"},"content":"    public static final String EDIT_SUCCESS_MESSAGE_FORMAT \u003d \"Expense at index %d updated successfully:\\n%s\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"randust"},"content":"    public static final String TOTAL_SUCCESS_MESSAGE_TEMPLATE \u003d \"Total expenses: %.2f\";","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Charly2312"},"content":"    public static final String TOTAL_RECURRING_SUCCESS_MESSAGE_TEMPLATE \u003d \"Total expenses: %.2f\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"randust"},"content":"    public static final String AVERAGE_SUCCESS_MESSAGE_TEMPLATE \u003d \"Average expenses: %.2f\";","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Charly2312"},"content":"    public static final String AVERAGE_RECURRING_SUCCESS_MESSAGE_TEMPLATE \u003d \"Average recurring expenses: %.2f\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"szeyingg"},"content":"    public static final String LIST_SUCCESS_MESSAGE_TEMPLATE \u003d \"List of expenses: %s\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"venicephua"},"content":"    public static final String LIST_EXPENSE_FORMAT \u003d \"%n%d. %s\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Charly2312"},"content":"    public static final String LIST_RECURRING_SUCCESS_MESSAGE_TEMPLATE \u003d \"List of recurring expenses: %s\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"randust"},"content":"    public static final String INSERTING_EXPENSE_MESSAGE_TEMPLATE \u003d \"Inserting regular expense at index %d: %s\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"randust"},"content":"    public static final String REMOVED_EXPENSE_MESSAGE_TEMPLATE \u003d \"Removed regular expense at index %d: %s\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"randust"},"content":"    public static final String CANNOT_BE_NULL_MESSAGE_TEMPLATE \u003d \"%s cannot be null\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Charly2312"},"content":"    public static final String ADD_RECURRING_SUCCESS_MESSAGE_TEMPLATE \u003d \"Recurring expense added successfully: %s\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"venicephua"},"content":"    public static final String LIST_SUMMARY_SUCCESS_MESSAGE_TEMPLATE \u003d \"Summary of expenses: %s\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Charly2312"},"content":"    public static final String LIST_SUMMARY_RECURRING_SUCCESS_MESSAGE_TEMPLATE \u003d \"Summary of recurring expenses: %s\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"venicephua"},"content":"    public static final String HIGHEST_CAT_AMT_FORMAT \u003d \"%s ($%.2f)\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"venicephua"},"content":"    public static final String HIGHEST_CAT_FORMAT \u003d \"\\n\\n%-17s: %s\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"venicephua"},"content":"    public static final String SUMMARY_HIGHEST_SPEND \u003d \"HIGHEST SPENDING\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"venicephua"},"content":"    public static final String CAT_AMT_FORMAT \u003d \"\\n%-17s: $%.2f\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"venicephua"},"content":"    public static final String GRAND_TOTAL_FORMAT \u003d \"\\n%-17s: $%.2f\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"venicephua"},"content":"    public static final String SUMMARY_GRAND_TOTAL \u003d \"GRAND TOTAL\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"szeyingg"},"content":"    public static final String SORT_SUCCESS_MESSAGE_TEMPLATE \u003d \"Expenses sorted by %s (%s): %s\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"venicephua"},"content":"    public static final String SORT_RECUR_SUCCESS_MESSAGE_TEMPLATE \u003d \"Recurring expenses sorted by %s (%s): %s\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"szeyingg"},"content":"    public static final String LIST_CATEGORIES_MESSAGE_TEMPLATE \u003d \"\"\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"szeyingg"},"content":"            List of valid categories:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"szeyingg"},"content":"            Default - %s","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"szeyingg"},"content":"            Custom -  %s\"\"\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"randust"},"content":"    // Assertion Messages","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"randust"},"content":"    public static final String ASSERT_FAILURE_PREFIX \u003d \"Parsing should fail for: \";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"randust"},"content":"    public static final String ASSERT_EXPECTED_ERROR \u003d \"Expected error message mismatch for: \";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"randust"},"content":"    public static final String ASSERT_SUCCESS_PREFIX \u003d \"Expected successful parsing for input: \";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"randust"},"content":"    public static final String ASSERT_NULL_ERROR \u003d \"Expected no error message for input: \";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"venicephua"},"content":"    public static final String ASSERT_COMMAND_SUCCESS_PREFIX \u003d \"Expected successful command execution for input: \";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"venicephua"},"content":"    public static final String ASSERT_COMMAND_FAILURE_PREFIX \u003d \"Command execution should fail for input: \";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"venicephua"},"content":"    public static final String ASSERT_COMMAND_EXPECTED_OUTPUT \u003d \"Expected output mismatch for: \";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"edwardrl101"},"content":"    public static final String ASSERT_COMMAND_LIST_LENGTH_FAILURE \u003d \"Expected list length mismatch for input: \";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"edwardrl101"},"content":"    public static final String ASSERT_COMMAND_DESC_FAILURE \u003d \"Added expense has unexpected description for input: \";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"edwardrl101"},"content":"    public static final String ASSERT_COMMAND_AMT_FAILURE \u003d \"Added expense has unexpected amount for input: \";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"edwardrl101"},"content":"    public static final String ASSERT_COMMAND_CATEGORY_FAILURE \u003d \"Added expense has unexpected category for input: \";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"venicephua"},"content":"    public static final String ASSERT_GENERAL_HELP_MESSAGE \u003d \"General help message\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"venicephua"},"content":"    public static final String ASSERT_FILLED_LIST \u003d \"Filled list\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"venicephua"},"content":"    public static final String ASSERT_EMPTY_LIST \u003d \"Empty list\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"venicephua"},"content":"    public static final String ASSERT_GET_DESC \u003d \"Get description\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"szeyingg"},"content":"    public static final String ASSERT_DEFAULT_CATEGORIES \u003d \"Default Categories\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"szeyingg"},"content":"    public static final String ASSERT_CUSTOM_CATEGORIES \u003d \"Custom Categories\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"randust"},"content":"    // HELP Messages","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"venicephua"},"content":"    public static final String HELP_UNKNOWN_TOPIC \u003d \"Unknown HELP topic. Type \u0027/help\u0027 to view available commands.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"randust"},"content":"    // Format Messages","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"randust"},"content":"    public static final String POPPING_EXPENSE_AT_INDEX_MESSAGE \u003d \"Popping expense at index: \";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"randust"},"content":"    public static final String NO_DESCRIPTION_AVAILABLE_MESSAGE \u003d \"No description available.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"randust"},"content":"    public static final String REQUIRES_STRUCTURED_PARSER_MESSAGE \u003d \"This command requires a structured parser.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"randust"},"content":"    public static final String STRUCTURED_EXECUTION_NOT_SUPPORTED_MESSAGE \u003d \"Structured execution not supported.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"edwardrl101"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"edwardrl101"},"content":"    public static void displayWelcomeMessage() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"edwardrl101"},"content":"        System.out.println(MessageDisplayer.WELCOME_MESSAGE);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"edwardrl101"},"content":"     * Displays the user\u0027s last saved list of expenses. If there is no list of expenses,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"edwardrl101"},"content":"     * it prompts the user to add an expense now.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"edwardrl101"},"content":"    public static void displayExpensesLandingMessage() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"edwardrl101"},"content":"        if (RegularExpenseManager.getInstance().getLength() \u003e 0) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"edwardrl101"},"content":"            System.out.println(String.format(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"edwardrl101"},"content":"                    MessageDisplayer.LANDING_MESSAGE_NONEMPTY_LIST,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"edwardrl101"},"content":"                    AppServices.REGULAR_REPORTER.listExpenses()) +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"edwardrl101"},"content":"                    MessageDisplayer.LINE_SEPARATOR);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"edwardrl101"},"content":"            System.out.println(MessageDisplayer.LANDING_MESSAGE_EMPTY_LIST +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"edwardrl101"},"content":"                    MessageDisplayer.LINE_SEPARATOR);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"edwardrl101"},"content":"     * Displays the user\u0027s last saved monthly budget. If there is no monthly budget","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"edwardrl101"},"content":"     * detected, it prompts the user to set one now.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"edwardrl101"},"content":"    public static void displayBudgetLandingMessage() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"edwardrl101"},"content":"        if(!BudgetManager.getInstance().isBudgetSet()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"edwardrl101"},"content":"            System.out.println(MessageDisplayer.LANDING_MESSAGE_BUDGET_NOT_FOUND +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"edwardrl101"},"content":"                    MessageDisplayer.LINE_SEPARATOR);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"edwardrl101"},"content":"            System.out.println(String.format(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"edwardrl101"},"content":"                    MessageDisplayer.LANDING_MESSAGE_BUDGET_FOUND,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"edwardrl101"},"content":"                    BudgetManager.getInstance().getBudget())","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"edwardrl101"},"content":"                    + MessageDisplayer.LINE_SEPARATOR);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"edwardrl101"},"content":"     * Displays the user\u0027s last saved list of recurring expenses, and indicates to the user","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"edwardrl101"},"content":"     * that the recurring expenses are to be added if they are due. It also indicates to the user","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"edwardrl101"},"content":"     * if they currently have no recurring expenses.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"edwardrl101"},"content":"    public static void displayRecurringExpensesLandingMessage() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"edwardrl101"},"content":"        if(RecurringExpenseManager.getInstance().getLength() \u003e 0) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"edwardrl101"},"content":"            System.out.println(String.format(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"edwardrl101"},"content":"                    MessageDisplayer.LANDING_MESSAGE_NONEMPTY_RECURRING_MSG,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"edwardrl101"},"content":"                    AppServices.RECURRING_REPORTER.listExpenses()) +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"edwardrl101"},"content":"                    MessageDisplayer.LINE_SEPARATOR);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"edwardrl101"},"content":"            System.out.println(MessageDisplayer.LANDING_MESSAGE_ADDING_RECURRING_MSG +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"edwardrl101"},"content":"                    MessageDisplayer.LINE_SEPARATOR);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"edwardrl101"},"content":"            System.out.println(MessageDisplayer.LANDING_MESSAGE_EMPTY_RECURRING_MSG +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"edwardrl101"},"content":"                    MessageDisplayer.LINE_SEPARATOR);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"edwardrl101":112,"szeyingg":23,"randust":53,"Charly2312":20,"venicephua":26}},{"path":"src/main/java/fintrek/parser/AddArgumentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"//@@author szeyingg","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"package fintrek.parser;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.add.AddParseResult;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"import fintrek.util.InputValidator;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":" * Parser for the arguments of the list-sort command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":" * \u003cp\u003eThis class implements the {@link CommandParser} interface and parses user input","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":" * related to adding a new expense. It expects exactly two mandatory arguments: the","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":" * expense description and the expense amount. If there are any errors with the input, a","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":" * {@link ParseResult} is returned with a descriptive error message.\u003c/p\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":" * \u003cp\u003eUpon successful parsing, a {@link ParseResult} containing a {@link AddParseResult}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":" * is returned, which has the parsed sorting parameters.\u003c/p\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"public class AddArgumentParser implements CommandParser\u003cParseResult\u003cAddParseResult\u003e\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"    /** Pre-defined constants to avoid magic literals */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"    public static final String COMMAND_NAME \u003d \"add\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"    private static final double MIN_AMOUNT \u003d 0;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"    // maximum amount for the expense (one billion).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"    private static final double MAX_AMOUNT \u003d 1_000_000_000;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"    private static final String DESC_PATTERN \u003d \"(.+?)\\\\s*\";   // Description","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"    private static final String AMOUNT_PATTERN \u003d \"\\\\$\\\\s*(\\\\S+)\";  // Amount","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"    private static final String CATEGORY_PATTERN \u003d \"(?:\\\\s*/c\\\\s*(\\\\S+))?\"; // Category (optional)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"    private static final String DATE_PATTERN \u003d \"(?:\\\\s*/dt\\\\s+(\\\\S+))?\"; // Date (optional)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"    private static final Pattern ADD_PATTERN \u003d Pattern.compile(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"            \"^\" + DESC_PATTERN + AMOUNT_PATTERN + CATEGORY_PATTERN + DATE_PATTERN + \"$\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"     * Parses the input string for the add command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"     * Validates and extracts the description, amount, optional category","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"     * and optional date from the user input. The expected format is:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"     * {@code \u003cdescription\u003e $\u003camount\u003e [/c \u003ccategory\u003e] [/dt \u003cdate\u003e]}\u003c/p\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"     * An error message is returned if the input is blank, does not match the","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"     * required input format, has an invalid amount, has an invalid date format,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"     * tries to add an already-defined category, or if the expense description","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"szeyingg"},"content":"     * exceeds 100 characters.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"szeyingg"},"content":"     * @param input the raw user input string","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"szeyingg"},"content":"     * @return a {@link ParseResult} containing an {@link AddParseResult} on success,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"szeyingg"},"content":"     *         or a failure result with an appropriate error message if the input is invalid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"szeyingg"},"content":"    public ParseResult\u003cAddParseResult\u003e parse(String input) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"szeyingg"},"content":"        if (InputValidator.isNullOrBlank(input)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"szeyingg"},"content":"            return ParseResult.failure(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"szeyingg"},"content":"                    String.format(MessageDisplayer.ARG_EMPTY_MESSAGE_TEMPLATE, COMMAND_NAME)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"szeyingg"},"content":"            );","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"szeyingg"},"content":"        Matcher m \u003d ADD_PATTERN.matcher(input.trim());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"szeyingg"},"content":"        if (!m.matches()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"szeyingg"},"content":"            String message \u003d String.format(MessageDisplayer.INVALID_FORMAT_MESSAGE_TEMPLATE, COMMAND_NAME);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"szeyingg"},"content":"            return ParseResult.failure(message);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"szeyingg"},"content":"        String description \u003d m.group(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"szeyingg"},"content":"        String amountStr \u003d m.group(2);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"szeyingg"},"content":"        String category \u003d (m.group(3) !\u003d null) ? m.group(3).trim() : \"UNCATEGORIZED\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"szeyingg"},"content":"        String dateStr \u003d m.group(4);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"szeyingg"},"content":"        if (!InputValidator.isValidStringLength(description)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"szeyingg"},"content":"            String message \u003d String.format(MessageDisplayer.STRING_OUT_OF_RANGE_FORMAT_MESSAGE, \"Description\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"szeyingg"},"content":"            return ParseResult.failure(message);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"szeyingg"},"content":"        if (description.contains(\"$\") || description.contains(\" /c \") || description.contains(\" /dt \")) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"szeyingg"},"content":"            return ParseResult.failure(MessageDisplayer.RESERVED_DESC_ERROR);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"szeyingg"},"content":"        if (!InputValidator.isValidAmountInput(amountStr)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"szeyingg"},"content":"            return ParseResult.failure(MessageDisplayer.INVALID_AMT_MESSAGE);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"szeyingg"},"content":"        double amount \u003d Double.parseDouble(amountStr);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"szeyingg"},"content":"        if (!InputValidator.isInValidDoubleRange(amount, MIN_AMOUNT, MAX_AMOUNT)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"szeyingg"},"content":"            return ParseResult.failure(MessageDisplayer.INVALID_AMT_MESSAGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"szeyingg"},"content":"        if (!InputValidator.isValidStringLength(category)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"szeyingg"},"content":"            String message \u003d String.format(MessageDisplayer.STRING_OUT_OF_RANGE_FORMAT_MESSAGE, \"Category\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"szeyingg"},"content":"            return ParseResult.failure(message);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"szeyingg"},"content":"        if (!InputValidator.isValidCategory(category)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"szeyingg"},"content":"            String message \u003d String.format(MessageDisplayer.INVALID_CATEGORY_MESSAGE, category);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"szeyingg"},"content":"            return ParseResult.failure(message);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"szeyingg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"szeyingg"},"content":"        if (dateStr !\u003d null) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"szeyingg"},"content":"            if (!InputValidator.isValidDate(dateStr)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"szeyingg"},"content":"                return ParseResult.failure(MessageDisplayer.INVALID_DATE_MESSAGE);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"szeyingg"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"szeyingg"},"content":"            date \u003d extractDate(dateStr);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"szeyingg"},"content":"        return ParseResult.success(new AddParseResult(description, amount, category, date));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"szeyingg"},"content":"     * Extracts the date in the form of LocalDate out of a given String object","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"szeyingg"},"content":"     * of the form \"dd-MM-yyyy\".","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"szeyingg"},"content":"     * @param dateStr the date in the form of String, which will be checked for the pattern","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"szeyingg"},"content":"     *                and converted into LocalDate","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"szeyingg"},"content":"     * @return a converted dateStr into a LocalDate variable following the required format","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"edwardrl101"},"content":"    //@@author edwardrl101","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"edwardrl101"},"content":"    public LocalDate extractDate(String dateStr) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"edwardrl101"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"edwardrl101"},"content":"        return LocalDate.parse(dateStr, formatter);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"edwardrl101"},"content":"     * Generates an error message if the expense description exceeds the","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"edwardrl101"},"content":"     * allowed character limit.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"edwardrl101"},"content":"     * @param input invalid input containing description that is too lengthy.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"edwardrl101"},"content":"     * @return an appropriate error message displaying the character limit.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"edwardrl101"},"content":"    public String getInvalidStringLengthMessage(String input) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"edwardrl101"},"content":"        String messageArg \u003d input.substring(0, 1).toUpperCase() + input.substring(1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"edwardrl101"},"content":"        return String.format(MessageDisplayer.STRING_OUT_OF_RANGE_FORMAT_MESSAGE, messageArg);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"edwardrl101"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"edwardrl101":17,"szeyingg":118}},{"path":"src/main/java/fintrek/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.parser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":" * Generic interface for parsing user input into structured command arguments.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":" * \u003cp\u003eUsed by commands that support structured parsing (as opposed to plain string-based input).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":" * Implementations are responsible for validating and transforming the raw input into a","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":" * well-defined type {@code T}, which is then passed to the command for execution.\u003c/p\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":" * @param \u003cT\u003e the type of the parsed result","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"public interface CommandParser\u003cT\u003e {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"     * Parses the given raw input string into an instance of type {@code T}.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"     * @param input the raw input string (e.g. user command arguments)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"     * @return the parsed result of type {@code T}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"     * @throws RuntimeException or custom exception if the input is invalid or malformed","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"    T parse(String input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":22}},{"path":"src/main/java/fintrek/parser/CommandRouter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.parser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandExecutor;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import static fintrek.util.InputValidator.isNullOrBlank;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"public class CommandRouter {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"     * The function is to route the arguments onto the right command","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"     *                  based on the command extracted from the input","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"     * @param userInput contains the command and argument which will","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"     *                  be routed to the parser and respective commands","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"     * @return a {@code RouteResult} showing whether it is successful","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"     *                  and the result message, failure / success","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    public static RouteResult routeUserInput(String userInput) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"        if (isNullOrBlank(userInput)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"            return new RouteResult(false, MessageDisplayer.NO_COMMAND_MESSAGE);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"        String[] tokens \u003d userInput.trim().split(\"\\\\s+\", 2); // [command, arguments]","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"        String commandToken \u003d tokens[0];","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"        if (!commandToken.startsWith(\"/\")) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"            return new RouteResult(false, MessageDisplayer.NO_COMMAND_MESSAGE);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"        String commandName \u003d commandToken.substring(1);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"        String arguments \u003d (tokens.length \u003e 1) ? tokens[1] : null;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d CommandExecutor.dispatch(commandName, arguments);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"        return new RouteResult(result.isSuccess(), result.message());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":30,"Charly2312":8}},{"path":"src/main/java/fintrek/parser/EditArgumentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.parser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.edit.EditExpenseDescriptor;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.command.edit.EditParseResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import fintrek.util.InputValidator;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" * Parses user input for the /edit command into a structured EditParseResult.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":" * This parser supports editing any subset of the fields: description, amount,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":" * category, and date of an existing expense entry, indexed by the user.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"public class EditArgumentParser implements CommandParser\u003cParseResult\u003cEditParseResult\u003e\u003e {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"    private static final double MAX_AMOUNT \u003d 1_000_000_000;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"    private static final double MIN_AMOUNT \u003d 0;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    private static final String INDEX_PATTERN \u003d \"(\\\\d+)\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"    private static final String DESC_PATTERN \u003d \"(?:\\\\s+/d\\\\s+([^/$]+))?\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"    private static final String AMOUNT_PATTERN \u003d \"(?:\\\\s+/\\\\$\\\\s+(\\\\S+))?\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"    private static final String CATEGORY_PATTERN \u003d \"(?:\\\\s+/c\\\\s+(\\\\S+))?\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"    private static final String DATE_PATTERN \u003d \"(?:\\\\s+/dt\\\\s+(\\\\S+))?\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"    private static final Pattern EDIT_PATTERN \u003d Pattern.compile(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"            \"^\" + INDEX_PATTERN + DESC_PATTERN + AMOUNT_PATTERN + CATEGORY_PATTERN + DATE_PATTERN + \"$\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"    );","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"     * Parses a raw input string for the /edit command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"     * Extracts the index and fields to edit, validates them,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"     * and returns a structured EditParseResult.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"     * @param input the raw input string for the edit command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"     * @return a successful ParseResult containing EditParseResult if valid,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"     *         or a failed ParseResult with an error message if invalid","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"    public ParseResult\u003cEditParseResult\u003e parse(String input) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"        if (InputValidator.isNullOrBlank(input)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"                    String.format(MessageDisplayer.ARG_EMPTY_MESSAGE_TEMPLATE, \"edit\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"            );","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"        Matcher matcher \u003d EDIT_PATTERN.matcher(input.trim());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(MessageDisplayer.EDIT_FORMAT_HINT);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"        int zeroBaseIndex \u003d Integer.parseInt(matcher.group(1)) - 1;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"        ParseResult\u003cEditExpenseDescriptor\u003e descriptorResult \u003d extractDescriptor(matcher);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"        if (!descriptorResult.isSuccess()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(descriptorResult.getError());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"        EditExpenseDescriptor descriptor \u003d descriptorResult.getResult();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"        if (!descriptor.hasAnyField()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(MessageDisplayer.EDIT_NO_FIELD_PROVIDED_MSG);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"        return ParseResult.success(new EditParseResult(zeroBaseIndex, descriptor));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"     * Extracts and validates each editable field (description, amount,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"     * category, date) from the regex matcher.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"     * @param matcher the regex matcher with parsed groups","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"     * @return a successful ParseResult containing EditExpenseDescriptor if valid,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"     *         or a failed ParseResult with an error message if any field is invalid","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"    private ParseResult\u003cEditExpenseDescriptor\u003e extractDescriptor(Matcher matcher) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"        EditExpenseDescriptor descriptor \u003d new EditExpenseDescriptor();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"        ParseResult\u003c?\u003e result;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"        result \u003d trySetDescription(descriptor, matcher.group(2));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"        if (!result.isSuccess()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(result.getError());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"randust"},"content":"        result \u003d trySetAmount(descriptor, matcher.group(3));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"randust"},"content":"        if (!result.isSuccess()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(result.getError());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"randust"},"content":"        result \u003d trySetCategory(descriptor, matcher.group(4));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"        if (!result.isSuccess()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(result.getError());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"randust"},"content":"        result \u003d trySetDate(descriptor, matcher.group(5));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"randust"},"content":"        if (!result.isSuccess()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(result.getError());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"randust"},"content":"        return ParseResult.success(descriptor);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"     * Attempts to validate and set the description field.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"randust"},"content":"     * @param descriptor the descriptor to populate","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"randust"},"content":"     * @param description the raw description string","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"randust"},"content":"     * @return a successful ParseResult if valid, else failure with message","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"randust"},"content":"    private ParseResult\u003cVoid\u003e trySetDescription(EditExpenseDescriptor descriptor, String description) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"randust"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"randust"},"content":"            return ParseResult.success(null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"randust"},"content":"        if (!InputValidator.isValidStringLength(description)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"randust"},"content":"            String msg \u003d String.format(MessageDisplayer.STRING_OUT_OF_RANGE_FORMAT_MESSAGE, \"Description\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(msg);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"randust"},"content":"        descriptor.setDescription(description);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"randust"},"content":"        return ParseResult.success(null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"randust"},"content":"     * Attempts to validate and set the amount field.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"randust"},"content":"     * @param descriptor the descriptor to populate","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"randust"},"content":"     * @param amountStr the raw amount string","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"randust"},"content":"     * @return a successful ParseResult if valid, else failure with message","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"randust"},"content":"    private ParseResult\u003cVoid\u003e trySetAmount(EditExpenseDescriptor descriptor, String amountStr) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"randust"},"content":"        if (amountStr \u003d\u003d null) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"randust"},"content":"            return ParseResult.success(null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"randust"},"content":"        if (!InputValidator.isValidAmountInput(amountStr)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(MessageDisplayer.INVALID_AMT_MESSAGE);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"randust"},"content":"        descriptor.setAmount(amountStr);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"randust"},"content":"        if (!InputValidator.isInValidDoubleRange(descriptor.getAmount(), MIN_AMOUNT, MAX_AMOUNT)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(MessageDisplayer.INVALID_AMT_MESSAGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"randust"},"content":"        return ParseResult.success(null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"randust"},"content":"     * Attempts to validate and set the category field.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"randust"},"content":"     * @param descriptor the descriptor to populate","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"randust"},"content":"     * @param category the raw category string","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"randust"},"content":"     * @return a successful ParseResult if valid, else failure with message","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"randust"},"content":"    private ParseResult\u003cVoid\u003e trySetCategory(EditExpenseDescriptor descriptor, String category) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"randust"},"content":"        if (category \u003d\u003d null) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"randust"},"content":"            return ParseResult.success(null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"szeyingg"},"content":"        if (!InputValidator.isValidStringLength(category)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"randust"},"content":"            String msg \u003d String.format(MessageDisplayer.STRING_OUT_OF_RANGE_FORMAT_MESSAGE, \"Category\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(msg);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"randust"},"content":"        if (!InputValidator.isValidCategory(category)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"randust"},"content":"            String msg \u003d String.format(MessageDisplayer.INVALID_CATEGORY_MESSAGE, category);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(msg);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"randust"},"content":"        descriptor.setCategory(category);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"randust"},"content":"        return ParseResult.success(null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"randust"},"content":"     * Attempts to validate and set the date field.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"randust"},"content":"     * @param descriptor the descriptor to populate","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"randust"},"content":"     * @param dateStr the raw date string","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"randust"},"content":"     * @return a successful ParseResult if valid, else failure with message","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"randust"},"content":"    private ParseResult\u003cVoid\u003e trySetDate(EditExpenseDescriptor descriptor, String dateStr) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"randust"},"content":"        if (dateStr \u003d\u003d null) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"randust"},"content":"            return ParseResult.success(null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"randust"},"content":"        if (!InputValidator.isValidDate(dateStr)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"randust"},"content":"            return ParseResult.failure(MessageDisplayer.INVALID_DATE_MESSAGE);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"randust"},"content":"        descriptor.setDate(dateStr);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"randust"},"content":"        return ParseResult.success(null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"szeyingg":2,"randust":176,"Charly2312":4}},{"path":"src/main/java/fintrek/parser/FileDataParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.parser;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"import fintrek.budget.core.BudgetManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.core.CategoryManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.core.RecurringExpenseManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"import fintrek.util.InputValidator;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":" * Parses saved expense file data into an Expense object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"public class FileDataParser implements CommandParser\u003cParseResult\u003cVoid\u003e\u003e {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    private static final FileDataParser INSTANCE \u003d new FileDataParser(); // singleton","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"     * Parses a line in the \"data.txt\" save file","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"     * @param fileData the raw file data/line to be parsed","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"     * @return a {@code ParseResult\u003cVoid\u003e} representing the success or failure of the parsing.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"     *      On success, the result is {@code null} and on failure, it contains the error message on","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"     *      why the parsing failed","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"    public static ParseResult\u003cVoid\u003e parseFileData(String fileData) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"        return INSTANCE.parse(fileData); // delegates to the instance method","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Charly2312"},"content":"     * This function is to parse a budget saved in the .txt file","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"     *               by first checking if it is the right format","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"     * @param line the raw input string (e.g. user command arguments)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"     * @return ParseResult signifying if an expense from the .txt file can be parsed properly","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"    public ParseResult\u003cVoid\u003e parseBudgetFromLine(String line) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"        String budgetStr \u003d line.substring(\"Monthly Budget: $\".length()).trim();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"        if(!InputValidator.isValidPositiveDouble(budgetStr)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"            return ParseResult.failure(MessageDisplayer.INVALID_LOAD_BUDGET_AMOUNT_MESSAGE);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"        double budget \u003d Double.parseDouble(budgetStr);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"        BudgetManager.getInstance().setBudget(budget);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"        return ParseResult.success(null);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"     * Checks if a particular line in the \"data.txt\" save file is of the format","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"     * \"Monthly Budget: $\" which is how the monthly budget is saved","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"     * @param line a line in the \"data.txt\" save file","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"     * @return a {@code Boolean} value stating whether the line is of the format of","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"     *      how the monthly budget is saved","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"    public Boolean isOfBudgetFormat(String line) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"        return line.startsWith(\"Monthly Budget: $\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"szeyingg"},"content":"     * This function is to parse a budget saved in the .txt file","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"szeyingg"},"content":"     *               by first checking if it is the right format","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"szeyingg"},"content":"     * @param line the raw input string (e.g. user command arguments)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"szeyingg"},"content":"     * @return ParseResult signifying if an expense from the .txt file can be parsed properly","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"szeyingg"},"content":"    public ParseResult\u003cVoid\u003e parseCategoryFromLine(String line) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"szeyingg"},"content":"        String categoryStr \u003d line.substring(\"Custom Categories: \".length()).trim();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"szeyingg"},"content":"        String[] categories \u003d categoryStr.split(\", \");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"szeyingg"},"content":"        for (String category : categories) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"szeyingg"},"content":"            if (!InputValidator.isValidStringLength(category) || InputValidator.isNullOrBlank(category)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"szeyingg"},"content":"                CategoryManager.clearCustomCategories();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"szeyingg"},"content":"                return ParseResult.failure(MessageDisplayer.CATEGORY_LOAD_ERROR_MESSAGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"szeyingg"},"content":"            }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"szeyingg"},"content":"            CategoryManager.addCustomCategory(category);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"szeyingg"},"content":"        return ParseResult.success(null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"szeyingg"},"content":"     * Checks if a particular line in the \"data.txt\" save file is of the format","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"szeyingg"},"content":"     * \"Custom Categories: \" which is how the list of custom categories is saved","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"szeyingg"},"content":"     * @param line a line in the \"data.txt\" save file","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"szeyingg"},"content":"     * @return a {@code Boolean} value stating whether the line is of the format of","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"szeyingg"},"content":"     *      how the custom categories are saved","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"szeyingg"},"content":"    public Boolean isOfCategoryFormat(String line) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"szeyingg"},"content":"        return line.startsWith(\"Custom Categories: \");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Charly2312"},"content":"     * This function is to parse an expense saved in the .txt file","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Charly2312"},"content":"     * @param fileData the raw input string (e.g. user command arguments)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Charly2312"},"content":"     * @return ParseResult signifying if an expense from the .txt file can be parsed properly","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"randust"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"randust"},"content":"    public ParseResult\u003cVoid\u003e parse(String fileData) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"edwardrl101"},"content":"        if (InputValidator.isNullOrBlank(fileData)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"edwardrl101"},"content":"            return ParseResult.failure(MessageDisplayer.EMPTY_DATA_MESSAGE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"edwardrl101"},"content":"        if(isOfBudgetFormat(fileData)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"edwardrl101"},"content":"            return parseBudgetFromLine(fileData);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"szeyingg"},"content":"        if(isOfCategoryFormat(fileData)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"szeyingg"},"content":"            return parseCategoryFromLine(fileData);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"edwardrl101"},"content":"        String[] tokens \u003d fileData.trim().split(\"\\\\|\", 5);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"edwardrl101"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"edwardrl101"},"content":"            return ParseResult.failure(MessageDisplayer.EMPTY_AMOUNT_DATA_MESSAGE);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"edwardrl101"},"content":"        if (tokens.length \u003c 3) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"edwardrl101"},"content":"            return ParseResult.failure(MessageDisplayer.EMPTY_CATEGORY_DATA_MESSAGE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"edwardrl101"},"content":"        if (tokens.length \u003c 4) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"edwardrl101"},"content":"            return ParseResult.failure(MessageDisplayer.EMPTY_DATE_DATA_MESSAGE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"edwardrl101"},"content":"        if (tokens.length \u003e\u003d 4) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"edwardrl101"},"content":"            return processExpense(tokens);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"edwardrl101"},"content":"        return ParseResult.failure(MessageDisplayer.INVALID_DATA_FORMAT_MESSAGE);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Charly2312"},"content":"     * This function process all the variables in the form of an array","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Charly2312"},"content":"     *               needed to create a new expense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Charly2312"},"content":"     * @param tokens contain the variables such as description, amount,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Charly2312"},"content":"     *               category and date","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Charly2312"},"content":"     * @return the ParseResult which depends on whether the processing","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Charly2312"},"content":"     *               is successful or failed","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"randust"},"content":"    private ParseResult\u003cVoid\u003e processExpense(String[] tokens) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"edwardrl101"},"content":"        String description \u003d tokens[0].trim();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"randust"},"content":"        String amountStr \u003d tokens[1].trim().substring(1);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"edwardrl101"},"content":"        String category \u003d tokens[2].trim();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"edwardrl101"},"content":"        String dateStr \u003d tokens[3].trim();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"edwardrl101"},"content":"        boolean isRecurring \u003d tokens.length \u003d\u003d 5 \u0026\u0026 tokens[4].trim().equals(\"R\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"edwardrl101"},"content":"        if (InputValidator.isNullOrBlank(description)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"edwardrl101"},"content":"            return ParseResult.failure(MessageDisplayer.EMPTY_DESC_DATA_MESSAGE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"edwardrl101"},"content":"        if (!InputValidator.isValidPositiveDouble(amountStr)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"edwardrl101"},"content":"            return ParseResult.failure(MessageDisplayer.INVALID_AMT_DATA_MESSAGE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"edwardrl101"},"content":"        double amount \u003d Double.parseDouble(amountStr);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"edwardrl101"},"content":"        if (!InputValidator.isValidDate(dateStr)) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"edwardrl101"},"content":"            return ParseResult.failure(MessageDisplayer.INVALID_DATE_DATA_MESSAGE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"edwardrl101"},"content":"        LocalDate date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"edwardrl101"},"content":"        Expense newExpense \u003d new Expense(description, amount, category, date);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"edwardrl101"},"content":"        if(isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"edwardrl101"},"content":"            RecurringExpenseManager.getInstance().add(newExpense);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"edwardrl101"},"content":"            RegularExpenseManager.getInstance().add(newExpense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"edwardrl101"},"content":"        return ParseResult.success(null);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"edwardrl101":90,"szeyingg":36,"randust":16,"Charly2312":20}},{"path":"src/main/java/fintrek/parser/ListSortArgumentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"package fintrek.parser;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.sort.ListSortParseResult;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"import fintrek.util.InputValidator;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":" * Parser for the arguments of the list-sort command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":" * \u003cp\u003eThis class implements the {@link CommandParser} interface and parses user input","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":" * related to sorting the expense list. It expects exactly two words: the field to sort by","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":" * and the sort direction. If the input is blank or in an invalid format, a failure","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":" * {@link ParseResult} is returned with a descriptive error message.\u003c/p\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":" *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":" * \u003cp\u003eOn successful parsing, a {@link ParseResult} containing a {@link ListSortParseResult}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":" * is returned, which has the parsed sorting parameters.\u003c/p\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"public class ListSortArgumentParser implements CommandParser\u003cParseResult\u003cListSortParseResult\u003e\u003e {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"    private static final String COMMAND_NAME \u003d \"sort\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"     * Parses the input string for the list-sort command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"     * Validates and extracts the sorting field and direction from the","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"     * user input. The expected format is: {@code \u003cfield\u003e \u003cdirection\u003e} (e.g., {@code amount asc}).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"     * @param input the raw user input string","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"     * @return a {@link ParseResult} containing a {@link ListSortParseResult} if successful,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"     *         or a failure result with an error message if the input is invalid or blank, or if","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"     *         the input does not match the required input format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"    @Override","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"    public ParseResult\u003cListSortParseResult\u003e parse(String input) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"        if (InputValidator.isNullOrBlank(input)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"            return ParseResult.failure(String.format(MessageDisplayer.ARG_EMPTY_MESSAGE_TEMPLATE, COMMAND_NAME)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"            );","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"        Pattern p \u003d Pattern.compile(\"^\\\\s*(\\\\w+)\\\\s+(\\\\w+)\\\\s*$\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"        Matcher m \u003d p.matcher(input.trim().toUpperCase());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"        if (!m.matches()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"            return ParseResult.failure(String.format(MessageDisplayer.INVALID_FORMAT_MESSAGE_TEMPLATE, COMMAND_NAME));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"        String sortBy \u003d m.group(1).trim();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"        String sortDir \u003d m.group(2).trim();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"        return ParseResult.success(new ListSortParseResult(sortBy, sortDir));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"edwardrl101":22,"szeyingg":30}},{"path":"src/main/java/fintrek/parser/ParseResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.parser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":" * A generic wrapper class that encapsulates the result of a parse operation.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis class represents either a successful parse, containing the parsed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":" * result of type {@code T}, or a failure, containing an error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":" * \u003cp\u003eUse {@code ParseResult.success(result)} to create a successful result,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":" * and {@code ParseResult.failure(errorMessage)} to create a failed result.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":" * @param \u003cT\u003e The type of the object returned upon a successful parse.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"public class ParseResult\u003cT\u003e {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"     * Indicates whether the parse was successful.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"    private final boolean success;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"     * The result of the parse if successful; otherwise {@code null}.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"    private final T result;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"     * The error message if the parse failed; otherwise {@code null}.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"    private final String error;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"     * Constructs a ParseResult with the specified success state, result, and error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"     * @param success Whether the parse was successful.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"     * @param result The parsed result, if successful.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"     * @param error The error message, if failed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    private ParseResult(boolean success, T result, String error) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"        this.success \u003d success;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"        this.result \u003d result;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"        this.error \u003d error;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"     * Creates a successful ParseResult containing the given result.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"     * @param result The result of the successful parse.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"     * @param \u003cT\u003e The type of the result.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"     * @return A successful {@code ParseResult} instance.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"    public static \u003cT\u003e ParseResult\u003cT\u003e success(T result) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"        return new ParseResult\u003c\u003e(true, result, null);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"     * Creates a failed ParseResult with the given error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"     * @param errorMessage The error message describing why the parse failed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"     * @param \u003cT\u003e The type of the expected result.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"     * @return A failed {@code ParseResult} instance.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"    public static \u003cT\u003e ParseResult\u003cT\u003e failure(String errorMessage) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"        return new ParseResult\u003c\u003e(false, null, errorMessage);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"     * Checks if the parse was successful.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"     * @return {@code true} if the parse succeeded; {@code false} otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"    public boolean isSuccess() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"        return success;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"     * Returns the result of a successful parse.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"     * @return The parsed result, or {@code null} if the parse failed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"    public T getResult() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"        return result;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"randust"},"content":"     * Returns the error message if the parse failed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"     * @return The error message, or {@code null} if the parse was successful.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"    public String getError() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"randust"},"content":"        return error;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":91}},{"path":"src/main/java/fintrek/parser/RouteResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.parser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"/**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":" * A generic result wrapper for route operations.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":" * \u003cp\u003eThis class represents the outcome of routing a user command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":" * It encapsulates whether the routing was successful and provides","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":" * a message corresponding to the result.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":" *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":" * \u003cp\u003eIf successful, {@code outputMessage()} returns the success message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":" * If failed, {@code errorMessage()} returns the error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":" */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"public class RouteResult {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"     * Indicates whether the routing operation was successful.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"    private final boolean success;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"     * The message associated with the operation. This is either the output","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"     * message (if successful) or the error message (if failed).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"    private final String message;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"     * Constructs a new RouteResult with the given success status and message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"     * @param success {@code true} if the routing operation succeeded; {@code false} otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"     * @param message The message to associate with the result. This is an output message on success,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"     *                or an error message on failure.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"    public RouteResult(boolean success, String message) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"        this.success \u003d success;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"     * Returns whether the routing was successful.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"     * @return {@code true} if the routing succeeded; {@code false} otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"    public boolean isSuccess() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"        return success;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"     * Returns the error message if the routing failed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"     * @return The error message if the operation failed; {@code null} if it succeeded.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"    public String errorMessage() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"        return !success ? message : null;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"     * Returns the output message if the routing succeeded.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"     * @return The output message if the operation succeeded; {@code null} if it failed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"    public String outputMessage() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"        return success ? message : null;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":61,"Charly2312":2}},{"path":"src/main/java/fintrek/ui/FinTrekUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"package fintrek.ui;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"import fintrek.expense.core.RecurringExpenseManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"import fintrek.parser.CommandRouter;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"import fintrek.parser.RouteResult;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"import fintrek.util.RecurringExpenseProcessor;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"import fintrek.data.DataHandler;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"import fintrek.budget.core.BudgetManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":" * Handles the user interface of the FinTrek application.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":" * Responsible for displaying messages to the user, accepting input,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":" * processing commands, and showing results.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"public class FinTrekUi {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"    private static final Logger logger \u003d Logger.getLogger(FinTrekUi.class.getName());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"    private final Scanner reader;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"     * Constructs a new FinTrekUI with a Scanner for reading user input.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"    public FinTrekUi() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"        this.reader \u003d new Scanner(System.in);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"     * Starts the UI, displays welcome messages, loads data,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"     * and begins the input processing loop.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"    public void start() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"        MessageDisplayer.displayWelcomeMessage();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"        loadInitialData();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"        runCommandLoop();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"venicephua"},"content":"     * Loads data from storage and displays appropriate initial messages.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"     * If the user has no loaded monthly budget or expenses, they are","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"     * prompted with a message to type /help to learn of the commands","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"     * if they are new","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"venicephua"},"content":"    private void loadInitialData() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"venicephua"},"content":"        DataHandler.loadData();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"        MessageDisplayer.displayBudgetLandingMessage();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"        MessageDisplayer.displayRecurringExpensesLandingMessage();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"        processRecurringExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"        MessageDisplayer.displayExpensesLandingMessage();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"        if(RegularExpenseManager.getInstance().getLength() \u003d\u003d 0 \u0026\u0026","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"            !BudgetManager.getInstance().isBudgetSet()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"venicephua"},"content":"            System.out.println(MessageDisplayer.CONVERSATION_STARTER);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"venicephua"},"content":"     * Processes recurring expenses at application startup.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"venicephua"},"content":"    private void processRecurringExpenses() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"venicephua"},"content":"        RecurringExpenseProcessor.checkAndInsertDueExpenses(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"venicephua"},"content":"                RecurringExpenseManager.getInstance(), RegularExpenseManager.getInstance());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"venicephua"},"content":"     * Runs the main command loop, accepting and processing user input","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"venicephua"},"content":"     * until the exit command is given.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"venicephua"},"content":"    private void runCommandLoop() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"venicephua"},"content":"        System.out.print(MessageDisplayer.ARROW_FOR_INPUT);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"venicephua"},"content":"        String userInput \u003d reader.nextLine().trim(); // get user input","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"venicephua"},"content":"        while (!userInput.equals(MessageDisplayer.END_CONVERSATION_MESSAGE)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Charly2312"},"content":"            logger.log(Level.FINE, \"Going to start processing\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Charly2312"},"content":"            logger.log(Level.FINE, \"User input received: \" + userInput);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"venicephua"},"content":"            processUserInput(userInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"venicephua"},"content":"            System.out.println();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"venicephua"},"content":"            System.out.print(MessageDisplayer.ARROW_FOR_INPUT);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"venicephua"},"content":"            userInput \u003d reader.nextLine().trim();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"venicephua"},"content":"        System.out.println(MessageDisplayer.BYE_MESSAGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"venicephua"},"content":"     * Processes a single user input command, routing it to CommandRouter","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"venicephua"},"content":"     * and displaying the result.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"venicephua"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"venicephua"},"content":"     * @param userInput The command string entered by the user","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"venicephua"},"content":"    private void processUserInput(String userInput) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"venicephua"},"content":"        RouteResult result \u003d CommandRouter.routeUserInput(userInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"venicephua"},"content":"        if (result.isSuccess()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"venicephua"},"content":"            System.out.println(result.outputMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"venicephua"},"content":"            DataHandler.saveData();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"venicephua"},"content":"            System.out.println(result.errorMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Charly2312"},"content":"            logger.log(Level.FINE, \"Parsing failed: \" + result.errorMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"venicephua"},"content":"     * Closes scanner used by the UI.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"venicephua"},"content":"     * Should be called when the application is shutting down.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"venicephua"},"content":"    public void close() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"venicephua"},"content":"        reader.close();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"edwardrl101":13,"venicephua":97,"Charly2312":6}},{"path":"src/main/java/fintrek/util/InputValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.util;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.core.CategoryManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":" * Utility class for validating user input related to expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"public class InputValidator {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"     * Checks if input string is empty or contains whitespace only.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"     * @param input the input string to check","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"     * @return {@code true} if the input is null or blank, {@code false} otherwise","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"    public static boolean isNullOrBlank(String input) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"        return input \u003d\u003d null || input.isBlank();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"     * Validates whether the input string represents a positive double.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"     * @param input the input string to validate","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"     * @return {@code true} if the input is a valid positive double, {@code false} otherwise","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"    public static boolean isValidPositiveDouble(String input) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"        return input.matches(\"\\\\d+(\\\\.\\\\d+)?\") \u0026\u0026 Double.parseDouble(input.trim()) \u003e 0;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"     * Validates whether the input string represents a positive integer.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"     * @param input the input string to validate","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"     * @return {@code true} if the input is a valid positive integer, {@code false} otherwise","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"    public static boolean isValidPositiveInteger(String input) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"        return input.matches(\"\\\\d+\") \u0026\u0026 Integer.parseInt(input.trim()) \u003e 0;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"     * Checks if a given integer falls within the specified range.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"     * @param value the integer value to check","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"     * @param lowerBound the lower bound (inclusive)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"     * @param upperBound the upper bound (inclusive)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"szeyingg"},"content":"     * @return {@code true} if the value is within the range, {@code false} otherwise","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"    public static boolean isInValidIntRange(int value, int lowerBound, int upperBound) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Charly2312"},"content":"        return value \u003e\u003d lowerBound \u0026\u0026 value \u003c\u003d upperBound;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"szeyingg"},"content":"     * Checks if a given double falls within the specified range","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"szeyingg"},"content":"     * @param value the double value to check","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"szeyingg"},"content":"     * @param lowerBound the lower bound (exclusive)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"szeyingg"},"content":"     * @param upperBound the upper bound (inclusive)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"szeyingg"},"content":"     * @return {@code true} if the value is within the range, {@code false} otherwise","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"    public static boolean isInValidDoubleRange(double value, double lowerBound, double upperBound) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"        return value \u003e lowerBound \u0026\u0026 value \u003c\u003d upperBound;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"szeyingg"},"content":"     * Validates that a string has a length from 1 to 100 characters (inclusive).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"szeyingg"},"content":"     * @param input the string to validate","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"szeyingg"},"content":"     * @return {@code true} if the string length is valid, {@code false} otherwise","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"szeyingg"},"content":"    public static boolean isValidStringLength(String input) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"szeyingg"},"content":"        return !input.isEmpty() \u0026\u0026 input.length() \u003c\u003d 100;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"edwardrl101"},"content":"     * Checks whether the input string for the date is of the valid format of \"dd-MM-yyyy\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"edwardrl101"},"content":"     * @param input the input string for the date","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"szeyingg"},"content":"     * @return a {@code Boolean} value indicating whether the format is valid","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"edwardrl101"},"content":"    public static boolean isValidDate(String input) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"randust"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"edwardrl101"},"content":"        try {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"            LocalDate.parse(input, formatter);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"edwardrl101"},"content":"            return true;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"edwardrl101"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"edwardrl101"},"content":"            return false;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"szeyingg"},"content":"     * Checks whether the input string is a valid amount input.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"szeyingg"},"content":"     * @param input the string to validate","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"szeyingg"},"content":"     * @return {@code true} if the input is in a valid amount format, {@code false} otherwise","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"szeyingg"},"content":"    public static boolean isValidAmountInput(String input) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"szeyingg"},"content":"        String amountFormat \u003d \"\\\\d+(\\\\.\\\\d+)?\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"szeyingg"},"content":"        return input.matches(amountFormat);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"szeyingg"},"content":"     * Validates whether the input string is a recognized category by {@link CategoryManager}.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"szeyingg"},"content":"     * @param input the category string to validate","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"szeyingg"},"content":"     * @return {@code true} if the category is valid, {@code false} otherwise","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"szeyingg"},"content":"    public static boolean isValidCategory(String input) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"szeyingg"},"content":"        return CategoryManager.isValid(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"szeyingg"},"content":"     * Checks if the input string contains any whitespace characters.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"szeyingg"},"content":"     * @param input the string to check","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"szeyingg"},"content":"     * @return {@code true} if the input contains whitespace, {@code false} otherwise","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"szeyingg"},"content":"    public static boolean containsWhiteSpace(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"szeyingg"},"content":"        return !input.matches(\"^\\\\S+$\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-03-29","isFullCredit":false}],"authorContributionMap":{"edwardrl101":16,"szeyingg":79,"randust":28,"Charly2312":3}},{"path":"src/main/java/fintrek/util/RecurringExpenseProcessor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"//@@author Charly2312","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"package fintrek.util;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"import fintrek.expense.core.ExpenseOperation;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":" * This class is responsible for checking and inserting any recurring expenses","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":" * that are set to be added on the current date, while logging all state-changing","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":" * actions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"public class RecurringExpenseProcessor {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"    private static final Logger logger \u003d Logger.getLogger(RecurringExpenseProcessor.class.getName());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"     * Checks all recurring expenses and inserts those that are set to be added on","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"     * today\u0027s date, given that the date on the recurring expense is not in the future, e.g.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":"     * if today is 06 April 2025 and the recurring expense is dated 06 May 2025, then it will","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"     * not be added to the list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"     * @param recurringManager the recurring expense manager, which is used to go through all","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"     *                         recurring expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Charly2312"},"content":"     * @param regularManager the regular expense manager, which is used to add any recurring expense","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Charly2312"},"content":"     *                       into the main list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"    public static void checkAndInsertDueExpenses(ExpenseOperation recurringManager,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"                                                 ExpenseOperation regularManager) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"        logger.log(Level.FINE, \"Checking for recurring expenses to insert...\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Charly2312"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"        for (Expense expense : recurringManager.getAll()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"            LocalDate date \u003d expense.getDate();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"            if (date.getDayOfMonth() \u003d\u003d today.getDayOfMonth()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"                    \u0026\u0026 date.getMonthValue() \u003c\u003d today.getMonthValue()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Charly2312"},"content":"                    \u0026\u0026 date.getYear() \u003c\u003d today.getYear()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"                    \u0026\u0026 !regularManager.getAll().contains(expense)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Charly2312"},"content":"                logger.log(Level.FINE, \"Recurring expense is due: \" + expense);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Charly2312"},"content":"                regularManager.add(expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Charly2312"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Charly2312"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Charly2312":45}},{"path":"src/test/java/fintrek/FinTrekTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek;","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"class FinTrekTest {","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"randust":2,"-":10}},{"path":"src/test/java/fintrek/command/add/AddCategoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"package fintrek.command.add;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.core.CategoryManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"public class AddCategoryCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"     * Clear all existing custom categories in CategoryManager and adds one new custom category before each test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"        CategoryManager.clearCustomCategories();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"        CategoryManager.addCustomCategory(\"new\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"     * Tests if the AddCategoryCommand returns error messages for empty inputs or","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"     * inputs simply consisting of whitespaces","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"     * @param input empty inputs or inputs consisting of only whitespaces","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"\", \" \", \"                               \"})","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"    public void testAddCategoryCommand_nullInputs_failure(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"        AddCategoryCommand addCategoryCommand \u003d new AddCategoryCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d addCategoryCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"        String message \u003d String.format(MessageDisplayer.CANNOT_BE_NULL_MESSAGE_TEMPLATE, \"Category\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, message);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"     * Tests if AddCategoryCommand returns an error for inputs which are not single words","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"     * @param input inputs containing some whitespace","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"two words\", \"three word category\", \"\"\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"            new","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"            line\"\"\"})","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"    public void testAddCategoryCommand_notSingleWord_failure(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"szeyingg"},"content":"        AddCategoryCommand addCategoryCommand \u003d new AddCategoryCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d addCategoryCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.CATEGORY_WHITESPACE_ERROR);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"szeyingg"},"content":"     * Tests if AddCategoryCommand returns an error for inputs which exceed character limits","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"szeyingg"},"content":"     * @param input characters to be concatenated more than 100 times","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"a\", \"$\"})","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"szeyingg"},"content":"    public void testAddCategoryCommand_tooLong_failure(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"szeyingg"},"content":"        AddCategoryCommand addCategoryCommand \u003d new AddCategoryCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"venicephua"},"content":"        String longInput \u003d input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"szeyingg"},"content":"        for (int i \u003d 0; i \u003c 200; i++) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"venicephua"},"content":"            longInput \u003d longInput + input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d addCategoryCommand.execute(longInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"szeyingg"},"content":"        String message \u003d String.format(MessageDisplayer.STRING_OUT_OF_RANGE_FORMAT_MESSAGE, \"Category\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, message);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"     * Tests if AddCategoryCommand returns an error for already existing categories","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"szeyingg"},"content":"     * @param input inputs of already valid categories","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"food\", \"transport\", \"new\"})","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"szeyingg"},"content":"    public void testAddCategoryCommand_alreadyExists_failure(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"szeyingg"},"content":"        AddCategoryCommand addCategoryCommand \u003d new AddCategoryCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d addCategoryCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.CATEGORY_ALREADY_EXISTS);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"szeyingg"},"content":"     * Tests if AddCategoryCommand successfully adds valid inputs to list of categories","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"szeyingg"},"content":"     * @param input various valid inputs","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"new2\", \"$$$$$\", \"   shopping   \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"szeyingg"},"content":"        \"ultrapseudointernationalmicrotechnosociobiochemicalelectromagnetoantidisestablishmentism\"})","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"szeyingg"},"content":"    public void testAddCategoryCommand_validInput_success(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"szeyingg"},"content":"        AddCategoryCommand addCategoryCommand \u003d new AddCategoryCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"szeyingg"},"content":"        CategoryManager.clearCustomCategories();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d addCategoryCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"szeyingg"},"content":"        String message \u003d String.format(MessageDisplayer.ADD_CATEGORY_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"szeyingg"},"content":"                input.trim().toUpperCase());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"szeyingg"},"content":"        assertTrue(CategoryManager.hasCustomCategories());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, message);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"szeyingg"},"content":"     * Tests the description of the add category command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"szeyingg"},"content":"     * Ensures the command returns the correct description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"szeyingg"},"content":"    public void testAddCategoryCommand_getDescription_success(boolean isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"szeyingg"},"content":"        AddCategoryCommand addCategoryCommand \u003d new AddCategoryCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"szeyingg"},"content":"        String formatString;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"szeyingg"},"content":"        String exampleString;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"szeyingg"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"szeyingg"},"content":"            formatString \u003d \"Format: /add-category \u003cCATEGORY\u003e\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"szeyingg"},"content":"            exampleString \u003d \"\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"szeyingg"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"szeyingg"},"content":"            formatString \u003d \"Format: /add-category \u003cCATEGORY\u003e\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"szeyingg"},"content":"            exampleString \u003d \"\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"szeyingg"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"szeyingg"},"content":"        String expectedDescription \u003d formatString + \"\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"szeyingg"},"content":"                \"\"\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"szeyingg"},"content":"                CATEGORY has a character limit of 100, and cannot contain spaces.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"szeyingg"},"content":"                Example: /add-category drinks - adds category \u0027DRINKS\u0027 to list of valid categories.\"\"\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"szeyingg"},"content":"                + exampleString;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"szeyingg"},"content":"        assertEquals(expectedDescription, addCategoryCommand.getDescription(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"szeyingg"},"content":"                MessageDisplayer.ASSERT_COMMAND_EXPECTED_OUTPUT + MessageDisplayer.ASSERT_GET_DESC);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"szeyingg":136,"venicephua":3}},{"path":"src/test/java/fintrek/command/add/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.add;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.service.ExpenseService;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"import static fintrek.expense.service.AppServices.REGULAR_SERVICE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"public class AddCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"     * Clear all existing expenses in ExpenseManager and adds set list of expenses before each test.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"    public static final String COMMAND_NAME \u003d \"add\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"    private ExpenseService service;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"        RegularExpenseManager.getInstance().clear();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"        service \u003d REGULAR_SERVICE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"     * Tests if the Add Command returns error messages for empty inputs or","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"     * inputs simply consisting of whitespaces","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"     * @param input empty inputs or inputs consisting of only whitespaces","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(strings \u003d {\"\", \" \", \"                               \"})","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"    public void testAddCommandEmptyDescription(String input) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"        AddCommand addCommand \u003d new AddCommand(false);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"        String message \u003d String.format(MessageDisplayer.ARG_EMPTY_MESSAGE_TEMPLATE, COMMAND_NAME);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, message);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"     * Tests if AddCommand returns an error for various invalid input formats","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"     * @param input invalid inputs for the expense","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(strings \u003d {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"        \"$1 /c transport\", \"$2.5\", \"$\", \"bus $\", \"bus $ /c transport\", \"bus $1 /c\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"        \"food $5 /c cat $d 0303-31-31\", \"food $3 /d 3131-3131-3131\", \"coffee $5 /d /d +65-1234-5678\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"        \"food $5 /c uncat /d today\"})","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"    public void testAddCommandInvalidFormat(String input) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"        AddCommand addCommand \u003d new AddCommand(false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"                String.format(MessageDisplayer.INVALID_FORMAT_MESSAGE_TEMPLATE, COMMAND_NAME));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"edwardrl101"},"content":"     * Tests the AddCommand for invalid expense amounts","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"edwardrl101"},"content":"     * @param inputAmount invalid expense amounts","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"invalid\", \"1.2.3\", \"-1\", \"2.\"})","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"szeyingg"},"content":"    public void testAddCommandInvalidAmount(String inputAmount) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"        AddCommand addCommand \u003d new AddCommand(false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"szeyingg"},"content":"        String input \u003d \"bus $\" + inputAmount + \"/c transport\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.INVALID_AMT_MESSAGE);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"edwardrl101"},"content":"     * Tests the AddCommand for various forms of valid amounts","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"edwardrl101"},"content":"     * @param inputAmount the amount of the expense to be added","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"20\", \"0.99\", \"45.67\", \"1.0\"})","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"szeyingg"},"content":"    public void testAddCommandValidAmount(String inputAmount) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"        AddCommand addCommand \u003d new AddCommand(false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"szeyingg"},"content":"        int initialSize \u003d service.countExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"szeyingg"},"content":"        String input \u003d \"bus $\" + inputAmount + \" /c transport\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertListSizeIncreased(initialSize, input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCorrectDesc(initialSize, input, \"bus\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCorrectAmount(initialSize, input, Double.parseDouble(inputAmount));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCorrectCategory(initialSize, input, \"TRANSPORT\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"edwardrl101"},"content":"     * Tests if AddCommand is able to deal with complications regarding whitespaces","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"edwardrl101"},"content":"     * @param input valid inputs consisting of issues with the whitespaces","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"bus $1\", \"bus$1\", \"bus $ 1\"})","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"szeyingg"},"content":"    public void testAddCommandTwoValidInputs(String input) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"randust"},"content":"        AddCommand addCommand \u003d new AddCommand(false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"szeyingg"},"content":"        int initialSize \u003d service.countExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertListSizeIncreased(initialSize, input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCorrectDesc(initialSize, input, \"bus\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCorrectAmount(initialSize, input, 1);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCorrectCategory(initialSize, input, \"UNCATEGORIZED\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"edwardrl101"},"content":"     * Tests if AddCommand is able to deal with complications regarding whitespaces","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"edwardrl101"},"content":"     * @param input valid inputs consisting of issues with the whitespaces","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"bus $1 /c transport\", \"bus $ 1 /c transport\"})","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"szeyingg"},"content":"    public void testAddCommandThreeValidInputs(String input) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"randust"},"content":"        AddCommand addCommand \u003d new AddCommand(false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"szeyingg"},"content":"        int initialSize \u003d service.countExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertListSizeIncreased(initialSize, input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCorrectDesc(initialSize, input, \"bus\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCorrectAmount(initialSize, input, 1);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCorrectCategory(initialSize, input, \"TRANSPORT\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"edwardrl101"},"content":"     * Tests AddCommand for error handling when given invalid dates","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"edwardrl101"},"content":"     * @param input invalid inputs which are invalid dates","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"/dt 31-13-2025\", \"/dt 31-31-3131\", \"/dt 12-20-2020\"})","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"edwardrl101"},"content":"    public void testAddCommandInvalidDateFormats(String input) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"edwardrl101"},"content":"        AddCommand addCommand \u003d new AddCommand(false);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"szeyingg"},"content":"        String argumentTested \u003d \"beverage $5 /c food \" + input;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d addCommand.execute(argumentTested);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandFailure(result, argumentTested);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.INVALID_DATE_MESSAGE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Charly2312"},"content":"     * Tests to get description of the add command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"edwardrl101"},"content":"     * Ensures the command returns the correct description.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"edwardrl101"},"content":"    public void testAddCommand_getDescription_success(boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"edwardrl101"},"content":"        AddCommand addCommand \u003d new AddCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"edwardrl101"},"content":"        String formatString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"venicephua"},"content":"        String exampleString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"edwardrl101"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"edwardrl101"},"content":"            formatString \u003d \"Format: /add-recurring \u003cDESCRIPTION\u003e $\u003cAMOUNT\u003e [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"venicephua"},"content":"            exampleString \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Charly2312"},"content":"                    Example: /add-recurring concert tickets $35.80 /c LEISURE /dt 03-05-2025 -","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"venicephua"},"content":"                             adds a recurring expense with description \u0027concert tickets\u0027 with the amount $35.80,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"venicephua"},"content":"                             category \u0027LEISURE\u0027 and date \u002703-05-2025\u0027.\"\"\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"edwardrl101"},"content":"            formatString \u003d \"Format: /add \u003cDESCRIPTION\u003e $\u003cAMOUNT\u003e [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"venicephua"},"content":"            exampleString \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Charly2312"},"content":"                    Example: /add concert tickets $35.80 /c LEISURE /dt 03-05-2025 -","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"venicephua"},"content":"                             adds a regular expense with description \u0027concert tickets\u0027 with the amount $35.80,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"venicephua"},"content":"                             category \u0027LEISURE\u0027 and date \u002703-05-2025\u0027.\"\"\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Charly2312"},"content":"        String expectedDescription \u003d formatString.trim() + \"\\n\" +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"edwardrl101"},"content":"                \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"venicephua"},"content":"                AMOUNT must be a positive number greater than 0.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"venicephua"},"content":"                CATEGORY is an optional argument.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"venicephua"},"content":"                DATE is an optional argument which must be in the form dd-MM-yyyy.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"venicephua"},"content":"                \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Charly2312"},"content":"                + exampleString.trim();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"edwardrl101"},"content":"        assertEquals(expectedDescription, addCommand.getDescription(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"edwardrl101"},"content":"                MessageDisplayer.ASSERT_COMMAND_EXPECTED_OUTPUT + MessageDisplayer.ASSERT_GET_DESC);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that adding an expense which causes the total expense of the month to exceed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"edwardrl101"},"content":"     * the monthly budget returns a warning message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"edwardrl101"},"content":"     * @param input raw user input containing expense description and amount.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(strings \u003d {\"Vacation $500\", \"Dinner $1000.21\", \"Taxi $990.0\", \"Meal $220\"})","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Charly2312"},"content":"    public void testAddCommand_exceedsBudgetReturnsWarning_success(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.addConstantExpenses(); // currently a total of $286.66 for the month","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertBudgetWarningAfterAddCommand(input, 500, MessageDisplayer.EXCEEDED_BUDGET_MESSAGE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that adding an expense which causes the total expense of the month to fall 10% short of","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"edwardrl101"},"content":"     * the monthly budget returns a warning message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"edwardrl101"},"content":"     * @param input raw user input containing expense description and amount.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(strings \u003d {\"Holiday $360\", \"Dinner $385.21\", \"Movie Ticket $390.0\", \"Meal $377\"})","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Charly2312"},"content":"    public void testAddCommand_almostExceedsBudgetReturnsWarning_success(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertBudgetWarningAfterAddCommand(input, 400, MessageDisplayer.EXCEEDED_BUDGET_MESSAGE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"edwardrl101":97,"szeyingg":81,"randust":8,"venicephua":21,"Charly2312":7}},{"path":"src/test/java/fintrek/command/add/AddRecurringCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"//@@Charly2312","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"package fintrek.command.add;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"import fintrek.expense.core.RecurringExpenseManager;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"public class AddRecurringCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"    private static final RecurringExpenseManager recurringExpenseManager \u003d","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":"            RecurringExpenseManager.getInstance();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"     * Clear all existing recurring expenses in the list before each test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"        RecurringExpenseManager.getInstance().clear();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"     * Tests if {@code AddRecurringCommand} returns an error for various invalid input formats","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"     * @param input invalid inputs for the expense","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(strings \u003d {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Charly2312"},"content":"        \"$1 /c transport\", \"$2.5\", \"$\", \"bus $\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"        \"bus $ /c transport\", \"bus $1 /c\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"    })","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"    public void testAddRecurringCommand_commandWithWrongFormat_fail(String input) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"        AddCommand addCommand \u003d new AddCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Charly2312"},"content":"                String.format(MessageDisplayer.INVALID_FORMAT_MESSAGE_TEMPLATE, \"add\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"szeyingg"},"content":"     * Tests if {@code AddRecurringCommand} returns error messages for empty inputs or","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"     * inputs simply consisting of whitespaces","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"     * @param input empty inputs or inputs consisting of only whitespaces","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Charly2312"},"content":"    @ValueSource(strings \u003d {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Charly2312"},"content":"        \"\", \"  \"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Charly2312"},"content":"    })","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Charly2312"},"content":"    public void testAddRecurringCommand_commandWithEmptyFormat_fail(String input) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Charly2312"},"content":"        AddCommand addCommand \u003d new AddCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Charly2312"},"content":"                String.format(MessageDisplayer.ARG_EMPTY_MESSAGE_TEMPLATE, \"add\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"     * Tests {@code AddRecurringCommand} for invalid expense amounts","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"szeyingg"},"content":"     * @param inputAmount invalid expense amounts","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Charly2312"},"content":"    @ValueSource(strings \u003d {\"invalid\", \"1.2.3\", \"-1\", \"2.\"})","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Charly2312"},"content":"    public void testAddRecurringCommand_invalidAmount_fail(String inputAmount) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Charly2312"},"content":"        AddCommand addCommand \u003d new AddCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"szeyingg"},"content":"        String input \u003d \"bus $\" + inputAmount + \"/c transport\" + \"/dt 01-01-2025\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.INVALID_AMT_MESSAGE);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"szeyingg"},"content":"     * Tests the {@code AddRecurringCommand} for various forms of valid amounts","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"szeyingg"},"content":"     * @param inputAmount the amount of the expense to be added","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Charly2312"},"content":"    @ValueSource(strings \u003d {\"20\", \"0.99\", \"45.67\", \"1.00\", \"1.0000\"})","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Charly2312"},"content":"    public void testAddRecurringCommand_validAmount_success(String inputAmount) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Charly2312"},"content":"        AddCommand addCommand \u003d new AddCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"szeyingg"},"content":"        String input \u003d \"bus $\" + inputAmount + \" /c transport\" + \"/dt 01-01-2025\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"edwardrl101"},"content":"        int size \u003d recurringExpenseManager.getLength();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Charly2312"},"content":"        int index \u003d size - 1;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCorrectRecurringListSize(size, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCorrectRecurringDesc(index, input, \"bus\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCorrectRecurringAmount(index, input, Double.parseDouble(inputAmount));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCorrectRecurringCategory(index, input, \"TRANSPORT\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"szeyingg"},"content":"     * Tests if {@code AddRecurringCommand} is able to deal with valid inputs with no category","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"szeyingg"},"content":"     * @param input valid inputs consisting of only description, amount, date","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"bus $1 /dt 01-01-2001\", \"bus$1 /dt 01-01-2001\", \"bus $ 1\"})","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Charly2312"},"content":"    public void testAddRecurringCommand_twoValidUncategorizedInputs_success(String input) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Charly2312"},"content":"        AddCommand addCommand \u003d new AddCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"edwardrl101"},"content":"        int size \u003d recurringExpenseManager.getLength();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Charly2312"},"content":"        int index \u003d size - 1;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCorrectRecurringListSize(size, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCorrectRecurringDesc(index, input, \"bus\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCorrectRecurringAmount(index, input, 1);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCorrectRecurringCategory(index, input, \"UNCATEGORIZED\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"szeyingg"},"content":"     * Tests {@code AddRecurringCommand} is successful for valid inputs with no date","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"szeyingg"},"content":"     * @param input valid inputs consisting of only description, amount, category","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Charly2312"},"content":"    @ValueSource(strings \u003d {\"bus $1 /c transport\", \"bus $ 1 /c transport\"})","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Charly2312"},"content":"    public void testAddRecurringCommand_twoValidNoDateInputs_success(String input) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Charly2312"},"content":"        AddCommand addCommand \u003d new AddCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Charly2312"},"content":"        Expense newExpense \u003d new Expense(\"bus\", 1.00, \"transport\",","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Charly2312"},"content":"                LocalDate.now());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Charly2312"},"content":"                String.format(MessageDisplayer.ADD_RECURRING_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Charly2312"},"content":"                        newExpense));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"szeyingg"},"content":"     * Tests {@code AddRecurringCommand} for error handling when given invalid dates","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"szeyingg"},"content":"     * @param inputDate invalid inputs which are invalid dates","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Charly2312"},"content":"    @ValueSource(strings \u003d {\"1-1-2025\", \"01-1-2025\", \"1-01-2025\", \"2025-1-1\", \"2025-01-01\"})","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Charly2312"},"content":"    public void testAddRecurringCommand_twoInvalidWrongDateFormatInputs_fail(String inputDate) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Charly2312"},"content":"        AddCommand addCommand \u003d new AddCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"szeyingg"},"content":"        String input \u003d \"bus $\" + \"1\" + \" /c transport /dt \" + inputDate;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Charly2312"},"content":"                String.format(MessageDisplayer.INVALID_DATE_MESSAGE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"edwardrl101":6,"szeyingg":39,"Charly2312":111}},{"path":"src/test/java/fintrek/command/budget/BudgetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardrl101"},"content":"package fintrek.command.budget;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"import fintrek.budget.core.BudgetManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"edwardrl101"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"public class BudgetCommandTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"    public static final String COMMAND_NAME \u003d \"budget\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"    private static final RegularExpenseManager regularExpenseManager \u003d","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"            RegularExpenseManager.getInstance();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"    private static final BudgetManager budgetManager \u003d BudgetManager.getInstance();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":"     * Clear all existing expenses in regularExpenseManager before each test.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"        regularExpenseManager.clear();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"     * Tests if BudgetCommand is able to set monthly budgets given valid inputs","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"     * @param input valid inputs in the form of $[AMOUNT] where AMOUNT is positive","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(strings \u003d {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"        \"$  2.00\", \"$2.41\", \"    $3.14\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"        \"$3\", \"$0.50\", \"$1.50\", \"$200.00\", \"$350.00\", \"$231\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"    })","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"    public void testBudgetCommandValidInput(String input) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"        BudgetCommand budgetCommand \u003d new BudgetCommand(false);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d budgetCommand.execute(input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"     * Verifies if calling the budget command with an empty input or whitespaces only","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"     * returns an error message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"     * @param input empty input or inputs consisting of only whitespaces","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource (strings \u003d {\"\", \"             \", \"  \"})","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"    public void testBudgetCommandEmptyInput(String input) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"        BudgetCommand budgetCommand \u003d new BudgetCommand(false);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d budgetCommand.execute(input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"                String.format(MessageDisplayer.ARG_EMPTY_MESSAGE_TEMPLATE, COMMAND_NAME));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"     * Tests if BudgetCommand returns error messages for invalid inputs","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"edwardrl101"},"content":"     * not in the format of $[AMOUNT]","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"     * @param input invalid inputs in various wrong formats","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource (strings \u003d {\"65\", \"HI!\", \"CS2113\", \"$          S5.78\", \"$CS3230. 98\", \"Hello $5\"})","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"edwardrl101"},"content":"    public void testBudgetInvalidFormatInput(String input) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"edwardrl101"},"content":"        BudgetCommand budgetCommand \u003d new BudgetCommand(false);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d budgetCommand.execute(input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"edwardrl101"},"content":"               String.format(MessageDisplayer.INVALID_FORMAT_MESSAGE_TEMPLATE, COMMAND_NAME));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that adding a budget with an invalid amount will","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"edwardrl101"},"content":"     * return an appropriate error message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"edwardrl101"},"content":"     * @param input a String containing an invalid amount","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource (strings \u003d {\"$0\"})","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"edwardrl101"},"content":"    public void testBudgetInvalidAmount(String input) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"edwardrl101"},"content":"        BudgetCommand budgetCommand \u003d new BudgetCommand(false);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d budgetCommand.execute(input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.INVALID_AMT_MESSAGE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"edwardrl101"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"edwardrl101":88}},{"path":"src/test/java/fintrek/command/budget/BudgetLeftCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"package fintrek.command.budget;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"import fintrek.budget.core.BudgetManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"public class BudgetLeftCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"    public static final String COMMAND_NAME \u003d \"budget-left\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"    public static final double HIGH_MONTHLY_BUDGET \u003d 500.0;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"    public static final double LOW_MONTHLY_BUDGET \u003d 50.0;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"    private static final RegularExpenseManager regularExpenseManager \u003d","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"            RegularExpenseManager.getInstance();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"     * Clear all existing expenses in regularExpenseManager before each test.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":"     * Then add some constant regular expenses into the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Charly2312"},"content":"        regularExpenseManager.clear();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Charly2312"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"     * Tests if /budget-left can execute properly when it is below budget","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Charly2312"},"content":"     * @param input are empty arguments or whitespaces","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"    @ValueSource(strings \u003d {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"        \"\", \"     \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Charly2312"},"content":"    public void testBudgetLeftCommand_emptyArgumentBelowBudget_success(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"        BudgetLeftCommand budgetCommand \u003d new BudgetLeftCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Charly2312"},"content":"        BudgetManager.getInstance().setBudget(HIGH_MONTHLY_BUDGET);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Charly2312"},"content":"        double budgetNow \u003d BudgetManager.getInstance().getBudget();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Charly2312"},"content":"        double total \u003d TestUtils.regularReporter.getTotal();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Charly2312"},"content":"        double budgetLeft \u003d budgetNow - total;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"        double leftPercentage \u003d budgetLeft / budgetNow * 100.0;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d budgetCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Charly2312"},"content":"                String.format(MessageDisplayer.CURRENT_BUDGET_LEFT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Charly2312"},"content":"                        budgetNow, total, budgetLeft, leftPercentage));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Charly2312"},"content":"     * Tests if /budget-left can execute properly when it is below budget","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Charly2312"},"content":"     * @param input are non-empty arguments of words","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Charly2312"},"content":"    @ValueSource(strings \u003d {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Charly2312"},"content":"        \"hihihihi\", \"   sup  \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Charly2312"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Charly2312"},"content":"    public void testBudgetLeftCommand_nonEmptyArgumentBelowBudget_success(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Charly2312"},"content":"        BudgetLeftCommand budgetCommand \u003d new BudgetLeftCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Charly2312"},"content":"        BudgetManager.getInstance().setBudget(HIGH_MONTHLY_BUDGET);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Charly2312"},"content":"        double budgetNow \u003d BudgetManager.getInstance().getBudget();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Charly2312"},"content":"        double total \u003d TestUtils.regularReporter.getTotal();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Charly2312"},"content":"        double budgetLeft \u003d budgetNow - total;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Charly2312"},"content":"        double leftPercentage \u003d budgetLeft / budgetNow * 100.0;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d budgetCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Charly2312"},"content":"                String.format(MessageDisplayer.CURRENT_BUDGET_LEFT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Charly2312"},"content":"                        budgetNow, total, budgetLeft, leftPercentage));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Charly2312"},"content":"     * Tests if /budget-left can execute properly when it is above budget","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Charly2312"},"content":"     * @param input are empty arguments or whitespaces","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Charly2312"},"content":"    @ValueSource(strings \u003d {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Charly2312"},"content":"        \"\", \"     \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Charly2312"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Charly2312"},"content":"    public void testBudgetLeftCommand_emptyArgumentExceedBudget_success(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Charly2312"},"content":"        BudgetLeftCommand budgetCommand \u003d new BudgetLeftCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Charly2312"},"content":"        BudgetManager.getInstance().setBudget(LOW_MONTHLY_BUDGET);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Charly2312"},"content":"        double budgetNow \u003d BudgetManager.getInstance().getBudget();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Charly2312"},"content":"        double total \u003d TestUtils.regularReporter.getTotal();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Charly2312"},"content":"        double budgetLeft \u003d budgetNow - total;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Charly2312"},"content":"        double leftPercentage \u003d budgetLeft / budgetNow * 100.0;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d budgetCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Charly2312"},"content":"                String.format(MessageDisplayer.EXCEEDED_BUDGET_MESSAGE, budgetNow, -budgetLeft));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Charly2312"},"content":"     * Tests if /budget-left can execute properly when it is above budget","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Charly2312"},"content":"     * @param input are non-empty arguments of words","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Charly2312"},"content":"    @ValueSource(strings \u003d {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Charly2312"},"content":"        \"hihihihi\", \"   sup  \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Charly2312"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Charly2312"},"content":"    public void testBudgetLeftCommand_nonEmptyArgumentExceedBudget_success(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Charly2312"},"content":"        BudgetLeftCommand budgetCommand \u003d new BudgetLeftCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Charly2312"},"content":"        BudgetManager.getInstance().setBudget(LOW_MONTHLY_BUDGET);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Charly2312"},"content":"        double budgetNow \u003d BudgetManager.getInstance().getBudget();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Charly2312"},"content":"        double total \u003d TestUtils.regularReporter.getTotal();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Charly2312"},"content":"        double budgetLeft \u003d budgetNow - total;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Charly2312"},"content":"        double leftPercentage \u003d budgetLeft / budgetNow * 100.0;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d budgetCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Charly2312"},"content":"                String.format(MessageDisplayer.EXCEEDED_BUDGET_MESSAGE, budgetNow, -budgetLeft));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"Charly2312":123}},{"path":"src/test/java/fintrek/command/delete/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.delete;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import fintrek.expense.service.ExpenseService;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"import static fintrek.expense.service.AppServices.REGULAR_SERVICE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    private ExpenseService service;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"     * Clears all existing expenses in RegularExpenseManager before each test.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"        RegularExpenseManager.getInstance().clear();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"        service \u003d REGULAR_SERVICE;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that invoking the delete command without providing an index","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"     * prints the appropriate error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"    public void testDeleteCommandEmptyIndex() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d deleteCommand.execute(\"\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, \"\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, \"\", MessageDisplayer.IDX_EMPTY_MESSAGE);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that invoking the delete command with various invalid forms of indices","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"     * returns an error message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"     * @param input a String of the form of an invalid index","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"    @ValueSource(strings \u003d {\"invalid\", \"0.99\", \"2.\", \"1.2.3\", \"-1\", \"0\"})","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"szeyingg"},"content":"    public void testDeleteCommandInvalidIndex(String input) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d deleteCommand.execute(input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.INVALID_IDX_FORMAT_MESSAGE);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that attempting to delete an expense at an index beyond the current list size","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"     * returns an appropriate error message.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"     * @param input a String containing a large number beyond the size of the list","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"    @ValueSource(strings \u003d {\"999\"}) // Assuming \u003c999 expenses exist","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"szeyingg"},"content":"    public void testDeleteCommandOutOfBounds(String input) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d deleteCommand.execute(input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.IDX_OUT_OF_BOUND_MESSAGE);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that deleting the first expense out a nonempty list of expenses","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"edwardrl101"},"content":"     * deletes the correct expense and deducts the current size by 1.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"szeyingg"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"    public void testDeleteCommandValidInput() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"        int expectedSize \u003d service.countExpenses() - 1;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"randust"},"content":"        Expense removedExpense \u003d service.getExpense(0);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"szeyingg"},"content":"        String expenseStr \u003d \u0027\"\u0027 + removedExpense.toString() + \u0027\"\u0027;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d deleteCommand.execute(\"1\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandSuccess(result, \"1\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"szeyingg"},"content":"        String expectedMessage \u003d String.format(MessageDisplayer.DELETE_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"szeyingg"},"content":"                expenseStr, expectedSize);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, \"1\", expectedMessage);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"randust"},"content":"        // Re-validate count from service","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"randust"},"content":"        assert expectedSize \u003d\u003d service.countExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"edwardrl101"},"content":"     * Tests the description of the delete command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"edwardrl101"},"content":"     * Verifies the command returns the correct description.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"edwardrl101"},"content":"    public void testDeleteCommand_getDescription_success(boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"edwardrl101"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"edwardrl101"},"content":"        String formatString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"venicephua"},"content":"        String exampleString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"edwardrl101"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"edwardrl101"},"content":"            formatString \u003d \"Format: /delete-recurring \u003cRECURRING_EXPENSE_NUMBER\u003e\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"venicephua"},"content":"            exampleString \u003d \"Example: /delete-recurring 2 - deletes the recurring expense with index 2 on the list.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"edwardrl101"},"content":"            formatString \u003d \"Format: /delete \u003cEXPENSE_NUMBER\u003e\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"venicephua"},"content":"            exampleString \u003d \"Example: /delete 2 - deletes the regular expense with index 2 on the list.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"edwardrl101"},"content":"        String expectedDescription \u003d formatString + \"\\n\" +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"edwardrl101"},"content":"                \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"venicephua"},"content":"                INDEX must be a positive integer \u003e 0.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"venicephua"},"content":"                \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"venicephua"},"content":"                + exampleString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"edwardrl101"},"content":"        assertEquals(expectedDescription, deleteCommand.getDescription(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"edwardrl101"},"content":"                MessageDisplayer.ASSERT_COMMAND_EXPECTED_OUTPUT + MessageDisplayer.ASSERT_GET_DESC);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"edwardrl101":43,"szeyingg":41,"randust":25,"venicephua":14}},{"path":"src/test/java/fintrek/command/edit/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.edit;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"import fintrek.expense.service.ExpenseService;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"public class EditCommandTest {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"    private final ExpenseService service \u003d TestUtils.regularService;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"     * Clear all existing expenses in regularExpenseManager before each test.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"        service.clearExpenses();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"     * Clear all existing expenses in regularExpenseManager after each test.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"    @AfterEach","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"    public void tearDown() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"        service.clearExpenses();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"     * Verifies that edit command is successful when all input fields are valid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"     * Checks that description, amount, category, and date are updated correctly.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"    public void testEditSuccessAllFields() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"        service.addExpense(new Expense(TestUtils.VALID_DESCRIPTION, TestUtils.VALID_AMOUNT, TestUtils.VALID_CATEGORY,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"                TestUtils.VALID_DATE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"        String input \u003d TestUtils.VALID_INDEX + \" /d \" + TestUtils.UPDATED_DESCRIPTION_FULL + \" /$ \" +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"                TestUtils.UPDATED_AMOUNT + \" /c \" + TestUtils.UPDATED_CATEGORY + \" /dt \" +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"                TestUtils.UPDATED_DATE.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"        TestUtils.assertCorrectDesc(0, input, TestUtils.UPDATED_DESCRIPTION_FULL);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"        TestUtils.assertCorrectAmount(0, input, TestUtils.UPDATED_AMOUNT);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"        TestUtils.assertCorrectCategory(0, input, TestUtils.UPDATED_CATEGORY.toUpperCase());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.UPDATED_DATE, service.getExpense(0).getDate());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"szeyingg"},"content":"     * Verifies that edit command is successful when only some fields are changed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"szeyingg"},"content":"     * Checks that description is updated correctly when input only contains description.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"    public void testEditSuccessPartialUpdate() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"        service.addExpense(new Expense(TestUtils.VALID_DESCRIPTION, TestUtils.VALID_AMOUNT, TestUtils.VALID_CATEGORY,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"                TestUtils.VALID_DATE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"        String input \u003d TestUtils.VALID_INDEX + \" /d \" + TestUtils.UPDATED_DESCRIPTION;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"        TestUtils.assertCorrectDesc(0, input, TestUtils.UPDATED_DESCRIPTION);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"        TestUtils.assertCorrectAmount(0, input, TestUtils.VALID_AMOUNT);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"        TestUtils.assertCorrectCategory(0, input, TestUtils.VALID_CATEGORY.toUpperCase());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.VALID_DATE, service.getExpense(0).getDate());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that invoking the edit command with an empty input","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"edwardrl101"},"content":"     * prints the appropriate error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"    public void testEditEmptyInput() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"        String input \u003d \"\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"szeyingg"},"content":"     * Verifies that edit command fails for invalid input formats.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"randust"},"content":"    public void testEditInvalidFormat() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"randust"},"content":"        service.addExpense(new Expense(TestUtils.VALID_DESCRIPTION, TestUtils.VALID_AMOUNT, TestUtils.VALID_CATEGORY,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"randust"},"content":"                TestUtils.VALID_DATE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"randust"},"content":"        String input \u003d \"invalid input format\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that invoking the edit command with a valid index, but no","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"edwardrl101"},"content":"     * edit fields, will print the appropriate error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"randust"},"content":"    public void testEditNoFieldsProvided() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"randust"},"content":"        service.addExpense(new Expense(TestUtils.VALID_DESCRIPTION, TestUtils.VALID_AMOUNT, TestUtils.VALID_CATEGORY,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"randust"},"content":"                TestUtils.VALID_DATE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"randust"},"content":"        String input \u003d String.valueOf(TestUtils.VALID_INDEX);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that attempting to edit the amount of an expense","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"edwardrl101"},"content":"     * into an invalid amount, such as a string \"abc\", will return an","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"edwardrl101"},"content":"     * appropriate error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"randust"},"content":"    public void testEditInvalidAmount() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"randust"},"content":"        service.addExpense(new Expense(TestUtils.VALID_DESCRIPTION, TestUtils.VALID_AMOUNT, TestUtils.VALID_CATEGORY,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"randust"},"content":"                TestUtils.VALID_DATE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"randust"},"content":"        String input \u003d TestUtils.VALID_INDEX + \" /d \" + TestUtils.UPDATED_DESCRIPTION + \" /$ \" +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"randust"},"content":"                TestUtils.INVALID_AMOUNT_INPUT;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that attempting to edit the date of an expense","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"edwardrl101"},"content":"     * into an invalid date will return the appropriate error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"randust"},"content":"    public void testEditInvalidDate() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"randust"},"content":"        service.addExpense(new Expense(TestUtils.VALID_DESCRIPTION, TestUtils.VALID_AMOUNT, TestUtils.VALID_CATEGORY,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"randust"},"content":"                TestUtils.VALID_DATE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"randust"},"content":"        String input \u003d TestUtils.VALID_INDEX + \" /d \" + TestUtils.UPDATED_DESCRIPTION + \" /dt \" +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"randust"},"content":"                TestUtils.INVALID_DATE_INPUT;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that attempting to edit an expense at an index which is out of","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"edwardrl101"},"content":"     * bounds or beyond the size of the current list will print the","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"edwardrl101"},"content":"     * appropriate error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"randust"},"content":"    public void testEditIndexOutOfBound() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"randust"},"content":"        String input \u003d \"5 /d something\"; // No expense added yet","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"szeyingg"},"content":"     * Verifies that edit command is successful for inputs with whitespace","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"szeyingg"},"content":"     * and that updated fields has been correctly trimmed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"randust"},"content":"    public void testEditTrimsInputFields() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"randust"},"content":"        service.addExpense(new Expense(TestUtils.VALID_DESCRIPTION, TestUtils.VALID_AMOUNT, TestUtils.VALID_CATEGORY,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"randust"},"content":"                TestUtils.VALID_DATE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"randust"},"content":"        String input \u003d TestUtils.VALID_INDEX + \" /d   \" + TestUtils.UPDATED_DESCRIPTION + \"   /$  \" +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"randust"},"content":"                TestUtils.UPDATED_AMOUNT + \"  \";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"randust"},"content":"        TestUtils.assertCorrectDesc(0, input, TestUtils.UPDATED_DESCRIPTION);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"randust"},"content":"        TestUtils.assertCorrectAmount(0, input, TestUtils.UPDATED_AMOUNT);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that invoking the edit command with a negative index fails.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"randust"},"content":"    public void testEditNegativeIndex() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"randust"},"content":"        String input \u003d \"-1 /d invalid\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"szeyingg"},"content":"     * Verifies that edit command is successful for input with no description.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"szeyingg"},"content":"     * Checks that expense is updated with correct amount.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"randust"},"content":"    public void testEditSuccessNoDescription() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"randust"},"content":"        service.addExpense(new Expense(TestUtils.VALID_DESCRIPTION, TestUtils.VALID_AMOUNT, TestUtils.VALID_CATEGORY,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"randust"},"content":"                TestUtils.VALID_DATE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(false);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"randust"},"content":"        String input \u003d TestUtils.VALID_INDEX + \" /$ \" + TestUtils.UPDATED_AMOUNT;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"randust"},"content":"        TestUtils.assertCorrectAmount(0, input, TestUtils.UPDATED_AMOUNT);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"szeyingg"},"content":"     * Verifies that edit command also works properly for recurring expenses","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"randust"},"content":"    public void testEditRecurringExpense() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"randust"},"content":"        TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"randust"},"content":"        EditCommand editCommand \u003d new EditCommand(true);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"randust"},"content":"        String input \u003d \"1 /d RecurringTest\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"randust"},"content":"        CommandResult result \u003d editCommand.execute(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"randust"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"randust"},"content":"        TestUtils.assertCorrectRecurringDesc(0, input, \"RecurringTest\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"edwardrl101"},"content":"     * Tests the description of the edit command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"edwardrl101"},"content":"     * Verifies the command returns the correct description.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource (booleans \u003d {true, false})","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"edwardrl101"},"content":"    public void testEditCommand_getDescription_success(boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"edwardrl101"},"content":"        EditCommand editCommand \u003d new EditCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"edwardrl101"},"content":"        String formatString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"venicephua"},"content":"        String exampleString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"edwardrl101"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"venicephua"},"content":"            formatString \u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"venicephua"},"content":"                    \"Format: /edit-recurring \u003cINDEX\u003e [/d \u003cDESCRIPTION\u003e] [/$ \u003cAMOUNT\u003e] [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"venicephua"},"content":"            exampleString \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"venicephua"},"content":"                Example: /edit-recurring 2 /d dinner /$ 25 /c Dining /dt 25-12-2024 -","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"venicephua"},"content":"                         edits recurring expense 2 to have a description \u0027dinner\u0027 with the amount $25.00,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"venicephua"},"content":"                         category \u0027DINING\u0027 and date \u002725-12-2024\u0027.\"\"\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"edwardrl101"},"content":"            formatString \u003d \"Format: /edit \u003cINDEX\u003e [/d \u003cDESCRIPTION\u003e] [/$ \u003cAMOUNT\u003e] [/c \u003cCATEGORY\u003e] [/dt \u003cDATE\u003e]\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"venicephua"},"content":"            exampleString \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"venicephua"},"content":"                Example: /edit 2 /d dinner /$ 25 /c Dining /dt 25-12-2024 -","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"venicephua"},"content":"                         edits regular expense 2 to have a description \u0027dinner\u0027 with the amount $25.00,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"venicephua"},"content":"                         category \u0027DINING\u0027 and date \u002725-12-2024\u0027.\"\"\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"edwardrl101"},"content":"        String expectedDescription \u003d formatString + \"\\n\" +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"edwardrl101"},"content":"                \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"venicephua"},"content":"                INDEX is the position of the expense in the list (from /list or /list-recurring).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"venicephua"},"content":"                DESCRIPTION, AMOUNT, CATEGORY, DATE are optional arguments, but at least one field is required.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"venicephua"},"content":"                \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"venicephua"},"content":"                + exampleString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"edwardrl101"},"content":"        assertEquals(expectedDescription, editCommand.getDescription(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"edwardrl101"},"content":"                MessageDisplayer.ASSERT_COMMAND_EXPECTED_OUTPUT + MessageDisplayer.ASSERT_GET_DESC);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"edwardrl101":55,"szeyingg":22,"randust":162,"venicephua":15}},{"path":"src/test/java/fintrek/command/help/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.help;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandRegistry;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.params.provider.CsvSource;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"/**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":" * Unit tests for the {@code HelpCommand} class.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":" * Ensures that the help information is correctly displayed.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":" */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"public class HelpCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"     * Tests the help command with general input.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"     * Verifies that empty or whitespace inputs return the general help description.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the general help command.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"        \"true,\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"        \"true, \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"        \"false,\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"        \"false, \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_general_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"        String expectedMessage \u003d CommandRegistry.getAllCommandDescriptions();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_GENERAL_HELP_MESSAGE, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"add\" command.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"     * Verifies that the inputs variations for \"add\" return the \"add\" command description.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"add\".","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"venicephua"},"content":"        \"true, add-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"venicephua"},"content":"        \"true, ADD-RECURRING\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"venicephua"},"content":"        \"true,  add-recurring \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"        \"true, add-recurring       \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"venicephua"},"content":"        \"false, add\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"        \"false, ADD\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"venicephua"},"content":"        \"false,  add \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"venicephua"},"content":"        \"false, add       \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_add_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"add-recurring\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"add\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Charly2312"},"content":"     * Tests the help command for the \"add\" command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Charly2312"},"content":"     * Verifies that the inputs variations for \"add\" return the \"add\" command description.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Charly2312"},"content":"     * @param input The input to test the help command for \"add\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"venicephua"},"content":"        \"true, add-recurringggg\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"venicephua"},"content":"        \"true, /add-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"venicephua"},"content":"        \"true, hiadd-recurringhi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"venicephua"},"content":"        \"false, adddd\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"venicephua"},"content":"        \"false, /add\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"venicephua"},"content":"        \"false, hiaddhi\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_typoAdd_fail(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.HELP_UNKNOWN_TOPIC);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"delete\" command.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"venicephua"},"content":"     * Verifies that the inputs variations for \"delete\" return the \"delete\" command description.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"delete\".","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"venicephua"},"content":"        \"true, delete-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"venicephua"},"content":"        \"true, DELETE-RECURRING\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"venicephua"},"content":"        \"true,  delete-recurring \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"venicephua"},"content":"        \"true, delete-recurring       \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"venicephua"},"content":"        \"false, delete\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"venicephua"},"content":"        \"false, DELETE\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"venicephua"},"content":"        \"false,  delete \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"venicephua"},"content":"        \"false, delete       \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_delete_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"delete-recurring\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"delete\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Charly2312"},"content":"     * Tests the help command for the \"delete\" command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Charly2312"},"content":"     * Verifies that the inputs wrong variations for \"delete\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Charly2312"},"content":"     *              do not return the \"delete\" command description.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Charly2312"},"content":"     * @param input The input to test the help command for \"delete\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"venicephua"},"content":"        \"true, delete-recurringggg\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"venicephua"},"content":"        \"true, /delete-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"venicephua"},"content":"        \"true, byedelete-recurringbye\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"venicephua"},"content":"        \"false, deleteee\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"venicephua"},"content":"        \"false, /delete\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"venicephua"},"content":"        \"false, byedeletebye\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_typoDelete_fail(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.HELP_UNKNOWN_TOPIC);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"total\" command.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"venicephua"},"content":"     * Verifies that the inputs variations for \"total\" return the \"total\" command description.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"total\".","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"venicephua"},"content":"        \"true, total-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"venicephua"},"content":"        \"true, TOTAL-RECURRING\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"venicephua"},"content":"        \"true,  total-recurring \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"venicephua"},"content":"        \"true, total-recurring       \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"venicephua"},"content":"        \"false, total\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"venicephua"},"content":"        \"false, TOTAL\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"venicephua"},"content":"        \"false,  total \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"venicephua"},"content":"        \"false, total       \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_total_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"total-recurring\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"total\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Charly2312"},"content":"     * Tests the help command for the \"total\" command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Charly2312"},"content":"     * Verifies that the inputs wrong variations for \"total\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Charly2312"},"content":"     *              do not return the \"total\" command description.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Charly2312"},"content":"     * @param input The input to test the help command for \"total\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"venicephua"},"content":"        \"true, total-recurringggg\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"venicephua"},"content":"        \"true, /total-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"venicephua"},"content":"        \"true, hitotal-recurringhi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"venicephua"},"content":"        \"false, totalll\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"venicephua"},"content":"        \"false, /total\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"venicephua"},"content":"        \"false, hitotalhi\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_typoTotal_fail(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.HELP_UNKNOWN_TOPIC);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"edwardrl101"},"content":"     * Tests the help command for the \"budget\" command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"edwardrl101"},"content":"     * Ensures that the inputs variations for \"budget\" return the \"budget\" command description.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"edwardrl101"},"content":"     * @param input The input to test the help command for \"budget\".","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"venicephua"},"content":"        \"true, BUDGET\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"venicephua"},"content":"        \"true, BuDgET\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"venicephua"},"content":"        \"true, budget\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"venicephua"},"content":"        \"true, budget      \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"venicephua"},"content":"        \"false, BUDGET\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"venicephua"},"content":"        \"false, BuDgET\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"venicephua"},"content":"        \"false, budget\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"venicephua"},"content":"        \"false, budget      \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_budget_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"edwardrl101"},"content":"        String expectedMessage \u003d CommandRegistry.getCommand(\"budget\").getDescription();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Charly2312"},"content":"     * Tests the help command for the \"budget\" command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Charly2312"},"content":"     * Ensures that the inputs wrong variations for \"budget\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Charly2312"},"content":"     *              do not return the \"budget\" command description.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Charly2312"},"content":"     * @param input The input to test the help command for \"budget\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"venicephua"},"content":"        \"true, bbbbudget\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"venicephua"},"content":"        \"true, budgetttt\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"venicephua"},"content":"        \"true, /budget\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"venicephua"},"content":"        \"true, budget?\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"venicephua"},"content":"        \"true, hibudgethi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"venicephua"},"content":"        \"false, bbbbudget\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"venicephua"},"content":"        \"false, budgetttt\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"venicephua"},"content":"        \"false, /budget\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"venicephua"},"content":"        \"false, budget?\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"venicephua"},"content":"        \"false, hibudgethi\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_typoBudget_fail(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.HELP_UNKNOWN_TOPIC);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"average\" command.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"venicephua"},"content":"     * Verifies that the inputs variations for \"average\" return the \"average\" command description.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"average\".","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"venicephua"},"content":"        \"true, average-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"venicephua"},"content":"        \"true, AVERAGE-RECURRING\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"venicephua"},"content":"        \"true,  average-recurring \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"venicephua"},"content":"        \"true, average-recurring       \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"venicephua"},"content":"        \"false, average\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"venicephua"},"content":"        \"false, AVERAGE\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"venicephua"},"content":"        \"false,  average \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"venicephua"},"content":"        \"false, average       \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_average_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"average-recurring\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"average\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Charly2312"},"content":"     * Tests the help command for the \"average\" command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Charly2312"},"content":"     * Verifies that the inputs wrong variations for \"average\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Charly2312"},"content":"     *              do not return the \"average\" command description.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Charly2312"},"content":"     * @param input The input to test the help command for \"average\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"venicephua"},"content":"        \"true, average-recurringggg\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"venicephua"},"content":"        \"true, /average-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"venicephua"},"content":"        \"true, hiaverage-recurringhi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"venicephua"},"content":"        \"false, averageee\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"venicephua"},"content":"        \"false, /average\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"venicephua"},"content":"        \"false, hiaveragehi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_typoAverage_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.HELP_UNKNOWN_TOPIC);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"summary\" command.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"venicephua"},"content":"     * Verifies that the inputs variations for \"summary\" return the \"summary\" command description.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"summary\".","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"venicephua"},"content":"        \"true, summary-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"venicephua"},"content":"        \"true, SUMMARY-RECURRING\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"venicephua"},"content":"        \"true,  summary-recurring \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"venicephua"},"content":"        \"true, summary-recurring       \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"venicephua"},"content":"        \"false, summary\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"venicephua"},"content":"        \"false, SUMMARY\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"venicephua"},"content":"        \"false,  summary \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"venicephua"},"content":"        \"false, summary       \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_summary_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"summary-recurring\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"summary\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Charly2312"},"content":"     * Tests the help command for the \"summary\" command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Charly2312"},"content":"     * Verifies that the inputs variations for \"summary\" return the \"summary\" command description.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Charly2312"},"content":"     * @param input The input to test the help command for \"summary\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Charly2312"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"venicephua"},"content":"        \"true, summary-recurringggg\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"venicephua"},"content":"        \"true, /summary-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"venicephua"},"content":"        \"true, hisummary-recurringhi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"venicephua"},"content":"        \"false, summaryyy\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"venicephua"},"content":"        \"false, /summary\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"venicephua"},"content":"        \"false, hisummaryhi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_typoSummary_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.HELP_UNKNOWN_TOPIC);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"edit\" command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"venicephua"},"content":"     * Verifies that the inputs variations for \"edit\" return the \"edit\" command description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"edit\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"venicephua"},"content":"        \"true, edit-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"venicephua"},"content":"        \"true, EDIT-RECURRING\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"venicephua"},"content":"        \"true,  edit-recurring \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"venicephua"},"content":"        \"true, edit-recurring       \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"venicephua"},"content":"        \"false, edit\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"venicephua"},"content":"        \"false, EDIT\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"venicephua"},"content":"        \"false,  edit \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"venicephua"},"content":"        \"false, edit       \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_edit_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"edit-recurring\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"edit\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"edit\" command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"venicephua"},"content":"     * Verifies that the inputs variations for \"edit\" return the \"edit\" command description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"edit\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"venicephua"},"content":"        \"true, edit-recurringggg\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"venicephua"},"content":"        \"true, /edit-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"venicephua"},"content":"        \"true, hiedit-recurringhi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"venicephua"},"content":"        \"false, edittt\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"venicephua"},"content":"        \"false, /edit\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"venicephua"},"content":"        \"false, hiedithi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_typoEdit_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.HELP_UNKNOWN_TOPIC);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"list\" command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"venicephua"},"content":"     * Verifies that the inputs variations for \"list\" return the \"list\" command description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"list\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"venicephua"},"content":"        \"true, list-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"venicephua"},"content":"        \"true, LIST-RECURRING\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"venicephua"},"content":"        \"true,  list-recurring \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"venicephua"},"content":"        \"true, list-recurring       \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"venicephua"},"content":"        \"false, list\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"venicephua"},"content":"        \"false, LIST\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"venicephua"},"content":"        \"false,  list \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"venicephua"},"content":"        \"false, list       \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_list_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"list-recurring\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"list\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"list\" command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"venicephua"},"content":"     * Verifies that the inputs variations for \"list\" return the \"list\" command description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"list\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"venicephua"},"content":"        \"true, list-recurringggg\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"venicephua"},"content":"        \"true, /list-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"venicephua"},"content":"        \"true, hilist-recurringhi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"venicephua"},"content":"        \"false, listtt\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"venicephua"},"content":"        \"false, /list\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"venicephua"},"content":"        \"false, hislisthi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_typoList_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.HELP_UNKNOWN_TOPIC);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"list-sort\" command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"venicephua"},"content":"     * Verifies that the inputs variations for \"list-sort\" return the \"list-sort\" command description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"list-sort\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"venicephua"},"content":"        \"true, list-sort-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"venicephua"},"content":"        \"true, LIST-SORT-RECURRING\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"venicephua"},"content":"        \"true,  list-sort-recurring \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"venicephua"},"content":"        \"true, list-sort-recurring       \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"venicephua"},"content":"        \"false, list-sort\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"venicephua"},"content":"        \"false, LIST-SORT\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"venicephua"},"content":"        \"false,  list-sort \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"venicephua"},"content":"        \"false, list-sort       \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_listSort_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"list-sort-recurring\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d CommandRegistry.getCommand(\"list-sort\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"list-sort\" command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"venicephua"},"content":"     * Verifies that the inputs variations for \"list-sort\" return the \"list-sort\" command description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"list-sort\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"venicephua"},"content":"        \"true, list-sort-recurringggg\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"venicephua"},"content":"        \"true, /list-sort-recurring\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"venicephua"},"content":"        \"true, hilist-sort-recurringhi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"venicephua"},"content":"        \"false, list-sorttt\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"venicephua"},"content":"        \"false, /list-sort\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"venicephua"},"content":"        \"false, hilist-sorthi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_typoListSort_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.HELP_UNKNOWN_TOPIC);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"add-category\" command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"venicephua"},"content":"     * Ensures that the inputs variations for \"add-category\" return the \"add-category\" command description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"add-category\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"venicephua"},"content":"        \"true, ADD-CATEGORY\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"venicephua"},"content":"        \"true, add-category\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"venicephua"},"content":"        \"true, add-category      \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"venicephua"},"content":"        \"false, ADD-CATEGORY\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"venicephua"},"content":"        \"false, add-category\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"venicephua"},"content":"        \"false, add-category      \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_addCategory_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"venicephua"},"content":"        String expectedMessage \u003d CommandRegistry.getCommand(\"add-category\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"add-category\" command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"venicephua"},"content":"     * Ensures that the inputs wrong variations for \"add-category\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"venicephua"},"content":"     *              do not return the \"add-category\" command description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"add-category\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"venicephua"},"content":"        \"true, add-categoryyyy\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"venicephua"},"content":"        \"true, /add-category\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"venicephua"},"content":"        \"true, add-category?\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"venicephua"},"content":"        \"true, hiadd-categoryhi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"venicephua"},"content":"        \"false, add-categoryyyy\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"venicephua"},"content":"        \"false, /add-category\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"venicephua"},"content":"        \"false, add-category?\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"venicephua"},"content":"        \"false, hiadd-categoryhi\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_typoAddCategory_fail(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.HELP_UNKNOWN_TOPIC);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"list-category\" command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"venicephua"},"content":"     * Ensures that the inputs variations for \"list-category\" return the \"list-category\" command description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"list-category\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"venicephua"},"content":"        \"true, LIST-CATEGORY\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"venicephua"},"content":"        \"true, list-category\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"venicephua"},"content":"        \"true, list-category      \",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"venicephua"},"content":"        \"false, LIST-CATEGORY\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"venicephua"},"content":"        \"false, list-category\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"venicephua"},"content":"        \"false, list-category      \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_listCategory_success(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"venicephua"},"content":"        String expectedMessage \u003d CommandRegistry.getCommand(\"list-category\").getDescription();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for the \"list-category\" command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"venicephua"},"content":"     * Ensures that the inputs wrong variations for \"list-category\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"venicephua"},"content":"     *              do not return the \"list-category\" command description.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"venicephua"},"content":"     * @param input The input to test the help command for \"list-category\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"venicephua"},"content":"        \"true, list-categoryyyy\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"venicephua"},"content":"        \"true, /list-category\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"venicephua"},"content":"        \"true, list-category?\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"venicephua"},"content":"        \"true, hilist-categoryhi\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"venicephua"},"content":"        \"false, list-categoryyyy\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"venicephua"},"content":"        \"false, /list-category\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"venicephua"},"content":"        \"false, list-category?\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"venicephua"},"content":"        \"false, hilist-categoryhi\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_typoListCategory_fail(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.HELP_UNKNOWN_TOPIC);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"venicephua"},"content":"     * Tests the help command for invalid commands.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"venicephua"},"content":"     * Verifies that unrecognized commands returns an error.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"venicephua"},"content":"     * @param input The invalid command input.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"venicephua"},"content":"        \"true, hello\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"venicephua"},"content":"        \"true, delet\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"venicephua"},"content":"        \"true, brother\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"venicephua"},"content":"        \"true, 321\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"venicephua"},"content":"        \"true, fooaddfoo\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"venicephua"},"content":"        \"true, baraveragebar\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"venicephua"},"content":"        \"false, hello\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"venicephua"},"content":"        \"false, delet\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"venicephua"},"content":"        \"false, brother\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"venicephua"},"content":"        \"false, 321\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"venicephua"},"content":"        \"false, fooaddfoo\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"venicephua"},"content":"        \"false, baraveragebar\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_unknownTopic_returnsError(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"venicephua"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d helpCommand.execute(input);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"venicephua"},"content":"        String expectedMessage \u003d MessageDisplayer.HELP_UNKNOWN_TOPIC;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandErrorMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"venicephua"},"content":"     * Tests the description of help command.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"venicephua"},"content":"     * Verifies the command returns the correct description.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"venicephua"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"venicephua"},"content":"    public void testHelpCommand_getDescription_success(boolean isRecurring) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"venicephua"},"content":"        HelpCommand command \u003d new HelpCommand(isRecurring);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"randust"},"content":"        String expectedDescription \u003d \"\"\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"randust"},"content":"            Format: /help [COMMAND]","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"venicephua"},"content":"            Displays help message for all commands.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"venicephua"},"content":"            Optionally pass a keyword to show usage for a specific command.\"\"\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"venicephua"},"content":"        assertEquals(expectedDescription, command.getDescription(),","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"venicephua"},"content":"                MessageDisplayer.ASSERT_COMMAND_EXPECTED_OUTPUT + MessageDisplayer.ASSERT_GET_DESC);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"edwardrl101":12,"randust":5,"venicephua":575,"Charly2312":75}},{"path":"src/test/java/fintrek/command/list/ListCategoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"package fintrek.command.list;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.core.CategoryManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"szeyingg"},"content":"public class ListCategoryCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"    private static final String DEFAULT_CATEGORIES \u003d","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"            \"ENTERTAINMENT, FOOD, GIFTS, HEALTH, TRANSPORT, UNCATEGORIZED, UTILITIES\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"szeyingg"},"content":"     * Clear all existing custom categories in CategoryManager and adds one new custom category before each test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"szeyingg"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"        CategoryManager.clearCustomCategories();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"     * Tests ListCategoryCommand for default list only","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"     * Verifies correct default list and empty custom list displayed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"szeyingg"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"    public void testListCategoryCommand_noCustom_success() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"szeyingg"},"content":"        ListCategoryCommand listCategoryCommand \u003d new ListCategoryCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d listCategoryCommand.execute(\"\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"        String message \u003d String.format(MessageDisplayer.LIST_CATEGORIES_MESSAGE_TEMPLATE, DEFAULT_CATEGORIES, \"\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandSuccess(result, MessageDisplayer.ASSERT_DEFAULT_CATEGORIES);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_DEFAULT_CATEGORIES, message);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"szeyingg"},"content":"     * Tests ListCategoryCommand for default list only","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"     * Verifies correct default list and empty custom list displayed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"    public void testListCategoryCommand_withCustom_success() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"        ListCategoryCommand listCategoryCommand \u003d new ListCategoryCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"        CategoryManager.addCustomCategory(\"new\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"szeyingg"},"content":"        CommandResult result \u003d listCategoryCommand.execute(\"\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"venicephua"},"content":"        String message \u003d String.format(MessageDisplayer.LIST_CATEGORIES_MESSAGE_TEMPLATE, DEFAULT_CATEGORIES, \"NEW\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandSuccess(result, MessageDisplayer.ASSERT_CUSTOM_CATEGORIES);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_CUSTOM_CATEGORIES, message);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"szeyingg":47,"venicephua":4}},{"path":"src/test/java/fintrek/command/list/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.list;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":" * Unit tests for the {@code ListCommand} class.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":" * Ensures that the list of expense is correctly displayed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"public class ListCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"     * Clear all existing expenses in RegularExpenseManager and RecurringExpenseManager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"        TestUtils.regularService.clearExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"        TestUtils.recurringService.clearExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"     * Tests list command with empty ArrayList.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"     * Verifies the command returns a successful CommandResult with the correct empty list message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"    public void testListCommand_emptyList_success(boolean isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"        ListCommand command \u003d new ListCommand(isRecurring);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d command.execute(\"\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.LIST_RECURRING_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"                    TestUtils.recurringReporter.listExpenses());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.LIST_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"                    TestUtils.regularReporter.listExpenses());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, MessageDisplayer.ASSERT_EMPTY_LIST);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_EMPTY_LIST, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"venicephua"},"content":"     * Tests list command with list of predefined expenses.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"     * Verifies the command returns a successful CommandResult with the correct list of expenses.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"venicephua"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"venicephua"},"content":"    public void testListCommand_filledList_success(boolean isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"venicephua"},"content":"            TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"venicephua"},"content":"            TestUtils.addConstantExpenses();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"venicephua"},"content":"        ListCommand command \u003d new ListCommand(isRecurring);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d command.execute(\"\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"venicephua"},"content":"      ","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Charly2312"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.LIST_RECURRING_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"venicephua"},"content":"                    TestUtils.recurringReporter.listExpenses());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.LIST_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"venicephua"},"content":"                    TestUtils.regularReporter.listExpenses());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, MessageDisplayer.ASSERT_FILLED_LIST);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_FILLED_LIST, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"venicephua"},"content":"     * Tests the description of list command.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"venicephua"},"content":"     * Verifies the command returns the correct description.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"venicephua"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"venicephua"},"content":"    public void testListCommand_getDescription_success(boolean isRecurring) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"venicephua"},"content":"        ListCommand command \u003d new ListCommand(isRecurring);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"venicephua"},"content":"        String expectedDescription;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"venicephua"},"content":"            expectedDescription \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"venicephua"},"content":"                Format: /list-recurring","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"venicephua"},"content":"                Lists all recorded recurring expenses.\"\"\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"venicephua"},"content":"            expectedDescription \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"venicephua"},"content":"                Format: /list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"venicephua"},"content":"                Lists all recorded expenses.\"\"\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"venicephua"},"content":"        assertEquals(expectedDescription, command.getDescription(),","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"venicephua"},"content":"                MessageDisplayer.ASSERT_COMMAND_EXPECTED_OUTPUT + MessageDisplayer.ASSERT_GET_DESC);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"randust":3,"venicephua":96,"Charly2312":2}},{"path":"src/test/java/fintrek/command/sort/ListSortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"szeyingg"},"content":"package fintrek.command.sort;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"szeyingg"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.service.ExpenseService;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"szeyingg"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"szeyingg"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.params.provider.CsvSource;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"import static fintrek.expense.service.AppServices.RECURRING_SERVICE;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"szeyingg"},"content":"import static fintrek.expense.service.AppServices.REGULAR_SERVICE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"public class ListSortCommandTest {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"    private static final String COMMAND_NAME \u003d \"sort\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"     * Clear all existing expenses in ExpenseManager before each test.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"        TestUtils.regularService.clearExpenses();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"        TestUtils.recurringService.clearExpenses();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Charly2312"},"content":"        TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that attempting to call the sort command with valid inputs","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"     * consisting of valid sort fields, sort directions, and isRecurring status works.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"     * @param input String containing valid sort field and valid sort direction.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"     * @param isRecurring Boolean value representing whether the expense is recurring.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"szeyingg"},"content":"        \"name asc, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"szeyingg"},"content":"        \"amount    dsc, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"szeyingg"},"content":"        \"date asc, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"szeyingg"},"content":"        \"name asc, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"szeyingg"},"content":"        \"amount    dsc, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"szeyingg"},"content":"        \"date asc, true\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"    })","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"venicephua"},"content":"    public void testListSortCommandValidInput(String input, boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"venicephua"},"content":"        ListSortCommand listSortCommand \u003d new ListSortCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Charly2312"},"content":"        ExpenseService service;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Charly2312"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Charly2312"},"content":"            service \u003d RECURRING_SERVICE;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Charly2312"},"content":"        } else {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Charly2312"},"content":"            service \u003d REGULAR_SERVICE;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Charly2312"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"szeyingg"},"content":"        int initialSize \u003d service.countExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d listSortCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCorrectListSize(initialSize, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that attempting to invoke the sort command with an empty sort field","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"     * or empty sort direction results in failure and will print the appropriate error","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"     * message for both recurring and regular expenses.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"edwardrl101"},"content":"     * @param input String with either the sort field or sort direction left empty.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"edwardrl101"},"content":"     * @param isRecurring Boolean value which indicates if the expense is recurring.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Charly2312"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Charly2312"},"content":"        \"name  , true\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"szeyingg"},"content":"        \"   dsc, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Charly2312"},"content":"        \"date , true\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Charly2312"},"content":"        \"name  , false\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"szeyingg"},"content":"        \"   dsc, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Charly2312"},"content":"        \"date , false\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Charly2312"},"content":"    })","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"venicephua"},"content":"    public void testListSortCommand_emptySortFieldOrDirection_fail(String input, boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"venicephua"},"content":"        ListSortCommand listSortCommand \u003d new ListSortCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d listSortCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandMessage(result, input,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"szeyingg"},"content":"                String.format(MessageDisplayer.INVALID_FORMAT_MESSAGE_TEMPLATE, COMMAND_NAME));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that attempting to invoke the sort command with an invalid","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"edwardrl101"},"content":"     * sort field fails and will print the appropriate error message for both","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"edwardrl101"},"content":"     * recurring and regular expenses.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"edwardrl101"},"content":"     * @param input String containing an invalid sort field.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"edwardrl101"},"content":"     * @param isRecurring Boolean value which states if the expense is recurring.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Charly2312"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Charly2312"},"content":"        \"ediwfo, true\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Charly2312"},"content":"        \"  amt  , true\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"szeyingg"},"content":"        \"asc, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Charly2312"},"content":"        \"ediwfo, false\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Charly2312"},"content":"        \"  amt  , false\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"szeyingg"},"content":"        \"asc, false\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Charly2312"},"content":"    })","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"venicephua"},"content":"    public void testListSortCommand_invalidSortField_fail(String input, boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"venicephua"},"content":"        ListSortCommand listSortCommand \u003d new ListSortCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d listSortCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"szeyingg"},"content":"        String expectedMessage \u003d String.format(MessageDisplayer.INVALID_FORMAT_MESSAGE_TEMPLATE, COMMAND_NAME);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that attempting to sort with an empty sort field and empty sort direction","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"edwardrl101"},"content":"     * results in failure and will print the appropriate error message for both recurring","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"edwardrl101"},"content":"     * and regular expenses.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"edwardrl101"},"content":"     * @param input String containing no sort field or sort direction","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"szeyingg"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"szeyingg"},"content":"        \",true\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"szeyingg"},"content":"        \"     ,true\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"szeyingg"},"content":"        \",false\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"szeyingg"},"content":"        \"     ,false\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"szeyingg"},"content":"    })","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"venicephua"},"content":"    public void testListSortCommand_emptySortField_fail(String input) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"venicephua"},"content":"        ListSortCommand listSortCommand \u003d new ListSortCommand(false);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d listSortCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"szeyingg"},"content":"        String expectedMessage \u003d String.format(MessageDisplayer.ARG_EMPTY_MESSAGE_TEMPLATE, COMMAND_NAME);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that calling the sort command with an invalid sort direction","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"edwardrl101"},"content":"     * will result in failure and will print the appropriate error message for both","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"edwardrl101"},"content":"     * recurring and regular expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"edwardrl101"},"content":"     * @param input String containing a valid sort field with an invalid sort direction.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"edwardrl101"},"content":"     * @param isRecurring Boolean value which states if the expense is recurring.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"szeyingg"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Charly2312"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"szeyingg"},"content":"        \"name ascs, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"szeyingg"},"content":"        \"  amount    desc, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Charly2312"},"content":"        \"date fjeirjf, true\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"szeyingg"},"content":"        \"name ascs, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"szeyingg"},"content":"        \"  amount    desc, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Charly2312"},"content":"        \"date fjeirjf, false\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Charly2312"},"content":"    })","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"venicephua"},"content":"    public void testListSortCommand_invalidSortDirection_fail(String input, boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"venicephua"},"content":"        ListSortCommand listSortCommand \u003d new ListSortCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d listSortCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, input, MessageDisplayer.INVALID_SORT_DIRECTION);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"edwardrl101"},"content":"     * Tests the description of the list-sort command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"edwardrl101"},"content":"     * Verifies the command returns the correct description.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"venicephua"},"content":"    public void testListSortCommand_getDescription_success(boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"venicephua"},"content":"        ListSortCommand  listSortCommand \u003d new ListSortCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"edwardrl101"},"content":"        String formatString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"venicephua"},"content":"        String exampleString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"edwardrl101"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"venicephua"},"content":"            formatString \u003d \"Format: /list-sort-recurring \u003cSORT FIELD\u003e \u003cSORT DIRECTION\u003e\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"venicephua"},"content":"            exampleString \u003d \"Example: /list-sort-recurring name asc - \" +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"venicephua"},"content":"                    \"prints sorted recurring list in ascending alphabetical order.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"venicephua"},"content":"            formatString \u003d \"Format: /list-sort \u003cSORT FIELD\u003e \u003cSORT DIRECTION\u003e\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"venicephua"},"content":"            exampleString \u003d \"Example: /list-sort name asc - \" +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"venicephua"},"content":"                    \"prints regular sorted list in ascending alphabetical order.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"edwardrl101"},"content":"        String expectedDescription \u003d formatString + \"\\n\" +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"edwardrl101"},"content":"                \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"edwardrl101"},"content":"                SORT FIELD valid inputs: name, amount, category, date","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"edwardrl101"},"content":"                SORT DIRECTION valid inputs: asc, dsc","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"venicephua"},"content":"                \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"venicephua"},"content":"                + exampleString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"venicephua"},"content":"        assertEquals(expectedDescription, listSortCommand.getDescription(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"edwardrl101"},"content":"                MessageDisplayer.ASSERT_COMMAND_EXPECTED_OUTPUT + MessageDisplayer.ASSERT_GET_DESC);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"szeyingg"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"edwardrl101":43,"szeyingg":84,"Charly2312":30,"venicephua":28}},{"path":"src/test/java/fintrek/command/summary/AverageCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.summary;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"edwardrl101"},"content":"import fintrek.expense.core.RecurringExpenseManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"szeyingg"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.provider.CsvSource;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"edwardrl101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"public class AverageCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"     * Clear all existing expenses in RegularExpenseManager and RecurringExpenseManager before each test.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":"        RegularExpenseManager.getInstance().clear();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"        RecurringExpenseManager.getInstance().clear();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that executing the average command with any input parameters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"     * on an empty list of regular expenses or recurring expenses returns the correct","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"     * average amount of 0.0 and prints the appropriate success message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"     *","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"        \", true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"        \", false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"        \"                           , true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"        \"                           , false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"        \"hello!, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"        \"hello!, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"        \"CS2113                ,true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"        \"CS2113                ,false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"        \"                 Hi, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"        \"                 Hi, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"        \"  $50 04-03-2025, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"        \"  $50 04-03-2025, false\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"    })","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"venicephua"},"content":"    public void testAverageCommand_emptyListAnyParams_success(String input, boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"        AverageCommand averageCommand \u003d new AverageCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d averageCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"        if(isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.AVERAGE_RECURRING_SUCCESS_MESSAGE_TEMPLATE","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"                    , 0.0);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.AVERAGE_SUCCESS_MESSAGE_TEMPLATE","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"                    , 0.0);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandSuccess(result, MessageDisplayer.ASSERT_EMPTY_LIST);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_EMPTY_LIST, expectedMessage);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that invoking the average command on a filled list of regular expenses","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"edwardrl101"},"content":"     * or recurring expenses with any input parameters returns the correct average amount","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"edwardrl101"},"content":"     * and prints the correct success message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"edwardrl101"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"edwardrl101"},"content":"        \", true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"edwardrl101"},"content":"        \", false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"edwardrl101"},"content":"        \"                           , true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"edwardrl101"},"content":"        \"                           , false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"edwardrl101"},"content":"        \"hi!, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"edwardrl101"},"content":"        \"hi!, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"edwardrl101"},"content":"        \"CS2113                , false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"edwardrl101"},"content":"        \"CS2113                , true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"edwardrl101"},"content":"        \"                 Hello, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"edwardrl101"},"content":"        \"                 Hello, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"edwardrl101"},"content":"    })","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"venicephua"},"content":"    public void testAverageCommand_filledListAnyParams_success(String input, boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"szeyingg"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"edwardrl101"},"content":"        AverageCommand averageCommand \u003d new AverageCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d averageCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"edwardrl101"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"edwardrl101"},"content":"        double expectedAverage;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"edwardrl101"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"edwardrl101"},"content":"            expectedAverage \u003d TestUtils.recurringReporter.getAverage();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"edwardrl101"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.AVERAGE_RECURRING_SUCCESS_MESSAGE_TEMPLATE","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"edwardrl101"},"content":"                    ,expectedAverage);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"edwardrl101"},"content":"            expectedAverage \u003d TestUtils.regularReporter.getAverage();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"edwardrl101"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.AVERAGE_SUCCESS_MESSAGE_TEMPLATE, expectedAverage);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandSuccess(result, MessageDisplayer.ASSERT_FILLED_LIST);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"szeyingg"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_FILLED_LIST, expectedMessage);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"edwardrl101"},"content":"     * Tests the description of the average command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"edwardrl101"},"content":"     * Ensures the command returns the correct description.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"edwardrl101"},"content":"    public void testAverageCommand_getDescription_success(boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"edwardrl101"},"content":"        AverageCommand averageCommand \u003d new AverageCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"edwardrl101"},"content":"        String formatString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"venicephua"},"content":"        String exampleString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"edwardrl101"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"edwardrl101"},"content":"            formatString \u003d \"Format: /average-recurring\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"venicephua"},"content":"            exampleString \u003d \"/average-recurring returns (TransportExpense1 + TransportExpense2 + FoodExpense1) / 3.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"edwardrl101"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"edwardrl101"},"content":"            formatString \u003d \"Format: /average\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"venicephua"},"content":"            exampleString \u003d \"/average returns (TransportExpense1 + TransportExpense2 + FoodExpense1) / 3.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"edwardrl101"},"content":"        String expectedDescription \u003d formatString + \"\\n\" +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"edwardrl101"},"content":"                \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"edwardrl101"},"content":"                Returns average of all expenses in list, but will return 0 if the list is empty.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"edwardrl101"},"content":"                Example: For a list of expenses: TransportExpense1, TransportExpense2, FoodExpense1","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"venicephua"},"content":"                \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"venicephua"},"content":"                + exampleString;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"edwardrl101"},"content":"        assertEquals(expectedDescription, averageCommand.getDescription(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"edwardrl101"},"content":"                MessageDisplayer.ASSERT_COMMAND_EXPECTED_OUTPUT + MessageDisplayer.ASSERT_GET_DESC);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that attempting to calculate the average amount spent out of","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"edwardrl101"},"content":"     * a list of expenses whose total amount exceeds $10 billion returns an error message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"edwardrl101"},"content":"     * @param isRecurring a boolean value indicating if the expense is recurring.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"edwardrl101"},"content":"    public void testAverageCommand_expensiveFilledList_returnsError(boolean isRecurring) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.addHugeConstantExpenses();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.addHugeConstantRecurringExpenses();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"edwardrl101"},"content":"        AverageCommand command \u003d new AverageCommand(isRecurring);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d command.execute(\"\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_FILLED_LIST,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"edwardrl101"},"content":"                MessageDisplayer.ERROR_CALCULATING_AVERAGE_EXPENSES +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"edwardrl101"},"content":"                        MessageDisplayer.TOTAL_EXCEEDS_LIMIT_MSG);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandFailure(result, MessageDisplayer.ASSERT_FILLED_LIST);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"edwardrl101":112,"szeyingg":16,"randust":3,"venicephua":19}},{"path":"src/test/java/fintrek/command/summary/SummaryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"venicephua"},"content":"package fintrek.command.summary;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"venicephua"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.params.provider.CsvSource;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"import java.util.Map;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":" * Unit tests for the {@code SummaryCommand} class.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":" * Ensures that the summary information about the expenses is correctly displayed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"public class SummaryCommandTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"     * Clear all existing expenses in RegularExpenseManager and RecurringExpenseManager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"        TestUtils.regularService.clearExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"        TestUtils.recurringService.clearExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"     * Tests summary command execution in general with empty expense lists.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"     * Verifies that executing the summary command on an empty list of expenses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"     * returns a success result with the appropriate empty list message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"    public void testSummaryCommand_generalExpensesEmptyList_success(boolean isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand(isRecurring);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d summaryCommand.execute(\"\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Charly2312"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Charly2312"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.LIST_SUMMARY_RECURRING_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"venicephua"},"content":"                    MessageDisplayer.EMPTY_LIST_MESSAGE);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Charly2312"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Charly2312"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.LIST_SUMMARY_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Charly2312"},"content":"                    MessageDisplayer.EMPTY_LIST_MESSAGE);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Charly2312"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, MessageDisplayer.ASSERT_EMPTY_LIST);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_EMPTY_LIST, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"venicephua"},"content":"     * Tests summary command execution for a specific category with empty expense lists.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"venicephua"},"content":"     * Verifies that attempting to get a summary for a specific category when the list is empty","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"venicephua"},"content":"     * returns an error result with the appropriate category not found message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"venicephua"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"venicephua"},"content":"     * @param input The category name to search for in the summary","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"venicephua"},"content":"        \"true, food\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"venicephua"},"content":"        \"true, transport\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"venicephua"},"content":"        \"true, shopping\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"venicephua"},"content":"        \"true, foo\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"venicephua"},"content":"        \"false, food\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"venicephua"},"content":"        \"false, transport\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"venicephua"},"content":"        \"false, shopping\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"venicephua"},"content":"        \"false, foo\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"venicephua"},"content":"    public void testSummaryCommand_singleCategoryExpensesEmptyList_returnsError(boolean isRecurring, String input) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"venicephua"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand(isRecurring);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d summaryCommand.execute(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"venicephua"},"content":"        String expectedMessage \u003d MessageDisplayer.ERROR_LOADING_SUMMARY + MessageDisplayer.CATEGORY_NOT_FOUND;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandErrorMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"venicephua"},"content":"     * Tests summary command execution with list of predefined expenses.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"venicephua"},"content":"     * Verifies that executing the summary command on a populated list of expenses","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"venicephua"},"content":"     * returns a success result with the appropriate summary of all category totals.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"venicephua"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"venicephua"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"venicephua"},"content":"    public void testSummaryCommand_generalExpensesFilledList_success(boolean isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"venicephua"},"content":"            TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"venicephua"},"content":"            TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"venicephua"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand(isRecurring);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d summaryCommand.execute(\"\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"venicephua"},"content":"        Map\u003cString, Double\u003e categoryTotals;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"venicephua"},"content":"            categoryTotals \u003d TestUtils.recurringReporter.getTotalByCategory();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Charly2312"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.LIST_SUMMARY_RECURRING_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"venicephua"},"content":"                    TestUtils.recurringReporter.listAllCategoryTotals(categoryTotals));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"venicephua"},"content":"            categoryTotals \u003d TestUtils.regularReporter.getTotalByCategory();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.LIST_SUMMARY_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"venicephua"},"content":"                    TestUtils.regularReporter.listAllCategoryTotals(categoryTotals));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, MessageDisplayer.ASSERT_FILLED_LIST);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_FILLED_LIST, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"venicephua"},"content":"     * Tests summary command execution for a valid specific category with list of predefined expenses.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"venicephua"},"content":"     * Verifies that requesting a summary for a valid category when the list is populated","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"venicephua"},"content":"     * returns a success result with the appropriate category total.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"venicephua"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"venicephua"},"content":"     * @param input The valid category name to search for in the summary","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"venicephua"},"content":"        \"true, food\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"venicephua"},"content":"        \"true, transport\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"venicephua"},"content":"        \"true, entertainment\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"venicephua"},"content":"        \"false, food\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"venicephua"},"content":"        \"false, transport\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"venicephua"},"content":"        \"false, entertainment\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"venicephua"},"content":"    public void testSummaryCommand_singleCategoryExpensesFilledList_validInput(boolean isRecurring,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"venicephua"},"content":"                                                                                       String input) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"venicephua"},"content":"            TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"venicephua"},"content":"            TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"venicephua"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand(isRecurring);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d summaryCommand.execute(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"venicephua"},"content":"        Map\u003cString, Double\u003e categoryTotals;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"venicephua"},"content":"        String expectedMessage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"venicephua"},"content":"            categoryTotals \u003d TestUtils.recurringReporter.getTotalByCategory();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Charly2312"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.LIST_SUMMARY_RECURRING_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"venicephua"},"content":"                    TestUtils.recurringReporter.listSingleCategoryTotal(categoryTotals, input.toUpperCase()));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"venicephua"},"content":"            categoryTotals \u003d TestUtils.regularReporter.getTotalByCategory();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"venicephua"},"content":"            expectedMessage \u003d String.format(MessageDisplayer.LIST_SUMMARY_SUCCESS_MESSAGE_TEMPLATE,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"venicephua"},"content":"                    TestUtils.regularReporter.listSingleCategoryTotal(categoryTotals, input.toUpperCase()));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, MessageDisplayer.ASSERT_FILLED_LIST);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_FILLED_LIST, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"venicephua"},"content":"     * Tests summary command execution for an invalid specific category with list of predefined expenses.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"venicephua"},"content":"     * Verifies that requesting a summary for an invalid category when the list is populated","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"venicephua"},"content":"     * returns an error result with the appropriate category not found message.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"venicephua"},"content":"     *","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"venicephua"},"content":"     * @param isRecurring Whether to test with recurring expenses (true) or regular expenses (false)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"venicephua"},"content":"     * @param input The invalid category name to search for in the summary","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"venicephua"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"venicephua"},"content":"        \"true, foo\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"venicephua"},"content":"        \"true, transp\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"venicephua"},"content":"        \"true, shopping\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"venicephua"},"content":"        \"false, foo\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"venicephua"},"content":"        \"false, transp\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"venicephua"},"content":"        \"false, shopping\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"venicephua"},"content":"    })","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"venicephua"},"content":"    public void testSummaryCommand_singleCategoryExpensesFilledList_invalidInput(boolean isRecurring,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"venicephua"},"content":"                                                                                              String input) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"venicephua"},"content":"            TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"venicephua"},"content":"            TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"venicephua"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand(isRecurring);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"venicephua"},"content":"        CommandResult result \u003d summaryCommand.execute(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"venicephua"},"content":"        String expectedMessage \u003d MessageDisplayer.ERROR_LOADING_SUMMARY + MessageDisplayer.CATEGORY_NOT_FOUND;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandErrorMessage(result, input, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"venicephua"},"content":"     * Tests the description of summary command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"venicephua"},"content":"     * Verifies the command returns the correct description.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"venicephua"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"venicephua"},"content":"    public void testSummaryCommand_getDescription_success(boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"venicephua"},"content":"        SummaryCommand command \u003d new SummaryCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"venicephua"},"content":"        String expectedDescription;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"venicephua"},"content":"            expectedDescription \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"venicephua"},"content":"                Format: /summary-recurring [CATEGORY]","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"venicephua"},"content":"                Returns a summary of the total spending in each category.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"venicephua"},"content":"                Optionally pass a keyword to show the total spending and expenses in that category.\"\"\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"venicephua"},"content":"            expectedDescription \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"venicephua"},"content":"                Format: /summary [CATEGORY]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"venicephua"},"content":"                Returns a summary of the total spending in each category.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"venicephua"},"content":"                Optionally pass a keyword to show the total spending and expenses in that category.\"\"\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"venicephua"},"content":"        assertEquals(expectedDescription, command.getDescription(),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"venicephua"},"content":"                MessageDisplayer.ASSERT_COMMAND_EXPECTED_OUTPUT + MessageDisplayer.ASSERT_GET_DESC);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"venicephua":211,"Charly2312":10}},{"path":"src/test/java/fintrek/command/summary/TotalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.command.summary;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.provider.CsvSource;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"/**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":" * Unit tests for the {@code TotalCommand} class.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":" * Ensures that the total expense amount is correctly calculated and returned.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":" */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"public class TotalCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"     * Clear all existing expenses in RegularExpenseManager and RecurringExpenseManager before each test.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"venicephua"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"venicephua"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"        TestUtils.regularService.clearExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"        TestUtils.recurringService.clearExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that executing the average command with any input parameters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"edwardrl101"},"content":"     * on an empty list of regular expenses or recurring expenses returns the correct","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"     * average amount of 0.0 and prints the appropriate success message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"        \", true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"        \", false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"        \"             , true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"        \"             , false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"        \"hello world!, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"        \"hello world!, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"        \"CS2113      ,true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"        \"CS2113      ,false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"        \"          FinTrek, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"        \"          FinTrek, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"        \"  /help total, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"        \"  /help total, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"    })","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"venicephua"},"content":"    public void testTotalCommand_emptyListAnyParams_success(String input, boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"venicephua"},"content":"        TotalCommand totalCommand \u003d new TotalCommand(isRecurring);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d totalCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"venicephua"},"content":"        String expectedMessage \u003d String.format(MessageDisplayer.TOTAL_SUCCESS_MESSAGE_TEMPLATE, 0.0);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, MessageDisplayer.ASSERT_EMPTY_LIST);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_EMPTY_LIST, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that executing the average command with any input parameters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"     * on an empty list of regular expenses or recurring expenses returns the correct","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"edwardrl101"},"content":"     * average amount of 0.0 and prints the appropriate success message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"    @CsvSource({","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"edwardrl101"},"content":"        \", true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"edwardrl101"},"content":"        \", false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"edwardrl101"},"content":"        \"             , true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"edwardrl101"},"content":"        \"             , false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"edwardrl101"},"content":"        \"hello world!, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"edwardrl101"},"content":"        \"hello world!, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"edwardrl101"},"content":"        \"CS2113      ,true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"edwardrl101"},"content":"        \"CS2113      ,false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"edwardrl101"},"content":"        \"          FinTrek, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"edwardrl101"},"content":"        \"          FinTrek, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"edwardrl101"},"content":"        \"  /help total, true\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"edwardrl101"},"content":"        \"  /help total, false\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"edwardrl101"},"content":"    })","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"edwardrl101"},"content":"    public void testTotalCommand_filledList_success(String input, boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"venicephua"},"content":"        TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"venicephua"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"venicephua"},"content":"        double expectedTotal;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"venicephua"},"content":"            expectedTotal \u003d TestUtils.recurringReporter.getTotal();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"venicephua"},"content":"            expectedTotal \u003d TestUtils.regularReporter.getTotal();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"edwardrl101"},"content":"        TotalCommand totalCommand \u003d new TotalCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d totalCommand.execute(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"venicephua"},"content":"        String expectedMessage \u003d String.format(MessageDisplayer.TOTAL_SUCCESS_MESSAGE_TEMPLATE, expectedTotal);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandSuccess(result, MessageDisplayer.ASSERT_FILLED_LIST);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"venicephua"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_FILLED_LIST, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"szeyingg"},"content":"     * Verifies that total command fails when expense list contains one expense with an amount exceeding limits.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"szeyingg"},"content":"     * Checks that error message is printed as expected.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"szeyingg"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"szeyingg"},"content":"     * @param isRecurring boolean that indicates if total command is executed on regular or recurring expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"edwardrl101"},"content":"    public void testTotalCommand_expensiveFilledList_returnsError(boolean isRecurring) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.addHugeConstantExpenses();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.addHugeConstantRecurringExpenses();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"edwardrl101"},"content":"        TotalCommand command \u003d new TotalCommand(isRecurring);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"edwardrl101"},"content":"        CommandResult result \u003d command.execute(\"\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandFailure(result, MessageDisplayer.ASSERT_FILLED_LIST);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"edwardrl101"},"content":"        TestUtils.assertCommandMessage(result, MessageDisplayer.ASSERT_FILLED_LIST,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"edwardrl101"},"content":"                MessageDisplayer.ERROR_CALCULATING_TOTAL_EXPENSES +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"edwardrl101"},"content":"                        MessageDisplayer.TOTAL_EXCEEDS_LIMIT_MSG);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"venicephua"},"content":"     * Tests the description of total command.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"venicephua"},"content":"     * Ensures the command returns the correct description.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"venicephua"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"venicephua"},"content":"    @ValueSource(booleans \u003d {true, false})","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"venicephua"},"content":"    public void testTotalCommand_getDescription_success(boolean isRecurring) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"venicephua"},"content":"        TotalCommand command \u003d new TotalCommand(isRecurring);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"venicephua"},"content":"        String expectedDescription;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"venicephua"},"content":"        if (isRecurring) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"venicephua"},"content":"            expectedDescription \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"venicephua"},"content":"                Format: /total-recurring","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"venicephua"},"content":"                Returns sum of all expenses in the list, but will return 0 if the list is empty.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"venicephua"},"content":"                Example: For a list of expenses: TransportExpense1, TransportExpense2, FoodExpense1","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"venicephua"},"content":"                /total-recurring returns (TransportExpense1 + TransportExpense2 + FoodExpense1).\"\"\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"venicephua"},"content":"        } else {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"venicephua"},"content":"            expectedDescription \u003d \"\"\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"venicephua"},"content":"                Format: /total","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"venicephua"},"content":"                Returns sum of all expenses in the list, but will return 0 if the list is empty.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"venicephua"},"content":"                Example: For a list of expenses: TransportExpense1, TransportExpense2, FoodExpense1","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"venicephua"},"content":"                /total returns (TransportExpense1 + TransportExpense2 + FoodExpense1).\"\"\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"venicephua"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"venicephua"},"content":"        assertEquals(expectedDescription, command.getDescription(),","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"venicephua"},"content":"                MessageDisplayer.ASSERT_COMMAND_EXPECTED_OUTPUT + MessageDisplayer.ASSERT_GET_DESC);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"edwardrl101":55,"szeyingg":6,"randust":3,"venicephua":80}},{"path":"src/test/java/fintrek/expense/core/ExpenseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.expense.core;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.add.AddCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"import fintrek.util.RecurringExpenseProcessor;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.provider.CsvSource;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"edwardrl101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"edwardrl101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"edwardrl101"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"edwardrl101"},"content":"class ExpenseTest {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"edwardrl101"},"content":"    private static final RegularExpenseManager regularExpenseManager \u003d","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"            RegularExpenseManager.getInstance();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"    private static final RecurringExpenseManager recurringExpenseManager \u003d","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"            RecurringExpenseManager.getInstance();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Charly2312"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Charly2312"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"        regularExpenseManager.clear();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"edwardrl101"},"content":"        recurringExpenseManager.clear();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that the getter in the Expense class for the expense description works.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"edwardrl101"},"content":"     * @param description a valid description for the expense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(strings \u003d {\"mrt\", \"eat\", \"laptop for CS2113\", \"123\"})","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"    public void testGetValidExpensesDescription(String description) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"        Expense expense \u003d new Expense(description, 10.0,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"                \"uncategorized\", LocalDate.now()); // Dummy amount \u0026 category","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"edwardrl101"},"content":"        assertEquals(description, expense.getDescription());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that the getter in the Expense class for the expense category works.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"edwardrl101"},"content":"     * @param category a valid category for the expense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(strings \u003d {\"Studies\", \"Food\", \"baaaaaa\", \"Computer Science\", \"transport\"})","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"    public void testGetValidExpensesCategory(String category) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"        Expense expense \u003d new Expense(\"for testing\", 10.0,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"                category, LocalDate.now()); // Dummy amount \u0026 category","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"        assertEquals(category.toUpperCase(), expense.getCategory());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that the getter in the Expense class for the expense amount works.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"edwardrl101"},"content":"     * @param amount a valid description for the expense","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"edwardrl101"},"content":"    @ValueSource(doubles \u003d {0.50, 1.50, 2.50, 12.50, 250.00 })","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"edwardrl101"},"content":"    public void testGetValidExpensesAmount(double amount) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"edwardrl101"},"content":"        Expense expense \u003d new Expense(\"for testing\", amount,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"edwardrl101"},"content":"                \"uncategorized\", LocalDate.now()); // Dummy amount \u0026 category","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"edwardrl101"},"content":"        assertEquals(amount, expense.getAmount());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"edwardrl101"},"content":"     * Tests whether inputting zero or negative amounts for expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"edwardrl101"},"content":"     * results in an exception being thrown","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"edwardrl101"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"edwardrl101"},"content":"    @CsvSource({","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"edwardrl101"},"content":"        \"\u0027gift from friend\u0027, -5.0, \u0027gifts\u0027\",","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"edwardrl101"},"content":"        \"\u0027just nothing\u0027, 0.0, \u0027uncategorized\u0027\",","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"edwardrl101"},"content":"        \"\u0027monthly allowance\u0027, -750.0, \u0027allowance\u0027\",","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"edwardrl101"},"content":"        \"\u0027salary\u0027, -1250, \u0027salary\u0027\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"edwardrl101"},"content":"    })","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"edwardrl101"},"content":"    public void testSetInvalidExpensesAmount_returnsError(String description, double amount, String category) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"edwardrl101"},"content":"        IllegalArgumentException exception \u003d assertThrows(","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"edwardrl101"},"content":"                IllegalArgumentException.class,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"edwardrl101"},"content":"                () -\u003e new Expense(description, amount, category, LocalDate.now())","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"edwardrl101"},"content":"        );","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Charly2312"},"content":"        assertEquals(MessageDisplayer.INVALID_AMOUNT, exception.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"edwardrl101"},"content":"     * Tests whether the toString() method for the Expense class","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"edwardrl101"},"content":"     * effectively converts it to a string format of form","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"edwardrl101"},"content":"     * \"{description} | ${amount} | {category} | {date}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"edwardrl101"},"content":"     * where the date format is \"dd-MM-yyyy\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"edwardrl101"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"edwardrl101"},"content":"    public void testExpensesToStringConversion() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"edwardrl101"},"content":"        String dateToday \u003d \"02-04-2025\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"edwardrl101"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"edwardrl101"},"content":"        LocalDate date \u003d LocalDate.parse(dateToday, formatter);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"edwardrl101"},"content":"        assertEquals(\"eat | $10.00 | FOOD | \" + dateToday,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"edwardrl101"},"content":"                new Expense(\"eat\", 10.0, \"food\", date).toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"edwardrl101"},"content":"        assertEquals(\"mrt | $2.30 | TRANSPORT | \" + dateToday,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"edwardrl101"},"content":"                new Expense(\"mrt\", 2.30, \"transport\", date).toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"edwardrl101"},"content":"        assertEquals(\"dinner | $15.90 | FOOD | \" + dateToday,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"edwardrl101"},"content":"                new Expense(\"dinner\", 15.90, \"food\", date).toString());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that a recurring expense will not be added into the main","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"edwardrl101"},"content":"     * list of expenses if the date on the expense is still beyond today\u0027s date.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Charly2312"},"content":"    public void checkRecurringExpenseTest_existingRecurringAfterTodayDate_success() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Charly2312"},"content":"        int month \u003d LocalDate.now().getMonthValue();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Charly2312"},"content":"        int day \u003d LocalDate.now().getDayOfMonth();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Charly2312"},"content":"        String oldDate \u003d (day + 1) + \"-\" + (month + 1) +\"-2025\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Charly2312"},"content":"        AddCommand addCommand \u003d new AddCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"szeyingg"},"content":"        String input \u003d \"Spotify $9.99 /c entertainment /dt \" + oldDate;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandFailure(result, input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"edwardrl101"},"content":"        RecurringExpenseProcessor.checkAndInsertDueExpenses(recurringExpenseManager,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"edwardrl101"},"content":"                regularExpenseManager);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCorrectListSize(0, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"edwardrl101"},"content":"     * Verifies if a recurring expense will be added into the main list of","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"edwardrl101"},"content":"     * expenses if the date on the recurring expense matches today\u0027s date.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Charly2312"},"content":"    public void checkRecurringExpenseTest_existingRecurringMatchingDate_success() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Charly2312"},"content":"        String oldDate \u003d \"01-01-2025\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Charly2312"},"content":"        AddCommand addCommand \u003d new AddCommand(true);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"szeyingg"},"content":"        String input \u003d \"Spotify $9.99 /c entertainment /dt \" + oldDate;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Charly2312"},"content":"        LocalDate dateToday \u003d LocalDate.now();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Charly2312"},"content":"        CommandResult result \u003d addCommand.execute(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCommandSuccess(result, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Charly2312"},"content":"        RecurringExpenseManager.getInstance().get(0).updateDate(dateToday);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Charly2312"},"content":"        RecurringExpenseProcessor.checkAndInsertDueExpenses(RecurringExpenseManager.getInstance(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Charly2312"},"content":"                RegularExpenseManager.getInstance());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Charly2312"},"content":"        TestUtils.assertCorrectListSize(1, input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"edwardrl101"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"edwardrl101":97,"szeyingg":2,"randust":1,"Charly2312":44,"venicephua":1}},{"path":"src/test/java/fintrek/expense/core/RecurringExpenseManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"//@@author Charly2312","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"package fintrek.expense.core;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":" * This test class will test out all the plausible scenarios and assert if it behaves as expected or not.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":" * The tests mainly focus on the functionalities of the class","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"class RecurringExpenseManagerTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"    private RecurringExpenseManager manager;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"     * Before each test, a manager is instantiated from RecurringExpenseManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"     * It is then used to clear the recurring expense list before each test.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":"    void setUp() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"        manager \u003d RecurringExpenseManager.getInstance();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"        manager.clear();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Charly2312"},"content":"     * This test case checks if the function getLength() returns zero","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"     *              for an empty recurring expense list","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Charly2312"},"content":"    void getLength_emptyList_returnsZero() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Charly2312"},"content":"        assertEquals(0, manager.getLength());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"     * This test case checks if the function getLength() returns the correct","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Charly2312"},"content":"     *              size upon addition of constant recurring expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Charly2312"},"content":"    void addRecurringExpenses_validExpenses_listSizeCorrect() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Charly2312"},"content":"        TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Charly2312"},"content":"        assertEquals(TestUtils.EXPECTED_TEST_EXPENSE_COUNT, manager.getLength());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Charly2312"},"content":"     * This test case checks if the function getLength() returns the correct","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Charly2312"},"content":"     *              size upon removal of one expense from the recurring expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Charly2312"},"content":"    void removeRecurringExpense_correctIndex_success() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Charly2312"},"content":"        TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Charly2312"},"content":"        Expense removed \u003d manager.remove(0);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Charly2312"},"content":"        assertEquals(TestUtils.FIRST_TEST_DESC, removed.getDescription());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Charly2312"},"content":"        assertEquals(TestUtils.EXPECTED_TEST_EXPENSE_COUNT - 1, manager.getLength());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Charly2312"},"content":"     * This test case checks if the function getDescription() returns the correct","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Charly2312"},"content":"     *              description upon insertion of a new recurring expense","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Charly2312"},"content":"     *              into the constant recurring expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Charly2312"},"content":"    void insertAt_validIndex_success() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Charly2312"},"content":"        Expense inserted \u003d new Expense(","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Charly2312"},"content":"                TestUtils.INSERTED_DESC,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Charly2312"},"content":"                TestUtils.INSERTED_AMOUNT,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Charly2312"},"content":"                TestUtils.INSERTED_CATEGORY,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Charly2312"},"content":"                java.time.LocalDate.now()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Charly2312"},"content":"        );","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Charly2312"},"content":"        manager.insertAt(0, inserted);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Charly2312"},"content":"        assertEquals(TestUtils.INSERTED_DESC, manager.get(0).getDescription());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Charly2312"},"content":"     * This test case checks if the function getLength() exposes the internal data structure.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Charly2312"},"content":"     * This should return a new list without messing up the internal state.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Charly2312"},"content":"    void getAll_returnsDefensiveCopy() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Charly2312"},"content":"        TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Charly2312"},"content":"        var copy \u003d manager.getAll();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Charly2312"},"content":"        copy.clear();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Charly2312"},"content":"        assertEquals(TestUtils.EXPECTED_TEST_EXPENSE_COUNT, manager.getLength());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Charly2312":86}},{"path":"src/test/java/fintrek/expense/core/RegularExpenseManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Charly2312"},"content":"//@@author Charly2312","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Charly2312"},"content":"package fintrek.expense.core;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Charly2312"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Charly2312"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Charly2312"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Charly2312"},"content":"class RegularExpenseManagerTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Charly2312"},"content":"    private RegularExpenseManager manager;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Charly2312"},"content":"     * Clears all existing expenses in the RegularExpenseManager before each test.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Charly2312"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Charly2312"},"content":"    void setUp() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Charly2312"},"content":"        manager \u003d RegularExpenseManager.getInstance();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Charly2312"},"content":"        manager.clear();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Charly2312"},"content":"     * Verifies that getting the size of an empty list returns a size of 0.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Charly2312"},"content":"    void getLength_emptyList_returnsZero() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Charly2312"},"content":"        assertEquals(0, manager.getLength());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Charly2312"},"content":"     * Verifies that the total amount of expenses after adding a constant amount of expenses","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Charly2312"},"content":"     * is correct.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Charly2312"},"content":"    void getTotalAmount_afterAddingConstantExpenses_correctSum() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Charly2312"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Charly2312"},"content":"        double actual \u003d manager.getAll().stream().mapToDouble(Expense::getAmount).sum();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Charly2312"},"content":"        assertEquals(TestUtils.TOTAL_TEST_EXPENSE_SUM, actual);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Charly2312"},"content":"     * Verifies that adding expenses indeed increases the size of the list of expenses.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Charly2312"},"content":"    void addExpense_validExpense_listIncreases() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Charly2312"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Charly2312"},"content":"        assertEquals(TestUtils.EXPECTED_TEST_EXPENSE_COUNT, manager.getLength());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Charly2312"},"content":"     * Verifies that removing an expense at a certain index works.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Charly2312"},"content":"    void removeExpense_removesCorrectly() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Charly2312"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Charly2312"},"content":"        Expense removed \u003d manager.remove(0);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Charly2312"},"content":"        assertEquals(TestUtils.FIRST_TEST_DESC, removed.getDescription());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Charly2312"},"content":"        assertEquals(TestUtils.EXPECTED_TEST_EXPENSE_COUNT - 1, manager.getLength());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Charly2312"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Charly2312"},"content":"     * Verifies that inserting an expense at a certain valid index of the list works.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Charly2312"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Charly2312"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Charly2312"},"content":"    void insertAt_validIndex_success() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Charly2312"},"content":"        Expense inserted \u003d new Expense(","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Charly2312"},"content":"                TestUtils.INSERTED_DESC,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Charly2312"},"content":"                TestUtils.INSERTED_AMOUNT,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Charly2312"},"content":"                TestUtils.INSERTED_CATEGORY,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Charly2312"},"content":"                java.time.LocalDate.now()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Charly2312"},"content":"        );","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Charly2312"},"content":"        manager.insertAt(0, inserted);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Charly2312"},"content":"        assertEquals(TestUtils.INSERTED_DESC, manager.get(0).getDescription());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Charly2312"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Charly2312":74}},{"path":"src/test/java/fintrek/expense/service/ExpenseReporterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.expense.service;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import java.util.Map;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"venicephua"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":" * Unit tests for {@code ExpenseReporter} class.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":" * Verifies correct behaviour of both regular and recurring instances of {@code ExpenseReporter}.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"public class ExpenseReporterTest {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"    private ExpenseReporter reporter;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"     * Clears the list of regular expenses before each test.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"venicephua"},"content":"     * Adds a list of predefined regular expenses to RegularExpenseManager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"    void setUp() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"        AppServices.REGULAR_SERVICE.clearExpenses();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"        reporter \u003d AppServices.REGULAR_REPORTER;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"     * Verifies that the total spending of all expenses in the list is correctly calculated.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"    void testGetTotal() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.TOTAL_TEST_EXPENSE_SUM, reporter.getTotal(), TestUtils.DELTA);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"     * Verifies that the total spending in each category are correctly calculated.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"    void testGetTotalByCategory() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"        Map\u003cString, Double\u003e map \u003d reporter.getTotalByCategory();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.FOOD_TOTAL, map.get(TestUtils.CATEGORY_FOOD), TestUtils.DELTA);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.TRANSPORT_TOTAL, map.get(TestUtils.CATEGORY_TRANSPORT), TestUtils.DELTA);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.ENTERTAINMENT_TOTAL, map.get(TestUtils.CATEGORY_ENTERTAINMENT), TestUtils.DELTA);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"     * Verifies that the highest spending category and amount is correctly identified and calculated.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"    void getHighestCategory_returnsCorrectCategoryAndAmount() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"venicephua"},"content":"        Map\u003cString, Double\u003e categoryTotals \u003d reporter.getTotalByCategory();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"venicephua"},"content":"        String result \u003d reporter.getHighestCategory(categoryTotals);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"        boolean correct \u003d result.contains(TestUtils.HIGHEST_SPEND_CATEGORY)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"                \u0026\u0026 result.contains(String.valueOf(TestUtils.HIGHEST_SPEND_AMOUNT));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Charly2312"},"content":"        assertTrue(correct);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"venicephua"},"content":"     * Verifies that the average amount of the total expenses is correctly calculated.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"    void testGetAverage() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.EXPECTED_AVERAGE, reporter.getAverage(), TestUtils.DELTA);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"venicephua"},"content":"     * Verifies that the total spending in a specific month is correctly calculated.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"    void testGetTotalByMonth() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"        double expected \u003d TestUtils.TOTAL_TEST_EXPENSE_SUM;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"edwardrl101"},"content":"        double actual \u003d reporter.getTotalByMonthOfYear(today.getYear(), today.getMonthValue());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"        assertEquals(expected, actual, TestUtils.DELTA);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"venicephua"},"content":"     * Verifies that the correct list of expenses is printed for a non-empty list of expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"    void testListExpensesFormatNotEmpty() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"randust"},"content":"        String list \u003d reporter.listExpenses();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"        assertFalse(list.isEmpty());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"        assertTrue(list.contains(\"$\"));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"venicephua"},"content":"     * Verifies that the correct categories in the expense list are identified and","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"venicephua"},"content":"     * the grand total is correctly calculated.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"randust"},"content":"    void testListAllCategoryTotals() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Charly2312"},"content":"        Map\u003cString, Double\u003e categoryTotals \u003d reporter.getTotalByCategory();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Charly2312"},"content":"        String result \u003d reporter.listAllCategoryTotals(categoryTotals);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"randust"},"content":"        assertTrue(result.contains(TestUtils.CATEGORY_FOOD));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"        assertTrue(result.contains(TestUtils.CATEGORY_TRANSPORT));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"randust"},"content":"        assertTrue(result.contains(TestUtils.CATEGORY_ENTERTAINMENT));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"randust"},"content":"        assertTrue(result.contains(MessageDisplayer.SUMMARY_GRAND_TOTAL));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"venicephua"},"content":"     * Verifies that the correct category is identified and the expenses in this category are listed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"randust"},"content":"    void testListSingleCategoryTotal_success() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Charly2312"},"content":"        Map\u003cString, Double\u003e categoryTotals \u003d reporter.getTotalByCategory();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Charly2312"},"content":"        String result \u003d reporter.listSingleCategoryTotal(categoryTotals, TestUtils.CATEGORY_FOOD);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"randust"},"content":"        assertTrue(result.contains(TestUtils.CATEGORY_FOOD));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"randust"},"content":"        assertTrue(result.contains(\"$\"));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"venicephua"},"content":"     * Verifies that an error message is printed for an invalid category.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"randust"},"content":"    void testListSingleCategoryTotal_invalidCategory() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Charly2312"},"content":"        Map\u003cString, Double\u003e categoryTotals \u003d reporter.getTotalByCategory();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Charly2312"},"content":"        String result \u003d reporter.listSingleCategoryTotal(categoryTotals, TestUtils.CATEGORY_INVALID);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"randust"},"content":"        assertEquals(MessageDisplayer.CATEGORY_NOT_FOUND, result);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"venicephua"},"content":"     * Verifies that the reporter returns safe default values.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"venicephua"},"content":"     * Ensures that:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"venicephua"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"venicephua"},"content":"     *     \u003cli\u003eTotal and average amounts are zero\u003c/li\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"venicephua"},"content":"     *     \u003cli\u003eThe highest category message displays the empty list message\u003c/li\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"venicephua"},"content":"     *     \u003cli\u003eThe string output for all categories is the empty list message\u003c/li\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"venicephua"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"randust"},"content":"    void testEmptyReporterReturnsSafeDefaults() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"randust"},"content":"        AppServices.REGULAR_SERVICE.clearExpenses();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"randust"},"content":"        reporter \u003d AppServices.REGULAR_REPORTER;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Charly2312"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Charly2312"},"content":"        Map\u003cString, Double\u003e categoryTotals \u003d reporter.getTotalByCategory();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Charly2312"},"content":"        double noTotal \u003d 0.00;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Charly2312"},"content":"        list.append(String.format(MessageDisplayer.HIGHEST_CAT_FORMAT,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Charly2312"},"content":"                MessageDisplayer.SUMMARY_HIGHEST_SPEND, MessageDisplayer.EMPTY_LIST_MESSAGE));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Charly2312"},"content":"        list.append(String.format(MessageDisplayer.GRAND_TOTAL_FORMAT,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Charly2312"},"content":"                MessageDisplayer.SUMMARY_GRAND_TOTAL, noTotal));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"randust"},"content":"        assertEquals(0, reporter.getTotal(), TestUtils.DELTA);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"randust"},"content":"        assertEquals(0, reporter.getAverage(), TestUtils.DELTA);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Charly2312"},"content":"        assertEquals(MessageDisplayer.EMPTY_LIST_MESSAGE, reporter.getHighestCategory(categoryTotals));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Charly2312"},"content":"        assertEquals(list.toString(), reporter.listAllCategoryTotals(categoryTotals));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"venicephua"},"content":"     * Verifies that that {@code getExpensesByCategory(null)} throws an exception.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"randust"},"content":"    void testGetExpensesByCategory_nullThrowsException() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"randust"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e reporter.getExpensesByCategory(null));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"venicephua"},"content":"     * Verifies that constructing an {@code ExpenseReporter} with a null manager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"venicephua"},"content":"     * throws an {@code IllegalArgumentException}.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"randust"},"content":"    void testConstructor_nullManagerThrows() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"randust"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ExpenseReporter(null));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"edwardrl101":4,"randust":101,"venicephua":51,"Charly2312":16}},{"path":"src/test/java/fintrek/expense/service/ExpenseServiceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.expense.service;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.RecurringExpenseManager;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.util.TestUtils;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":" * Unit tests for {@code ExpenseService} class.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":" * Verifies correct behaviour of both regular and recurring instances of {@code ExpenseService}.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"class ExpenseServiceTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"    private ExpenseService regularService;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"    private ExpenseService recurringService;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"     * Clears both regular and recurring expense managers before each test.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"     * Initializes the service instances for use in the tests.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"    void setUp() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"        RegularExpenseManager.getInstance().clear();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"        RecurringExpenseManager.getInstance().clear();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"        regularService \u003d AppServices.REGULAR_SERVICE;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"        recurringService \u003d AppServices.RECURRING_SERVICE;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"     * Verifies that adding a list of predefined regular expenses results in the","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"     * expected number of regular expenses counted.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    void count_regular_addsConstant() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.EXPECTED_TEST_EXPENSE_COUNT, regularService.countExpenses());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"     * Verifies that adding a list of predefined recurring expenses results in the","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"     * expected number of recurring expenses counted.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"    void count_recurring_addsConstant() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"        TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.EXPECTED_TEST_EXPENSE_COUNT, recurringService.countExpenses());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"venicephua"},"content":"     * Verifies that removing a regular expense will reduce the number of","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"     * regular expenses counted by one.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"    void remove_regular_works() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"        regularService.removeExpense(0);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.EXPECTED_TEST_EXPENSE_COUNT - 1, regularService.countExpenses());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"venicephua"},"content":"     * Verifies that removing a recurring expense will reduce the number of","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"venicephua"},"content":"     * recurring expenses counted by one.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"    void remove_recurring_works() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"        TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"        recurringService.removeExpense(0);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.EXPECTED_TEST_EXPENSE_COUNT - 1, recurringService.countExpenses());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"venicephua"},"content":"     * Verifies that the description of the first regular expense in the list fetched","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"venicephua"},"content":"     * matches the expected description of the first expense.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"    void get_regular_descCorrect() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"        TestUtils.addConstantExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"        assertEquals(TestUtils.FIRST_TEST_DESC, regularService.getExpense(0).getDescription());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"venicephua"},"content":"     * Verifies the amount of the second recurring expense in the list fetched","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"venicephua"},"content":"     * matches the expected amount of the second expense.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"randust"},"content":"    void get_recurring_amountCorrect() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"randust"},"content":"        TestUtils.addConstantRecurringExpenses();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"        assertEquals(11.20, recurringService.getExpense(1).getAmount());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"edwardrl101":2,"randust":61,"venicephua":30}},{"path":"src/test/java/fintrek/parser/CommandRouterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.parser;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.util.TestCommandUtils;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"@TestInstance(TestInstance.Lifecycle.PER_CLASS)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"public class CommandRouterTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"    @BeforeAll","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"    void setupTestCommands() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"        TestCommandUtils.registerFakeCommands(\"help\", \"add\", \"delete\", \"total\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that attempting to parse a user input without a forward slash returns error.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"     * @param input user input without  \"/\" in the beginning.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"    @ValueSource(strings \u003d {\"\", \"  \", \"\\n  \\n\", \"\\t\", \"WithoutSlashInput WithoutSlashInput\", \"add\", \"help\"})","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"    void parseWithoutSlashInput_returnsError(String input) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"        RouteResult result \u003d CommandRouter.routeUserInput(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"        assertFalse(result.isSuccess());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"        assertEquals(MessageDisplayer.NO_COMMAND_MESSAGE, result.errorMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that parsing an input which has an unknown topic after \u0027/\u0027 fails and","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"edwardrl101"},"content":"     * returns the appropriate error message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"edwardrl101"},"content":"     * @param input user input with an unknown or no topic after \"/\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"    @ValueSource(strings \u003d {\"/hello\", \"/addddd\", \"/\", \"/   \", \"/ add\"})","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"    void parseUnknownCommand_returnsError(String input) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"        RouteResult result \u003d CommandRouter.routeUserInput(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"        assertFalse(result.isSuccess());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"        assertEquals(MessageDisplayer.INVALID_COMMAND_MESSAGE, result.errorMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"edwardrl101"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"edwardrl101"},"content":"     * Verifies that CommandRouter is able to parse a known command after \"/\" from the user input.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"edwardrl101"},"content":"     * @param input user input with a known command after \"/\", e.g. help, add, etc.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"edwardrl101"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"    @ValueSource(strings \u003d {\"/help\", \"/add\", \"/delete\", \"/total\"})","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"    void parseKnownCommand_returnsTrue(String input) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"        RouteResult result \u003d CommandRouter.routeUserInput(input);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"        assertTrue(result.isSuccess());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"        assertNull(result.errorMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"edwardrl101":13,"randust":47}},{"path":"src/test/java/fintrek/util/ExpenseManager.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.util;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.RegularExpenseManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.RecurringExpenseManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"import java.util.List;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"import java.util.Map;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"edwardrl101"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"/// @deprecated Use ExpenseService and ExpenseReporter instead.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"/// This class temporarily delegates to singleton managers.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"@Deprecated","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"public class ExpenseManager {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"    private static final Logger logger \u003d Logger.getLogger(ExpenseManager.class.getName());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"    private static final RegularExpenseManager regularManager \u003d RegularExpenseManager.getInstance();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"    private static final RecurringExpenseManager recurringManager \u003d RecurringExpenseManager.getInstance();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"    public static Expense getExpense(int index) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"        return regularManager.get(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"    public static int getLength() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"        return regularManager.getLength();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"    public static void addExpense(Expense expense) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"        regularManager.add(expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"    public static Expense popExpense(int index) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"        return regularManager.remove(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"    public static double getTotalExpenses() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"        return regularManager.getAll().stream()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"                .mapToDouble(Expense::getAmount)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"                .sum();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"    public static double getAverageExpenses() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"        int count \u003d getLength();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"        return count \u003d\u003d 0 ? 0 : getTotalExpenses() / count;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"    public static void clearExpenses() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"        regularManager.clear();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"randust"},"content":"    public static String listExpenseBuilder(List\u003cExpense\u003e expenseList) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"randust"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"randust"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"randust"},"content":"        for (Expense expense : expenseList) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"randust"},"content":"            assert expense !\u003d null : MessageDisplayer.NULL_EXPENSE_ERROR;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"randust"},"content":"            list.append(String.format(MessageDisplayer.LIST_EXPENSE_FORMAT, i++, expense));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"randust"},"content":"        return list.toString();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"randust"},"content":"    public static String listAllExpenses() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"randust"},"content":"        List\u003cExpense\u003e expenses \u003d regularManager.getAll();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"        if (expenses.isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"            return MessageDisplayer.EMPTY_LIST_MESSAGE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"        return listExpenseBuilder(expenses);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"    public static String listRecurringExpenses() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"        List\u003cExpense\u003e recurring \u003d recurringManager.getAll();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"        if (recurring.isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"            return MessageDisplayer.EMPTY_RECURRING_LIST_MESSAGE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"        return listExpenseBuilder(recurring);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"    public static int checkRecurringExpenseSize() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"randust"},"content":"        return recurringManager.getLength();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"randust"},"content":"    public static void checkRecurringExpense() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"randust"},"content":"        logger.info(\"Checking for recurring expenses matching today\u0027s date...\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"randust"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"randust"},"content":"        for (Expense expense : recurringManager.getAll()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Charly2312"},"content":"            if (expense.getDate().getDayOfMonth() \u003c\u003d today.getDayOfMonth()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Charly2312"},"content":"                    \u0026\u0026 expense.getDate().getMonthValue() \u003c\u003d today.getMonthValue()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"randust"},"content":"                logger.info(\"Recurring expense matched today: \" + expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"randust"},"content":"                regularManager.add(expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"randust"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"randust"},"content":"    public static void addRecurringExpense(Expense expense) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"randust"},"content":"        recurringManager.add(expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"randust"},"content":"    public static Expense deleteRecurringExpense(int index) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"randust"},"content":"        return recurringManager.remove(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Charly2312"},"content":"    public static Expense getRecurringExpense(int index) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Charly2312"},"content":"        return recurringManager.get(index);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"randust"},"content":"    public static void insertRecurringIntoExpenses(Expense expense) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"randust"},"content":"        regularManager.add(expense);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"edwardrl101"},"content":"    public static void clearRecurringExpenses() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"edwardrl101"},"content":"        recurringManager.clear();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"randust"},"content":"    public static List\u003cExpense\u003e getExpensesByCategory(String category) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"randust"},"content":"        return regularManager.getAll().stream()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"randust"},"content":"                .filter(e -\u003e e.getCategory().equals(category))","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"randust"},"content":"                .toList();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"randust"},"content":"    public static Map\u003cString, Double\u003e getTotalExpensesByCategory() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"randust"},"content":"        return regularManager.getAll().stream()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"randust"},"content":"                .collect(java.util.stream.Collectors.groupingBy(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"randust"},"content":"                        Expense::getCategory,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"randust"},"content":"                        java.util.stream.Collectors.summingDouble(Expense::getAmount)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"randust"},"content":"                ));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"edwardrl101"},"content":"    public static double getTotalByMonth(int year, int month) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"edwardrl101"},"content":"        return regularManager.getAll().stream()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"edwardrl101"},"content":"                .filter(expense -\u003e expense.getDate().getYear() \u003d\u003d year","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"edwardrl101"},"content":"                        \u0026\u0026 expense.getDate().getMonthValue() \u003d\u003d month) // Filter by year and month","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"edwardrl101"},"content":"                .collect(Collectors.summingDouble(Expense::getAmount)); // Sum the amounts of the filtered expenses","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"randust"},"content":"    public static String getHighestExpenseCategory() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"randust"},"content":"        return getTotalExpensesByCategory().entrySet().stream()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"randust"},"content":"                .max(Map.Entry.comparingByValue())","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"edwardrl101"},"content":"                .map(e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"edwardrl101"},"content":"                        -\u003e String.format(","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"edwardrl101"},"content":"                                MessageDisplayer.HIGHEST_CAT_AMT_FORMAT, e.getKey(), e.getValue()))","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"randust"},"content":"                .orElse(MessageDisplayer.EMPTY_LIST_MESSAGE);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"randust"},"content":"    public static String listAllCategoryTotals() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"randust"},"content":"        Map\u003cString, Double\u003e totals \u003d getTotalExpensesByCategory();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"randust"},"content":"        if (totals.isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"randust"},"content":"            return MessageDisplayer.EMPTY_LIST_MESSAGE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"randust"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"randust"},"content":"        totals.entrySet().stream()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"randust"},"content":"                .sorted(Map.Entry.comparingByKey())","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"randust"},"content":"                .forEach(entry -\u003e {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"randust"},"content":"                    String category \u003d entry.getKey();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"randust"},"content":"                    double amount \u003d entry.getValue();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"randust"},"content":"                    list.append(String.format(MessageDisplayer.CAT_AMT_FORMAT, category, amount));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"randust"},"content":"                });","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"randust"},"content":"        list.append(String.format(MessageDisplayer.HIGHEST_CAT_FORMAT,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"randust"},"content":"                MessageDisplayer.SUMMARY_HIGHEST_SPEND, getHighestExpenseCategory()));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"randust"},"content":"        list.append(String.format(MessageDisplayer.GRAND_TOTAL_FORMAT,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"randust"},"content":"                MessageDisplayer.SUMMARY_GRAND_TOTAL, getTotalExpenses()));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"randust"},"content":"        return list.toString();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"randust"},"content":"    public static String listSingleCategoryTotal(String category) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"randust"},"content":"        Map\u003cString, Double\u003e totals \u003d getTotalExpensesByCategory();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"randust"},"content":"        if (!totals.containsKey(category)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"randust"},"content":"            return MessageDisplayer.CATEGORY_NOT_FOUND;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"randust"},"content":"        double amount \u003d totals.get(category);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"randust"},"content":"        List\u003cExpense\u003e matching \u003d getExpensesByCategory(category);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"randust"},"content":"        return String.format(MessageDisplayer.CAT_AMT_FORMAT, category, amount)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"randust"},"content":"                + listExpenseBuilder(matching);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"edwardrl101":15,"randust":156,"Charly2312":7}},{"path":"src/test/java/fintrek/util/TestCommandRegistry.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.util;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandRegistry;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"randust"},"content":"/**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":" * Utility class to register and clear commands during testing.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":" * Not included in production builds.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":" */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"public class TestCommandRegistry {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"randust"},"content":"     * Registers a command into the CommandRegistry for testing.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"     * @param name Command name (e.g., \"add\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"     * @param command A Command instance","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"randust"},"content":"    public static void register(String name, Command command) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"randust"},"content":"        // Unsafe but okay in testing: reflection access to the private static map","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"randust"},"content":"        try {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"randust"},"content":"            var field \u003d CommandRegistry.class.getDeclaredField(\"commands\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"randust"},"content":"            field.setAccessible(true);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"            var map \u003d (java.util.Map\u003cString, Command\u003e) field.get(null);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"            map.put(name.toLowerCase(), command);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"        } catch (ReflectiveOperationException e) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"            throw new RuntimeException(\"Failed to inject test command\", e);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"randust"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"randust"},"content":"     * Clears all commands from the registry. Use cautiously.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"randust"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"    public static void clear() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"        try {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"            var field \u003d CommandRegistry.class.getDeclaredField(\"commands\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"            field.setAccessible(true);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"            var map \u003d (java.util.Map\u003cString, Command\u003e) field.get(null);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"randust"},"content":"            map.clear();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"randust"},"content":"        } catch (ReflectiveOperationException e) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"randust"},"content":"            throw new RuntimeException(\"Failed to clear commands\", e);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":44}},{"path":"src/test/java/fintrek/util/TestCommandUtils.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.util;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"import fintrek.command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"venicephua"},"content":" * Utility Class to test command registration and execution.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"venicephua"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"randust"},"content":"public class TestCommandUtils {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"venicephua"},"content":"     * A fake implementation of abstract {@code Command} class for testing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"randust"},"content":"    public static class FakeCommand extends Command {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"randust"},"content":"        private final String name;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"venicephua"},"content":"        /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"venicephua"},"content":"         * Constructs a new {@code FakeCommand}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"venicephua"},"content":"         * @param name Name of the fake command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"venicephua"},"content":"         * @param isRecurring Whether this fake command is recurring or not","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"venicephua"},"content":"         */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"randust"},"content":"        public FakeCommand(String name, boolean isRecurring) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"randust"},"content":"            super(isRecurring);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"randust"},"content":"            this.name \u003d name;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"venicephua"},"content":"        /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"venicephua"},"content":"         * Simulates execution of the command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"         * @param arguments Argument passed to the command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"         * @return a {@code CommandResult} indicating success and containing a","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"         *         message with the command name and arguments.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"         */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"randust"},"content":"        @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"randust"},"content":"        public CommandResult execute(String arguments) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"randust"},"content":"            return new CommandResult(true, name + \" executed with args: \" + arguments);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"     * Registers a list of fake commands that are non-recurring into {@code TestCommandRegistry}.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"     * Each command is added as an instance of {@code FakeCommand}.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"     * @param commandNames Array of command names to register","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"randust"},"content":"    public static void registerFakeCommands(String... commandNames) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"        for (String name : commandNames) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"            TestCommandRegistry.register(name, new FakeCommand(name, false));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"randust":27,"venicephua":22}},{"path":"src/test/java/fintrek/util/TestUtils.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randust"},"content":"package fintrek.util;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"edwardrl101"},"content":"import fintrek.command.add.AddCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"edwardrl101"},"content":"import fintrek.command.budget.BudgetCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"venicephua"},"content":"import fintrek.expense.service.AppServices;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"randust"},"content":"import fintrek.command.registry.CommandResult;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"randust"},"content":"import fintrek.expense.core.Expense;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"venicephua"},"content":"import fintrek.expense.service.ExpenseReporter;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"venicephua"},"content":"import fintrek.expense.service.ExpenseService;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"szeyingg"},"content":"import fintrek.misc.MessageDisplayer;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"edwardrl101"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"venicephua"},"content":"import java.util.List;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"edwardrl101"},"content":"import static fintrek.expense.service.AppServices.REGULAR_REPORTER;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"szeyingg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"szeyingg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"szeyingg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"szeyingg"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"szeyingg"},"content":" * Utility class containing constants and helper functions for JUnit tests.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"szeyingg"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"venicephua"},"content":"public class TestUtils {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"edwardrl101"},"content":"    // HUGE CONSTANTS","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"edwardrl101"},"content":"    public static final double ONE_BILLION \u003d 1000000000D;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"edwardrl101"},"content":"    public static final double TEN_BILLION \u003d ONE_BILLION * 10;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"venicephua"},"content":"    // \u003d\u003d\u003d\u003d REGULAREXPENSEMANAGER AND RECURRINGEXPENSEMANAGER FOR TESTS \u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"venicephua"},"content":"    public static ExpenseReporter regularReporter \u003d AppServices.REGULAR_REPORTER;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"venicephua"},"content":"    public static ExpenseService regularService \u003d AppServices.REGULAR_SERVICE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"venicephua"},"content":"    public static ExpenseReporter recurringReporter \u003d AppServices.RECURRING_REPORTER;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"venicephua"},"content":"    public static ExpenseService recurringService \u003d AppServices.RECURRING_SERVICE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"venicephua"},"content":"    // \u003d\u003d\u003d\u003d SHARED TEST CONSTANTS \u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"venicephua"},"content":"    public static final int EXPECTED_TEST_EXPENSE_COUNT \u003d 6;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"venicephua"},"content":"    public static final String FIRST_TEST_DESC \u003d \"lunch\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"venicephua"},"content":"    public static final double TOTAL_TEST_EXPENSE_SUM \u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"venicephua"},"content":"            5.50 + 11.20 + 9.80 + 2.50 + 1.66 + 256.00;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"venicephua"},"content":"    public static final String INSERTED_DESC \u003d \"spotify\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"venicephua"},"content":"    public static final double INSERTED_AMOUNT \u003d 9.99;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"venicephua"},"content":"    public static final String INSERTED_CATEGORY \u003d \"entertainment\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"randust"},"content":"    public static final String CATEGORY_FOOD \u003d \"FOOD\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"randust"},"content":"    public static final String CATEGORY_TRANSPORT \u003d \"TRANSPORT\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"randust"},"content":"    public static final String CATEGORY_ENTERTAINMENT \u003d \"ENTERTAINMENT\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"randust"},"content":"    public static final String CATEGORY_INVALID \u003d \"invalidCat\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"randust"},"content":"    public static final String CATEGORY_LOWER_CASE \u003d \"food\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"randust"},"content":"    public static final double DELTA \u003d 1e-6;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"venicephua"},"content":"    // \u003d\u003d\u003d\u003d CATEGORY CONSTANTS FOR TEST EXPENSES \u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"venicephua"},"content":"    public static final int FOOD_EXPENSE_COUNT \u003d 3;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"venicephua"},"content":"    public static final int TRANSPORT_EXPENSE_COUNT \u003d 2;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"venicephua"},"content":"    public static final int ENTERTAINMENT_EXPENSE_COUNT \u003d 1;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"venicephua"},"content":"    public static final double FOOD_TOTAL \u003d 5.50 + 9.80 + 2.50;           // \u003d 17.80","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"venicephua"},"content":"    public static final double TRANSPORT_TOTAL \u003d 11.20 + 1.66;            // \u003d 12.86","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"venicephua"},"content":"    public static final double ENTERTAINMENT_TOTAL \u003d 256.00;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"venicephua"},"content":"    public static final double EXPECTED_AVERAGE \u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"venicephua"},"content":"            TOTAL_TEST_EXPENSE_SUM / EXPECTED_TEST_EXPENSE_COUNT;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"venicephua"},"content":"    public static final String HIGHEST_SPEND_CATEGORY \u003d \"ENTERTAINMENT\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"venicephua"},"content":"    public static final double HIGHEST_SPEND_AMOUNT \u003d ENTERTAINMENT_TOTAL;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"randust"},"content":"    public static final int VALID_INDEX \u003d 1;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"randust"},"content":"    public static final String VALID_DESCRIPTION \u003d \"Test\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"randust"},"content":"    public static final String UPDATED_DESCRIPTION \u003d \"Brunch\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"randust"},"content":"    public static final String UPDATED_DESCRIPTION_FULL \u003d \"Lunch\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"randust"},"content":"    public static final double VALID_AMOUNT \u003d 10.0;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"randust"},"content":"    public static final double UPDATED_AMOUNT \u003d 15.5;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"randust"},"content":"    public static final String VALID_CATEGORY \u003d \"Food\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"randust"},"content":"    public static final String UPDATED_CATEGORY \u003d \"Uncategorized\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"randust"},"content":"    public static final String INVALID_AMOUNT_INPUT \u003d \"abc\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"randust"},"content":"    public static final String INVALID_DATE_INPUT \u003d \"invalid-date\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"randust"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"randust"},"content":"    public static final LocalDate VALID_DATE \u003d LocalDate.of(2025, 3, 3);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"randust"},"content":"    public static final LocalDate UPDATED_DATE \u003d LocalDate.of(2025, 3, 5);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"venicephua"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"szeyingg"},"content":"     * Adds predefined regular expenses to ExpenseManager for consistent test scenarios.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"venicephua"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"venicephua"},"content":"    public static void addConstantExpenses() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"edwardrl101"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"venicephua"},"content":"        List\u003cExpense\u003e expenses \u003d List.of(","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"edwardrl101"},"content":"                new Expense(\"lunch\", 5.50, \"food\", today),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"edwardrl101"},"content":"                new Expense(\"taxi\", 11.20, \"transport\", today),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"edwardrl101"},"content":"                new Expense(\"dinner\", 9.80, \"food\", today),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"edwardrl101"},"content":"                new Expense(\"ice cream\", 2.50, \"food\", today),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"edwardrl101"},"content":"                new Expense(\"train\", 1.66, \"transport\", today),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"edwardrl101"},"content":"                new Expense(\"concert\", 256, \"entertainment\", today)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"venicephua"},"content":"        );","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"venicephua"},"content":"        expenses.forEach(regularService::addExpense);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"szeyingg"},"content":"     * Adds predefined recurring expenses to ExpenseManager for consistent test scenarios.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"szeyingg"},"content":"    public static void addConstantRecurringExpenses() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"szeyingg"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"szeyingg"},"content":"        List\u003cExpense\u003e expenses \u003d List.of(","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"szeyingg"},"content":"                new Expense(\"lunch\", 5.50, \"food\", today),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"szeyingg"},"content":"                new Expense(\"taxi\", 11.20, \"transport\", today),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"szeyingg"},"content":"                new Expense(\"dinner\", 9.80, \"food\", today),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"szeyingg"},"content":"                new Expense(\"ice cream\", 2.50, \"food\", today),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"szeyingg"},"content":"                new Expense(\"train\", 1.66, \"transport\", today),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"szeyingg"},"content":"                new Expense(\"concert\", 256, \"entertainment\", today)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"szeyingg"},"content":"        );","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"szeyingg"},"content":"        expenses.forEach(ExpenseManager::addRecurringExpense);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"szeyingg"},"content":"     * Adds an expense with very large value as its amount to the list of regular expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"edwardrl101"},"content":"    public static void addHugeConstantExpenses() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"edwardrl101"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"edwardrl101"},"content":"        Expense luxuryExpense \u003d new Expense(\"Mansion\", TEN_BILLION, \"Luxury\", today);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"edwardrl101"},"content":"        for(int i \u003d 0; i \u003c 15; i++) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"edwardrl101"},"content":"            regularService.addExpense(luxuryExpense);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"szeyingg"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"szeyingg"},"content":"     * Adds an expense with very large value as its amount to the list of recurring expenses.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"szeyingg"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"edwardrl101"},"content":"    public static void addHugeConstantRecurringExpenses() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"edwardrl101"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"edwardrl101"},"content":"        Expense luxuryExpense \u003d new Expense(\"Mansion\", TEN_BILLION, \"Luxury\", today);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"edwardrl101"},"content":"        for(int i \u003d 0; i \u003c 15; i++) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"edwardrl101"},"content":"            recurringService.addExpense(luxuryExpense);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"edwardrl101"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"edwardrl101"},"content":"    public static void addExpenseExceedingBudget(double amount) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"edwardrl101"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"edwardrl101"},"content":"        Expense largeExpense \u003d new Expense(\"Fine Dining\", amount, \"food\", today);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"edwardrl101"},"content":"        regularService.addExpense(largeExpense);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"szeyingg"},"content":"    // \u003d\u003d\u003d\u003d Helper functions to print assertion messages \u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"szeyingg"},"content":"    public static void assertCommandSuccess(CommandResult result, String input) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"szeyingg"},"content":"        assertTrue(result.isSuccess(), MessageDisplayer.ASSERT_COMMAND_SUCCESS_PREFIX + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"szeyingg"},"content":"    public static void assertCommandFailure(CommandResult result, String input) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"szeyingg"},"content":"        assertFalse(result.isSuccess(), MessageDisplayer.ASSERT_COMMAND_FAILURE_PREFIX + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"szeyingg"},"content":"    public static void assertCommandMessage(CommandResult result, String input, String expectedMessage) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"szeyingg"},"content":"        assertEquals(expectedMessage, result.message(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"szeyingg"},"content":"                MessageDisplayer.ASSERT_COMMAND_EXPECTED_OUTPUT + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"venicephua"},"content":"    public static void assertCommandErrorMessage(CommandResult result, String input, String expectedMessage) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"venicephua"},"content":"        assertEquals(expectedMessage, result.message(),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"venicephua"},"content":"                MessageDisplayer.ASSERT_EXPECTED_ERROR + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"venicephua"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"venicephua"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"szeyingg"},"content":"    public static void assertListSizeIncreased(int initialSize, String input) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"szeyingg"},"content":"        assertEquals(initialSize + 1, ExpenseManager.getLength(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"szeyingg"},"content":"                MessageDisplayer.ASSERT_COMMAND_LIST_LENGTH_FAILURE + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"szeyingg"},"content":"    public static void assertCorrectListSize(int expectedSize, String input) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"szeyingg"},"content":"        assertEquals(expectedSize, ExpenseManager.getLength(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"szeyingg"},"content":"                MessageDisplayer.ASSERT_COMMAND_LIST_LENGTH_FAILURE + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Charly2312"},"content":"    public static void assertCorrectRecurringListSize(int expectedSize, String input) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Charly2312"},"content":"        assertEquals(expectedSize, ExpenseManager.checkRecurringExpenseSize(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Charly2312"},"content":"                MessageDisplayer.ASSERT_COMMAND_LIST_LENGTH_FAILURE + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"szeyingg"},"content":"    public static void assertCorrectDesc(int initialSize, String input, String expected) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"szeyingg"},"content":"        assertEquals(expected, ExpenseManager.getExpense(initialSize).getDescription(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"szeyingg"},"content":"                MessageDisplayer.ASSERT_COMMAND_DESC_FAILURE + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Charly2312"},"content":"    public static void assertCorrectRecurringDesc(int initialSize, String input, String expected) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Charly2312"},"content":"        assertEquals(expected, ExpenseManager.getRecurringExpense(initialSize).getDescription(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Charly2312"},"content":"                MessageDisplayer.ASSERT_COMMAND_DESC_FAILURE + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"szeyingg"},"content":"    public static void assertCorrectAmount(int initialSize, String input, double expected) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"szeyingg"},"content":"        assertEquals(expected, ExpenseManager.getExpense(initialSize).getAmount(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"szeyingg"},"content":"                MessageDisplayer.ASSERT_COMMAND_AMT_FAILURE + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"szeyingg"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Charly2312"},"content":"    public static void assertCorrectRecurringAmount(int initialSize, String input, double expected) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Charly2312"},"content":"        assertEquals(expected, ExpenseManager.getRecurringExpense(initialSize).getAmount(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Charly2312"},"content":"                MessageDisplayer.ASSERT_COMMAND_AMT_FAILURE + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"szeyingg"},"content":"    public static void assertCorrectCategory(int initialSize, String input, String expected) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"szeyingg"},"content":"        assertEquals(expected, ExpenseManager.getExpense(initialSize).getCategory(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"szeyingg"},"content":"                MessageDisplayer.ASSERT_COMMAND_CATEGORY_FAILURE + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"szeyingg"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Charly2312"},"content":"    public static void assertCorrectRecurringCategory(int initialSize, String input, String expected) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Charly2312"},"content":"        assertEquals(expected, ExpenseManager.getRecurringExpense(initialSize).getCategory(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Charly2312"},"content":"                MessageDisplayer.ASSERT_COMMAND_CATEGORY_FAILURE + \"\u0027\" + input + \"\u0027\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Charly2312"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Charly2312"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Charly2312"},"content":"    public static void assertBudgetWarningAfterAddCommand(String input,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Charly2312"},"content":"                                                          double budget, String expectedWarningMessageFormat) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"edwardrl101"},"content":"        AddCommand addCommand \u003d new AddCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"edwardrl101"},"content":"        BudgetCommand budgetCommand \u003d new BudgetCommand(false);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"edwardrl101"},"content":"        budgetCommand.execute(\"$\" + budget);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"edwardrl101"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"edwardrl101"},"content":"        String[] args \u003d input.split(\"\\\\$\", 2);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"edwardrl101"},"content":"        String description \u003d args[0].trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"edwardrl101"},"content":"        String amountString \u003d args[1].trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"edwardrl101"},"content":"        double amount \u003d Double.parseDouble(amountString);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"edwardrl101"},"content":"        Expense newExpense \u003d new Expense(description, amount, \"UNCATEGORIZED\", today);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"edwardrl101"},"content":"        CommandResult addCommandResult \u003d addCommand.execute(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"edwardrl101"},"content":"        assertCommandSuccess(addCommandResult, input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"edwardrl101"},"content":"        String successMessage \u003d String.format(MessageDisplayer.ADD_SUCCESS_MESSAGE_TEMPLATE, newExpense);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"edwardrl101"},"content":"        double totalInMonth \u003d REGULAR_REPORTER.getTotalByMonthOfYear(today.getYear(), today.getMonthValue());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"edwardrl101"},"content":"        String budgetWarning \u003d String.format(expectedWarningMessageFormat, budget, Math.abs(budget - totalInMonth));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"edwardrl101"},"content":"        String expectedMessage \u003d budgetWarning + MessageDisplayer.LINE_SEPARATOR + successMessage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"edwardrl101"},"content":"        assertCommandMessage(addCommandResult, input, expectedMessage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"edwardrl101"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"edwardrl101"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"venicephua"},"content":"}","lastModifiedDate":"2025-03-29","isFullCredit":false}],"authorContributionMap":{"edwardrl101":59,"szeyingg":71,"randust":26,"venicephua":51,"Charly2312":23}}]
