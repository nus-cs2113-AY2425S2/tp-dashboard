[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    jvmArgs \u0027-ea\u0027","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    mainClass.set(\"seedu.EventSync\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    archiveBaseName.set(\"seedu.EventSync\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"compileJava {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":11,"-":44}},{"path":"data/src/Main.java","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"//TIP To \u003cb\u003eRun\u003c/b\u003e code, press \u003cshortcut actionId\u003d\"Run\"/\u003e or","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"// click the \u003cicon src\u003d\"AllIcons.Actions.Execute\"/\u003e icon in the gutter.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"public class Main {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"        //TIP Press \u003cshortcut actionId\u003d\"ShowIntentionActions\"/\u003e with your caret at the highlighted text","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"        // to see how IntelliJ IDEA suggests fixing it.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.printf(\"Hello and welcome!\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"        for (int i \u003d 1; i \u003c\u003d 5; i++) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"            //TIP Press \u003cshortcut actionId\u003d\"Debug\"/\u003e to start debugging your code. We have set one \u003cicon src\u003d\"AllIcons.Debugger.Db_set_breakpoint\"/\u003e breakpoint","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"            // for you, but you can always add more by pressing \u003cshortcut actionId\u003d\"ToggleLineBreakpoint\"/\u003e.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"            System.out.println(\"i \u003d \" + i);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":15}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |     Name      | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"--------|:-------------:|:--------------:|:---------:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  YanXinyaoo   | [Github](https://github.com/yanxinyaoo) | [Portfolio](team/yanxinyaoo.md)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yeeern27"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Goh Yee Ern  | [Github](https://github.com/yeeern27) | [Portfolio](team/yeeern27.md)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yeeern27"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Khoo Shi Xian | [Github](https://github.com/sxkhoo) | [Portfolio](team/khooshixian.md)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yeeern27"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Hua Zhenting  | [Github](https://github.com/huazhenting) | [Portfolio](team/huazhenting.md)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Liu Kexin   | [Github](https://github.com/Lydialkx) | [Portfolio](team/lydialkx.md)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false}],"authorContributionMap":{"Lydialkx":3,"HuaZhenting":1,"YanXinyaoo":1,"yeeern27":3,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"# Event Manager Developer Guide","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"## Table of Contents","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"2. [Introduction](#introduction)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"3. [Setting Up](#setting-up-the-development-environment)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"4. [Component Overview](#component-overview)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"  - 4.1 [Main Component](#1-main-component-eventsyncjava)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"  - 4.2 [UI Component](#2-ui-component-uijava)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"  - 4.3 [Logic Component](#3-logic-component)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"  - 4.4 [Model Component](#4-model-component)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"  - 4.5 [Storage Component](#5-storage-component)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"  - 4.6 [Logger Component](#6-logger-component)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"  - 4.7 [Common Classes](#7-common-classes)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"5. [Design \u0026 Implementation](#design--implementation)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.1 [Add Event](#1-add-event-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.2 [Edit Event](#2-edit-event-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.3 [Conflict Detector](#3-conflict-detector-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.4 [List Events](#4-list-event-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.5 [Delete Event](#5-delete-event-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.6 [Priority Filter](#6-priority-filter-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.7 [Duplicate Event](#7-duplicate-event-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.8 [Add Participant](#8-add-participant-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.9 [List Participants](#9-list-participants-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.10 [Event Storage](#10-event-storage-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.11 [User Storage](#11-user-storage-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"  - 5.12 [Login System](#12-login-system-feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"  - 5.13 [List All Events](#13-list-all-event-feature)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"6. [Documentation \u0026 DevOps](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"7. [Appendix](#appendix)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"  - 7.1 [Product Scope](#product-scope)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"  - 7.2 [User Stories](#user-stories)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"  - 7.3 [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"  - 7.4 [Glossary](#glossary)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"  - 7.5 [Manual Testing](#instructions-for-manual-testing)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"  - 7.6 [Future Features](#future-features)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"### Project Framework","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"- **[CS2113 Individual Project Template](https://github.com/nus-cs2113-AY2425S2/ip)**  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"  Used as the foundational project structure with modifications for our event management system","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"### Tutorial Resources","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"- **[SE-EDU PlantUML Guide](https://se-education.org/guides/tutorials/plantUml.html)**  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"  Referenced for creating all UML diagrams in this project","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lydialkx"},"content":"## Introduction","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lydialkx"},"content":"This project is a CLI-based Event Manager designed to help users organize their schedules effectively. In addition to ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lydialkx"},"content":"creating, editing, deleting, and sorting events, the application supports participant management with access levels and ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lydialkx"},"content":"availability. This Developer Guide documents the architecture, features, design considerations, and implementation ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lydialkx"},"content":"details to help contributors understand the codebase and make meaningful contributions.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lydialkx"},"content":"## Setting Up the Development Environment","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lydialkx"},"content":"### Prerequisites","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lydialkx"},"content":"- `JDK 17`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lydialkx"},"content":"- `Gradle 7.6.2` or higher","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lydialkx"},"content":"- `IntelliJ IDEA` (recommended IDE for Java development)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lydialkx"},"content":"### Getting Started","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lydialkx"},"content":"#### 1. Clone the Repository","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lydialkx"},"content":"Clone the repository to your local machine:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lydialkx"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lydialkx"},"content":"git clone https://github.com/AY2425S2-CS2113-W13-2/tp.git","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lydialkx"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lydialkx"},"content":"#### 2. Import the Project into IntelliJ IDEA","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Lydialkx"},"content":"To import the project:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Lydialkx"},"content":"- Open `IntelliJ IDEA`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Lydialkx"},"content":"- Click on `File → Open`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Lydialkx"},"content":"- Select the `tp` directory","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Lydialkx"},"content":"- Choose the `build.gradle` file and open it","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Lydialkx"},"content":"- Select `Open as Project` when prompted","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lydialkx"},"content":"- Ensure the JDK is set to `JDK 17`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lydialkx"},"content":"- Wait for Gradle to finish syncing","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Lydialkx"},"content":"#### 3. Verify the Setup","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Lydialkx"},"content":"To ensure everything is working correctly, you can:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Lydialkx"},"content":"- Run all tests:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Lydialkx"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Lydialkx"},"content":"  ./gradlew test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Lydialkx"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Lydialkx"},"content":"- Launch the application:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Lydialkx"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Lydialkx"},"content":"./gradlew run","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Lydialkx"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Lydialkx"},"content":"## Component Overview","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"[Click here to view the UML class diagram](UMLClassDiagram.pdf)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Lydialkx"},"content":"The architecture of Event Manager is structured into clearly defined components to ensure modularity and ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Lydialkx"},"content":"maintainability. The core components are outlined below:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"### 1. Main Component (EventSync.java)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"![ArchitectureDiagram.png](graph/ArchitectureDiagram/ArchitectureDiagram.jpg)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"- The **Architecture Diagram** given above explains the high-level design.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"- Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"- **Main components of the architecture**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HuaZhenting"},"content":"- **Main**(`EventSync.java`) is in charge of the initialization and execution of the system. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HuaZhenting"},"content":"  - At launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HuaZhenting"},"content":"  - At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HuaZhenting"},"content":"- The bulk of the system’s work is done by the following components:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HuaZhenting"},"content":"  - **UI**: The user interface that interacts with the user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"  - **Logic**: The command executor responsible for processing commands. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"  - **Model**: Maintains the application\u0027s data in memory, including participants and events.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"  - **Storage**: Reads data from, and writes data to, files for persistence.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HuaZhenting"},"content":"- **Logger** handles logging of system events, errors, and debugging information.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HuaZhenting"},"content":"- **Commons**: Provides shared utilities and helper functions used across components.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"HuaZhenting"},"content":"- **How the architecture components interact with each other**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HuaZhenting"},"content":"- Each of the main components:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HuaZhenting"},"content":"  - Defines its API in an interface with the same name as the component.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HuaZhenting"},"content":"  - Implements its functionality using a concrete {Component Name}Factory class, which follows the corresponding API interface.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"HuaZhenting"},"content":"- The sections below give more details of each component.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Lydialkx"},"content":"### 2. UI Component (UI.java)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yeeern27"},"content":"The UI component handles all user interaction through the command line. It displays menus, messages, prompts, and results. It acts as an interface between the user and the application logic.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"The `UI` class is instantiated when the application starts. Other components, such as `Event Manager` should use the `UI` instance to interact with the user. `UI` helps to separate the user interaction from the core application logic.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yeeern27"},"content":"![UIDiagram.png](graph/UI/UI.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yeeern27"},"content":"- **Input Handling**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"  - `Scanner scanner` handles the input from the user. It is used to read user commands and data.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"  - `setScanner(Scanner newScanner)` allows setting a different scanner, useful for testing purposes.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"  - `readLine()` reads a line of text from the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"  - `readInt()` reads an integer input from the user, returning null if the input is not a valid integer.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"  - `checkForExit(String input)` checks if the user wants to exit the current operation by typing \u0027exit\u0027.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"- **Command Input Methods**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"  - `readAddCommandInput()` gets input for adding a new event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"  - `readDuplicateEventInput()` gets input for duplicating an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"  - `readDeleteName()` gets input for searching events to delete.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"  - `readFilterInput()` gets input for filtering events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"  - `readListCommandInput()` gets input for listing and sorting events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"  - `readAddParticipantInput()` gets input for adding a participant to an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"  - `splitAddParticipantCommandInput()` parses input for adding a participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YanXinyaoo"},"content":"  - `askParticipantName()` prompts for and reads a participant\u0027s name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"  - `askPassword()` prompts for and reads a participant\u0027s password.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"  - `askConfirmation(String message)` asks the user for confirmation (y/n).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"  - `confirmDeletion(String eventName)` asks the user to confirm deletion of an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"- **Output Display Methods**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YanXinyaoo"},"content":"  - `showMessage(String message)` displays a given message to the console.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YanXinyaoo"},"content":"  - `showMenu()` displays the main command menu with all available actions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YanXinyaoo"},"content":"  - `showEventWithIndex(Event event, int index, String priority)` displays event details with its index and priority.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YanXinyaoo"},"content":"  - `showEmptyListMessage()` displays a message when there are no events to show.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YanXinyaoo"},"content":"  - `printMatchingEvents(ArrayList\u003cEvent\u003e events)` displays matching events from a search.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YanXinyaoo"},"content":"  - `showAddFormat()` displays the format for adding a new event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YanXinyaoo"},"content":"  - `showAddedMessage(Event event)` confirms an event has been added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YanXinyaoo"},"content":"  - `showEditCommandMessageWithOptions(Event event)` displays edit options for an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YanXinyaoo"},"content":"  - `showEditCommandCorrectFormat()` shows correct format for edit commands.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YanXinyaoo"},"content":"  - `showEditCommandStep1()` to `showEditCommandStep5()` guide users through editing different event fields.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YanXinyaoo"},"content":"  - `showEditedEvent(Event event)` displays updated event details.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YanXinyaoo"},"content":"  - `showByeMessage()` displays a goodbye message when exiting.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YanXinyaoo"},"content":"  - `showWelcomeMessage()` displays a welcome message at startup.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YanXinyaoo"},"content":"  - `showCollisionWarning()` and `showParticipantSlotCollisionWarning()` warn about scheduling conflicts.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YanXinyaoo"},"content":"  - `showDeletedMessage(Event event)` confirms an event has been deleted.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YanXinyaoo"},"content":"  - `showMatchingEventsWithIndices(ArrayList\u003cEvent\u003e matchingEvents, EventManager eventManager)` displays matching events with indices.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YanXinyaoo"},"content":"  - `showDeletionCancelledMessage()` informs that deletion was cancelled.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YanXinyaoo"},"content":"  - `showAddParticipantFormat()` displays format for adding participants.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YanXinyaoo"},"content":"  - `showParticipantAdded(Participant p)` confirms a participant was added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YanXinyaoo"},"content":"  - `showLogOutMessage()` displays logout message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"  - `showSuccessLoginMessage()` confirms successful login.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YanXinyaoo"},"content":"  - `showSuccessCreateMessage(Participant participant)` confirms user creation.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YanXinyaoo"},"content":"The UI component provides a comprehensive set of methods to handle user interactions, ensuring a clear separation between the user interface and the application logic. Each method is designed to handle a specific type of interaction, making the code more modular and easier to maintain.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"sxkhoo"},"content":"### 3. Logic Component","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"sxkhoo"},"content":"The Logic Component is responsible for interpreting user input and executing appropriate actions in the system using the **Command** and **Factory** patterns. It is made up of several sub-components:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YanXinyaoo"},"content":"- **Parser Component**:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"sxkhoo"},"content":"  - `Parser.java`: Core class that receives and interprets user input.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"sxkhoo"},"content":"  - `CommandParser.java`: Provides helper methods to parse specific data (e.g., date-time, event details).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"sxkhoo"},"content":"- **Command Component**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"sxkhoo"},"content":"  - `Command.java`: Abstract base class that defines the `execute()` method.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"sxkhoo"},"content":"  - Concrete subclasses implement specific behaviors like `AddEventCommand`, `DeleteCommand`, `ListCommand`, etc.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"sxkhoo"},"content":"- **CommandFactory Component**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"sxkhoo"},"content":"  - `CommandFactory.java`: Interface for creating Command objects.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"sxkhoo"},"content":"  - Concrete factories (e.g., `AddEventCommandFactory`) encapsulate logic to construct and return specific command types.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"sxkhoo"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"sxkhoo"},"content":"## Partial UML Class Diagram","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"sxkhoo"},"content":"![ParserCD.png](graph/Parser/ParserCD.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"sxkhoo"},"content":"This **partial UML class diagram** focuses only on the components involved in executing the `add` command:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"sxkhoo"},"content":"- The `Parser` receives a command string and delegates to `CommandParser` for detailed input handling.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"sxkhoo"},"content":"- A suitable `CommandFactory` (like `AddEventCommandFactory`) is created to generate the corresponding `Command` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"sxkhoo"},"content":"- That factory uses utility methods from `CommandParser` to help construct the required `Command` (e.g., `AddEventCommand`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"sxkhoo"},"content":"- The resulting `Command` is then ready to be executed by the system.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"sxkhoo"},"content":"\u003e **Note:** Only selected classes (`AddEventCommand` and `AddEventCommandFactory`) are shown for brevity. The actual system contains many more command types, each following a similar structure.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"YanXinyaoo"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"sxkhoo"},"content":"## UML Sequence Diagram (Add Event Command Only)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"sxkhoo"},"content":"![ParserSD.png](graph/Parser/ParserSD.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"sxkhoo"},"content":"This **sequence diagram** illustrates the interaction flow when a user inputs the `add` command:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"sxkhoo"},"content":"1. The `User` enters an input string such as `add`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"sxkhoo"},"content":"2. The `Parser` interprets the command and instantiates an `AddEventCommandFactory`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"sxkhoo"},"content":"3. `createCommand()` is called on the factory.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"sxkhoo"},"content":"4. Inside the factory, `CommandParser` is used to:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"sxkhoo"},"content":"  - Prompt and read event details.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"sxkhoo"},"content":"  - Validate and parse the information (e.g., date-time format, name).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"sxkhoo"},"content":"  - Construct an `Event` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"sxkhoo"},"content":"5. The `AddEventCommand` is returned.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"sxkhoo"},"content":"6. The command is then executed, adding the event to the system and notifying the UI.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"sxkhoo"},"content":"\u003e **Note:** This diagram only shows the flow for the `AddEventCommand`. Other command types like `edit`, `list`, `filter`, etc., follow a similar interaction flow using their respective factories and command implementations.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"sxkhoo"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Lydialkx"},"content":"### 4. Model Component","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Lydialkx"},"content":"![modelComponent.png](graph/ModelComponent/modelComponent.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Lydialkx"},"content":"The **Model Component** is responsible for representing the core data entities of the system and providing functionality to manage them. It is composed of the following parts:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"YanXinyaoo"},"content":"- **Event Component**:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Lydialkx"},"content":"  - `Event.java`: Core data structure for scheduled activities.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Lydialkx"},"content":"  - `EventManager.java`: Manages the event collection and operations such as add, delete, or retrieve.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"YanXinyaoo"},"content":"- **Participant Component**:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Lydialkx"},"content":"  - `Participant.java`: Represents users in the system.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Lydialkx"},"content":"  - `ParticipantManager.java`: Manages users including creation, deletion, and authentication.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Lydialkx"},"content":"  - `AvailabilitySlot.java`: Tracks availability timeslots for participants.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"YanXinyaoo"},"content":"- **Label Component**:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Lydialkx"},"content":"  - `Priority.java`: Enum-like structure for event priority levels, supports flexible priority assignment.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Lydialkx"},"content":"- **Sort Component** (implements Strategy Pattern):","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Lydialkx"},"content":"  - `Sort.java`: Abstract base class defining the sorting interface.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Lydialkx"},"content":"  - `SortByStartTime.java`, `SortByEndTime.java`, `SortByPriority.java`: Concrete implementations for sorting logic.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"YanXinyaoo"},"content":"- **Exception Component**:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Lydialkx"},"content":"  - `SyncException.java`: Custom exception used for synchronization-related errors within model operations.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"YanXinyaoo"},"content":"### 5. Storage Component","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"YanXinyaoo"},"content":"- Storage.java: Base class for data persistence","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"YanXinyaoo"},"content":"- UserStorage.java: Handles user data storage","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"YanXinyaoo"},"content":"- Uses file I/O to save and load events and user data","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"YanXinyaoo"},"content":"![Storage Class Diagram](graph/Storage/StorageClassDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"YanXinyaoo"},"content":"#### API: UserStorage.java","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"YanXinyaoo"},"content":"The `UserStorage` component,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"YanXinyaoo"},"content":"- is responsible for saving and loading user-related data, including participant details.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"YanXinyaoo"},"content":"- stores data in a structured format, ensuring persistence across sessions. (sample: Alice | MEMBER | 123 | 2025-03-31 12:00,2025-05-31 12:00)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"YanXinyaoo"},"content":"- depends on `Participant` as it manages participant-related storage operations.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"YanXinyaoo"},"content":"- throws `SyncException` in case of synchronization failures.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"YanXinyaoo"},"content":"#### API: Storage.java","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"YanXinyaoo"},"content":"The `Storage` component,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"YanXinyaoo"},"content":"- handles the storage and retrieval of both event and priority data.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"YanXinyaoo"},"content":"- integrates `UserStorage` to manage participant-related information.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"YanXinyaoo"},"content":"- can save and load events, including participant details and scheduling information.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"YanXinyaoo"},"content":"- depends on `UserStorage`, `Event`, and `Priority` as it manages multiple data types.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"YanXinyaoo"},"content":"- throws `SyncException` to handle potential storage errors.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"YanXinyaoo"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"YanXinyaoo"},"content":"### 6. Logger Component","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"YanXinyaoo"},"content":"- EventSyncLogger.java: Handles logging for debugging and tracking","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"YanXinyaoo"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"YanXinyaoo"},"content":"### 7. Common classes","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"YanXinyaoo"},"content":"- Classes used by multiple components are in the src/main/java package.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"YanXinyaoo"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"YanXinyaoo"},"content":"## Design \u0026 Implementation","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"YanXinyaoo"},"content":"### 1. Add Event Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"YanXinyaoo"},"content":"The `AddEventCommand` feature allows users to add an event to their schedule. It is implemented using the `Command` pattern, where `AddEventCommand` extends `Command`.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"YanXinyaoo"},"content":"1. **Step 1. CLI Input (`add` Command)**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"YanXinyaoo"},"content":"- The user inputs the `add` command via the CLI. This command is parsed, and the `Parser` creates an `AddEventCommandFactory` object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"YanXinyaoo"},"content":"2. **Step 2. Event Information Collection**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"YanXinyaoo"},"content":"- The system prompts the user to input details of the event (such as time, location, and participant).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"YanXinyaoo"},"content":"3. **Step 3. Command Object Creation**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"YanXinyaoo"},"content":"- The `AddEventCommand` object is created with the collected event information.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"YanXinyaoo"},"content":"4. **Step 4.Executing `addEvent`**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"YanXinyaoo"},"content":"- The `addEvent` method of `EventManager` is called to add the event to the system.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"YanXinyaoo"},"content":"- This involves collision checks, participant availability checks, and priority assignment.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"YanXinyaoo"},"content":"- The event is successfully added to the system and saved to storage.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"YanXinyaoo"},"content":"#### Expanded Flow of `addEvent` Method Execution","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"YanXinyaoo"},"content":"**Step 1. Null Check for Event**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"YanXinyaoo"},"content":"- The system ensures that the `event` is not null. If it is, an `AssertionError` is thrown.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"YanXinyaoo"},"content":"**Step 2. Collision Check**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"YanXinyaoo"},"content":"- The `checkCollision` method is invoked to ensure that the event does not overlap with any existing events based on the start and end time, as well as the location.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"YanXinyaoo"},"content":"- If a conflict is found, a `SyncException` is thrown with an appropriate message, indicating the overlap.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"YanXinyaoo"},"content":"**Step 3. Participant Availability Check**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"YanXinyaoo"},"content":"- **If the `participant` is null**: A `SyncException` is thrown indicating that a participant must be specified for the event.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"YanXinyaoo"},"content":"- **Check Availability**: Ensures that the `participant` is available during the event\u0027s scheduled time. If not, a `SyncException` is thrown, informing that the participant is unavailable.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"YanXinyaoo"},"content":"**Step 4. Add Participant to Event**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"YanXinyaoo"},"content":"- Once all checks pass, the participant is added to the event. This action links the participant to the event in the system.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"YanXinyaoo"},"content":"**Step 5. Add Event to Event List**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"YanXinyaoo"},"content":"- The event is added to the system\u0027s list of events. This ensures that it is now part of the event scheduling database.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"YanXinyaoo"},"content":"**Step 6. Priority Assignment**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"YanXinyaoo"},"content":"- The method attempts to obtain a priority input from the user. This is typically used to categorize the importance of the event.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"YanXinyaoo"},"content":"- If the user provides an invalid or missing input (e.g., no input at all), the system assigns a default priority of `\"NULL\"`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"YanXinyaoo"},"content":"**Step 7. Save Event and Priority**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"YanXinyaoo"},"content":"- The event’s priority is saved to the system’s priority list for further reference. Both the event details and its priority are saved to persistent storage, ensuring that the event is stored for future retrieval.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"YanXinyaoo"},"content":"**Step 8. UI Update**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"YanXinyaoo"},"content":"- The user interface is updated with a success message to notify the user that the event has been successfully added. This provides feedback and confirms that the event addition process has been completed successfully.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"YanXinyaoo"},"content":"![AddEvent Sequence Diagram](graph/AddEvent/AddEvent.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 1: Conflict and Availability Checks**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Perform collision checks and participant availability checks before adding the event.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Ensures data consistency by preventing overlapping events and unavailable participants.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Might require additional resources and logic for collision detection, especially in large datasets.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 2: Priority Assignment**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Prompt the user for priority input and assign it to the event.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Provides flexibility to users to set priorities.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Relies on user input, which can be invalid or omitted.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 3: Error Handling**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1**: Throw `SyncException` on errors.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Centralized error handling that clearly defines issues.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Requires users to manage exceptions correctly.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"YanXinyaoo"},"content":"### 2. Edit Event Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"YanXinyaoo"},"content":"The `EditEventCommand` feature allows users to modify an existing event in their schedule. It is implemented using the `Command` pattern, where `EditEventCommand` extends `Command`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"YanXinyaoo"},"content":"1. **Step 1. CLI Input (`edit` Command)**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"YanXinyaoo"},"content":"- The user inputs the `edit` command via the CLI. This command is parsed, and the `Parser` creates an `EditCommandFactory` object.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"YanXinyaoo"},"content":"2. **Step 2. Event Selection**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"YanXinyaoo"},"content":"- The system displays all available events and prompts the user to select an event by index.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"YanXinyaoo"},"content":"- The system verifies that the current user has administrator privileges.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"YanXinyaoo"},"content":"3. **Step 3. Command Object Creation**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"YanXinyaoo"},"content":"- The `EditEventCommand` object is created with the event index and participant manager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"YanXinyaoo"},"content":"4. **Step 4. Editing Menu Loop**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"YanXinyaoo"},"content":"- The system presents the user with options to edit different aspects of the event (name, start time, end time, location, description).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"YanXinyaoo"},"content":"- For each edit, appropriate validation is performed (e.g., checking participant availability for time changes).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"YanXinyaoo"},"content":"- Changes are saved to storage after each successful edit.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"YanXinyaoo"},"content":"5. **Step 5. Exit Editing**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"YanXinyaoo"},"content":"- The user can choose to exit the editing process when complete.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"YanXinyaoo"},"content":"- All modified data is saved to persistent storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"YanXinyaoo"},"content":"![EditEvent Sequence Diagram](graph/EditEvent/EditEvent.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 1: Admin-Only Access**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Restrict editing to administrators only.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Maintains data integrity by controlling who can modify events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Limits flexibility for non-admin users who may need to adjust their own events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 2: Availability Verification**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Verify participant availability before confirming time changes.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Prevents scheduling participants during their unavailable times.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Adds complexity to time-editing operations.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 3: Incremental Editing**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Allow users to edit individual aspects of an event rather than replacing the entire event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Provides fine-grained control and preserves existing data that doesn\u0027t need to change.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Requires more complex UI flow with multiple edit options.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"YanXinyaoo"},"content":"### 3. Conflict Detector Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"HuaZhenting"},"content":"The `ConflictDetector` feature checks for overlapping events in a user\u0027s schedule.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"HuaZhenting"},"content":"1. **Conflict Check**: Compares the start and end times of all events in EventList.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"HuaZhenting"},"content":"2. **Feedback to User**: If conflicts are detected, a warning message is displayed to the user.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"HuaZhenting"},"content":"- **Why this design?**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"HuaZhenting"},"content":"  - Ensures users are aware of scheduling conflicts, preventing double-booking.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"HuaZhenting"},"content":"  - Improves event management by highlighting overlapping schedules.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"YanXinyaoo"},"content":"### 4. List Event Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"YanXinyaoo"},"content":"The `ListEventCommand` feature allows users to list all events in their schedule. It is implemented using the `Command` pattern, where `ListEventCommand` extends `Command`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"YanXinyaoo"},"content":"1. **Step 1. CLI Input (`list` Command)**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"YanXinyaoo"},"content":"  - The user inputs the `list` command via the CLI. This command is parsed, and the `Parser` creates a `ListEventCommandFactory` object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"YanXinyaoo"},"content":"2. **Step 2. Command Object Creation**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"YanXinyaoo"},"content":"  - The `ListEventCommand` object is created, which will contain the logic to retrieve and display the events.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"Lydialkx"},"content":"3. **Step 3. Command Execution**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"Lydialkx"},"content":"  - `ListCommand.execute()` is called. It:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"Lydialkx"},"content":"    - Retrieves the current logged-in user from `ParticipantManager`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Lydialkx"},"content":"    - Filters the events from `EventManager` based on those involving the current user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"Lydialkx"},"content":"    - Sorts the events using the specified `Sort` strategy (`SortByPriority`, `SortByStartTime`, or `SortByEndTime`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"Lydialkx"},"content":"    - Displays the events via `UI.showEventWithIndex(...)` with both event details and priority.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"YanXinyaoo"},"content":"![ListEvent Sequence Diagram](graph/ListEvent/ListEvent.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 1: Event Retrieval**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Retrieve all events directly from the system’s storage.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Simple and efficient for small data sets.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: May become inefficient for large data sets or if there are a lot of events to display.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"Lydialkx"},"content":"**Aspect 2: Sorting Strategy Implementation**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"Lydialkx"},"content":"- **Alternative 1 (current choice)**: Uses the Strategy Pattern to dynamically choose a sorting strategy ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"Lydialkx"},"content":"(`SortByStartTime`, `SortByEndTime`, `SortByPriority`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"Lydialkx"},"content":"  - **Pros**: Promotes open/closed principle — easy to add new sorting strategies without modifying existing code.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"Lydialkx"},"content":"  - **Cons**: Adds additional complexity when only one sorting mechanism is used; might be overkill for small use cases.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"YanXinyaoo"},"content":"### 5. Delete Event Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"Lydialkx"},"content":"The `DeleteCommand` feature users to remove an event from their schedule by keyword. If multiple events share the same name, users are prompted to select the correct one based on the list shown.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"Lydialkx"},"content":"1. **User Input Parsing**: ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"Lydialkx"},"content":"The `Parser` reads the event keyword from user input using `readDeleteName()`. `findMatchingEvents(name)` is used to gather all matching events. ","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"Lydialkx"},"content":"If more than one match is found, the UI shows them with indices for disambiguation.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"Lydialkx"},"content":"2. **Event Deletion Flow**: The selected event is passed to `DeleteCommand` with the correct index. In `execute()`, the user is asked to confirm the deletion via `ui.confirmDeletion()`.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"Lydialkx"},"content":"3. **Data Synchronization**: If confirmed, the event and its corresponding priority are removed.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"Lydialkx"},"content":"![DeleteEvent.png](graph/DeleteEvent/DeleteEvent.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"Lydialkx"},"content":"- **Why this design?**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"Lydialkx"},"content":"  - Maintains consistency between the events list and the priority list.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"Lydialkx"},"content":"  - Ensures safe deletion by confirming with the user.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"YanXinyaoo"},"content":"### 6. Priority Filter Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"HuaZhenting"},"content":"The `PriorityFilter` feature allows users to filter events assigned to him based on priority levels:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"HuaZhenting"},"content":"- LOW ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"HuaZhenting"},"content":"- MEDIUM ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"HuaZhenting"},"content":"- HIGH ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"HuaZhenting"},"content":"Input Formats Supported:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"HuaZhenting"},"content":"- 1. Single priority (e.g., \"LOW\"):","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"HuaZhenting"},"content":"  - Filters events with exact priority match.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"HuaZhenting"},"content":"- 2. Range of priorities (e.g., \"LOW HIGH\"):","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"HuaZhenting"},"content":"  - Filters events that fall within the inclusive range between the two specified priorities.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"HuaZhenting"},"content":"  - The order of priorities matters。","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"HuaZhenting"},"content":"  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"HuaZhenting"},"content":"1. **User Input Parsing**: The Parser class parses input to FilterCommandFactory.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"HuaZhenting"},"content":"2. **Message Processing**: The FilterCommandFactory class processes input in format {PRIORITY} or {PRIORITY PRIORITY}.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"HuaZhenting"},"content":"2. **Event Filtering**:  The FilterCommand handles the logic of comparing each event’s priority.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"HuaZhenting"},"content":"3. **Display**: Events are printed to the user by the UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"HuaZhenting"},"content":"![FilterEvent.png](graph/FilterEvent/FilterEvent.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"HuaZhenting"},"content":"- **Why this design?**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"HuaZhenting"},"content":"  - Provides flexibility for both simple and advanced users.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"HuaZhenting"},"content":"  - Enhances user control and visibility over event prioritization.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"HuaZhenting"},"content":"  - Keeps implementation simple and extensible for future priority levels.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"YanXinyaoo"},"content":"### 7. Duplicate Event Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"yeeern27"},"content":"The `DuplicateEventCommand` feature allows users to duplicate an existing event to their schedule. It is implemented using the `Command` pattern, where `DuplicateEventCommand` extends `Command`.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"YanXinyaoo"},"content":"1. **Step 1. CLI Input (`duplicate` Command)**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"YanXinyaoo"},"content":"- The user inputs the `duplicate` command via the CLI. This command is parsed, and the `Parser` creates a `DuplicateEventCommandFactory` object.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"YanXinyaoo"},"content":"2. **Step 2. Event Selection**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"YanXinyaoo"},"content":"- The system prompts the user to input the index of the event they wish to duplicate.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"YanXinyaoo"},"content":"3. **Step 3. New Event Name Collection**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"YanXinyaoo"},"content":"- The system prompts the user to input a new name for the duplicated event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"YanXinyaoo"},"content":"4. **Step 4. Command Object Creation**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"YanXinyaoo"},"content":"- The `DuplicateEventCommand` object is created with the event index and new name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"YanXinyaoo"},"content":"5. **Step 5. Executing Event Duplication**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"YanXinyaoo"},"content":"- The system creates a copy of the selected event with the new name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"YanXinyaoo"},"content":"- The duplicated event retains all properties of the original event (time, location, participants, etc.).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"YanXinyaoo"},"content":"- The duplicate event is added to the system and saved to storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"YanXinyaoo"},"content":"- A confirmation message is displayed to the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"YanXinyaoo"},"content":"![DuplicateEvent Sequence Diagram](graph/DuplicateEvent/DuplicateEvent.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 1: Duplication Approach**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Create a complete copy of the existing event with a new name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Simple implementation that preserves all event details.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: May duplicate unnecessary information if user only wants to reuse part of an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 2: Participant Handling**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Copy all participants from the original event to the duplicate.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Maintains team consistency across duplicate events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: May require additional participant availability checks.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 3: Time Assignment**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Keep the same time as the original event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Simplifies the duplication process.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: May lead to scheduling conflicts if the event is meant for a different time.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"YanXinyaoo"},"content":"### 8. Add Participant Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"sxkhoo"},"content":"The `AddParticipantCommand` feature enables users to add a participant to a specific event.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"YanXinyaoo"},"content":"1. **Step 1. CLI Input (`addp` Command)**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"YanXinyaoo"},"content":"- The user inputs the `addp` command via the CLI. This command is parsed, and the `Parser` creates an `AddParticipantCommandFactory` object.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"YanXinyaoo"},"content":"2. **Step 2. Event Selection**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"YanXinyaoo"},"content":"- The system prompts the user to input the index of the event to which they want to add a participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"YanXinyaoo"},"content":"3. **Step 3. Participant Information Collection**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"YanXinyaoo"},"content":"- The system prompts the user to input the participant\u0027s name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"YanXinyaoo"},"content":"- The system prompts the user to specify the access level (ADMIN or MEMBER) for the participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"YanXinyaoo"},"content":"4. **Step 4. Command Object Creation**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"YanXinyaoo"},"content":"- The `AddParticipantCommand` object is created with the event index, participant name, and access level.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"YanXinyaoo"},"content":"5. **Step 5. Executing Participant Addition**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"YanXinyaoo"},"content":"- The system validates that the event index and access level are valid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"YanXinyaoo"},"content":"- The participant is added to the event with the specified access level.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"YanXinyaoo"},"content":"- The updated event information is saved to storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"YanXinyaoo"},"content":"- A confirmation message is displayed to the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"YanXinyaoo"},"content":"![AddParticipant Sequence Diagram](graph/AddParticipant/AddParticipant.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 1: Access Level Assignment**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Allow specifying ADMIN or MEMBER access when adding participants.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Provides fine-grained control over participant permissions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Adds complexity to the participant addition process.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 2: Availability Checking**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Check participant availability before adding them to an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Prevents scheduling conflicts for participants.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Requires maintaining availability information for all participants.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 3: Duplicate Handling**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Prevent adding the same participant to an event multiple times.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Maintains data integrity and prevents confusion.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Requires additional validation checks.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"YanXinyaoo"},"content":"### 9. List Participants Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"sxkhoo"},"content":"The `ListParticipantsCommand` feature lists all participants assigned to a specific event.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"YanXinyaoo"},"content":"1. **Step 1. CLI Input (`listp` Command)**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"YanXinyaoo"},"content":"- The user inputs the `listp` command via the CLI. This command is parsed, and the `Parser` creates a `ListParticipantsCommandFactory` object.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"YanXinyaoo"},"content":"2. **Step 2. Event Selection**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"YanXinyaoo"},"content":"- The system prompts the user to input the index of the event for which they want to list participants.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"YanXinyaoo"},"content":"3. **Step 3. Command Object Creation**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"YanXinyaoo"},"content":"- The `ListParticipantsCommand` object is created with the event index.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"YanXinyaoo"},"content":"4. **Step 4. Executing Participant Listing**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"YanXinyaoo"},"content":"- The system retrieves the event based on the provided index.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"YanXinyaoo"},"content":"- The system fetches all participants assigned to the event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"YanXinyaoo"},"content":"- The participant information (names and access levels) is displayed to the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"YanXinyaoo"},"content":"![ListParticipants Sequence Diagram](graph/ListParticipants/ListParticipants.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 1: Display Format**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Display participant names along with their access levels.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Provides complete information about each participant\u0027s role.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: May clutter the display for events with many participants.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 2: Sorting Order**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: List participants in the order they were added to the event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Simple implementation with natural historical ordering.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: May not be the most useful ordering for all use cases.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 3: Access Control**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Allow any user to view the participant list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Promotes transparency in event management.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: May expose participant information too broadly.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"YanXinyaoo"},"content":"### 10. Event Storage Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"YanXinyaoo"},"content":"The `Storage` class handles persistent storage of event data to disk. It implements serialization/deserialization of events with participant associations.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"YanXinyaoo"},"content":"1. **Step 1. Saving Events**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"YanXinyaoo"},"content":"  - Receives List\u003cEvent\u003e from EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"YanXinyaoo"},"content":"  - Formats each event with pipe-separated values","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"YanXinyaoo"},"content":"  - Writes to specified file path with error handling","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"YanXinyaoo"},"content":"  - Example: `Meeting | 2025-10-15 15:00 | 2025-10-16 02:00 | Meeting Room | Weekly Meeting | LOW | `","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"YanXinyaoo"},"content":"2. **Step 2. Loading Events**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"YanXinyaoo"},"content":"  - Reads file line by line","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"YanXinyaoo"},"content":"  - Parses each line into event components","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"YanXinyaoo"},"content":"  - Reconstructs Participant objects via UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"YanXinyaoo"},"content":"  - Returns ArrayList\u003cEvent\u003e for system initialization","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"YanXinyaoo"},"content":"![Storage Sequence Diagram](graph/Storage/StorageSequenceDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 1: Data Formatting**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Pipe-delimited values with custom participant formatting","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Human-readable, easy to debug","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Requires escaping special characters","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 2: Error Handling**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"YanXinyaoo"},"content":"- **Choice**: Skip corrupted lines but continue loading","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Maintains maximum data availability","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Potential silent failures","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"YanXinyaoo"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"YanXinyaoo"},"content":"### 11. User Storage Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"YanXinyaoo"},"content":"The `UserStorage` class manages persistent storage of participant data including availability slots.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"YanXinyaoo"},"content":"1. **Step 1. Saving Users**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"YanXinyaoo"},"content":"  - Formats participant data with access levels","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"YanXinyaoo"},"content":"  - Serializes availability slots as time ranges","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"YanXinyaoo"},"content":"  - Uses pipe-delimited format with semicolon-separated slots","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"YanXinyaoo"},"content":"  - Example: `name | ACCESSLEVEL | password | 2023-10-10 14:00,2023-10-10 15:00`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"YanXinyaoo"},"content":"2. **Step 2. Loading Users**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"YanXinyaoo"},"content":"  - Parses each line into Participant objects","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"YanXinyaoo"},"content":"  - Reconstructs availability time slots","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"YanXinyaoo"},"content":"  - Maintains relationship with Event participants","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"YanXinyaoo"},"content":"  - Returns ArrayList\u003cParticipant\u003e for system use","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"YanXinyaoo"},"content":"![UserStorage Sequence Diagram](graph/Storage/UserStorageSequenceDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 1: Authentication Data Storage**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"YanXinyaoo"},"content":"- **Alternative 1 (current choice)**: Store passwords in plaintext","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Simple implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Security vulnerability","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"YanXinyaoo"},"content":"### 12. Login System Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"YanXinyaoo"},"content":"The login system manages user authentication and session state through the `ParticipantManager` class.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"YanXinyaoo"},"content":"1. **Step 1. Login Process**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"YanXinyaoo"},"content":"  - User enters username via CLI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"YanXinyaoo"},"content":"  - System checks existence via `getParticipant(username)`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"YanXinyaoo"},"content":"  - Valid user is prompted for password","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"YanXinyaoo"},"content":"  - Successful authentication sets `currentUser`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"YanXinyaoo"},"content":"  - Failed attempts allow retry or exit","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"YanXinyaoo"},"content":"2. **Step 2. Logout Process**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"YanXinyaoo"},"content":"  - Clears `currentUser` reference","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"YanXinyaoo"},"content":"  - Notifies UI of session termination","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"YanXinyaoo"},"content":"  - Maintains all participant data","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"YanXinyaoo"},"content":"3. **Step 3. User Creation**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"YanXinyaoo"},"content":"  - New participants added via `create`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"YanXinyaoo"},"content":"  - Immediately persists to storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"YanXinyaoo"},"content":"  - Includes name, password, access level and available slots","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"YanXinyaoo"},"content":"Login SD","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"YanXinyaoo"},"content":"![Simplified Login Sequence Diagram](graph/LoginSystem/LoginSequenceDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"YanXinyaoo"},"content":"Logout SD","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"YanXinyaoo"},"content":"![Simplified Logout Sequence Diagram](graph/LoginSystem/LogOutSequenceDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"YanXinyaoo"},"content":"Create user SD","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"YanXinyaoo"},"content":"![Simplified Create User Sequence Diagram](graph/LoginSystem/CreateSequenceDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"YanXinyaoo"},"content":"### Design Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 1: Authentication Method**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"YanXinyaoo"},"content":"- **Current Choice**: Password matching in plaintext","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Simple to implement and debug","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Serious security vulnerability","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"YanXinyaoo"},"content":"  - *Future Improvement*: Implement password hashing","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 2: Session Management**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"YanXinyaoo"},"content":"- **Choice**: Single active session via `currentUser`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Lightweight implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: No concurrent multi-user support","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"YanXinyaoo"},"content":"  - *Tradeoff*: Matches CLI application constraints","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"YanXinyaoo"},"content":"**Aspect 3: Error Recovery**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"YanXinyaoo"},"content":"- **Implementation**: Recursive retry on failure","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"YanXinyaoo"},"content":"  - **Pros**: Good user experience","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"YanXinyaoo"},"content":"  - **Cons**: Potential stack overflow risk","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"YanXinyaoo"},"content":"  - *Alternative*: Iterative retry with attempt limit","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"HuaZhenting"},"content":"### 13. List All Events Feature","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"HuaZhenting"},"content":"### Implementation","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"HuaZhenting"},"content":"The `listall` feature displays all events currently stored in the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"HuaZhenting"},"content":"This command is restricted to ADMIN users only.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"HuaZhenting"},"content":"After invocation, the user is prompted to choose a sorting method to organize the displayed events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"HuaZhenting"},"content":"Access Control:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"HuaZhenting"},"content":"- Only users with ADMIN access level may execute the `listall` command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"HuaZhenting"},"content":"- If a non-ADMIN user attempts access, a warning is issued.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"HuaZhenting"},"content":"**Workflow:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"HuaZhenting"},"content":"- 1. Command Parsing:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"HuaZhenting"},"content":"  - The ADMIN user inputs the listall command via the CLI. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"HuaZhenting"},"content":"  - The Parser identifies this input and delegates the creation to a ListAllCommandFactory.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"HuaZhenting"},"content":"- 2. Command Object Construction:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"HuaZhenting"},"content":"  - ListAllCommandFactory checks that the current user is ADMIN.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"HuaZhenting"},"content":"  - Returns a ListAllCommand instance","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"HuaZhenting"},"content":"- 3. Command Execution:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"HuaZhenting"},"content":"  - ListAllCommand.execute() does the following:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"HuaZhenting"},"content":"    - Re-validates login and ADMIN status.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"HuaZhenting"},"content":"    - Retrieves all events from EventManager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"HuaZhenting"},"content":"    - Sorts events using chosen Sort strategy.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"HuaZhenting"},"content":"    - Displays results using the UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"HuaZhenting"},"content":"![List All Events Sequence Diagram](graph/ListAllEvents/ListAllEvents.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"HuaZhenting"},"content":"### Design Considerations","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"HuaZhenting"},"content":"**Aspect 1: Access Control**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"HuaZhenting"},"content":"- **Implementation**: Restrict access to only ADMIN users.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"HuaZhenting"},"content":"  - **Pros**: Ensures data confidentiality; prevents unauthorized access.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"HuaZhenting"},"content":"  - **Cons**: Non-admin users cannot view full event list, even if necessary for context.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"HuaZhenting"},"content":"* **Aspect 3: User Interaction for Sort Type**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"HuaZhenting"},"content":"* - **Implementation**: Prompt user for sort input at runtime using `UI.readListCommandInput()`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"HuaZhenting"},"content":"*   - **Pros**: Allows flexible choice each time the command is called.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"HuaZhenting"},"content":"*   - **Cons**: Requires additional input step from the user; might reduce efficiency if used frequently.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"Lydialkx"},"content":"## Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"HuaZhenting"},"content":"### Documentation Guide","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"HuaZhenting"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"HuaZhenting"},"content":"- We use [Jekyll](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"HuaZhenting"},"content":"- The `docs/` folder is used for documentation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"HuaZhenting"},"content":"- If you are using Intellij for editing documentation files, you can consider enabling ‘soft wrapping’ for *.md files.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"HuaZhenting"},"content":"**Style guidance:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"HuaZhenting"},"content":"- Follow the [Google developer documentation style guide](https://developers.google.com/style).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"HuaZhenting"},"content":"- Also relevant is [[se-edu/guides] Markdown coding standard](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"HuaZhenting"},"content":"**Diagrams:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"HuaZhenting"},"content":"- See the [[se-edu/guides] Using PlantUML](https://se-education.org/guides/tutorials/plantUml.html).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"Lydialkx"},"content":"### Logging Guide","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"Lydialkx"},"content":"This project uses Java\u0027s built-in `java.util.logging` package for logging.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"Lydialkx"},"content":"- The `EventSyncLogger` class configures a shared `Logger` instance.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"Lydialkx"},"content":"- Logs are written to both the **console** and a log file named `app.log` in the root directory.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"Lydialkx"},"content":"- Logging levels are controlled with:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"Lydialkx"},"content":"  - `ConsoleHandler`: shows logs of level `INFO` and above.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"Lydialkx"},"content":"  - `FileHandler`: captures all logs (`Level.ALL`) into the file.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"Lydialkx"},"content":"#### Initializing the Logger","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"Lydialkx"},"content":"Call the following method **once at application startup**:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"Lydialkx"},"content":"  ```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"Lydialkx"},"content":"  EventSyncLogger.setupLogger();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"Lydialkx"},"content":"  ```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"Lydialkx"},"content":"#### Using the Logger","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"Lydialkx"},"content":"To use the logger in any class:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"Lydialkx"},"content":"  ```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"Lydialkx"},"content":"  Logger logger \u003d EventSyncLogger.getLogger();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"Lydialkx"},"content":"  logger.info(\"Login successful\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"Lydialkx"},"content":"  logger.warning(\"Password attempt failed\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"Lydialkx"},"content":"  logger.severe(\"Unexpected null reference during sync\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"Lydialkx"},"content":"  ```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"YanXinyaoo"},"content":"## Product Scope","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"YanXinyaoo"},"content":"### Target User Profile","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"YanXinyaoo"},"content":"The target user profile for this application includes individuals who need to manage their personal or professional schedules. These users may be:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"YanXinyaoo"},"content":"- Students who need to track assignments and exam dates.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"YanXinyaoo"},"content":"- Professionals who need to manage meetings, deadlines, and other appointments.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"YanXinyaoo"},"content":"- Anyone looking for a simple, easy-to-use event management tool.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"YanXinyaoo"},"content":"### Value Proposition","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"YanXinyaoo"},"content":"This application addresses the need for a lightweight, easy-to-use solution for managing and organizing events. It provides the following value:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"YanXinyaoo"},"content":"- **Simple Event Management**: Users can add, list, and organize their events with minimal effort.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"YanXinyaoo"},"content":"- **Persistence**: Events are saved between application sessions, ensuring that users\u0027 data is not lost.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"YanXinyaoo"},"content":"- **Flexibility**: It allows users to customize events and sort them in the order they choose (chronologically).","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"YanXinyaoo"},"content":"By providing these features, the application allows users to focus on their tasks and not on manually managing their schedule.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"-"},"content":"| Version | As a ...    | I want to ...                          | So that I can ...                                |","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"YanXinyaoo"},"content":"|---------|-------------|----------------------------------------|--------------------------------------------------|","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"YanXinyaoo"},"content":"| v1.0    | team leader | add an event with a description and date/time | keep track of important events and deadlines |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"YanXinyaoo"},"content":"| v1.0    | user        | list all my events                    | see all my events organized by date/time |","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"YanXinyaoo"},"content":"| v2.0    | user        | store events persistently             | ensure my events remain even after restarting the application |","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"YanXinyaoo"},"content":"| v2.0    | team leader | edit event details                    | fix errors or update times                        |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"YanXinyaoo"},"content":"| v2.0    | user        | filter events by priority             | focus on high-priority tasks when needed          |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"YanXinyaoo"},"content":"| v2.0    | team leader | add participants to events            | track who is involved in each activity            |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"YanXinyaoo"},"content":"| v2.0    | user        | detect scheduling conflicts           | avoid double-booking myself                       |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"YanXinyaoo"},"content":"| v2.0    | team leader | duplicate existing events             | quickly create similar events without re-entering all details |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"YanXinyaoo"},"content":"| v2.0    | user        | sort events in different ways         | view my schedule according to my current needs    |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"YanXinyaoo"},"content":"| v2.0    | user        | create a user profile                 | have personalized access to the system            |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"YanXinyaoo"},"content":"| v2.0    | user        | log in and out of the system          | keep my schedule information secure               |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"YanXinyaoo"},"content":"- **Performance**: The application should be able to handle up to 1000 events efficiently, with quick load and save times.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"YanXinyaoo"},"content":"- **Usability**: The application should be easy to use with minimal training. User commands should be clear and simple.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"YanXinyaoo"},"content":"- **Reliability**: The application should be stable, with no crashes or errors during typical use cases. Data should not be lost in case of unexpected shutdowns.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"YanXinyaoo"},"content":"- **Portability**: The application should work on different platforms, such as Windows, macOS, and Linux, as long as Java is installed.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"YanXinyaoo"},"content":"- **Maintainability**: The codebase should be easy to maintain and extend, with well-documented functions and modular code.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"YanXinyaoo"},"content":"- **Scalability**: The application should be able to scale to handle more complex user cases, such as handling recurring events or multiple event categories.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"YanXinyaoo"},"content":"* **Event** - A scheduled activity with a description and a specific date/time.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"YanXinyaoo"},"content":"* **EventManager** - Component that manages the collection of events and operations on them.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"YanXinyaoo"},"content":"* **Command Pattern** - A design pattern that encapsulates a request as an object, allowing for parameterization of clients with different requests.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"YanXinyaoo"},"content":"* **Factory Pattern** - A creational pattern that uses factory methods to create objects without specifying the exact class.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"YanXinyaoo"},"content":"* **Strategy Pattern** - A behavioral design pattern that enables selecting an algorithm at runtime.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"YanXinyaoo"},"content":"* **Serialization** - The process of converting an object into a format (such as text) that can be stored or transmitted, and later reconstructed.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"YanXinyaoo"},"content":"* **Participant** - A user who is assigned to an event with a specific access level.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"YanXinyaoo"},"content":"* **Priority** - A label indicating the importance level of an event (LOW, MEDIUM, HIGH).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"YanXinyaoo"},"content":"# Manual Testing Documentation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"YanXinyaoo"},"content":"## Phase 1: Admin Setup \u0026 Operations","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"YanXinyaoo"},"content":"### 1. Create Admin Account","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"YanXinyaoo"},"content":"  1. Run application","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"YanXinyaoo"},"content":"  2. Execute `createUser` command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"YanXinyaoo"},"content":"  3. Enter:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"YanXinyaoo"},"content":"    - Name: `admin1`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"YanXinyaoo"},"content":"    - Password: `admin123`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"YanXinyaoo"},"content":"    - AccessLevel: `ADMIN`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"YanXinyaoo"},"content":"    - Availability: Provide valid time slots","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"YanXinyaoo"},"content":"  - Admin account created successfully","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"YanXinyaoo"},"content":"  - Account stored in UserStorage","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"YanXinyaoo"},"content":"### 2. Admin Login","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"YanXinyaoo"},"content":"  1. Execute `login` command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"YanXinyaoo"},"content":"  2. Enter:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"YanXinyaoo"},"content":"    - Username: `admin1`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"YanXinyaoo"},"content":"    - Password: `admin123`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"YanXinyaoo"},"content":"  - Login success message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"YanXinyaoo"},"content":"  - `currentUser` set to admin1 with ADMIN privileges","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"YanXinyaoo"},"content":"  - Admin menu options displayed","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"YanXinyaoo"},"content":"### 3. Other Operations(no restriction)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"YanXinyaoo"},"content":"- See addtional features listed below","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"YanXinyaoo"},"content":"### 4. Admin Logout","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"YanXinyaoo"},"content":"  1. Execute `logout` command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"YanXinyaoo"},"content":"  - Session terminated","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"YanXinyaoo"},"content":"  - `currentUser` set to null","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"YanXinyaoo"},"content":"  - Return to login screen","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"YanXinyaoo"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"YanXinyaoo"},"content":"## Phase 2: Member Setup \u0026 Operations","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"YanXinyaoo"},"content":"### 1. Create Member Account","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"YanXinyaoo"},"content":"  1. Execute `createUser` command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"YanXinyaoo"},"content":"  2. Enter:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"YanXinyaoo"},"content":"    - Name: `member1`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"YanXinyaoo"},"content":"    - Password: `member123`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"YanXinyaoo"},"content":"    - AccessLevel: `MEMBER`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"YanXinyaoo"},"content":"    - Availability: Provide valid time slots","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"YanXinyaoo"},"content":"  - Member account created","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"YanXinyaoo"},"content":"  - Stored with MEMBER access level","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"YanXinyaoo"},"content":"### 2. Member Login","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"YanXinyaoo"},"content":"  1. Execute `login` command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"YanXinyaoo"},"content":"  2. Enter:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"YanXinyaoo"},"content":"    - Username: `member1`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"YanXinyaoo"},"content":"    - Password: `member123`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"YanXinyaoo"},"content":"  - Login success message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"YanXinyaoo"},"content":"  - `currentUser` set to member1","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"YanXinyaoo"},"content":"  - Member menu options displayed","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"YanXinyaoo"},"content":"### 3. Member Operations (Can only view events assigned to you)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"YanXinyaoo"},"content":"- See addtional features listed below","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"YanXinyaoo"},"content":"### 4. Member Logout","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"YanXinyaoo"},"content":"  1. Execute `logout` command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"YanXinyaoo"},"content":"  - Session terminated","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"YanXinyaoo"},"content":"  - Return to login screen","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"YanXinyaoo"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"YanXinyaoo"},"content":"## Phase 3 : Verification Checks","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"YanXinyaoo"},"content":"1. **Storage Validation**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"YanXinyaoo"},"content":"  - Verify both accounts persist after restart","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"YanXinyaoo"},"content":"  - Check event ownership records","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"YanXinyaoo"},"content":"2. **Access Control**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"YanXinyaoo"},"content":"  - Confirm admin can use all commands","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"YanXinyaoo"},"content":"  - Verify member can use restricted command set","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"YanXinyaoo"},"content":"  - ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"YanXinyaoo"},"content":"3. **Session Security**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"YanXinyaoo"},"content":"  - Verify proper session termination on logout","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"YanXinyaoo"},"content":"  - Confirm credentials required for re-login","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"YanXinyaoo"},"content":"### Additional Features","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"YanXinyaoo"},"content":"### 1. Add Event Feature","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 1.1: Add Event with Valid Input","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `add` command in CLI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"YanXinyaoo"},"content":"  2. Provide valid event details (name, time, location)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"YanXinyaoo"},"content":"  3. Specify priority level (e.g., HIGH)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"YanXinyaoo"},"content":"  - Event added successfully","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"YanXinyaoo"},"content":"  - Confirmation message displayed","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"YanXinyaoo"},"content":"  - Event appears in list view","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 1.2: Add Event with Missing Participant","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":991,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `add` command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":992,"author":{"gitId":"YanXinyaoo"},"content":"  2. Omit participant field","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":993,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":994,"author":{"gitId":"YanXinyaoo"},"content":"  - `SyncException` thrown","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":995,"author":{"gitId":"YanXinyaoo"},"content":"  - Error message: \"Participant must be specified\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":996,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":997,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 1.3: Add Event with Time Conflict","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":998,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":999,"author":{"gitId":"YanXinyaoo"},"content":"  1. Add event at specific time","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1000,"author":{"gitId":"YanXinyaoo"},"content":"  2. Attempt to add another event at same time/location","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1001,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1002,"author":{"gitId":"YanXinyaoo"},"content":"  - `SyncException` thrown","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1003,"author":{"gitId":"YanXinyaoo"},"content":"  - Error message: \"Scheduling conflict detected\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1004,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1005,"author":{"gitId":"YanXinyaoo"},"content":"### 2. Edit Event Feature","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1006,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1007,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 2.1: Edit Existing Event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1008,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1009,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `edit` with valide index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1010,"author":{"gitId":"YanXinyaoo"},"content":"  2. Modify event details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1011,"author":{"gitId":"YanXinyaoo"},"content":"  3. Confirm changes","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1012,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1013,"author":{"gitId":"YanXinyaoo"},"content":"  - Event details updated","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1014,"author":{"gitId":"YanXinyaoo"},"content":"  - Changes persisted in storage","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1015,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1016,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 2.2: Edit Non-existent Event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1017,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1018,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `edit` with invalid index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1019,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1020,"author":{"gitId":"YanXinyaoo"},"content":"  - Error message: \"Invalid event index\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1021,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1022,"author":{"gitId":"YanXinyaoo"},"content":"### 3. Conflict Detector","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1023,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1024,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 3.1: Detect Overlapping Events","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1025,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1026,"author":{"gitId":"YanXinyaoo"},"content":"  1. Create two events with overlapping times","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1027,"author":{"gitId":"YanXinyaoo"},"content":"  2. Run conflict check","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1028,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1029,"author":{"gitId":"YanXinyaoo"},"content":"  - System identifies conflict","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1030,"author":{"gitId":"YanXinyaoo"},"content":"  - Warning message displayed","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1031,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1032,"author":{"gitId":"YanXinyaoo"},"content":"### 4. List Events","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1033,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1034,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 4.1: List Events","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1035,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1036,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1037,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1038,"author":{"gitId":"YanXinyaoo"},"content":"  - Only events assigned to you displayed with complete details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1039,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1040,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 4.2: Empty Event List","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1041,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1042,"author":{"gitId":"YanXinyaoo"},"content":"  1. Clear all events","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1043,"author":{"gitId":"YanXinyaoo"},"content":"  2. Enter `list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1044,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1045,"author":{"gitId":"YanXinyaoo"},"content":"  - Message: \"No events available\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1046,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1047,"author":{"gitId":"YanXinyaoo"},"content":"### 5. Delete Event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1048,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1049,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 5.1: Delete by Name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1050,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1051,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `delete` with valid name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1052,"author":{"gitId":"YanXinyaoo"},"content":"  2. Confirm deletion","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1053,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1054,"author":{"gitId":"YanXinyaoo"},"content":"  - Event removed from list","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1055,"author":{"gitId":"YanXinyaoo"},"content":"  - Storage updated","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1056,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1057,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 5.2: Delete Non-existent Event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1058,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1059,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `delete` with invalid name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1060,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1061,"author":{"gitId":"YanXinyaoo"},"content":"  - Error message: \"Event not found\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1062,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1063,"author":{"gitId":"YanXinyaoo"},"content":"### 6. Priority Filter","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1064,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1065,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 6.1: Filter by Priority","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1066,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1067,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `filter` and choose priority `HIGH`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1068,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1069,"author":{"gitId":"YanXinyaoo"},"content":"  - Only HIGH priority events shown","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1070,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1071,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 6.2: No Matching Priority","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1072,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1073,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `filter` and choose priority `LOW` (when none exist)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1074,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1075,"author":{"gitId":"YanXinyaoo"},"content":"  - Message: \"No events with LOW priority\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1076,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1077,"author":{"gitId":"YanXinyaoo"},"content":"### 7. Duplicate Event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1078,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1079,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 7.1: Duplicate Valid Event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1080,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1081,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `duplicate` with valid index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1082,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1083,"author":{"gitId":"YanXinyaoo"},"content":"  - New event created with same details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1084,"author":{"gitId":"YanXinyaoo"},"content":"  - Original event unchanged","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1085,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1086,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 7.2: Duplicate Invalid Event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1087,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1088,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `duplicate` with invalid index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1089,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1090,"author":{"gitId":"YanXinyaoo"},"content":"  - Error message: \"Invalid event index\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1091,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1092,"author":{"gitId":"YanXinyaoo"},"content":"### 8. Participant Management","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1093,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1094,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 8.1: Add Participant","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1095,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1096,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `addParticipant` with valid event index and participant name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1097,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1098,"author":{"gitId":"YanXinyaoo"},"content":"  - Participant added to event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1099,"author":{"gitId":"YanXinyaoo"},"content":"  - Role assignment confirmed","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1100,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1101,"author":{"gitId":"YanXinyaoo"},"content":"#### Test Case 8.2: List Participants","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1102,"author":{"gitId":"YanXinyaoo"},"content":"- **Steps**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1103,"author":{"gitId":"YanXinyaoo"},"content":"  1. Enter `listParticipants`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1104,"author":{"gitId":"YanXinyaoo"},"content":"- **Expected**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1105,"author":{"gitId":"YanXinyaoo"},"content":"  - All participants listed with roles","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1106,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1107,"author":{"gitId":"YanXinyaoo"},"content":"# Future Features","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1108,"author":{"gitId":"YanXinyaoo"},"content":"EventSync Future Development Roadmap","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1109,"author":{"gitId":"YanXinyaoo"},"content":"Proposed Features","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1110,"author":{"gitId":"YanXinyaoo"},"content":"1. Event Management","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1111,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1112,"author":{"gitId":"YanXinyaoo"},"content":"  - Advanced filtering and sorting","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1113,"author":{"gitId":"YanXinyaoo"},"content":"  - Take attendance system","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1114,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1115,"author":{"gitId":"YanXinyaoo"},"content":"2. Collaboration","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1116,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1117,"author":{"gitId":"YanXinyaoo"},"content":"- Shared calendars","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1118,"author":{"gitId":"YanXinyaoo"},"content":"- Invitation system","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1119,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1120,"author":{"gitId":"YanXinyaoo"},"content":"3. Smart Features","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1121,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1122,"author":{"gitId":"YanXinyaoo"},"content":"- Automated scheduling suggestions","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1123,"author":{"gitId":"YanXinyaoo"},"content":"- Performance analytics","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1124,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"Lydialkx":126,"HuaZhenting":117,"sxkhoo":73,"YanXinyaoo":766,"yeeern27":11,"-":31}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"# EventSync","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"# Introduction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"EventSync is a powerful, user-friendly command-line application designed to revolutionize the way you organize and manage events. In a world of complex scheduling and coordination, EventSync offers a simple yet comprehensive solution for individuals and teams who need to stay on top of their event planning.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"# Key Challenges We Solve","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"Event Complexity: Easily create, track, and manage multiple events","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"Participant Coordination: Seamlessly add and manage event participants","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"Quick Access: Instantly search, filter, and retrieve event information","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"User-Friendly Interface: Intuitive command-line interface for efficient event management","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"# Who Can Benefit","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"Project Managers","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"Team Coordinators","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"Event Planners","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"Students","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"Professionals managing multiple commitments","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"# Useful links:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":19,"-":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"## Table of Contents","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"1. [Introduction](#introduction)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"2. [Quick Start](#quick-start)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yeeern27"},"content":"3. [Features](#features)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yeeern27"},"content":"    - 3.1 [`create` - Create user](#-create--creates-a-user-and-sets-availability)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"    - 3.2 [`login` - Log in](#-login--log-in-as-an-existing-participant)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yeeern27"},"content":"    - 3.3 [`logout` - Log out](#-logout--ends-the-current-user-session)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"    - 3.4 [`add` - Add event](#-add--add-a-new-event)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yeeern27"},"content":"    - 3.5 [`edit` - Edit event](#-edit--edit-details-of-an-existing-event) ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yeeern27"},"content":"    - 3.6 [`delete` - Delete event](#-delete--delete-an-event-from-system) ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"    - 3.7 [`list` - List events](#-list--list-events-assigned-to-you)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yeeern27"},"content":"    - 3.8 [`listall` - List all events](#-listall--list-all-events-in-the-system) ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    - 3.9 [`find` - Search events](#-find-keyword--search-for-events)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"    - 3.10 [`filter` - Filter events](#-filter--show-events-by-priority)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yeeern27"},"content":"    - 3.11 [`duplicate` - Duplicate event](#-duplicate--duplicate-an-existing-event)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    - 3.12 [`addparticipant` - Add participant](#-addparticipant--assign-participant-to-event)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    - 3.13 [`listparticipants` - List participants](#-listparticipants--show-event-participants)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"    - 3.14 [`bye` - Exit](#-bye--exit-the-application)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"4. [FAQ](#faq)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"5. [Command Summary](#command-summary)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yeeern27"},"content":"6. [Notes](#final-notes)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lydialkx"},"content":"This is a CLI-based Event Manager for organizing events, participants, and schedules. It supports priority levels, ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"conflict detection, event filtering, user roles (admin/member), and participant availability. Each participant can log ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lydialkx"},"content":"in and see or manage only their assigned events. Data is saved automatically between sessions.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"1. Ensure you have `Java 17` or above installed on your computer.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"2. Download the latest `EventSync.jar`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"3. Copy the `.jar` file into any folder you want to use as the home directory for Event Manager.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"4. Open a command prompt or terminal and navigate to the folder where you placed the `.jar` file.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"5. Run the application using the following command:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"java -jar EventSync.jar","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lydialkx"},"content":"6. Type a command and press `Enter` to execute it.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yeeern27"},"content":"## Features","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yeeern27"},"content":"### 👤 `create` — Creates a user and sets availability","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"#### Command: `create`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yeeern27"},"content":"**Input format:**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yeeern27"},"content":"You will be asked to provide:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yeeern27"},"content":"- Name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yeeern27"},"content":"- Password","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yeeern27"},"content":"- Access level (`ADMIN` or `MEMBER`)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yeeern27"},"content":"- Number of available slots","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yeeern27"},"content":"- Availability slots (`yyyy-MM-dd HH:mm - yyyy-MM-dd HH:mm`)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"#### Example","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"```plaintext","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yeeern27"},"content":"Press \u0027login\u0027 to log in or \u0027create\u0027 to create a new user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"\u003ecreate","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yeeern27"},"content":"Enter participant\u0027s name (or type \u0027exit\u0027 to cancel): ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"\u003eAlice","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yeeern27"},"content":"Enter participant\u0027s password (or type \u0027exit\u0027 to cancel):","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"\u003e123","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yeeern27"},"content":"Enter participant\u0027s access level (1 for Admin, 2 for Member) (or type \u0027exit\u0027 to cancel): ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"\u003e2","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yeeern27"},"content":"Enter number of availability slots (maximum 10) (or type \u0027exit\u0027 to cancel): ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"\u003e1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yeeern27"},"content":"Enter start time for availability slot 1 (in format yyyy-MM-dd HH:mm) (or type \u0027exit\u0027 to cancel): ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"\u003e2025-03-31 12:00","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yeeern27"},"content":"Enter end time for availability slot 1 (in format yyyy-MM-dd HH:mm) (or type \u0027exit\u0027 to cancel): ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"\u003e2025-05-31 12:00","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"Successfully created: Alice","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"```","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Lydialkx"},"content":"### ✅ `login` — Log in as an existing participant","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"#### Command: `login`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yeeern27"},"content":"#### Notes: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yeeern27"},"content":"- You must log in to manage or view events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yeeern27"},"content":"- Prompts for your name and password.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yeeern27"},"content":"- You will be asked to provide:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yeeern27"},"content":"- Username","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yeeern27"},"content":"- Password","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yeeern27"},"content":"- Required before accessing most features.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"  ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yeeern27"},"content":"#### Example for Successful Login","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yeeern27"},"content":"```plaintext","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yeeern27"},"content":"Please enter \u0027login\u0027 to log in or continue with your previous command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"\u003elogin","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yeeern27"},"content":"Please enter your Username (or type \u0027exit\u0027 to leave)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yeeern27"},"content":"\u003eAlice","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yeeern27"},"content":"Please enter your password (or type \u0027exit\u0027 to leave)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"\u003e123","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"Successfully logged in.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"╔═════════════════════════════════════════╗","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"║          EVENT SYNC COMMAND MENU        ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"╠═════════════════════════════════════════╣","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"║  \u003d\u003d\u003d Event Management Commands \u003d\u003d\u003d      ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"║  add            - Add new event         ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"║  list           - List your events      ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"║  listall        - List all events       ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Lydialkx"},"content":"║  delete         - Delete an event       ║","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"║  edit [INDEX]   - Edit an event         ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"║  duplicate [ID] - Duplicate an event    ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"║  find [KEYWORD] - Search events         ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"║  filter         - Filter events         ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"║                                         ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"║  \u003d\u003d\u003d Participant Commands \u003d\u003d\u003d           ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"║  addparticipant - Add to event          ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"║  listparticipants- List participants    ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"║  create         - Create new user       ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"║                                         ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"║  \u003d\u003d\u003d Session Commands \u003d\u003d\u003d               ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"║  login          - Login to system       ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"║  logout         - Logout                ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"║                                         ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"║  \u003d\u003d\u003d System Commands \u003d\u003d\u003d                ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"║  bye            - Exit program          ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"║  help           - Show this menu        ║","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"╚════════════════════════════════════════╝","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yeeern27"},"content":"#### Example for Unsuccessful Login ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yeeern27"},"content":"```plaintext","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yeeern27"},"content":"Please enter your Username (or type \u0027exit\u0027 to leave)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yeeern27"},"content":"\u003eTerry ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yeeern27"},"content":"User not found. Please enter \u0027create\u0027 to create user first!","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yeeern27"},"content":"\u003elogin","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yeeern27"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yeeern27"},"content":"```plaintext","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yeeern27"},"content":"Please enter your Username (or type \u0027exit\u0027 to leave)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yeeern27"},"content":"\u003eAlice","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yeeern27"},"content":"Please enter your password (or type \u0027exit\u0027 to leave)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yeeern27"},"content":"\u003e330","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yeeern27"},"content":"Wrong password. Do you want to login again? (yes/no)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yeeern27"},"content":"\u003eno","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yeeern27"},"content":"Wrong password! Session ends","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yeeern27"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yeeern27"},"content":"### 🔒 `logout` — Ends the current user session","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YanXinyaoo"},"content":"#### Command: `logout`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yeeern27"},"content":"#### Notes:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yeeern27"},"content":"- You must login first","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yeeern27"},"content":"- Another participant can log in afterward.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yeeern27"},"content":"  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YanXinyaoo"},"content":"#### Example","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YanXinyaoo"},"content":"```plaintext","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YanXinyaoo"},"content":"\u003elogout","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YanXinyaoo"},"content":"Terry has logged out.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YanXinyaoo"},"content":"Bye! Press \u0027login\u0027 to log in or \u0027create\u0027 to create a new user.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YanXinyaoo"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Lydialkx"},"content":"### 📅 `add` — Add a new event","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"#### Command: `add`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yeeern27"},"content":"#### Notes:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"yeeern27"},"content":"- You need to log in to an ADMIN account. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yeeern27"},"content":"- Adds an event to the system. Only ADMIN can add an event. The creator will be automatically added to the event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"yeeern27"},"content":"**Input format:**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"yeeern27"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"yeeern27"},"content":"Event Name | Start Date | End Date | Location | Description","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"yeeern27"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"yeeern27"},"content":"*Date/time must be in `yyyy-MM-dd HH:mm` format.*  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"yeeern27"},"content":"You will then be prompted to set the event’s priority (`HIGH`, `MEDIUM`, `LOW`).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"YanXinyaoo"},"content":"#### Example","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YanXinyaoo"},"content":"```plaintext","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"YanXinyaoo"},"content":"\u003eadd","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"yeeern27"},"content":"Enter event details (format: Event Name | Start Date | End Date | Location | Description) (or type \u0027exit\u0027 to cancel): ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"yeeern27"},"content":"\u003eTeam Meeting | 2025-10-10 20:00 | 2025-10-10 21:00 | Conference Room | A team meeting to discuss project updates","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"YanXinyaoo"},"content":"Enter event priority (LOW, MEDIUM, HIGH): ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"YanXinyaoo"},"content":"\u003eLow","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"YanXinyaoo"},"content":"The event","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"YanXinyaoo"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"YanXinyaoo"},"content":"| Name                 | Team Meeting","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-10-10 20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-10-10 21:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"YanXinyaoo"},"content":"| Location             | Conference Room","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"YanXinyaoo"},"content":"| Description          | A team meeting to discuss project updates","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: Terry]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"YanXinyaoo"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"YanXinyaoo"},"content":"has been added to the list.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"YanXinyaoo"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"yeeern27"},"content":"### ✏️ `edit` — Edit details of an existing event ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"yeeern27"},"content":"#### Command: `edit`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"yeeern27"},"content":"#### Notes:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"yeeern27"},"content":"- Only ADMIN can edit an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"yeeern27"},"content":"- You will be shown options to modify:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"yeeern27"},"content":"- 1. Name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"yeeern27"},"content":"- 2. Start time","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"yeeern27"},"content":"- 3. End time","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"yeeern27"},"content":"- 4. Location","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"yeeern27"},"content":"- 5. Description","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"sxkhoo"},"content":"#### Example:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"sxkhoo"},"content":"```plaintext","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"sxkhoo"},"content":"\u003eedit","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"yeeern27"},"content":"Enter event index to edit (or type \u0027exit\u0027 to cancel): ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"yeeern27"},"content":"\u003e1","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"yeeern27"},"content":"--- Editing Event ---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"yeeern27"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"yeeern27"},"content":"| Name                 | Team Meeting","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-10-10 20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-10-10 21:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"yeeern27"},"content":"| Location             | Conference Room","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"yeeern27"},"content":"| Description          | A team meeting to discuss project updates","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: Terry]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"yeeern27"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"yeeern27"},"content":"What would you like to edit?","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"yeeern27"},"content":"1. Name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"yeeern27"},"content":"2. Start Time (format: yyyy-MM-dd HH:mm)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"yeeern27"},"content":"3. End Time (format: yyyy-MM-dd HH:mm)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"yeeern27"},"content":"4. Location","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"yeeern27"},"content":"5. Description","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"yeeern27"},"content":"6. Done","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"yeeern27"},"content":"Enter your choice (1-6):","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"sxkhoo"},"content":"\u003e1","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"yeeern27"},"content":"Enter New Event Name  (or type \u0027exit\u0027 to cancel): meet","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"yeeern27"},"content":"✅ Name updated:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"yeeern27"},"content":"--- Editing Event ---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"sxkhoo"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"yeeern27"},"content":"| Name                 | meet","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-10-10 20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-10-10 21:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"yeeern27"},"content":"| Location             | Conference Room","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"yeeern27"},"content":"| Description          | A team meeting to discuss project updates","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: Terry]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"sxkhoo"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"yeeern27"},"content":"What would you like to edit?","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"yeeern27"},"content":"1. Name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"yeeern27"},"content":"2. Start Time (format: yyyy-MM-dd HH:mm)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"yeeern27"},"content":"3. End Time (format: yyyy-MM-dd HH:mm)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"yeeern27"},"content":"4. Location","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"yeeern27"},"content":"5. Description","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"yeeern27"},"content":"6. Done","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"yeeern27"},"content":"Enter your choice (1-6):","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"yeeern27"},"content":"\u003e6","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"yeeern27"},"content":"✅ Event editing completed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"sxkhoo"},"content":"````","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"yeeern27"},"content":"### 🗑️ `delete` — Delete an event from system","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"yeeern27"},"content":"#### Command: `delete`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"yeeern27"},"content":"#### Notes:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"yeeern27"},"content":"- Only ADMIN can delete an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"yeeern27"},"content":"- You will be prompted to search by name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Lydialkx"},"content":"- If multiple matches are found, you can select by index.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Lydialkx"},"content":"- Confirmation is required before deletion.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"yeeern27"},"content":"```plaintext","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"yeeern27"},"content":"\u003edelete","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"yeeern27"},"content":"Enter name to search for events to delete (or type \u0027exit\u0027 to cancel):","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"yeeern27"},"content":"\u003emeet","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"yeeern27"},"content":"Matching Events:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"yeeern27"},"content":"1. meet","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"yeeern27"},"content":"2. Team Meeting","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"yeeern27"},"content":"Enter the index of the event you want to delete: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"yeeern27"},"content":"\u003e2","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"yeeern27"},"content":"Confirm deletion of \"Team Meeting\"? (yes/no):","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"yeeern27"},"content":"\u003eyes","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"yeeern27"},"content":"\"Team Meeting\" has been deleted.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"yeeern27"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Lydialkx"},"content":"### 📋 `list` — List events assigned to you","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"YanXinyaoo"},"content":"#### Command: `list`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"yeeern27"},"content":"#### Notes: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"yeeern27"},"content":"- Displays all events for the logged-in participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"yeeern27"},"content":"- You’ll be prompted to choose a sort order:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"yeeern27"},"content":"    - `priority` — by priority, then end time","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"yeeern27"},"content":"    - `start` — by start time, then priority","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"yeeern27"},"content":"    - `end` — by end time, then priority","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"yeeern27"},"content":"  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"YanXinyaoo"},"content":"#### Example","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"YanXinyaoo"},"content":"```plaintext","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"YanXinyaoo"},"content":"\u003elist","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"yeeern27"},"content":"Enter your sort type (priority, start, end) or type \u0027exit\u0027 to cancel:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"YanXinyaoo"},"content":"\u003eend","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"YanXinyaoo"},"content":"The event 1 is: ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"YanXinyaoo"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"YanXinyaoo"},"content":"| Name                 | Team Meeting","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-03-12 20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-03-12 21:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"YanXinyaoo"},"content":"| Location             | Conference Room","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"YanXinyaoo"},"content":"| Description          | A team meeting to discuss project updates","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: a]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"YanXinyaoo"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"YanXinyaoo"},"content":"Priority: LOW","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"YanXinyaoo"},"content":"The event 2 is: ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"YanXinyaoo"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"yeeern27"},"content":"| Name                 | chill","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-03-31 19:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-03-31 20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"yeeern27"},"content":"| Location             | Room","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"yeeern27"},"content":"| Description          | A team meeting to relax","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: a]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"YanXinyaoo"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"YanXinyaoo"},"content":"Priority: LOW","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"YanXinyaoo"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"yeeern27"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"yeeern27"},"content":"### 📋 `listall` — List all events in the system","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"yeeern27"},"content":"#### Command: `listall`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"yeeern27"},"content":"#### Notes:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"yeeern27"},"content":"- You need to log in to an ADMIN account first.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"yeeern27"},"content":"- You’ll be prompted to choose a sort order:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Lydialkx"},"content":"    - `priority` — by priority, then end time","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Lydialkx"},"content":"    - `start` — by start time, then priority","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Lydialkx"},"content":"    - `end` — by end time, then priority","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"HuaZhenting"},"content":"#### Example","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"HuaZhenting"},"content":"```plaintext","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"HuaZhenting"},"content":"\u003elistall","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"HuaZhenting"},"content":"Enter your sort type: Now we have a list of available sort types: priority, start, end ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"yeeern27"},"content":"\u003epriority","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"HuaZhenting"},"content":"The event 1 is: ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"HuaZhenting"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"HuaZhenting"},"content":"| Name                 | Team Meeting","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-03-12 20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-03-12 21:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"HuaZhenting"},"content":"| Location             | Conference Room","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"HuaZhenting"},"content":"| Description          | A team meeting to discuss project updates","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: a]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"HuaZhenting"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"HuaZhenting"},"content":"Priority: LOW","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"yeeern27"},"content":"The event 2 is: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"yeeern27"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"yeeern27"},"content":"| Name                 | chill","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-03-31 19:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-03-31 20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"yeeern27"},"content":"| Location             | Room","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"yeeern27"},"content":"| Description          | A team meeting to relax","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: a]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"yeeern27"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"yeeern27"},"content":"Priority: LOW","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"yeeern27"},"content":"The event 3 is: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"yeeern27"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"yeeern27"},"content":"| Name                 | meet","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-10-10 20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-10-10 21:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"yeeern27"},"content":"| Location             | Conference Room","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"yeeern27"},"content":"| Description          | A team meeting to discuss project updates","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: Terry]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"yeeern27"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"yeeern27"},"content":"Priority: LOW","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"yeeern27"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"HuaZhenting"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Lydialkx"},"content":"### 🧠 `find KEYWORD` — Search for events","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"yeeern27"},"content":"#### Command : `find \u003cKEYWORD\u003e`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"yeeern27"},"content":"#### Notes:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"yeeern27"},"content":"- Finds events that contain the keyword in either:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Lydialkx"},"content":"    - Event name","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Lydialkx"},"content":"    - Event description","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"yeeern27"},"content":"#### Example : ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"yeeern27"},"content":"```plaintext","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"yeeern27"},"content":"\u003e find chill","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"yeeern27"},"content":"Found 1 matching events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"yeeern27"},"content":"Here are the matching events in your list: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"yeeern27"},"content":" 1. +----------------------+--------------------------------+","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"yeeern27"},"content":"| Name                 | chill","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-03-31 19:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-03-31 20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"yeeern27"},"content":"| Location             | Room","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"yeeern27"},"content":"| Description          | A team meeting to relax","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: a]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"yeeern27"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"yeeern27"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"Lydialkx"},"content":"### 🎯 `filter` — Show events by priority","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"yeeern27"},"content":"#### Command : `filter`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"yeeern27"},"content":"#### Notes:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"yeeern27"},"content":"- Filters and displays events by either:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"HuaZhenting"},"content":"    - A certain priority","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"HuaZhenting"},"content":"    - A priority range","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"HuaZhenting"},"content":"**Input format:**: ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"HuaZhenting"},"content":"- filter {priority}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"HuaZhenting"},"content":"- filter {lower-priority} {higher-priority}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"HuaZhenting"},"content":"Valid values: `HIGH`, `MEDIUM`, `LOW`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"yeeern27"},"content":"#### Example for certain priority ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"yeeern27"},"content":"```plaintext ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"yeeern27"},"content":"\u003efilter","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"yeeern27"},"content":"Enter a priority or a range (or type \u0027exit\u0027 to cancel):","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"yeeern27"},"content":"\u003eHIGH","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"yeeern27"},"content":"Found 1 matching events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"yeeern27"},"content":"Here are the matching events in your list: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"yeeern27"},"content":" 1. +----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"yeeern27"},"content":"| Name                 | coffee","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-03-20 15:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-03-20 16:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"yeeern27"},"content":"| Location             | Conference Room","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"yeeern27"},"content":"| Description          | Coffee chat","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: a]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"yeeern27"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"HuaZhenting"},"content":"```","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"yeeern27"},"content":"#### Example for Range","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"yeeern27"},"content":"```plaintext ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"yeeern27"},"content":"\u003efilter","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"yeeern27"},"content":"Enter a priority or a range (or type \u0027exit\u0027 to cancel):","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"yeeern27"},"content":"\u003eLOW HIGH","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"yeeern27"},"content":"Found 2 matching events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"yeeern27"},"content":"Here are the matching events in your list: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"yeeern27"},"content":" 1. +----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"yeeern27"},"content":"| Name                 | Team Meeting","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-03-12 20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-03-12 21:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"yeeern27"},"content":"| Location             | Conference Room","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"yeeern27"},"content":"| Description          | A team meeting to discuss project updates","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: a]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"yeeern27"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"yeeern27"},"content":"2. +----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"yeeern27"},"content":"| Name                 | coffee","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-03-20 15:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-03-20 16:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"yeeern27"},"content":"| Location             | Conference Room","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"yeeern27"},"content":"| Description          | Coffee chat","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: a]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"yeeern27"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"Lydialkx"},"content":"```","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"yeeern27"},"content":"### 📎 `duplicate` — Duplicate an existing event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"yeeern27"},"content":"#### Command : `duplicate`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"yeeern27"},"content":"#### Notes:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"yeeern27"},"content":"- Clones an existing event and gives it a new name. Only ADMIN can duplicate an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"yeeern27"},"content":"- You will be prompted to enter:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"Lydialkx"},"content":"    - Event index","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"Lydialkx"},"content":"    - New name","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"yeeern27"},"content":"- The copy retains all original details and priority.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"yeeern27"},"content":"#### Example : ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"yeeern27"},"content":"```plaintext","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"yeeern27"},"content":"\u003e duplicate","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"yeeern27"},"content":"Enter duplicate command (format: \u003cindex\u003e \u003cNew Event Name\u003e)(or type \u0027exit\u0027 to cancel):","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"yeeern27"},"content":"\u003e1 new","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"yeeern27"},"content":"Event duplicated: +----------------------+--------------------------------+","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"yeeern27"},"content":"| Name                 | new","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"yeeern27"},"content":"| Start Time           | 2025-10-10 20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"yeeern27"},"content":"| End Time             | 2025-10-10 21:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"yeeern27"},"content":"| Location             | Conference Room","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"yeeern27"},"content":"| Description          | A team meeting to discuss project updates","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"yeeern27"},"content":"| Participants         | [Participant: Terry]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"yeeern27"},"content":"+----------------------+--------------------------------+","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"yeeern27"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"Lydialkx"},"content":"### 🙋 `addparticipant` — Assign participant to event","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"yeeern27"},"content":"#### Command : `addparticipant`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"yeeern27"},"content":"#### Notes:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"yeeern27"},"content":"- Adds a participant to an event if available.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"yeeern27"},"content":"- Only ADMIN can add a participant. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"yeeern27"},"content":"#### Example : ✅ Successful Addition","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"sxkhoo"},"content":"```plaintext","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"sxkhoo"},"content":"\u003eaddparticipant","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"sxkhoo"},"content":"Available Events:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"yeeern27"},"content":"1. meet","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"yeeern27"},"content":"2. Team Meeting","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"yeeern27"},"content":"3. chill","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"yeeern27"},"content":"4. coffee","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"yeeern27"},"content":"5. new","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"yeeern27"},"content":"6. ret","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"sxkhoo"},"content":"Available Participants:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"sxkhoo"},"content":"- Alice","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"yeeern27"},"content":"- Terry","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"yeeern27"},"content":"- a","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"yeeern27"},"content":"- gg","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"sxkhoo"},"content":"Use: \u003cEventIndex\u003e | \u003cParticipant Name\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"yeeern27"},"content":"Type \u0027exit\u0027 to cancel.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"yeeern27"},"content":"\u003e 6 | gg","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"yeeern27"},"content":"Event Index: 5","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"yeeern27"},"content":"Event Start Time: 2025-03-20T16:30","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"yeeern27"},"content":"Event End Time: 2025-03-20T17:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"sxkhoo"},"content":"Checking participant availability","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"yeeern27"},"content":"  -2025-03-20T14:00 to 2025-03-20T19:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"yeeern27"},"content":"Participant gg has been added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"yeeern27"},"content":"```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"yeeern27"},"content":"#### Example : Fail Addition","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"yeeern27"},"content":"```plaintext","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"sxkhoo"},"content":"\u003eaddparticipant","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"yeeern27"},"content":"5|Alice","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"yeeern27"},"content":"Event Index: 4","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"yeeern27"},"content":"Event Start Time: 2025-10-10T20:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"yeeern27"},"content":"Event End Time: 2025-10-10T21:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"yeeern27"},"content":"Checking participant availability","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"yeeern27"},"content":"  -2025-03-31T12:00 to 2025-05-31T12:00","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"yeeern27"},"content":"Warning: Scheduling Conflict","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"yeeern27"},"content":"Participants are not able to attend","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"yeeern27"},"content":"Please find another participant","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"yeeern27"},"content":"Participant Alice is unavailable during the event.Enter \u0027addparticipant\u0027 to try again or try other features.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"sxkhoo"},"content":"````","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"Lydialkx"},"content":"### 🧑‍🤝‍🧑 `listparticipants` — Show event participants","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"yeeern27"},"content":"#### Command : `listparticipants`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"yeeern27"},"content":"#### Notes:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"yeeern27"},"content":"- Lists participants of a selected event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"yeeern27"},"content":"- You will be prompted to enter the index of the event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"yeeern27"},"content":"#### Example:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"sxkhoo"},"content":"```plaintext","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"sxkhoo"},"content":"\u003elistparticipants","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"yeeern27"},"content":"Available Events:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"yeeern27"},"content":"1. meet","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"yeeern27"},"content":"2. Team Meeting","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"yeeern27"},"content":"3. chill","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"yeeern27"},"content":"4. coffee","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"yeeern27"},"content":"5. new","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"yeeern27"},"content":"6. ret","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"yeeern27"},"content":"Enter event index to list participants (or type \u0027exit\u0027 to cancel):","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"yeeern27"},"content":"\u003e6","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"yeeern27"},"content":"Participants for event \"ret\":","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"yeeern27"},"content":"- Participant: a","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"yeeern27"},"content":"- Participant: gg","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"sxkhoo"},"content":"````","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"Lydialkx"},"content":"### 👋 `bye` — Exit the application","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"yeeern27"},"content":"#### Command : \u0027bye\u0027","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"yeeern27"},"content":"#### Notes","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"yeeern27"},"content":"Saves all data and exits the program safely.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"yeeern27"},"content":"#### Example : ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"yeeern27"},"content":"```plaintext","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"yeeern27"},"content":"\u003e bye","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"yeeern27"},"content":"Bye!","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"yeeern27"},"content":"```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"Lydialkx"},"content":"**Q:** What format should dates follow?  ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"Lydialkx"},"content":"**A:** `yyyy-MM-dd HH:mm` — e.g., `2025-04-10 18:00`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"Lydialkx"},"content":"**Q:** Why can\u0027t I see any events after logging in?  ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"Lydialkx"},"content":"**A:** You can only view events assigned to you. Ask an admin to add you as a participant.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"Lydialkx"},"content":"**Q:** Can a member user edit events?  ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"Lydialkx"},"content":"**A:** No, only participants with the `ADMIN` role can edit event details.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"YanXinyaoo"},"content":"| Command(Then follow the guidance) | Description                          |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"HuaZhenting"},"content":"|-----------------------------------|--------------------------------------|","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"Lydialkx"},"content":"| `login`                           | Log in as an existing user           |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"Lydialkx"},"content":"| `create`                          | Create a new participant             |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"Lydialkx"},"content":"| `logout`                          | Log out of the session               |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"Lydialkx"},"content":"| `add`                             | Add a new event                      |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"Lydialkx"},"content":"| `edit`                            | Edit an event (admin only)           |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"Lydialkx"},"content":"| `delete`                          | Delete an event                      |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"Lydialkx"},"content":"| `duplicate`                       | Duplicate an event                   |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"Lydialkx"},"content":"| `list`                            | List your assigned events            |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"HuaZhenting"},"content":"| `listall`                         | List all events (admin only)         |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"Lydialkx"},"content":"| `find KEYWORD`                    | Search events by name or description |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"Lydialkx"},"content":"| `filter`                          | Filter events by priority            |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"Lydialkx"},"content":"| `addparticipant`                  | Add a participant to an event        |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"Lydialkx"},"content":"| `listparticipants`                | List all participants for an event   |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"Lydialkx"},"content":"| `bye`                             | Exit the program                     |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"yeeern27"},"content":"## Final Notes","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"Lydialkx"},"content":"- All changes are saved automatically after every command.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"Lydialkx"},"content":"- Participant availability is validated before adding to events.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"Lydialkx"},"content":"- Commands must be entered exactly as shown (case-insensitive).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"Lydialkx"},"content":"- Events are visible only to assigned participants.","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Lydialkx":97,"HuaZhenting":34,"sxkhoo":30,"YanXinyaoo":121,"yeeern27":355,"-":34}},{"path":"docs/graph/AddEvent/AddEvent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"!theme plain","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"skinparam responseMessageBelowArrow true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"actor \":User\" as User","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"participant \":CommandFactory\" as CommandFactory","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"participant \":Command\" as Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"participant \":EventManager\" as EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"participant \":SyncException\" as SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"participant \":ParticipantManager\" as ParticipantManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"participant \":UI\" as UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"User -\u003e Parser : input","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"activate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"Parser -\u003e CommandFactory : new AddEventCommandFactory\\n(participantManager : ParticipantManager, ui : UI)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"activate CommandFactory","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"CommandFactory -\u003e Command : new  AddEventCommand(event : Event)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"activate Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"Command -\u003e EventManager : addEvent(event, participant)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"activate EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"EventManager -\u003e EventManager : checkCollision(start : String, end : String, \\nlocation : String, events : ArrayList\u003cEvent\u003e)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"activate EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"alt collision detected","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    EventManager -\u003e SyncException : throw SyncException(\"Event conflicts with existing events.\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    activate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    SyncException --\u003e EventManager : exception handled","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"EventManager -\u003e EventManager : checkParticipant(participant : Participant)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"activate EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"alt participant is null","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    EventManager -\u003e SyncException : throw SyncException(\"No user is currently selected.\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    activate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"    SyncException --\u003e EventManager : exception handled","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"EventManager -\u003e ParticipantManager : checkParticipantAvailability(participant : Participant, event : Evenet)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"activate EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"alt participant not available","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"    EventManager -\u003e SyncException : throw SyncException(\"Participant is not available at the given time.\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"    activate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"    SyncException --\u003e EventManager : exception handled","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"EventManager -\u003e ParticipantManager : addParticipantToEvent(event : Event, participant : Participant)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"activate EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"EventManager -\u003e Storage : saveEvents(events : List\u003cEvent\u003e, allPriorities : ArrayList\u003cString\u003e)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"activate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"Storage --\u003e EventManager : events saved","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"deactivate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"EventManager -\u003e UI : showAddedMessage(event : Event)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"activate UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"UI --\u003e User : message displayed","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"deactivate UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"EventManager --\u003e Command : event added","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"deactivate EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"deactivate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":75}},{"path":"docs/graph/AddParticipant/AddParticipant.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"hide footbox","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"skinparam style strictuml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"actor User","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"participant Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"participant AddParticipantCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"participant AddParticipantCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"participant EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"participant Event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"participant ParticipantManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"participant Participant","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"participant UI","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"User -\u003e Parser: input \"addp\" command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"activate Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"activate Event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"activate ParticipantManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"activate UI","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"activate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"Parser -\u003e AddParticipantCommandFactory: createCommand()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"activate AddParticipantCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    AddParticipantCommandFactory -\u003e EventManager: viewAllEvents()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    AddParticipantCommandFactory -\u003e UI: readEventIndex()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    AddParticipantCommandFactory -\u003e UI: readParticipantName()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    AddParticipantCommandFactory -\u003e UI: readAccessLevel()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    create AddParticipantCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    AddParticipantCommandFactory -\u003e AddParticipantCommand: new(index, name, accessLevel)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    AddParticipantCommandFactory --\u003e User: return command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"deactivate AddParticipantCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"User -\u003e AddParticipantCommand: execute(eventManager, ui, participantManager)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"activate AddParticipantCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    AddParticipantCommand -\u003e EventManager: getEvent(index)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    activate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        EventManager --\u003e AddParticipantCommand: event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    AddParticipantCommand -\u003e ParticipantManager: getParticipant(name)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    activate ParticipantManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        alt participant exists","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"            ParticipantManager --\u003e AddParticipantCommand: participant","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        else participant doesn\u0027t exist","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"            create Participant","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"            ParticipantManager -\u003e Participant: new(name, accessLevel)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"            ParticipantManager -\u003e ParticipantManager: addParticipant(participant)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"            ParticipantManager --\u003e AddParticipantCommand: participant","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        end","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate ParticipantManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"    AddParticipantCommand -\u003e Participant: isAvailableDuring(event.startTime, event.endTime)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"    activate Participant","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        Participant --\u003e AddParticipantCommand: isAvailable","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate Participant","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    alt participant is available","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        AddParticipantCommand -\u003e Event: addParticipant(participant)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        AddParticipantCommand -\u003e Participant: assignEventTime(event.startTime, event.endTime)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        AddParticipantCommand -\u003e EventManager: save()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        AddParticipantCommand -\u003e ParticipantManager: save()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        AddParticipantCommand -\u003e UI: showMessage(\"Participant added successfully\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"    else participant is not available","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        AddParticipantCommand -\u003e UI: showMessage(\"Participant is not available during this time\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"    end","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"    AddParticipantCommand --\u003e User: participant addition completed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"deactivate AddParticipantCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"Parser --\u003e User: command executed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"deactivate Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":72}},{"path":"docs/graph/DeleteEvent/DeleteEvent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"!theme plain","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"skinparam responseMessageBelowArrow true","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lydialkx"},"content":"actor \":User\" as User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lydialkx"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"participant \":CommandFactory\" as CommandFactory","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"participant \":DeleteCommand\" as Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"participant \":EventManager\" as EventManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"participant \":UI\" as UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"\u003d\u003d User inputs event name \u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lydialkx"},"content":"User -\u003e Parser : readDeleteName()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"activate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lydialkx"},"content":"Parser -\u003e EventManager : findMatchingEvents(name)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lydialkx"},"content":"activate EventManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"EventManager --\u003e Parser : List\u003cEvent\u003e matchingEvents","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lydialkx"},"content":"deactivate EventManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lydialkx"},"content":"alt multiple matches found","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lydialkx"},"content":"    Parser -\u003e UI : showMatchingEvents(matchingEvents)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lydialkx"},"content":"    activate UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lydialkx"},"content":"    UI -\u003e User : display matching events","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"    User -\u003e Parser : select index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lydialkx"},"content":"end","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lydialkx"},"content":"deactivate UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lydialkx"},"content":"Parser -\u003e CommandFactory : new DeleteCommandFactory(matchingIndex)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lydialkx"},"content":"activate CommandFactory","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"CommandFactory -\u003e Command : new DeleteCommand(index)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"deactivate CommandFactory","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"activate Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"\u003d\u003d Delete execution \u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"User -\u003e Command : execute(eventManager, ui, participants)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"Command -\u003e EventManager : getEvent(index)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"activate EventManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"EventManager --\u003e Command : Event","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"deactivate EventManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"Command -\u003e UI : confirmDeletion(Event)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lydialkx"},"content":"activate UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lydialkx"},"content":"UI -\u003e User : \"Are you sure? (yes/no)\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lydialkx"},"content":"User -\u003e UI : yes","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lydialkx"},"content":"UI --\u003e Command : confirmed","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lydialkx"},"content":"deactivate UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lydialkx"},"content":"Command -\u003e EventManager : deleteEvent(index)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lydialkx"},"content":"activate EventManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lydialkx"},"content":"EventManager -\u003e UI : showDeletedMessage(Event)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lydialkx"},"content":"UI -\u003e User : notify success","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lydialkx"},"content":"deactivate UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lydialkx"},"content":"deactivate EventManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lydialkx"},"content":"Command -\u003e EventManager : save updated list","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lydialkx"},"content":"deactivate Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lydialkx"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Lydialkx":58}},{"path":"docs/graph/DuplicateEvent/DuplicateEvent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"hide footbox","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"skinparam style strictuml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"actor User","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"participant Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"participant DuplicateEventCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"participant DuplicateEventCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"participant EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"participant Event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"participant UI","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"User -\u003e Parser: input \"duplicate\" command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"activate Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"activate UI","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"activate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"Parser -\u003e DuplicateEventCommandFactory: createCommand()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"activate DuplicateEventCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    DuplicateEventCommandFactory -\u003e EventManager: viewAllEvents()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    DuplicateEventCommandFactory -\u003e UI: readEventIndex()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    DuplicateEventCommandFactory -\u003e UI: readNewEventName()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    create DuplicateEventCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    DuplicateEventCommandFactory -\u003e DuplicateEventCommand: new(index, newName)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    DuplicateEventCommandFactory --\u003e Parser: return command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"deactivate DuplicateEventCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"Parser -\u003e DuplicateEventCommand: execute(eventManager, ui, participantManager)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"activate DuplicateEventCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    DuplicateEventCommand -\u003e EventManager: getEvent(index)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    activate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        EventManager --\u003e DuplicateEventCommand: originalEvent","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    create Event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    DuplicateEventCommand -\u003e Event: new(newName, startTime, endTime, location, description)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    DuplicateEventCommand -\u003e EventManager: addEvent(newEvent)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    activate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        EventManager -\u003e Event: getParticipants()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        loop for each participant in original event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"            EventManager -\u003e Event: addParticipant(participant)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        end","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        EventManager -\u003e EventManager: events.add(newEvent)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        EventManager -\u003e EventManager: save()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        EventManager --\u003e DuplicateEventCommand: success","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    DuplicateEventCommand -\u003e UI: showMessage(\"Event duplicated successfully\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    DuplicateEventCommand --\u003e Parser: duplication completed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"deactivate DuplicateEventCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"Parser --\u003e User: command executed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"deactivate Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":55}},{"path":"docs/graph/EditEvent/EditEvent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"hide footbox","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"skinparam style strictuml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"actor User","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"participant Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"participant EditCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"participant EditEventCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"participant EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"participant UI","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"participant ParticipantManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"participant Event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"participant Participant","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"User -\u003e Parser: input: edit command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"activate Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"activate Event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"activate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"activate UI","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"activate ParticipantManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"activate Participant","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    Parser -\u003e EditCommandFactory: createCommand()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"        activate EditCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"        EditCommandFactory -\u003e ParticipantManager: getCurrentUser()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"        EditCommandFactory -\u003e ParticipantManager: isCurrentUserAdmin()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        EditCommandFactory -\u003e EventManager: viewAllEvents()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"        EditCommandFactory -\u003e UI: readEditEventIndex()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        EditCommandFactory --\u003e EditEventCommand: new EditEventCommand(index, participantManager)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        activate EditEventCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate EditCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    User -\u003e EditEventCommand: execute(eventManager, ui, participantManager)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    activate EditEventCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand -\u003e ParticipantManager: isCurrentUserAdmin()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand -\u003e EventManager: getEvent(index)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        loop while editing","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"            EditEventCommand -\u003e UI: showEditCommandMessageWithOptions(event)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"            EditEventCommand -\u003e UI: readInt()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"            alt choice \u003d 1: Edit Name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e UI: readLine()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e Event: setName(newName)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"            else choice \u003d 2: Edit Start Time","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e UI: getValidDateTime(\"start\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e Event: getParticipants()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"                loop for participant in event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"                    EditEventCommand -\u003e Participant: unassignEventTime()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"                    EditEventCommand -\u003e Participant: isAvailableDuring()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"                    EditEventCommand -\u003e Participant: assignEventTime()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"                end","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e Event: setStartTime(newStart)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"            else choice \u003d 3: Edit End Time","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e UI: getValidDateTime(\"end\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e Event: getParticipants()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"                loop for participant in event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"                    EditEventCommand -\u003e Participant: unassignEventTime()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"                    EditEventCommand -\u003e Participant: isAvailableDuring()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"                    EditEventCommand -\u003e Participant: assignEventTime()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"                end","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e Event: setEndTime(newEnd)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"            else choice \u003d 4: Edit Location","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e UI: readLine()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e Event: setLocation(newLocation)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"            else choice \u003d 5: Edit Description","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e UI: readLine()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"                EditEventCommand -\u003e Event: setDescription(newDescription)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"            end","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"            EditEventCommand -\u003e EventManager: save()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"            EditEventCommand -\u003e ParticipantManager: save()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        end","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand --\u003e Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate EditEventCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"    Parser --\u003e User: command executed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"deactivate Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":83}},{"path":"docs/graph/FilterEvent/FilterEvent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"!theme plain","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"skinparam responseMessageBelowArrow true","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"actor \":User\" as User","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"participant \":FilterCommandFactory\" as CommandFactory","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"participant \":FilterCommand\" as Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"participant \":ParticipantManager\" as ParticipantManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"participant \":UI\" as UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"participant \":EventManager\" as EventManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"participant \":Priority\" as Priority","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"User -\u003e Parser : \"filter\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"activate Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"Parser -\u003e CommandFactory : new FilterCommandFactory(participantManager, ui)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"activate CommandFactory","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"CommandFactory -\u003e ParticipantManager : getCurrentUser()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"activate ParticipantManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"ParticipantManager --\u003e CommandFactory : currentUser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"deactivate ParticipantManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"alt no current user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    CommandFactory -\u003e UI : showMessage(\"Not logged in\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"    activate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"    UI --\u003e User : \"Not logged in\" displayed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"    deactivate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"else has current user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"    CommandFactory -\u003e UI : readFilterInput()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"    activate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"    UI --\u003e CommandFactory : \"LOW MEDIUM\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"    deactivate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"    CommandFactory -\u003e CommandFactory : validate input","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"    CommandFactory -\u003e Priority : isValid(\"LOW\"), isValid(\"MEDIUM\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"    activate Priority","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"    Priority --\u003e CommandFactory : true, true","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"    deactivate Priority","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"    CommandFactory -\u003e Priority : getValue(\"LOW\"), getValue(\"MEDIUM\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"    activate Priority","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"    Priority --\u003e CommandFactory : 1, 2","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"    deactivate Priority","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"    CommandFactory -\u003e Command : new FilterCommand(1, 2)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"    activate Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"    CommandFactory --\u003e Parser : FilterCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"    deactivate CommandFactory","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"    Parser -\u003e Command : execute()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"    Command -\u003e ParticipantManager : getCurrentUser()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"    activate ParticipantManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"    ParticipantManager --\u003e Command : currentUser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"    deactivate ParticipantManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"    Command -\u003e EventManager : getEvents()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"    activate EventManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"    EventManager --\u003e Command : List\u003cEvent\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"    deactivate EventManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"    loop for each event","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"        Command -\u003e Command : check event.hasParticipant(currentUser)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"        alt event assigned to user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"            Command -\u003e Priority : getValue(priority)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"            activate Priority","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"            Priority --\u003e Command : priorityValue","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"            deactivate Priority","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"            Command -\u003e Command : check bounds (1 \u003c\u003d priorityValue \u003c\u003d 2)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"            alt within bounds","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"                Command -\u003e Command : add to matchingEvents","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"            end","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"        end","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"    end","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"    alt no matching events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"        Command -\u003e UI : showMessage(\"No matching events\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"        activate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"        UI --\u003e User : message displayed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"        deactivate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"    else has matches","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"        Command -\u003e UI : printMatchingEvents(matchingEvents)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"        activate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"        UI --\u003e User : filtered events displayed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"        deactivate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"    end","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"end","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"deactivate Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"deactivate Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":93}},{"path":"docs/graph/ListAllEvents/ListAllEvents.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"!theme plain","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"skinparam responseMessageBelowArrow true","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"actor \":User\" as User","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"participant \":ListAllCommandFactory\" as CommandFactory","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"participant \":ListAllCommand\" as Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"participant \":ParticipantManager\" as ParticipantManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"participant \":EventManager\" as EventManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"participant \":UI\" as UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"User -\u003e Parser : \"listall\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"activate Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"Parser -\u003e CommandFactory : new ListAllCommandFactory(participantManager, ui)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"activate CommandFactory","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"CommandFactory -\u003e ParticipantManager : getCurrentUser()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"activate ParticipantManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"ParticipantManager --\u003e CommandFactory : currentUser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"deactivate ParticipantManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"CommandFactory -\u003e ParticipantManager : isCurrentUserAdmin()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"activate ParticipantManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"ParticipantManager --\u003e CommandFactory : true","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"deactivate ParticipantManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"CommandFactory -\u003e UI : readListCommandInput()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"activate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"UI --\u003e CommandFactory : \"priority\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"deactivate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"CommandFactory -\u003e Command : new ListAllCommand(\"priority\", ui)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"activate Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"CommandFactory --\u003e Parser : ListAllCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"deactivate CommandFactory","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"Parser --\u003e User : command created","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"deactivate Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"User -\u003e Command : execute()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"activate Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"Command -\u003e EventManager : getEvents()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"activate EventManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"EventManager --\u003e Command : List\u003cEvent\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"deactivate EventManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"alt no events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"    Command -\u003e UI : showMessage(\"No events in the system.\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"    activate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"    UI --\u003e User : message displayed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"    deactivate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"else has events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"    Command -\u003e Command : sort events by priority","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"    Command -\u003e EventManager : viewEvents(sortedEvents)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"    activate EventManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"    EventManager -\u003e UI : showEvents(sortedEvents)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"    activate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"    loop for each event","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"        UI --\u003e User : event displayed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"    end","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"    deactivate UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"    deactivate EventManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"end","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"deactivate Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":70}},{"path":"docs/graph/ListEvent/ListEvent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"!theme plain","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"skinparam responseMessageBelowArrow true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"actor \":User\" as User","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"participant \":CommandFactory\" as CommandFactory","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"participant \":Command\" as Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"participant \":EventManager\" as EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"participant \":UI\" as UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"User -\u003e Parser : input","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"activate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"Parser -\u003e CommandFactory : new ListEventCommandFactory(participantManager : ParticipantManager, ui : UI)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"activate CommandFactory","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"CommandFactory -\u003e Command : new ListEventCommand(sortType : String)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"activate Command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"Command -\u003e EventManager : execute()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"activate EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"EventManager -\u003e EventManager : viewEvents(events : List\u003cEvent\u003e)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"activate EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"EventManager -\u003e UI : showEmptyListMessage()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"activate UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"alt events are empty","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    UI --\u003e EventManager : empty list message displayed","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"else","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    loop for each event in events","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        EventManager -\u003e UI : showEvent(event)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        activate UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        UI --\u003e User : event displayed","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        deactivate UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"deactivate EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"deactivate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":44}},{"path":"docs/graph/ListParticipants/ListParticipants.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"hide footbox","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"skinparam style strictuml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"actor User","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"participant Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"participant ListParticipantsCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"participant ListParticipantsCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"participant EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"participant Event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"participant UI","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"User -\u003e Parser: input \"listp\" command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"activate Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"activate UI","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"activate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"Parser -\u003e ListParticipantsCommandFactory: createCommand()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"activate ListParticipantsCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    ListParticipantsCommandFactory -\u003e EventManager: viewAllEvents()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    ListParticipantsCommandFactory -\u003e UI: readEventIndex()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    create ListParticipantsCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    ListParticipantsCommandFactory -\u003e ListParticipantsCommand: new(index)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    ListParticipantsCommandFactory --\u003e User : return command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"deactivate ListParticipantsCommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"User -\u003e ListParticipantsCommand: execute(eventManager, ui, participantManager)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"activate ListParticipantsCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    ListParticipantsCommand -\u003e EventManager: getEvent(index)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    activate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        EventManager --\u003e ListParticipantsCommand: event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate EventManager","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    ListParticipantsCommand -\u003e Event: getParticipants()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    activate Event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        Event --\u003e ListParticipantsCommand: participants","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate Event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    ListParticipantsCommand -\u003e UI: showMessage(\"Participants for event: \" + event.getName())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    loop for each participant in participants","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        ListParticipantsCommand -\u003e UI: showMessage(participant.getName() + \" - \" + participant.getAccessLevel())","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    end","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"    ListParticipantsCommand --\u003e User: participant listing completed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"deactivate ListParticipantsCommand","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"Parser --\u003e User: command executed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"deactivate Parser","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":50}},{"path":"docs/graph/LoginSystem/CreateSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"actor User","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"participant \"CreateUserCommandFactory\" as Factory","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"participant \"CommandParser\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"participant \"CreateUserCommand\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"participant \"ParticipantManager\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"participant \"Storage\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"participant \"UI\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"User -\u003e Factory: createCommand()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"Factory -\u003e CommandParser: askParticipantName()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"CommandParser --\u003e Factory: return participantName : String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"Factory -\u003e CommandParser: askPassword()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"CommandParser --\u003e Factory: return password : String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"Factory -\u003e CommandParser: askAccessLevel()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"CommandParser --\u003e Factory: return accessLevel : AccessLevel","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"Factory -\u003e Factory: askAvailability() : ArrayList\u003cAvailabilitySlot\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"Factory -\u003e CommandParser: parseDateTime()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"CommandParser --\u003e Factory: return LocalDateTime","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"Factory -\u003e CreateUserCommand: new CreateUserCommand(participant : Participant)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"Factory --\u003e User: return CreateUserCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"User -\u003e CreateUserCommand: execute(events : EventManager, ui : UI, participantManager : ParticipantManager)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"CreateUserCommand -\u003e ParticipantManager: addNewUser(participant : Participant)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"ParticipantManager -\u003e Storage: saveUsers(participants : Participant)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"CreateUserCommand -\u003e UI: showSuccessCreateMessage(participant)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"UI --\u003e User: Display success message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":29}},{"path":"docs/graph/LoginSystem/LogOutSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"actor User","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"participant \"LogOutCommand\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"participant \"ParticipantManager\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"participant \"UI\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"activate \"LogOutCommand\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"User -\u003e LogOutCommand: logout()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"activate ParticipantManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"activate UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"LogOutCommand -\u003e ParticipantManager: check if currentUser !\u003d null","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"alt currentUser is not null","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"    ParticipantManager -\u003e UI: showMessage(currentUser.getName() + \" has logged out.\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"    ParticipantManager -\u003e ParticipantManager: currentUser \u003d null","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"else currentUser is null","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    ParticipantManager -\u003e UI: showMessage(\"No user is currently logged in.\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"UI --\u003e User: Logout process completed","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":19}},{"path":"docs/graph/LoginSystem/LoginSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"!theme plain","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"skinparam responseMessageBelowArrow true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"actor User","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"participant UI","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"participant ParticipantManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"participant Participant","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"participant Scanner","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"User-\u003e\u003eUI: Request Login","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"UI-\u003e\u003eParticipantManager: login()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"ParticipantManager-\u003e\u003eScanner: new Scanner(System.in)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"ParticipantManager-\u003e\u003eUser: \"Please enter your Username\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"User-\u003e\u003eScanner: Input username","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"Scanner-\u003e\u003eParticipantManager: username","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"ParticipantManager-\u003e\u003eParticipantManager: getParticipant(username)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"alt User Found","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    ParticipantManager-\u003e\u003eUser: \"Please enter your password\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    User-\u003e\u003eScanner: Input password","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    Scanner-\u003e\u003eParticipantManager: password","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    ParticipantManager-\u003e\u003eParticipant: checkPassword(password)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    alt Password Correct","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        Participant--\u003e\u003eParticipantManager: true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        ParticipantManager-\u003e\u003eParticipantManager: currentUser \u003d participant","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        ParticipantManager-\u003e\u003eUI: showSuccessLoginMessage()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        ParticipantManager-\u003e\u003eUI: showMenu()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    else Password Incorrect","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        Participant--\u003e\u003eParticipantManager: false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        ParticipantManager-\u003e\u003eUser: \"Wrong password. Do you want to login again? (yes/no)\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        User-\u003e\u003eScanner: Input response","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner-\u003e\u003eParticipantManager: response","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        alt Try Again","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"            ParticipantManager-\u003e\u003eParticipantManager: login() (recursive)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        else Cancel","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"            ParticipantManager-\u003e\u003eUser: \"Wrong password! Session ends\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"else User Not Found","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"    ParticipantManager-\u003e\u003eUser: \"User not found. Please create user first!\"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"ParticipantManager--\u003e\u003eUI: Return ParticipantManager instance","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"User-\u003e\u003eUI: Request Logout","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"UI-\u003e\u003eParticipantManager: logout()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"alt User Logged In","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"    ParticipantManager-\u003e\u003eParticipant: getName()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    Participant--\u003e\u003eParticipantManager: name","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    ParticipantManager-\u003e\u003eUI: showMessage(name + \" has logged out\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    ParticipantManager-\u003e\u003eParticipantManager: currentUser \u003d null","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"else No User Logged In","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"    ParticipantManager-\u003e\u003eUI: showMessage(\"No user is currently logged in\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":62}},{"path":"docs/graph/ModelComponent/modelComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"skinparam style strictuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"hide members","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lydialkx"},"content":"package \"Event Component\" {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lydialkx"},"content":"    class Event","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"    class EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"    EventManager --\u003e Event : manages","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"package \"Participant Component\" {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"    class Participant","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lydialkx"},"content":"    class ParticipantManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"    class AvailabilitySlot","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lydialkx"},"content":"    enum AccessLevel","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"    ParticipantManager --\u003e Participant : manages","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lydialkx"},"content":"    Participant --\u003e AvailabilitySlot : has","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lydialkx"},"content":"    AccessLevel --\u003e Participant : defines","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lydialkx"},"content":"package \"Label Component\" {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lydialkx"},"content":"    class Priority","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"    Event --\u003e Priority : has","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"package \"Sort Component\" {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lydialkx"},"content":"    abstract class Sort","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lydialkx"},"content":"    class SortByStartTime","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"    class SortByEndTime","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"    class SortByPriority","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"    EventManager --\u003e Sort : uses","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"    Sort \u003c|-- SortByStartTime","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"    Sort \u003c|-- SortByEndTime","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"    Sort \u003c|-- SortByPriority","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"package \"Exception Component\" {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lydialkx"},"content":"    class SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"    EventManager --\u003e SyncException : throws","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lydialkx"},"content":"    ParticipantManager --\u003e SyncException : throws","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lydialkx"},"content":"    Event --\u003e SyncException : throws","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lydialkx"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Lydialkx":46}},{"path":"docs/graph/Parser/ParserCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sxkhoo"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sxkhoo"},"content":"\u0027 \u003d\u003d\u003d Style Settings \u003d\u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sxkhoo"},"content":"hide circle","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sxkhoo"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sxkhoo"},"content":"\u0027 \u003d\u003d\u003d Interfaces and Abstract Classes \u003d\u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sxkhoo"},"content":"interface \"«interface» CommandFactory\" {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sxkhoo"},"content":"    +createCommand(): Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sxkhoo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sxkhoo"},"content":"abstract class \"«abstract» Command\" {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sxkhoo"},"content":"    +execute(eventManager: EventManager, ui: UI, participantManager: ParticipantManager): void","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sxkhoo"},"content":"    +isExit(): boolean","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sxkhoo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sxkhoo"},"content":"\u0027 \u003d\u003d\u003d Core Parser Classes \u003d\u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sxkhoo"},"content":"class Parser {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sxkhoo"},"content":"    - eventManager: EventManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sxkhoo"},"content":"    - participantManager: ParticipantManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sxkhoo"},"content":"    - ui: UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sxkhoo"},"content":"    - scanner: Scanner","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sxkhoo"},"content":"    + parse(input: String): CommandFactory","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sxkhoo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sxkhoo"},"content":"class CommandParser {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sxkhoo"},"content":"    + readInput(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sxkhoo"},"content":"    + parseDateTime(dateStr: String): LocalDateTime","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sxkhoo"},"content":"    + splitAddCommandInput(input: String): String[]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sxkhoo"},"content":"    + splitAddParticipantCommandInput(): String[]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sxkhoo"},"content":"    + parseAvailabilitySlots(input: String): ArrayList\u003cAvailabilitySlot\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sxkhoo"},"content":"    + readDeleteName(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sxkhoo"},"content":"    + readFilterInput(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sxkhoo"},"content":"    + askParticipantName(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sxkhoo"},"content":"    + askAccessLevel(): AccessLevel","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sxkhoo"},"content":"    + askPassword(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sxkhoo"},"content":"    + readListCommandInput(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sxkhoo"},"content":"    + readAddCommandInput(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sxkhoo"},"content":"    + readAddParticipantInput(): String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sxkhoo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sxkhoo"},"content":"\u0027 \u003d\u003d\u003d Concrete Command Classes \u003d\u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sxkhoo"},"content":"class AddEventCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sxkhoo"},"content":"\u0027 \u003d\u003d\u003d Concrete Command Factories \u003d\u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sxkhoo"},"content":"class AddEventCommandFactory","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sxkhoo"},"content":"\u0027 \u003d\u003d\u003d Inheritance Relationships \u003d\u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"\"«abstract» Command\" \u003c|-- AddEventCommand : 1","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sxkhoo"},"content":"\"«interface» CommandFactory\" \u003c|.. AddEventCommandFactory","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sxkhoo"},"content":"\u0027 \u003d\u003d\u003d Associations \u003d\u003d\u003d","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"Parser --\u003e \"1..*\" \"«interface» CommandFactory\" : uses","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"AddEventCommandFactory --\u003e \"1\" CommandParser : uses (static)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"\"«interface» CommandFactory\" --\u003e \"1\" \"«abstract» Command\" : creates","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sxkhoo"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"sxkhoo":51,"YanXinyaoo":4}},{"path":"docs/graph/Parser/ParserSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sxkhoo"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sxkhoo"},"content":"actor User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sxkhoo"},"content":"User -\u003e Parser : input command string","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sxkhoo"},"content":"activate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"Parser -\u003e Parser : parse(input)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sxkhoo"},"content":"note right of Parser : Determines command type\\n(e.g., \"add\", \"list\", etc.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sxkhoo"},"content":"Parser -\u003e CommandFactory : new AddEventCommandFactory()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sxkhoo"},"content":"deactivate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"CommandFactory -\u003e CommandParser : calls methods to get input","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"activate CommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"note right of CommandFactory : Factory uses CommandParser\\nto validate and parse input","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"CommandParser --\u003e CommandFactory : return parsed input","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"deactivate CommandFactory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sxkhoo"},"content":"CommandFactory -\u003e Command : createCommand()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sxkhoo"},"content":"activate CommandFactory","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"note right of CommandFactory : Uses parsed input to\\ninstantiate specific Command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sxkhoo"},"content":"deactivate CommandFactory","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sxkhoo"},"content":"activate Command","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"Command -\u003e Command : execute(EventManager, UI, ParticipantManager)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sxkhoo"},"content":"note right of Command : Executes behavior depending\\non command type","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sxkhoo"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"sxkhoo":16,"YanXinyaoo":13}},{"path":"docs/graph/Storage/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"hide circle","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"class UserStorage {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"        -filePath: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"        -slotFormatter: DateTimeFormatter","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"        +UserStorage(filePath: String)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"        +saveUsers(participants: List\u003cParticipant\u003e): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"        +loadUsers(): ArrayList\u003cParticipant\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"        +findUserByName(participants: List\u003cParticipant\u003e, name: String): Participant","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"    class Storage {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"        -formatter: DateTimeFormatter","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"        -filePath: String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"        -userStorage: UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"        +Storage(filePath: String, userStorage: UserStorage)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"        +saveEvents(events: List\u003cEvent\u003e, allPriorities: ArrayList\u003cString\u003e): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"        +loadEvents(): ArrayList\u003cEvent\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    class Participant {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"        +getName(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"        +getAccessLevel(): AccessLevel","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        +getPassword(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"        +getAvailableTimes(): List\u003cAvailabilitySlot\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        +addAvailableTime(start: LocalDateTime, end: LocalDateTime): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    class Event {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        +getName(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        +getStartTime(): LocalDateTime","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        +getEndTime(): LocalDateTime","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        +getLocation(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        +getDescription(): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        +getParticipants(): List\u003cParticipant\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        +addParticipant(participant: Participant): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    class Priority {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        +getAllPriorities(): List\u003cString\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        +loadFromStorage(priorities: List\u003cString\u003e): void","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"    class SyncException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    UserStorage --\u003e Participant : manages","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    UserStorage --\u003e SyncException : throws","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"    Storage --\u003e UserStorage : uses","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"    Storage --\u003e Event : manages","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"    Storage --\u003e Priority : uses","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"    Storage --\u003e SyncException : throws","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    Event --\u003e Participant : has","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":56}},{"path":"docs/graph/Storage/StorageSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"!theme plain","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"skinparam responseMessageBelowArrow true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"participant \":EventManager\" as EventManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"participant \":Event\" as Event","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"participant \":SyncException\" as SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"participant \":UserStorage\" as UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"participant \":Priority\" as Priority","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"EventManager -\u003e Storage : saveEvents(events : List\u003cEvent\u003e, allPriorities : ArrayList\u003cString\u003e)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"activate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"Storage -\u003e Storage : ensureFileExists()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"activate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"alt file does not exist","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    Storage -\u003e SyncException : throw SyncException(\"Cannot create storage file: filePath\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    activate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    SyncException --\u003e Storage : exception handled","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"Storage -\u003e Storage : write events to file","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"activate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"deactivate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"EventManager -\u003e Storage : loadEvents()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"activate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"Storage -\u003e Storage : read data from file","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"activate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"alt error reading file","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    Storage -\u003e SyncException : throw SyncException(\"Error reading file\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    activate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    SyncException --\u003e Storage : exception handled","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"Storage -\u003e UserStorage : loadUsers()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"activate UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"deactivate UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"Storage -\u003e Storage : parseEventLine(line : String)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"activate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"alt invalid line format","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"    Storage -\u003e SyncException : throw SyncException(\"Skipping corrupted line: line\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"    activate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"    SyncException --\u003e Storage : exception handled","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"Storage -\u003e Storage : parseEvent(parts, allParticipants)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"activate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"alt invalid event data","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"    Storage -\u003e SyncException : throw SyncException(\"Failed to parse event\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"    activate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"    SyncException --\u003e Storage : exception handled","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"deactivate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":69}},{"path":"docs/graph/Storage/UserStorageSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"!theme plain","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"skinparam responseMessageBelowArrow true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"participant \":ParticipantManager\" as ParticipantManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"participant \":UserStorage\" as UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"participant \":Participant\" as Participant","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"participant \":SyncException\" as SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"ParticipantManager -\u003e UserStorage : saveUsers(participants : Participants)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"activate UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"UserStorage -\u003e UserStorage : ensureFileExists()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"activate UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"alt file does not exist","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"    UserStorage -\u003e SyncException : throw SyncException(\"Cannot create storage file: filePath\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    activate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    SyncException --\u003e UserStorage : exception handled","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"UserStorage -\u003e UserStorage : write participants to file","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"activate UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"deactivate UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"deactivate UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"ParticipantManager -\u003e UserStorage : loadUsers()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"activate UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"UserStorage -\u003e UserStorage : read data from file","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"activate UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"alt error reading file","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    UserStorage -\u003e SyncException : throw SyncException(\"Error reading file\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    activate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    SyncException --\u003e UserStorage : exception handled","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"UserStorage -\u003e UserStorage : parseParticipant(line : String)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"activate UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"alt invalid line format","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    UserStorage -\u003e SyncException : throw SyncException(\"Skipping corrupted line: line\")","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    activate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    SyncException --\u003e UserStorage : exception handled","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    deactivate SyncException","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"deactivate UserStorage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":55}},{"path":"docs/graph/UI/UI.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeeern27"},"content":"@startuml","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yeeern27"},"content":"!theme plain","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yeeern27"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yeeern27"},"content":"skinparam responseMessageBelowArrow true","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yeeern27"},"content":"class UI {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yeeern27"},"content":"    - scanner: Scanner","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yeeern27"},"content":"    + UI()","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yeeern27"},"content":"    + setScanner(newScanner: Scanner): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yeeern27"},"content":"    + readLine(): String","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yeeern27"},"content":"    + readInt(): Integer","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yeeern27"},"content":"    + checkForExit(input: String): boolean","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yeeern27"},"content":"    + readAddCommandInput(): String","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yeeern27"},"content":"    + readDuplicateEventInput(): String","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yeeern27"},"content":"    + readDeleteName(): String","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yeeern27"},"content":"    + readFilterInput(): String","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yeeern27"},"content":"    + readListCommandInput(): String","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yeeern27"},"content":"    + readAddParticipantInput(): String","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yeeern27"},"content":"    + splitAddParticipantCommandInput(): String[]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yeeern27"},"content":"    + askParticipantName(): String","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yeeern27"},"content":"    + askPassword(): String","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yeeern27"},"content":"    + askConfirmation(message: String): boolean","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yeeern27"},"content":"    + confirmDeletion(eventName: String): boolean","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yeeern27"},"content":"    + showMessage(message: String): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yeeern27"},"content":"    + showMenu(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yeeern27"},"content":"    + showEventWithIndex(event: Event, index: int, priority: String): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yeeern27"},"content":"    + showEmptyListMessage(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yeeern27"},"content":"    + printMatchingEvents(events: ArrayList\u003cEvent\u003e): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yeeern27"},"content":"    + showAddFormat(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yeeern27"},"content":"    + showAddedMessage(event: Event): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yeeern27"},"content":"    + showEditCommandMessageWithOptions(event: Event): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yeeern27"},"content":"    + showEditCommandCorrectFormat(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yeeern27"},"content":"    + showEditCommandStep1(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yeeern27"},"content":"    + showEditCommandStep2(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yeeern27"},"content":"    + showEditCommandStep3(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yeeern27"},"content":"    + showEditCommandStep4(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yeeern27"},"content":"    + showEditCommandStep5(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yeeern27"},"content":"    + showEditedEvent(event: Event): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yeeern27"},"content":"    + showByeMessage(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yeeern27"},"content":"    + showWelcomeMessage(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yeeern27"},"content":"    + showCollisionWarning(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yeeern27"},"content":"    + showParticipantSlotCollisionWarning(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yeeern27"},"content":"    + showDeletedMessage(event: Event): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yeeern27"},"content":"    + showMatchingEventsWithIndices(matchingEvents: ArrayList\u003cEvent\u003e, eventManager: EventManager): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yeeern27"},"content":"    + showDeletionCancelledMessage(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yeeern27"},"content":"    + showAddParticipantFormat(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yeeern27"},"content":"    + showParticipantAdded(p: Participant): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yeeern27"},"content":"    + showLogOutMessage(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yeeern27"},"content":"    + showSuccessLoginMessage(): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yeeern27"},"content":"    + showSuccessCreateMessage(participant: Participant): void","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yeeern27"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yeeern27"},"content":"Command \"1\" -- \"1\" UI : uses","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yeeern27"},"content":"CommandParser ..\u003e UI : uses (static)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yeeern27"},"content":"@enduml","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"yeeern27":58}},{"path":"docs/team/huazhenting.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"# Hua Zhenting - Project Portfolio Page","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"# Overview","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"Our team developed **EventSync**, a command-line event scheduling and management application aimed at optimizing","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"collaboration and time management. Users can create, view, edit, and organize events with conflict detection,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"user management, and sorting capabilities.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"I am primarily responsible for creating the conflict detector feature, and an admin-only feature that display all stored events with different sorting strategies.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"## Code Contributed","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"[View my code on tP Code Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dHuaZhenting\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"## Enhancements Implemented","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"### **Core Event Management Features (v1.0)**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"- **Conflict Detection Feature:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"  - Called automatically with adding or editing an event. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"  - Detects and warns user of potential scheduling conflicts.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"  - Outputs conflicts on venue occupied at the scheduled time.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"  - **Smart Design**: One collision detection module handles both adding and editing events by using an excludeIndex (set to -1 for adding) to exclude the edited event during checks.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"### **New Features and Enhancements (v2.0)**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"- **Implemented Priority Filter:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    - Developed the \u0027FilterCommand\u0027 to allow users to filter events assigned to him by priority.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    - Used a single class to handle different input types:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"      - 1. Single priority","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"      - 2. A range of priorities","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"    - Displayed matching events in a clean, readable format through the UI.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"    - Integrated debug output to facilitate troubleshooting.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"- **Implemented List All Feature:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"  - Developed the \u0027ListAllCommand\u0027 and \u0027ListAllCommandFactory\u0027 to allow users to view all events in the storage with different sorting strategies.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"  - Ensured this feature is only accessible by Admin users.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"  - Prompted user to select sort type after entering list, enhancing interactivity.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"  - Supported sorting types:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"    - By *priority*** (primary), sub-sorted by end time.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"    - By **start*`* or **end time** (primary), sub-sorted by priority.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"### **Implementation of JUnit Tests**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"- **Added comprehensive JUnit tests for:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"    - `PriorityFilterTest`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"    - `ListAllCommandTest`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"    - Conflict detection logic for adding/editing events in `EventSyncTest`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"- Ensured coverage of edge cases.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"## Contributions to the User Guide","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"- **Documented:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"    - Interactive usage of `listAll`, `filter`, and conflict resolution features.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"    - Provided example inputs/outputs to assist user understanding.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"- **Added:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"    - **Architecture Diagram** giving an overview of the main components and their interaction.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"    - **Sequence Diagram** for:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"      - `Priority Filter` feature (`FilterEvent.puml`).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"      - `List All Events` feature (`ListAllEvents.puml`).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"    - **Implementation Details** for conflict detection, priority filter and list all feature.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"    - **Documentation Guide** providing guidance on setting up, maintaining, and styling the project\u0027s documentation.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"- Assisted in debugging and integration.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"- Reviewed and corrected issues from PE Dry Run.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"- Contributed to project documentation and testing strategies.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"- Participated in milestone planning and feature discussions.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"## Review/Mentoring Contributions","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"- Reviewed PRs related to event listing and filtering.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"- Added JavaDoc Comments for the code.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"- Edited coding style.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":73}},{"path":"docs/team/lydialkx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"# Liu Kexin - Project Portfolio Page","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"## Overview","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"Our team developed `EventSync`, a command-line event scheduling and management application aimed at optimizing ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"collaboration and time management. Users can create, view, edit, and organize events with conflict detection, ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lydialkx"},"content":"user management, and sorting capabilities.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"I was primarily responsible for implementing the priority system, the list command with sorting strategies, and the delete feature.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"## Code Contributed","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"[View my code on tP Code Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dLydialkx\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"## Enhancements Implemented","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lydialkx"},"content":"### Core Event Management Features (v1.0)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lydialkx"},"content":"- **Delete Feature**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"    - Implemented the `DeleteCommand` that allows users to remove events by keyword.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lydialkx"},"content":"    - Supported disambiguation when multiple events match the keyword — shows list with index selection.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lydialkx"},"content":"    - Confirmed deletion with the user before removal.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lydialkx"},"content":"    - Synchronized deletion between the event list and the priority list to ensure consistency.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lydialkx"},"content":"### New Features and Enhancements (v2.0)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lydialkx"},"content":"- **Priority System**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"    - Designed and implemented a `Priority` class under the `label` package to manage event priorities.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lydialkx"},"content":"    - Enabled setting and displaying priority levels (`HIGH`, `MEDIUM`, `LOW`) during event creation and display.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"- **Enhanced List Command with Sorting**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lydialkx"},"content":"    - Refactored `list` command to support dynamic sorting strategies.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lydialkx"},"content":"    - Supported sorting types:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"      - By **priority** (primary), sub-sorted by end time.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"      - By **start** or **end time** (primary), sub-sorted by priority.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"    - Synced sorting logic for both events and their corresponding priority levels.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"    - Prompted user to select sort type after entering list, enhancing interactivity.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"### Implementation of JUnit Tests","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"- **Added comprehensive JUnit tests for:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"    - `PriorityTest.java`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"    - `ListCommandTest.java`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"    - `DeleteEventTest.java`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lydialkx"},"content":"    - `SortByPriorityTest.java`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"    - `SortByStartTimeTest.java`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lydialkx"},"content":"    - `SortByEndTimeTest.java`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lydialkx"},"content":"    - `ParticipantManagerTest.java`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lydialkx"},"content":"    - `PriorityFilterTest.java`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lydialkx"},"content":"- Ensured coverage of edge cases, sorting correctness, and priority-event syncing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lydialkx"},"content":"## Contributions to the User Guide","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lydialkx"},"content":"- Drafted the **basic command syntax and structure** for major features, ensuring consistency and clarity across command formats.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lydialkx"},"content":"- Documented detailed usage for `delete`, `list` (with sort), and `priority` features.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lydialkx"},"content":"- Added example inputs/outputs to guide users on expected behavior and edge cases.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lydialkx"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lydialkx"},"content":"- **Added:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lydialkx"},"content":"   - **Model Component Diagram** in `modelComponent.puml`, which captures the relationships between all core classes such ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lydialkx"},"content":"  as `EventManager`, `ParticipantManager`, `Priority`, `Sort`, and `SyncException`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lydialkx"},"content":"   - **Sequence Diagram** for the `deleteEvent` feature (`DeleteEvent.puml`) that includes branching logic for ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lydialkx"},"content":"  handling multiple matching events and user confirmation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lydialkx"},"content":"   - **Implementation Details** and design rationale for:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lydialkx"},"content":"     - `deleteEvent`: including parsing flow, user disambiguation logic, confirmation prompts, and data synchronization.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lydialkx"},"content":"     - `listEvent`: including enhancement to sorting strategy (by start time, end time, priority).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lydialkx"},"content":"   - **Logging Guide** under the Documentation, logging, testing, configuration, dev-ops section, describing ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lydialkx"},"content":"  the usage of EventSyncLogger with java.util.logging, setup, and code snippets.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lydialkx"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lydialkx"},"content":"- Helped debug integration issues in delete and list workflows.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lydialkx"},"content":"- Reviewed and merged PRs related to event, sorting, and participant features.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lydialkx"},"content":"- Supported DG/UG formatting and milestone submission checks.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lydialkx"},"content":"## Review/Mentoring Contributions","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lydialkx"},"content":"- Reviewed PRs related to sorting, filtering, and command structure.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Lydialkx"},"content":"- Assisted teammates with testing and implementation of user input parsing and validation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Lydialkx"},"content":"##  Contributions Beyond the Project Team","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Lydialkx"},"content":"- Actively participated in Project Evaluation - Dry Run (PE-D) by reporting 10 valid bugs in another team’s product.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Lydialkx"},"content":"- The bugs spanned a range of functionality flaws, documentation inconsistencies, and edge case issues — each crafted ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Lydialkx"},"content":"with reproduction steps and annotated screenshots.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Lydialkx"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Lydialkx":79}},{"path":"docs/team/sxkhoo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sxkhoo"},"content":"# Khoo Shi Xian - Project Portfolio Page","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sxkhoo"},"content":"## Project Overview","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sxkhoo"},"content":"Our team developed EventSync, a command-line event scheduling and management application aimed at optimizing collaboration and time management. Users can create, view, edit, and organize events with conflict detection, user management, and sorting capabilities.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sxkhoo"},"content":"I am responsible for creating the edit event feature, add participant feature, and to list participants of a specific event.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sxkhoo"},"content":"## Code Contribution","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sxkhoo"},"content":"[View my code contribution](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dW13\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dsxkhoo\u0026tabRepo\u003dAY2425S2-CS2113-W13-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sxkhoo"},"content":"## Enhanced Implementation","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sxkhoo"},"content":"### Core Event Management Feature (v1.0)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sxkhoo"},"content":"- **Edit Event Feature**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sxkhoo"},"content":"    - Implemented the `EditEventCommand` to allow users to edit existing events.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sxkhoo"},"content":"    - Provided the ability to update event details such as name, description, and timing.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sxkhoo"},"content":"    - Validated input and ensured events were correctly updated in the event manager.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sxkhoo"},"content":"    - Provided feedback to the user via the UI when an event was successfully edited.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sxkhoo"},"content":"### New Event Management Feature (v2.0)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sxkhoo"},"content":"- **Add Participant Feature**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sxkhoo"},"content":"    - Implemented the `AddParticipantCommand` to allow users to add participants to events.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sxkhoo"},"content":"    - Ensured proper validation that only available participants are added to the event.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sxkhoo"},"content":"    - Provided clear feedback to the user via the UI when a participant is successfully added.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sxkhoo"},"content":"- **List Participant Feature**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sxkhoo"},"content":"    - Implemented the `ListParticipantCommand` to display all participants of a specific event.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sxkhoo"},"content":"    - Ensured that the participant list is displayed in a clear, readable format for users.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sxkhoo"},"content":"- **Participant Class**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sxkhoo"},"content":"    - Created the `Participant` class to manage participant data such as username, password, availability, and access levels.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sxkhoo"},"content":"    - Ensured the class included functionality for managing participant information and availability.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sxkhoo"},"content":"    - Integrated the `Participant` class with the add and list participant features.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sxkhoo"},"content":"### Implementation of JUnit Test Case","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sxkhoo"},"content":"- **Added JUnit test case for**:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sxkhoo"},"content":"    - `EditEvent.java`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sxkhoo"},"content":"    - `ParticipantTest.java`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sxkhoo"},"content":"  ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sxkhoo"},"content":"    - Ensured coverage of edge cases.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sxkhoo"},"content":"## Contribution to User Guide","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sxkhoo"},"content":"- Contributed sections for the **Add Participant** and **Edit Event** features.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sxkhoo"},"content":"- Provided detailed steps and examples for how users can add participants to events and edit event details.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sxkhoo"},"content":"## Contribution to Developer Guide","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sxkhoo"},"content":"### Logic Diagram for Parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sxkhoo"},"content":"- Contributed to the **Parser** section of the Developer Guide by creating both **class** and **sequence** diagrams to describe how the **Parser** interacts with the **CommandParser**, **Command**, and **CommandFactory** classes.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sxkhoo"},"content":"- The **class diagram** illustrates the structure and relationships between these components, showcasing the flow and dependencies among them.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sxkhoo"},"content":"- The **sequence diagram** visualizes the interactions between the classes during runtime, demonstrating how commands are parsed and executed in the system.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sxkhoo"},"content":"## Contribution to Team-Based Tasks","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sxkhoo"},"content":"## Review / Mentoring Contributions","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"sxkhoo":58}},{"path":"docs/team/yanxinyaoo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"# Yan Xinyao - Project Portfolio Page","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"Our team developed **EventSync**, a smart event scheduling and management application designed for seamless coordination. It enables users to create, update, and manage events efficiently while ensuring minimal conflicts and optimal scheduling.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"I focused on implementing key functionalities for event management, optimizing performance, and ensuring robust testing through JUnit test cases.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"## Code Contributed","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"[View my code on tP Code Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dYanXinyaoo\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"## Enhancements Implemented","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"### Core Event Management Features (v1.0)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"- **Implemented the following commands:**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"    - `addEventCommand`: Allows users to create new events with customizable details.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    - `listCommand`: Displays all upcoming events in an organized format.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"- **Helped with overall code structure:**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    - Refactored event-related classes to follow the **Single Responsibility Principle (SRP)**.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    - Improved modularity by separating **event command**, **paser**, and **UI interaction**.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    - Optimized event handling with **efficient data structures**.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"### New Features and Enhancements (v2.0)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"- **Added new commands:**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    - `addParticipantCommand`: Help to achieve the function that allows users to add participants to existing events with availability checks.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    - `createUserCommand`: Allows users to create new accounts and register with the system.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    - `LoginCommand`: Enables user authentication and session management.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    - `LogoutCommand`: Allows users to log out and generates a downloadable event schedule in CSV format.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"- **Added new components:**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    - **`Storage`**:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        - A centralized storage system for all event-related data. This component ensures that events are stored persistently and can be retrieved across application sessions.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        - Stores event details such as event name, time, participants, and other metadata.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        - Uses a file-based or in-memory database (depending on your implementation) to persist event data.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    - **`UserStorage`**:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        - Manages the storage of user information, including user profiles, registration details, and availability.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        - Ensures that user data is stored securely and can be retrieved to check availability when scheduling new events.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"- **Modification to `AddEventCommand`**:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        - The event creator is automatically added to the event.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        - The creator’s availability is checked to ensure there are no scheduling conflicts.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        - The event details are saved in `Storage` for future retrieval.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"- **Added new command factories:**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"### Command Factories","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"| Factory Class                         | Description                                                                 |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"|---------------------------------------|-----------------------------------------------------------------------------|","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"| `AddEventCommandFactory`              | Creates a command to add new events with time conflict detection and automatic time slot suggestions |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"| `AddParticipantCommandFactory`       | Creates a command to add participants to events with availability checks     |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"| `ByeCommandFactory`                  | Creates a command to exit the application and save data                     |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"| `CommandFactory`                     | Base factory class for all command factories                                |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"| `CreateUserCommandFactory`           | Creates a command to register new users (stores in `UserStorage`)           |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"| `DeleteCommandFactory`               | Creates a command to remove events with user confirmation                   |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"| `DuplicateCommandFactory`            | Creates a command to duplicate events with modification options             |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"| `EditCommandFactory`                 | Creates a command to modify event details with conflict detection           |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"| `FilterCommandFactory`               | Creates a command to filter events by user-defined criteria                 |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"| `FindCommandFactory`                 | Creates a command to search for events by keywords or date                 |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"| `ListCommandFactory`                 | Creates a command to list events with optional filters                      |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"| `ListParticipantsCommandFactory`     | Creates a command to list participants of a particular event                |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"| `LoginCommandFactory`                | Creates a command for user authentication and login                        |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"| `LogOutCommandFactory`               | Creates a command for logging out the user and saving session data         |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"### Implementation of JUnit Tests","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"- **Added comprehensive JUnit tests for:**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"    - `EventSyncTest`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"    - All JUnit test under file `command`, `commandfactory`, `exception`, `logger`, `parser`, `storage`, `ui`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"    - Modify all JUnit test to pass the test.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"    - Updated **text-ui-test**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"## Contributions to the User Guide","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"- **Documented:**:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"    - Interactive usage of `addEvent`, `listEvent`, `login`, `logout` and `create`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"    - Provided detailed examples and common user scenarios","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"- **Added:**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"    - **Sequence Diagrams** for `addEvent`, `editEvent`, `duplicate`, `add participant`, `list participant`, `listEvent`, `storage`, `userStorage`, `login`, `logout` and `create` commands.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"    - **Class Diagrams** for `Storage`, `UserStorage` and its dependencies.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"    - **Design** for Storage","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"    - **Implementaiton** for `addEvent`, `listEvent`, `storage`, `userStorage`, `login`, `logout` and `create`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"    - **Manual Testing** for all possible functions","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"    - **Detailed explanations** of conflict resolution logic and event handling.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"- Assisted in debugging and refactoring shared components.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"- Participated in milestone discussions and design decisions.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"- Contributed to project documentation and version control maintenance.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"## Review/Mentoring Contributions","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"- Reviewed PRs related to event management and UI improvements.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"- Provided feedback on optimizing scheduling algorithms and improving edge case handling.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"- Helped team members troubleshoot complex bugs and refine error messaging.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":94,"-":4}},{"path":"docs/team/yeeern27.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeeern27"},"content":"# Goh Yee Ern - Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yeeern27"},"content":"## Project Overview","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yeeern27"},"content":"Our team developed EventSync, a command-line event scheduling and management application aimed at optimizing collaboration and time management. Users can create, view, edit, and organize events with conflict detection, user management, and sorting capabilities.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yeeern27"},"content":"I am responsible for creating the find feature, duplicate event feature, and to allocate participants based on their available schedule. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yeeern27"},"content":"## Code Contribution","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yeeern27"},"content":"[View my code contribution](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dW13\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyeeern27\u0026tabRepo\u003dAY2425S2-CS2113-W13-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yeeern27"},"content":"## Enhanced Implementation","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yeeern27"},"content":"### Core Event Management Feature (v1.0) ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yeeern27"},"content":"- **Find Feature** : ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yeeern27"},"content":"   - Implemented the `FindCommand` to allow users to find event with keywords.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yeeern27"},"content":"   - Performed case-insenstive mathcing against both event names and description.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yeeern27"},"content":"   - Displayed all matching events to the user in a clearn, readable format via UI.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yeeern27"},"content":"   - Handled whitespace and formatting inconsistencies by trimming input and event data.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yeeern27"},"content":"   - Included debug output for easier troubleshooting.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yeeern27"},"content":" ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yeeern27"},"content":"- **Duplicate Event Feature** :","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yeeern27"},"content":"   - Implemented the `DuplicateCommand` to allow users to create a copy of an existing event with a new name.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yeeern27"},"content":"   - Ensured that the duplicated event is properly added to the event manager.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yeeern27"},"content":"   - Provided user feedback via the UI to confirm successful duplication.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yeeern27"},"content":" ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yeeern27"},"content":"### New Event Management Feature (v2.0) ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yeeern27"},"content":" ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yeeern27"},"content":" - **Availability Conflict Detection** :","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yeeern27"},"content":"    - Implemented availability checking logic to ensure particpants can only be added to the events if their schedule perimits.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yeeern27"},"content":"    - Determined overlap by checking for non-collision between the participant\u0027s available time and the event duration.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yeeern27"},"content":"    - Intergrated debug print statements to assist with runtime verification of availability.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yeeern27"},"content":"    - Displayed a warning via the UI when the participant is not free for the event.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yeeern27"},"content":"    - Integrated with the `addparticipant` command for execution.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yeeern27"},"content":"  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yeeern27"},"content":"### Implementation of JUnit Test Case ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yeeern27"},"content":"- **Added JUnit test case for** :","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yeeern27"},"content":"    - DuplicateEventTest.java","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yeeern27"},"content":"    - FilterCommandFactoryTest.java","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yeeern27"},"content":"    - PrintMatchingEventsTest.java","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yeeern27"},"content":"    - UITest.java","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yeeern27"},"content":" ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yeeern27"},"content":"- Ensure coverage of edge case.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yeeern27"},"content":"## Contribution to User Guide ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yeeern27"},"content":"- Added features for `find` and `duplicate` command. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yeeern27"},"content":"- Contributed to the Features section by including the examples for each command based on the latest version of code.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yeeern27"},"content":"- Checked and finalised the User Guide.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yeeern27"},"content":"## Contribution to Developer Guide ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yeeern27"},"content":"- Contributed to the UI section by listing the different methods in the UI and their functions. ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yeeern27"},"content":"- Contributed to generating the UI diagram.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yeeern27"},"content":"  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yeeern27"},"content":"## Contribution to Team-based task  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yeeern27"},"content":"  - Helped to write the skeleton of the code for first draft.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yeeern27"},"content":"  - Reviewed and coordinated the merging of code.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yeeern27"},"content":"  - Helped with documentations and milestone deliverables.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yeeern27"},"content":"  - Edited the coding style to ensure it matches with the standard coding style.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yeeern27"},"content":"## Review / Mentoring Contribution  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yeeern27"},"content":"  - Assisted with debugging of teammates\u0027 code.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yeeern27"},"content":"  - Reviewed and debugged `listparticipants` code.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yeeern27"},"content":"    ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yeeern27"},"content":"  ","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"yeeern27":71}},{"path":"src/main/java/command/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command to add an event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * An {@code AddEventCommand} object encapsulates a single {@code Event}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" * to be added to the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(AddEventCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"    private final Event event;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an {@code AddEventCommand} with the specified event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     * @param event the event to be added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        this.event \u003d event;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * Adds the event to the event manager under the current user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the event manager to add the event to.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the user interface used for interaction.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the participant manager for accessing the current user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if the current user is not set or another sync error occurs.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager events, UI ui, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting to create AddEventCommand\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        assert event !\u003d null : \"Event cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        events.addEvent(event, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the event associated with this command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     * @return the event to be added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    public Event getEvent() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        return this.event;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":24,"YanXinyaoo":27}},{"path":"src/main/java/command/AddParticipantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sxkhoo"},"content":"package command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.CommandFactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.CreateUserCommandFactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sxkhoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sxkhoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sxkhoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yeeern27"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sxkhoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sxkhoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sxkhoo"},"content":"import label.Priority;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command to add a participant to an event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" * An {@code AddParticipantCommand} allows assigning a participant","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" * to a specific event by index, creating the participant if needed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sxkhoo"},"content":"public class AddParticipantCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(AddParticipantCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sxkhoo"},"content":"    private final int eventIndex;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sxkhoo"},"content":"    private final String participantName;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private final UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an {@code AddParticipantCommand} with the given event index,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * participant name, user interface, and participant manager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventIndex the index of the event to add the participant to.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantName the name of the participant to be added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the user interface for interaction.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the manager handling participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    public AddParticipantCommand(int eventIndex, String participantName, UI ui, ParticipantManager participantManager) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sxkhoo"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sxkhoo"},"content":"        this.participantName \u003d participantName;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the command to add a participant to the specified event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     * If the participant does not exist, prompts the user to create one.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"     * Assigns the participant to the event if they are available.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager the manager handling the list of events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the user interface used for interaction.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the manager handling participant data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error during execution or saving data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager eventManager, UI ui, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        assert eventIndex \u003e\u003d 0 : \"Event index must be non-negative\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting to create AddParticipantCommand\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sxkhoo"},"content":"        Event event \u003d eventManager.getEvent(eventIndex);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(\"Event Index: \" + eventIndex);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(\"Event Start Time: \" + event.getStartTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(\"Event End Time: \" + event.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d participantManager.getParticipant(participantName);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        if (participant \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"            boolean shouldCreate \u003d ui.askConfirmation(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"                    \"Participant \u0027\" + participantName + \"\u0027 does not exist. Create a new one? (Y/N)\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"            );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"            if (!shouldCreate) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showMessage(\"Operation cancelled.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"                return;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"            CommandFactory factory \u003d new CreateUserCommandFactory(this.ui, this.participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"            Command cmd \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"            cmd.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"            participant \u003d participantManager.getParticipant(participantName);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        boolean isAvailable \u003d participantManager.checkParticipantAvailability(event, participant);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yeeern27"},"content":"        if (isAvailable) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sxkhoo"},"content":"            boolean assigned \u003d participantManager.assignParticipant(event, participant);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sxkhoo"},"content":"            if (assigned) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"                event.addParticipant(participant);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showMessage(\"Participant \" + participant.getName() + \" has been added.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sxkhoo"},"content":"            } else {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showMessage(\"Failed to assign time slot. Enter \u0027addparticipant\u0027 to try again.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sxkhoo"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yeeern27"},"content":"        } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(\"Participant \" + participant.getName() + \" is unavailable during the event.\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"                    \"Enter \u0027addparticipant\u0027 to try again or try other features.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sxkhoo"},"content":"        eventManager.getStorage().saveEvents(eventManager.getEvents(), Priority.getAllPriorities());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the name of the participant to be added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"     * @return the participant name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"    public String getParticipantName() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"        return participantName;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the index of the event to which the participant should be added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"     * @return the event index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"    public int getEventIndex() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"        return eventIndex;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"sxkhoo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":34,"sxkhoo":25,"YanXinyaoo":50,"yeeern27":6}},{"path":"src/main/java/command/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command to terminate the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * A {@code ByeCommand} displays a farewell message and signals the system to exit.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(ByeCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the command to display the goodbye message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the manager handling event data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the user interface used for displaying messages.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the manager handling participant data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error during execution.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager events, UI ui, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting to create ByeCommand\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showByeMessage();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * Returns whether this command signals the application to exit.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @return {@code true} since this command indicates program termination.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        return true;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":17,"YanXinyaoo":21}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * Represents an abstract command to be executed in the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * All concrete commands must extend this class and implement the {@code execute} method.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the command using the given managers and UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the manager handling event data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the user interface used for displaying messages.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the manager handling participant data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error during command execution.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    public abstract void execute(EventManager events, UI ui,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"                                 ParticipantManager participantManager) throws SyncException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * Indicates whether the command causes the application to terminate.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * @return {@code true} if the command signals exit, {@code false} otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":19,"YanXinyaoo":14}},{"path":"src/main/java/command/CreateUserCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command to create a new user in the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"public class CreateUserCommand extends Command {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(CreateUserCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    private final Participant participant;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a {@code CreateUserCommand} with the specified participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param participant the participant to be created.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    public CreateUserCommand(Participant participant) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"        this.participant \u003d participant;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the command to add the new participant to the participant manager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the event manager (unused in this command).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the user interface used to display messages.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the participant manager to which the new user is added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error during user creation.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager events, ui.UI ui, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        assert participant !\u003d null : \"Participant cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting to create CreateUserCommand\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(participant);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showSuccessCreateMessage(participant);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the participant associated with this command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * @return the participant to be created.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    public Participant getParticipant() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        return participant;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":21,"YanXinyaoo":29}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"import event.Event;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command to delete an event from the event manager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(DeleteCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    private final int index;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a {@code DeleteCommand} with the specified event index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param index the index of the event to be deleted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the command to delete an event if the index is valid and user confirms the deletion.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager the event manager containing the list of events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the user interface used to display prompts and messages.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the participant manager (not used in this command).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if the event index is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager eventManager, UI ui, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting to create DeletetCommand\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        if (index \u003c 0 || index \u003e\u003d eventManager.getEvents().size()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Invalid event index. Please enter a valid index.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lydialkx"},"content":"        if (eventManager.getEvents().isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lydialkx"},"content":"            ui.showMessage(\"No events available.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lydialkx"},"content":"            return;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lydialkx"},"content":"        Event eventToDelete \u003d eventManager.getEvents().get(index);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lydialkx"},"content":"        if (ui.confirmDeletion(eventToDelete.getName())) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lydialkx"},"content":"            eventManager.deleteEvent(index);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"            for (Participant participant : eventToDelete.getParticipants()) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"                participant.unassignEventTime(eventToDelete.getStartTime(), eventToDelete.getEndTime());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"                participantManager.save(participant);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lydialkx"},"content":"        } else {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lydialkx"},"content":"            ui.showDeletionCancelledMessage();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.save();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.save();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the index of the event to be deleted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"     * @return the event index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"    public int getEventIndex() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        return this.index;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Lydialkx":14,"HuaZhenting":21,"YanXinyaoo":36}},{"path":"src/main/java/command/DuplicateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command to duplicate an existing event with a new name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"public class DuplicateCommand extends Command {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(DuplicateCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    private final Event eventToDuplicate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"    private final String newName;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a {@code DuplicateCommand} with the event to duplicate and the new event name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventToDuplicate the event to be duplicated.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     * @param newName the name of the duplicated event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    public DuplicateCommand(Event eventToDuplicate, String newName) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        this.eventToDuplicate \u003d eventToDuplicate;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the command to duplicate the specified event and displays a confirmation message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the event manager used to manage events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the user interface used to display the result.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the participant manager (not used in this command).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if an error occurs during the duplication process.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager events, UI ui, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        assert eventToDuplicate !\u003d null : \"Event to duplicate cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        events.duplicateEvent(eventToDuplicate, newName);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        Event duplicatedEvent \u003d eventToDuplicate.duplicate(newName);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(\"Event duplicated: \" + duplicatedEvent.toString());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":17,"YanXinyaoo":26,"yeeern27":1}},{"path":"src/main/java/command/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sxkhoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" * Command that allows the administrator to edit event details such as name, start time,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" * end time, location, and description. It checks for participant availability and","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" * ensures that no conflicts arise during the editing process.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"public class EditEventCommand extends Command {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(EditEventCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private final int index;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * Constructor to initialize the EditEventCommand with an event index and participant manager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * @param index The index of the event to edit","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The participant manager responsible for managing participants","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    public EditEventCommand(int index, ParticipantManager participantManager) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the edit event command. This method allows an administrator to modify event details.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * It prompts the user to edit specific event properties, such as name, start time, end time, location,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     * and description, and ensures the consistency of participant availability.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * @param events The event manager that holds the events","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI interface to interact with the user","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The participant manager to handle participant data","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"     * @throws SyncException If an error occurs, such as invalid data or participant unavailability","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager events, UI ui, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sxkhoo"},"content":"        if (!participantManager.isCurrentUserAdmin()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sxkhoo"},"content":"            throw new SyncException(\"You are not currently administrator.\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d events.getEvent(index);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sxkhoo"},"content":"        assert event !\u003d null : \"Event to edit should not be null\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        boolean editing \u003d true;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        while (editing) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showEditCommandMessageWithOptions(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"            Integer choice \u003d ui.readInt();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"            if (choice \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showEditCommandCorrectFormat();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"                continue;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"            switch (choice) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"            case 1:","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"                editing \u003d editName(event, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"                break;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"            case 2:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"                editing \u003d editStartTime(event, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"                break;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"            case 3:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"                editing \u003d editEndTime(event, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"                break;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"            case 4:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"                editing \u003d editLocation(event, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"                break;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"            case 5:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"                editing \u003d editDescription(event, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"                break;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"            case 6:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sxkhoo"},"content":"                editing \u003d false;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showMessage(\"✅ Event editing completed.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sxkhoo"},"content":"                break;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"            default:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showEditCommandCorrectFormat();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"            events.save();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"            participantManager.save();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"     * Edits the event\u0027s name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event to edit","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI interface for interaction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if the name was successfully updated, false if editing was cancelled","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during editing","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sxkhoo"},"content":"    private boolean editName(Event event, UI ui) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showEditCommandStep1();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"        String newName \u003d ui.readLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"sxkhoo"},"content":"        ui.checkForExit(newName);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"sxkhoo"},"content":"        event.setName(newName);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"sxkhoo"},"content":"        ui.showMessage(\"✅ Name updated:\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"        return true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HuaZhenting"},"content":"     * Edits the event\u0027s start time.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event to edit","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI interface for interaction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if the start time was successfully updated, false if editing was cancelled","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during editing, such as an invalid time or participant unavailability","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"    private boolean editStartTime(Event event, UI ui) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"sxkhoo"},"content":"        while (true) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"sxkhoo"},"content":"            LocalDateTime newStart \u003d getValidDateTime(ui, \"start\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"            if (newStart \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"sxkhoo"},"content":"                ui.showMessage(\"❌ Start time editing cancelled.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"sxkhoo"},"content":"                return true; // return to main edit menu","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"sxkhoo"},"content":"            if (newStart.isAfter(event.getEndTime())) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"sxkhoo"},"content":"                ui.showMessage(SyncException.startTimeAfterEndTimeMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"sxkhoo"},"content":"                continue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"sxkhoo"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"            for (Participant p : event.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"                p.unassignEventTime(event.getStartTime(), event.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"            for (Participant p : event.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"                if (!p.isAvailableDuring(newStart, event.getEndTime())) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"                    for (Participant recover : event.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"                        recover.assignEventTime(event.getStartTime(), event.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"                        participantManager.save(recover);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"                    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YanXinyaoo"},"content":"                    throw new SyncException(SyncException.participantUnavailableDuringEditError(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"                            p.getName(), event.getStartTime(), event.getEndTime()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"            for (Participant p : event.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"                p.assignEventTime(newStart, event.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"                participantManager.save(p);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"sxkhoo"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"sxkhoo"},"content":"            event.setStartTime(newStart);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"            return true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"HuaZhenting"},"content":"     * Edits the event\u0027s end time.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event to edit","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI interface for interaction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if the end time was successfully updated, false if editing was cancelled","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during editing, such as an invalid time or participant unavailability","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YanXinyaoo"},"content":"    private boolean editEndTime(Event event, UI ui) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"sxkhoo"},"content":"        while (true) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showEditCommandStep3();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"sxkhoo"},"content":"            LocalDateTime newEnd \u003d getValidDateTime(ui, \"end\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YanXinyaoo"},"content":"            if (newEnd \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"sxkhoo"},"content":"                ui.showMessage(\"❌ End time editing cancelled.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YanXinyaoo"},"content":"                return true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"sxkhoo"},"content":"            if (newEnd.isBefore(event.getStartTime())) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"sxkhoo"},"content":"                ui.showMessage(SyncException.endTimeBeforeStartTimeMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"sxkhoo"},"content":"                continue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"sxkhoo"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YanXinyaoo"},"content":"            for (Participant p : event.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YanXinyaoo"},"content":"                p.unassignEventTime(event.getStartTime(), event.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"            for (Participant p : event.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YanXinyaoo"},"content":"                if (!p.isAvailableDuring(event.getStartTime(), newEnd)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YanXinyaoo"},"content":"                    for (Participant recover : event.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YanXinyaoo"},"content":"                        recover.assignEventTime(event.getStartTime(), event.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YanXinyaoo"},"content":"                        participantManager.save();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YanXinyaoo"},"content":"                    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YanXinyaoo"},"content":"                    throw new SyncException(SyncException.participantUnavailableDuringEditError(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YanXinyaoo"},"content":"                            p.getName(), event.getStartTime(), event.getEndTime()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"YanXinyaoo"},"content":"            for (Participant p : event.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"YanXinyaoo"},"content":"                p.assignEventTime(event.getStartTime(), newEnd);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"YanXinyaoo"},"content":"                participantManager.save();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"sxkhoo"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"sxkhoo"},"content":"            event.setEndTime(newEnd);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"YanXinyaoo"},"content":"            return true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"HuaZhenting"},"content":"     * Edits the event\u0027s location.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event to edit","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI interface for interaction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if the location was successfully updated, false if editing was cancelled","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during editing","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"sxkhoo"},"content":"    private boolean editLocation(Event event, UI ui) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showEditCommandStep4();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"YanXinyaoo"},"content":"        String newLocation \u003d ui.readLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"sxkhoo"},"content":"        ui.checkForExit(newLocation);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"sxkhoo"},"content":"        event.setLocation(newLocation);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"sxkhoo"},"content":"        ui.showMessage(\"✅ Location updated:\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"YanXinyaoo"},"content":"        return true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"HuaZhenting"},"content":"     * Edits the event\u0027s description.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event to edit","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI interface for interaction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if the description was successfully updated, false if editing was cancelled","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during editing","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"sxkhoo"},"content":"    private boolean editDescription(Event event, UI ui) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showEditCommandStep5();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"YanXinyaoo"},"content":"        String newDesc \u003d ui.readLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"sxkhoo"},"content":"        ui.checkForExit(newDesc);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"sxkhoo"},"content":"        event.setDescription(newDesc);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"sxkhoo"},"content":"        ui.showMessage(\"✅ Description updated:\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"YanXinyaoo"},"content":"        return true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user for a valid date-time input for start or end time.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI interface for interaction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"HuaZhenting"},"content":"     * @param type The type of time (\"start\" or \"end\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"HuaZhenting"},"content":"     * @return The parsed LocalDateTime if valid, null if user cancels","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during the input process","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"YanXinyaoo"},"content":"    private LocalDateTime getValidDateTime(UI ui, String type) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"sxkhoo"},"content":"        boolean firstPrompt \u003d true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"sxkhoo"},"content":"        while (true) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"sxkhoo"},"content":"            if (firstPrompt) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"sxkhoo"},"content":"                ui.showMessage(\"Enter New \" + type.substring(0, 1).toUpperCase() + type.substring(1)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"sxkhoo"},"content":"                        + \" Time (YYYY-MM-DD HH:MM) or type \u0027exit\u0027 to cancel:\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"sxkhoo"},"content":"                firstPrompt \u003d false;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"sxkhoo"},"content":"            } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"sxkhoo"},"content":"                ui.showMessage(\"❌ Invalid format! Please re-enter or type \u0027exit\u0027 to cancel:\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"sxkhoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"YanXinyaoo"},"content":"            String input \u003d ui.readLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"sxkhoo"},"content":"            ui.checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"YanXinyaoo"},"content":"            try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"YanXinyaoo"},"content":"                return LocalDateTime.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"YanXinyaoo"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"sxkhoo"},"content":"                // loop will continue and re-show the re-entry prompt","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if all participants are available during the specified time range.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event to check","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"HuaZhenting"},"content":"     * @param newStart The new start time for the event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"HuaZhenting"},"content":"     * @param newEnd The new end time for the event","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI interface for interaction","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if all participants are available, false otherwise","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"sxkhoo"},"content":"    private boolean checkParticipantAvailability(Event event, LocalDateTime newStart,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"sxkhoo"},"content":"                                                 LocalDateTime newEnd, UI ui) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"sxkhoo"},"content":"        boolean allAvailable \u003d true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"sxkhoo"},"content":"        for (Participant p : event.getParticipants()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"sxkhoo"},"content":"            if (!p.isAvailableDuring(newStart, newEnd)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showMessage(SyncException.participantUnavailableDuringEditError(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"YanXinyaoo"},"content":"                        p.getName(), newStart, newEnd));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"sxkhoo"},"content":"                ui.showMessage(\"   📆 Available slots for \" + p.getName() + \":\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"sxkhoo"},"content":"                int index \u003d 1;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"sxkhoo"},"content":"                for (var slot : p.getAvailableTimes()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"sxkhoo"},"content":"                    ui.showMessage(\"     [\" + index++ + \"] \" + slot);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"sxkhoo"},"content":"                }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"sxkhoo"},"content":"                allAvailable \u003d false;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"sxkhoo"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"sxkhoo"},"content":"        return allAvailable;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"sxkhoo"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":79,"sxkhoo":85,"YanXinyaoo":133}},{"path":"src/main/java/command/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeeern27"},"content":"package command;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yeeern27"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yeeern27"},"content":"import ui.UI;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yeeern27"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yeeern27"},"content":"import event.Event;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"import label.Priority;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yeeern27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" * Command that filters events based on priority bounds for the current user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" * It checks the assigned events to the user and filters them based on the priority range.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(EditEventCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"    private final int lowerBound;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    private final int upperBound;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * Constructor to initialize the FilterCommand with a lower and upper priority bound.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * @param lower The lower bound for filtering events by priority","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param upper The upper bound for filtering events by priority","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"    public FilterCommand(int lower, int upper) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"        this.lowerBound \u003d lower;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"        this.upperBound \u003d upper;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yeeern27"},"content":"    public int getLowerBound() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yeeern27"},"content":"        return lowerBound;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yeeern27"},"content":"    public int getUpperBound() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yeeern27"},"content":"        return upperBound;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the command to filter events based on the priority bounds.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"     * The method validates the bounds, checks if the user is logged in, and filters the events accordingly.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager The manager for handling events","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI interface for displaying messages to the user","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The manager for handling participant data","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If there is an error while executing the command, such as invalid bounds or missing user","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yeeern27"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager eventManager, UI ui, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yeeern27"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"            if (!isValidBound(lowerBound) || !isValidBound(upperBound)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"                throw new SyncException(\"Invalid priority bounds: lowerBound and upperBound must be between 1 and 3.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"            Participant currentUser \u003d participantManager.getCurrentUser();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"            if (currentUser \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"                ui.showMessage(\"Please login first to view your events.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"                return;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"            List\u003cEvent\u003e userEvents \u003d eventManager.getEvents().stream()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"                    .filter(event -\u003e event.hasParticipant(currentUser))","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"            if (userEvents.isEmpty()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"                ui.showMessage(\"No events assigned to you.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"                return;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yeeern27"},"content":"            ArrayList\u003cEvent\u003e matchingEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yeeern27"},"content":"            ArrayList\u003cString\u003e allPriorities \u003d Priority.getAllPriorities();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"            if (allPriorities.size() !\u003d eventManager.size()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"                throw new SyncException(\"Priority list is out of sync with events\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"            for (int i \u003d 0; i \u003c eventManager.size(); i++) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"                Event event \u003d eventManager.getEvent(i);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"                if (event.hasParticipant(currentUser)) {  // Check if user is assigned","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"                    String priority \u003d allPriorities.get(i);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"                    int priorityValue \u003d Priority.getValue(priority);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"                    if (priorityValue \u003e\u003d lowerBound \u0026\u0026 priorityValue \u003c\u003d upperBound) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yeeern27"},"content":"                        matchingEvents.add(event);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yeeern27"},"content":"                    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yeeern27"},"content":"                }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yeeern27"},"content":"            ui.printMatchingEvents(matchingEvents);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yeeern27"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"            throw new SyncException(\"Error filtering events: \" + e.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"     * Validates if the given priority bound is within the acceptable range (1 to 3).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"     * @param bound The priority bound to validate","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if the bound is valid (between 1 and 3), otherwise false","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"    private boolean isValidBound(int bound) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"        return bound \u003e\u003d 1 \u0026\u0026 bound \u003c\u003d 3;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yeeern27"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":63,"YanXinyaoo":14,"yeeern27":33}},{"path":"src/main/java/command/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeeern27"},"content":"package command;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yeeern27"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yeeern27"},"content":"import ui.UI;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yeeern27"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yeeern27"},"content":"import event.Event;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yeeern27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command to find events based on a search keyword.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" * The command searches for events whose name or description contains","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" * the provided keyword and displays the matching events to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yeeern27"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    /** The keyword to search for in event names and descriptions. */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(FindCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yeeern27"},"content":"    private final String keyword;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a new FindCommand with the specified search keyword.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * @param keyword the keyword to search for in event names and descriptions","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yeeern27"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yeeern27"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the find command, searching for events that match the keyword","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * in their names or descriptions. Displays the matching events to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the EventManager instance that manages the events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to display messages to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the ParticipantManager instance that manages participants","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if an error occurs during the find operation","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yeeern27"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager events, UI ui, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        assert keyword !\u003d null : \"Search keyword cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Searching for events with keyword: \" + keyword);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yeeern27"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"            Participant participant \u003d participantManager.getCurrentUser();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"            if (participant \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"                throw new SyncException(\"You are not logged in. Enter \u0027login\u0027 to log in first.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yeeern27"},"content":"            ArrayList\u003cEvent\u003e matchingEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"            ArrayList\u003cEvent\u003e allEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"            if (participant.isAdmin()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"                allEvents \u003d events.getEvents();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"            } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"                allEvents \u003d events.getEventsByParticipant(participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"            for (Event event : allEvents) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yeeern27"},"content":"                String eventName \u003d event.getName().trim().toLowerCase();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yeeern27"},"content":"                String eventDescription \u003d event.getDescription().trim().toLowerCase();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yeeern27"},"content":"                String searchKeyword \u003d keyword.trim().toLowerCase();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yeeern27"},"content":"                if (eventName.contains(searchKeyword) || eventDescription.contains(searchKeyword)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yeeern27"},"content":"                    matchingEvents.add(event);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yeeern27"},"content":"                }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yeeern27"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yeeern27"},"content":"            ui.printMatchingEvents(matchingEvents);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yeeern27"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yeeern27"},"content":"            throw new SyncException(\"Error during find operation: \" + e.getMessage());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yeeern27"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":26,"YanXinyaoo":20,"yeeern27":32}},{"path":"src/main/java/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command to display the help menu to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * The help menu contains information on how to interact with the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(HelpCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the help command, which displays the help menu to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the EventManager instance that manages the events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to display messages to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param participants the ParticipantManager instance that manages participants","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if an error occurs during the execution of the command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager events, UI ui, ParticipantManager participants) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Displaying help menu\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMenu();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":13,"YanXinyaoo":17}},{"path":"src/main/java/command/ListAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"package command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import event.Event;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"import label.Priority;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"import sort.Sort;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"import sort.SortByPriority;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"import sort.SortByStartTime;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"import sort.SortByEndTime;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"import java.util.List;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":" * Represents a command that lists all events for the current user, optionally sorted by a specified criterion.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":" * This command requires the user to be an Admin.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"public class ListAllCommand extends Command {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(ListAllCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"    private final String sortType;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private final UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a ListAllCommand with the specified sorting criterion.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param sortType the type of sorting (\u0027priority\u0027, \u0027start\u0027, or \u0027end\u0027)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to display messages and interact with the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    public ListAllCommand(String sortType, UI ui) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"        this.sortType \u003d sortType.toLowerCase();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"     * Executes the command to list all events for the current","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"     * user, optionally sorting them based on the given criterion.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the EventManager instance that manages the events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to display messages to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     * @param participants the ParticipantManager instance that manages participants","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if no user is logged in, or if the user is not an admin, or if an error occurs","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"    public void execute(EventManager events, UI ui, ParticipantManager participants) throws SyncException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        assert sortType !\u003d null : \"Sort type cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting to list all events with sort type: \" + sortType);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"        Participant currentUser \u003d participants.getCurrentUser();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"        // Check if user is logged in","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"        if (currentUser \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"            ui.showMessage(\"No user logged in. Do you want to log in?\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"            if (ui.readLine().equalsIgnoreCase(\"yes\")) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"                new LoginCommand().execute(events, ui, participants);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"            } else {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"                throw new SyncException(\"No user logged in. Please enter \u0027login\u0027 to log in \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"                        \"or \u0027create\u0027 to create a new user and then log in.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"        // Check if user has admin access","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"        if (currentUser.getAccessLevel() !\u003d Participant.AccessLevel.ADMIN) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"            ui.showMessage(\"Sorry, you need to be an ADMIN to access all events.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"            return;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"        List\u003cEvent\u003e eventList \u003d new ArrayList\u003c\u003e(events.getEvents());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"        if (events.size() \u003d\u003d 0) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"            ui.showMessage(\"No events in the system.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"            return;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"        Sort sequence;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"        switch (sortType) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"        case \"priority\":","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"            sequence \u003d new SortByPriority();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"            break;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"        case \"start\":","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"            sequence \u003d new SortByStartTime();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"            break;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"        case \"end\":","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"            sequence \u003d new SortByEndTime();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"            break;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"        default:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"            sequence \u003d null;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"            ui.showMessage(\"Unknown sort type. Showing unsorted list.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"            break;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"        if (sequence !\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"            sequence.sort(eventList, Priority.getAllPriorities());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"        // Display events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"        events.viewEvents(eventList);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":88,"YanXinyaoo":13}},{"path":"src/main/java/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"import label.Priority;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"import sort.Sort;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"import sort.SortByPriority;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"import sort.SortByStartTime;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"import sort.SortByEndTime;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sxkhoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":" * Command to list events assigned to the current user, optionally sorted by a specified criterion.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(ListCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private final String sortType;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a ListCommand with the specified sorting criterion.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param sortType the type of sorting (\u0027priority\u0027, \u0027start\u0027, or \u0027end\u0027)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    public ListCommand(String sortType) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        this.sortType \u003d sortType.toLowerCase();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"     * Executes the command to list events assigned to the current user,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"     * with optional sorting based on the provided sort type.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the EventManager instance that manages the events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to display messages to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * @param participants the ParticipantManager instance that manages participants","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an issue with logging in or processing events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager events, UI ui, ParticipantManager participants) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        assert sortType !\u003d null : \"Sort type cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Listing events with sort type: \" + sortType);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        Participant currentUser \u003d ensureUserLoggedIn(events, ui, participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        if (currentUser \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"            return;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cEvent\u003e userEvents \u003d getUserEvents(events, currentUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        if (userEvents.isEmpty()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(\"No events assigned to you.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"            return;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        Sort sorter \u003d chooseSortStrategy(ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        if (sorter \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"            events.viewEvents(userEvents);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"            return;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        displaySortedEvents(ui, userEvents, sorter);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"     * Ensures that the current user is logged in. If not, prompts for login and retries.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the EventManager instance that manages the events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to display messages to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"     * @param participants the ParticipantManager instance that manages participants","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"     * @return the current user if logged in, or null if login is unsuccessful","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if an error occurs during login","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant ensureUserLoggedIn(EventManager events, UI ui, ParticipantManager participants)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"            throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"        Participant user \u003d participants.getCurrentUser();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        if (user \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(\"No user logged in. Do you want to log in?(yes/no)\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"            if (ui.readLine().equalsIgnoreCase(\"yes\")) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"                new LoginCommand().execute(events, ui, participants);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"                return participants.getCurrentUser(); // Try again after login","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"            } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"                return null;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        return user;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"     * Retrieves the list of events assigned to the current user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the EventManager instance that manages the events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"     * @param user the current participant","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"     * @return a list of events assigned to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"    private List\u003cEvent\u003e getUserEvents(EventManager events, Participant user) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        return events.getEvents().stream()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"                .filter(event -\u003e event.hasParticipant(user))","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"     * Chooses the sorting strategy based on the specified sort type.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to display messages to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"     * @return the chosen sorting strategy, or null if the sort type is unknown","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"    private Sort chooseSortStrategy(UI ui) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"        switch (sortType) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Lydialkx"},"content":"        case \"priority\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"            return new SortByPriority();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Lydialkx"},"content":"        case \"start\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"            return new SortByStartTime();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Lydialkx"},"content":"        case \"end\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"            return new SortByEndTime();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Lydialkx"},"content":"        default:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Lydialkx"},"content":"            ui.showMessage(\"Unknown sort type. Showing unsorted list.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"            return null;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"HuaZhenting"},"content":"     * Displays the sorted events to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to display messages to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the list of events to display","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HuaZhenting"},"content":"     * @param sorter the sorting strategy used to sort the events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"    private void displaySortedEvents(UI ui, List\u003cEvent\u003e events, Sort sorter) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e sortedEvents \u003d new ArrayList\u003c\u003e(events);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cString\u003e priorities \u003d new ArrayList\u003c\u003e(Priority.getAllPriorities());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"        sorter.sort(sortedEvents, priorities);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"        if (sortedEvents.isEmpty()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Lydialkx"},"content":"            ui.showMessage(\"No events to display.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Lydialkx"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"            for (int i \u003d 0; i \u003c sortedEvents.size(); i++) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showEventWithIndex(sortedEvents.get(i), i + 1, priorities.get(i));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Lydialkx"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"Lydialkx":19,"HuaZhenting":44,"sxkhoo":1,"YanXinyaoo":81}},{"path":"src/main/java/command/ListParticipantsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sxkhoo"},"content":"package command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sxkhoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sxkhoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sxkhoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sxkhoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * Command to list the participants of a specific event identified by the event index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sxkhoo"},"content":"public class ListParticipantsCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(ListParticipantsCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sxkhoo"},"content":"    private final int eventIndex;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a ListParticipantsCommand with the specified event index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventIndex the index of the event for which participants will be listed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sxkhoo"},"content":"    public ListParticipantsCommand(int eventIndex) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sxkhoo"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the command to list the participants of the event identified by the event index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager the EventManager instance that manages the events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to display messages to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the ParticipantManager instance that manages the participants","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an issue accessing the event or listing participants","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sxkhoo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager eventManager, UI ui, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        assert eventIndex \u003e\u003d 0 : \"Event index must be non-negative\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Listing participants for event at index: \" + eventIndex);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sxkhoo"},"content":"        Event event \u003d eventManager.getEvent(eventIndex);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"        event.listParticipants();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sxkhoo"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":17,"sxkhoo":18,"YanXinyaoo":7}},{"path":"src/main/java/command/LogOutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * Command to handle the logout functionality for participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"public class LogOutCommand extends Command {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the logout command, which logs out the participant and displays a logout message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the EventManager instance used to manage events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to display messages to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param participants the ParticipantManager instance that manages participant data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if an error occurs during the logout process","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager events, UI ui, ParticipantManager participants) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        assert participants !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting to log out user\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        participants.logout();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showLogOutMessage();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":11,"YanXinyaoo":20}},{"path":"src/main/java/command/LoginCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * Command to handle the login functionality for participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"public class LoginCommand extends Command {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a LoginCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    public LoginCommand() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * Executes the login command, which prompts the ParticipantManager to handle the login process.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the EventManager instance used to manage events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to display messages to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the ParticipantManager instance that manages participant data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if an error occurs during the login process","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    public void execute(EventManager events, UI ui, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting to log in user\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.login();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":16,"YanXinyaoo":21}},{"path":"src/main/java/commandfactory/AddEventCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.AddEventCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import parser.CommandParser;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" * Factory class for creating AddEventCommand instances.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" * Ensures that the current user is logged in and is an admin before allowing event creation.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"public class AddEventCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private final UI ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an AddEventCommandFactory with the specified ParticipantManager and UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the ParticipantManager instance used to manage participants","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to interact with the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    public AddEventCommandFactory(ParticipantManager participantManager, UI ui) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * Creates an AddEventCommand based on the user input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * Validates the user\u0027s status (must be logged in and an admin) and parses the event details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * @return an AddEventCommand that can be executed to add a new event","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if the user is not logged in, is not an admin, or if the input is invalid","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting addEventCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        if (participantManager.getCurrentUser() \u003d\u003d null) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You are not logged in. Please enter \u0027login\u0027 to login.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        } else if (!participantManager.isCurrentUserAdmin()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Only admin can create events!\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"            String input \u003d ui.readAddCommandInput();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"            String[] parts \u003d CommandParser.splitAddCommandInput(input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"            String name \u003d parts[0].trim();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"            LocalDateTime startTime \u003d CommandParser.parseDateTime(parts[1]);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"            LocalDateTime endTime \u003d CommandParser.parseDateTime(parts[2]);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"            assert startTime !\u003d null : \"Start time should not be null\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"            assert endTime !\u003d null : \"End time should not be null\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"            assert !endTime.isBefore(startTime) : \"End time should not be before start time\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"            String location \u003d parts[3].trim();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"            String description \u003d parts[4].trim();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"            assert !name.isEmpty() : \"Event name should not be empty\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"            assert !location.isEmpty() : \"Event location should not be empty\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"            assert !description.isEmpty() : \"Event description should not be empty\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"            Event newEvent \u003d new Event(name, startTime, endTime, location, description);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"            return new AddEventCommand(newEvent);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":17,"YanXinyaoo":55}},{"path":"src/main/java/commandfactory/AddParticipantCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.AddParticipantCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" * Factory class for creating AddParticipantCommand instances.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" * Ensures that the current user is logged in, has admin privileges, and shows available events and participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"public class AddParticipantCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private final UI ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private final EventManager eventManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an AddParticipantCommandFactory with the specified EventManager, ParticipantManager, and UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager the EventManager instance used to manage events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the ParticipantManager instance used to manage participants","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to interact with the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    public AddParticipantCommandFactory(EventManager eventManager, ParticipantManager participantManager, UI ui) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        this.eventManager \u003d eventManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * Creates an AddParticipantCommand based on user input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"     * Validates the user\u0027s status (must be logged in and an admin) and allows selecting an","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"     * event and participant to add.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     * @return an AddParticipantCommand that can be executed to add a participant to an event","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if the user is not logged in, is not an admin, or if the input is invalid","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    public AddParticipantCommand createCommand() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting addParticipantCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d participantManager.getCurrentUser();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        if (participant \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You are not logged in. Enter \u0027login\u0027 to log in first.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        checkAdminPrivileges();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        showAllEvents();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        showAllParticipants();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        String[] input \u003d ui.splitAddParticipantCommandInput();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        int eventIndex;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"            eventIndex \u003d Integer.parseInt(input[0].trim()) - 1;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"❌ Invalid event number. Please enter \u0027addparticipant\u0027 and try again.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yeeern27"},"content":"        if (eventIndex \u003c 0) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yeeern27"},"content":"            throw new SyncException(\"Event index cannot be negative. Please enter a valid index.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yeeern27"},"content":"        if (eventIndex \u003e\u003d eventManager.getEvents().size()) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yeeern27"},"content":"            throw new SyncException(\"Event index is out of bounds. Please enter a valid index.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yeeern27"},"content":"        if (input[1].trim().isEmpty()) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yeeern27"},"content":"            throw new SyncException(\"Participant name cannot be empty. Please enter a valid name.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        return new AddParticipantCommand(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"                eventIndex,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"                input[1].trim(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"                ui,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"                participantManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"        );","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"     * Displays the list of all participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"     * If no participants are available, a message is displayed to inform the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"    private void showAllParticipants() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d participantManager.getParticipants();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        if (participants.isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(\"No participants available.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"            return;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(\"Available Participants:\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        for (Participant participant : participants) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(\"- \" + participant.getName());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if the current user has admin privileges.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"     * Throws a SyncException if the user is not an admin.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if the current user is not an admin","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"    private void checkAdminPrivileges() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"        if (!participantManager.isCurrentUserAdmin()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Only ADMIN users can add participants. Please \u0027logout\u0027 \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"                    \"and \u0027login\u0027 to an ADMIN user\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HuaZhenting"},"content":"     * Displays the list of all events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"     * If no events are available, a message is displayed to inform the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"    private void showAllEvents() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e events \u003d eventManager.getEvents();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"        if (events.isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(\"No events available.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"            return;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(\"Available Events:\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"        for (int i \u003d 0; i \u003c events.size(); i++) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage((i + 1) + \". \" + events.get(i).getName());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":31,"YanXinyaoo":91,"yeeern27":12}},{"path":"src/main/java/commandfactory/ByeCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.ByeCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * Factory class for creating ByeCommand instances.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" * This class is responsible for creating a ByeCommand when invoked.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"public class ByeCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    private final ui.UI ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a ByeCommandFactory with the specified ParticipantManager and UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the ParticipantManager instance used to manage participants","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the UI instance used to interact with the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    public ByeCommandFactory(ParticipantManager participantManager, ui.UI ui) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * Creates and returns a ByeCommand that can be executed to exit the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * @return a ByeCommand that ends the session or application","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error during command creation (although not expected in this case)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting ByeCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        return new ByeCommand();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":16,"YanXinyaoo":28}},{"path":"src/main/java/commandfactory/CommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":" * Interface for factories that create Command instances.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":" * Implementations of this interface are responsible for creating specific","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * Command objects that can be executed in the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"public interface CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a new Command instance that can be executed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     * @return the Command object to be executed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error during command creation","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    Command createCommand() throws SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":12,"YanXinyaoo":8}},{"path":"src/main/java/commandfactory/CreateUserCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import command.CreateUserCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"import parser.CommandParser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating a CreateUserCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":" * This factory gathers all necessary information from the user to create a new participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"public class CreateUserCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private final UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * Constructor to initialize the factory with the UI and participant manager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI used to interact with the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The participant manager to handle participant data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    public CreateUserCommandFactory(UI ui, ParticipantManager participantManager) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a CreateUserCommand based on the user\u0027s input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * This method will ask the user for participant details such as name, password,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * access level, and availability slots, and then create a new participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * @return A new CreateUserCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during the command creation","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"    @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting CreateUserCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        String participantName \u003d askParticipantName();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        if (participantManager.getParticipant(participantName) !\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Participant \" + participantName + \" already exists. Please enter \u0027create\u0027 \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"                    \"and try another name.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        String password \u003d askPassword();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        Participant.AccessLevel accessLevel \u003d askAccessLevel();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cAvailabilitySlot\u003e availabilitySlots \u003d askAvailabilitySlots();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        if (availabilitySlots.isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"❌ No valid availability slots provided. Cannot create participant.\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"                    \"Please enter \u0027create\u0027 and try again.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d new Participant(participantName, password, accessLevel);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sxkhoo"},"content":"        participant.setAvailableTimes(availabilitySlots);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        return new CreateUserCommand(participant);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user for the participant\u0027s name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"     * @return the participant name entered by the user","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error while asking the name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sxkhoo"},"content":"    private String askParticipantName() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        return ui.askParticipantName();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user for the participant\u0027s password.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"     * @return the password entered by the user","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error while asking the password","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sxkhoo"},"content":"    private String askPassword() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        return ui.askPassword();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user for the participant\u0027s access level.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"     * @return the access level entered by the user","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error while asking the access level","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant.AccessLevel askAccessLevel() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"        return CommandParser.askAccessLevel();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user for availability slots and collects them.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"     * @return a list of availability slots entered by the user","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error while asking for availability slots","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"    private ArrayList\u003cAvailabilitySlot\u003e askAvailabilitySlots() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cAvailabilitySlot\u003e slots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"        int numSlots \u003d askNumberOfSlots();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"        for (int i \u003d 0; i \u003c numSlots; i++) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"            AvailabilitySlot slot \u003d askAvailabilitySlot(i + 1);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"            if (slot !\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"                slots.add(slot);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"        return slots;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to enter the number of availability slots.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"     * @return the number of availability slots","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if the user input is invalid","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"    private int askNumberOfSlots() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"sxkhoo"},"content":"        ui.showMessage(\"Enter number of availability slots (maximum 10) (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d ui.readLine().trim(); // Only call readLine ONCE","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"sxkhoo"},"content":"        ui.checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"sxkhoo"},"content":"            int numSlots \u003d Integer.parseInt(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"            if (numSlots \u003c\u003d 0) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yeeern27"},"content":"                throw new SyncException(\"❌ Number of availability slots must be at least 1. \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yeeern27"},"content":"                        \"Please enter \u0027create\u0027 and try again.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"            } else if (numSlots \u003e 10) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showMessage(\"You entered more than 10 slots. The number of slots has been set to 10 by default.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"            return Math.min(numSlots, 10);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yeeern27"},"content":"            throw new SyncException(\"❌ Invalid input. Please enter a valid number between 1 and 10. \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yeeern27"},"content":"                    \"Please enter \u0027create\u0027 and try again.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to enter the details for a specific availability slot.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"HuaZhenting"},"content":"     * @param slotIndex the index of the slot being asked for","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"HuaZhenting"},"content":"     * @return an AvailabilitySlot object containing the start and end times","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error while asking for slot details","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"    private AvailabilitySlot askAvailabilitySlot(int slotIndex) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime start \u003d askStartTime(slotIndex);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime end \u003d askEndTime(slotIndex);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"sxkhoo"},"content":"        if (end.isBefore(start)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"❌ End time must be after start time. Please enter \u0027create\u0027 and try again.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"        return new AvailabilitySlot(start, end);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to enter the start time for an availability slot.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"HuaZhenting"},"content":"     * @param slotIndex the index of the slot being asked for","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"HuaZhenting"},"content":"     * @return the start time as a LocalDateTime","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if the user input is invalid","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YanXinyaoo"},"content":"    private LocalDateTime askStartTime(int slotIndex) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yeeern27"},"content":"        ui.showMessage(\"Enter start time for availability slot \" + slotIndex + \" (in format yyyy-MM-dd HH:mm) \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yeeern27"},"content":"                \"(or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YanXinyaoo"},"content":"        String startTimeStr \u003d ui.readLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"sxkhoo"},"content":"        ui.checkForExit(startTimeStr);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YanXinyaoo"},"content":"        return CommandParser.parseDateTime(startTimeStr);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to enter the end time for an availability slot.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"HuaZhenting"},"content":"     * @param slotIndex the index of the slot being asked for","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"HuaZhenting"},"content":"     * @return the end time as a LocalDateTime","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if the user input is invalid","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"    private LocalDateTime askEndTime(int slotIndex) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yeeern27"},"content":"        ui.showMessage(\"Enter end time for availability slot \" + slotIndex + \" (in format yyyy-MM-dd HH:mm)\" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yeeern27"},"content":"                \" (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YanXinyaoo"},"content":"        String endTimeStr \u003d ui.readLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"sxkhoo"},"content":"        ui.checkForExit(endTimeStr);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YanXinyaoo"},"content":"        return CommandParser.parseDateTime(endTimeStr);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":71,"sxkhoo":11,"YanXinyaoo":102,"yeeern27":8}},{"path":"src/main/java/commandfactory/DeleteCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import command.DeleteCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating a DeleteCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" * This factory handles the process of finding and deleting an event,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":" * ensuring that the user is logged in and has admin privileges.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"public class DeleteCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"    private final UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private final EventManager eventManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * Constructor to initialize the factory with participant manager, UI, and event manager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The participant manager to handle participant data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI used to interact with the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager The event manager to handle event data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"    public DeleteCommandFactory(ParticipantManager participantManager, UI ui, EventManager eventManager) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        this.eventManager \u003d eventManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a DeleteCommand based on the user\u0027s input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * This method will check if the user is logged in and has admin privileges,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     * and then prompt the user to select an event to delete.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     * @return A new DeleteCommand to delete the selected event","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during the command creation, such as invalid input or lack of privileges","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting DeleteCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        if (participantManager.getCurrentUser() \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You are not logged in. Please enter \u0027login\u0027 to login.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        } else if (!participantManager.isCurrentUserAdmin()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Only admin can delete events!\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"            String name \u003d ui.readDeleteName();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"            ArrayList\u003cEvent\u003e matchingEvents \u003d findMatchingEvents(name);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"            if (matchingEvents.isEmpty()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"                throw new SyncException(\"No events found with the name: \" + name);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"            Event eventToDelete;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"            if (matchingEvents.size() \u003d\u003d 1) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"                eventToDelete \u003d matchingEvents.get(0);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"            } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showMatchingEventsWithIndices(matchingEvents, eventManager);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"                int eventIndex \u003d readDeleteEventIndex(matchingEvents);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"                eventToDelete \u003d matchingEvents.get(eventIndex);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"            int actualIndex \u003d eventManager.getEvents().indexOf(eventToDelete);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"            if (actualIndex \u003d\u003d -1) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"                throw new SyncException(\"Event no longer exists.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"            } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"                return new DeleteCommand(actualIndex);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"     * Finds all events that contain the specified name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"     * @param name The name of the event to search for","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"     * @return A list of events matching the specified name","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"    private ArrayList\u003cEvent\u003e findMatchingEvents(String name) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e matchingEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        for (Event event : eventManager.getEvents()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"            if (event.getName().toLowerCase().contains(name.toLowerCase())) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"                matchingEvents.add(event);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"        return matchingEvents;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"     * Reads the index of the event to delete from the user input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"     * @param matchingEvents A list of events to choose from","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"     * @return The actual index of the event in the event manager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the input is invalid or the index is out of bounds","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"    private int readDeleteEventIndex(ArrayList\u003cEvent\u003e matchingEvents) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(\"Enter the index of the event you want to delete: \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"            int index \u003d Integer.parseInt(scanner.nextLine()) - 1;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"            if (index \u003c 0 || index \u003e\u003d matchingEvents.size()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"                throw new SyncException(\"Invalid event index. Please enter a valid index.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"            return eventManager.getEvents().indexOf(matchingEvents.get(index));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Invalid index format. Please enter a number.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":38,"YanXinyaoo":81}},{"path":"src/main/java/commandfactory/DuplicateCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.DuplicateCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating a DuplicateCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" * This factory ensures that the user is logged in, has admin privileges,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" * and can duplicate an event by providing a valid event index and a new name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"public class DuplicateCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    private final UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private final EventManager eventManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * Constructor to initialize the factory with participant manager, UI, and event manager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The participant manager to handle participant data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI used to interact with the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager The event manager to handle event data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"    public DuplicateCommandFactory(ParticipantManager participantManager, UI ui, EventManager eventManager) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        this.eventManager \u003d eventManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a DuplicateCommand based on the user\u0027s input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * This method checks if the user is logged in and has admin privileges,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     * and then allows the user to duplicate an event by providing a valid index","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * and a new name for the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * @return A new DuplicateCommand to duplicate the selected event","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during the command creation, such as invalid input or lack of privileges","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting DuplicateCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        if (participantManager.getCurrentUser() \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You are not logged in. Please enter \u0027login\u0027 to login.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        } else if (!participantManager.isCurrentUserAdmin()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Only admin can duplicate events!\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"            String input \u003d ui.readDuplicateEventInput();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"                throw new SyncException(\"Invalid duplicate command format. Use: duplicate index New Event Name\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"            try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"                int index \u003d Integer.parseInt(parts[0]) - 1;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"                if (index \u003e\u003d 0 \u0026\u0026 index \u003c eventManager.getEvents().size()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"                    Event eventToDuplicate \u003d eventManager.getEvents().get(index);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"                    String newName \u003d parts[1];","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"                    return new DuplicateCommand(eventToDuplicate, newName);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"                } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"                    throw new SyncException(\"Invalid event index.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"                throw new SyncException(\"Invalid index format. Use a number.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":25,"YanXinyaoo":53}},{"path":"src/main/java/commandfactory/EditCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.EditEventCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sxkhoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating an EditEventCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" * This factory ensures that the user is logged in, has admin privileges,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" * and can edit an event by providing a valid event index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"public class EditCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sxkhoo"},"content":"    private final EventManager eventManager;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private final UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * Constructor to initialize the factory with participant manager, event manager, and UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The participant manager to handle participant data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager The event manager to handle event data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI used to interact with the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    public EditCommandFactory(ParticipantManager participantManager, EventManager eventManager, UI ui) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sxkhoo"},"content":"        this.eventManager \u003d eventManager;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     * Creates an EditEventCommand based on the user\u0027s input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * This method checks if the user is logged in and has admin privileges,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * and then allows the user to edit an event by providing a valid event index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * @return A new EditEventCommand to edit the selected event","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during command creation, such as invalid input or lack of privileges","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sxkhoo"},"content":"    @Override","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting EditCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        if (participantManager.getCurrentUser() \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You are not logged in. Please enter \u0027login\u0027 to login.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sxkhoo"},"content":"        if (!participantManager.isCurrentUserAdmin()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Only admin can edit events!\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sxkhoo"},"content":"        // Show event list before prompting for index","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(\"\\n📅 Here are the available events to edit:\\n\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sxkhoo"},"content":"        eventManager.viewAllEvents();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        int index \u003d readEditEventIndex();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        return new EditEventCommand(index, this.participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to enter the index of the event they wish to edit.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"     * @return The index of the event to edit","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an invalid event index is provided","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"    private int readEditEventIndex() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sxkhoo"},"content":"        ui.showMessage(\"\\nEnter event index to edit (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sxkhoo"},"content":"        if (!UI.scanner.hasNextLine()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sxkhoo"},"content":"            throw new SyncException(\"❌ No input received. Edit cancelled.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d ui.readLine().trim().toLowerCase();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sxkhoo"},"content":"        ui.checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sxkhoo"},"content":"            int index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"            return index;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sxkhoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sxkhoo"},"content":"            throw new SyncException(SyncException.invalidEventIndexErrorMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":26,"sxkhoo":25,"YanXinyaoo":39}},{"path":"src/main/java/commandfactory/FilterCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.FilterCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import label.Priority;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating a FilterCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" * This factory ensures the user is logged in and creates a command to filter events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" * based on priority levels.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"public class FilterCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private final UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * Constructor to initialize the factory with participant manager and UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The participant manager to handle participant data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI used to interact with the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    public FilterCommandFactory(ParticipantManager participantManager, UI ui) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a FilterCommand based on the user\u0027s input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * The command filters events according to the specified priority levels.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     * It validates the input to ensure the user is logged in and the provided priority levels are valid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * @return A new FilterCommand to filter events by priority","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"     * @throws SyncException If an error occurs, such as invalid input or the user not being logged in","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting FilterCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d participantManager.getCurrentUser();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        if (participant \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You are not logged in. Enter \u0027login\u0027 to log in first.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"        // Read and validate the input for filter criteria","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d ui.readFilterInput();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yeeern27"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yeeern27"},"content":"            throw new SyncException(\"Input string should not be null\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yeeern27"},"content":"        input \u003d input.trim();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yeeern27"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yeeern27"},"content":"            throw new SyncException(\"Input string should not be empty\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        String[] stringParts \u003d input.split(\" \");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yeeern27"},"content":"        if (stringParts.length \u003d\u003d 0) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yeeern27"},"content":"            throw new SyncException(\"Input string should not be empty\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"        if ((stringParts.length !\u003d 1) \u0026\u0026 (stringParts.length !\u003d 2)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"            throw new SyncException(\"Please provide one or two priority levels (e.g., \u0027LOW\u0027, \u0027LOW MEDIUM\u0027)\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"            String lowerPriority \u003d stringParts[0].toUpperCase();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"            String upperPriority;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"            if ((stringParts.length \u003d\u003d 1)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"                upperPriority \u003d lowerPriority;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"            } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"                upperPriority \u003d stringParts[1].toUpperCase();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"            if (!Priority.isValid(lowerPriority) || !Priority.isValid(upperPriority)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"                throw new SyncException(SyncException.invalidPriorityFilterErrorMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"            int lower \u003d Priority.getValue(lowerPriority);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"            int upper \u003d Priority.getValue(upperPriority);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"            if (lower \u003e upper) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"                throw new SyncException(SyncException.invalidBoundErrorMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"            return new FilterCommand(lower, upper);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (SyncException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"            throw e;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(SyncException.invalidBoundErrorMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":28,"YanXinyaoo":61,"yeeern27":12}},{"path":"src/main/java/commandfactory/FindCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.FindCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating a FindCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * This factory creates a command that performs a search based on the provided keyword.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"public class FindCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"    private final String keyword;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * Constructor to initialize the factory with the keyword used for searching.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * @param keyword The keyword to search for","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    public FindCommandFactory(String keyword) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a FindCommand based on the provided keyword.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @return A new FindCommand that performs a search with the specified keyword","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the keyword is null or empty","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        assert keyword !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        assert !keyword.isEmpty() : \"Keyword should not be empty\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting FindCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":15,"YanXinyaoo":26}},{"path":"src/main/java/commandfactory/HelpCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.HelpCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating a HelpCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * This factory creates a command that provides help or guidance about available commands.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"public class HelpCommandFactory implements CommandFactory {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a HelpCommand to provide help information.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * @return A new HelpCommand that provides help or guidance about available commands","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting FilterCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"        return new HelpCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":10,"YanXinyaoo":16}},{"path":"src/main/java/commandfactory/ListAllCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import command.Command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"import command.ListAllCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating a ListAllCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" * This factory creates a command that lists all events with optional sorting.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"public class ListAllCommandFactory implements CommandFactory {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private final UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a ListAllCommandFactory with the given participant manager and UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The participant manager to check the current user\u0027s role","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI to interact with the user and get the sorting input","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"    public ListAllCommandFactory(ParticipantManager participantManager, UI ui) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a ListAllCommand that lists all events, either sorted or unsorted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     * @return A new ListAllCommand with the selected sorting option","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user is not logged in or is not an admin","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting ListAllCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        if (participantManager.getCurrentUser() \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You are not logged in. Please enter \u0027login\u0027 to login.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        } else if (!participantManager.isCurrentUserAdmin()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"            throw new SyncException(\"Sorry, you need to be an ADMIN to access all events.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"            String sort \u003d ui.readListCommandInput();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"            assert sort !\u003d null : \"Input sort type should not be null\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"            assert !sort.trim().isEmpty() : \"Input string should not be empty\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"            return new ListAllCommand(sort, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":41,"YanXinyaoo":15}},{"path":"src/main/java/commandfactory/ListCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.ListCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating instances of the ListCommand.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" * The ListCommand is used to list events or participants with a specific sorting order.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"public class ListCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    private final ui.UI ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a ListCommandFactory with the provided ParticipantManager and UI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the participant manager used to manage participants.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui the user interface used to interact with the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    public ListCommandFactory(ParticipantManager participantManager, ui.UI ui) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a new ListCommand based on user input.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * The user is prompted to provide a sorting type for listing events or participants.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     * @return a new ListCommand object with the specified sort type.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if the sort type input is empty or invalid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting ListCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        String sortType \u003d ui.readListCommandInput();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        if (sortType.equals(\"\")) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"List sort type is empty. Please enter \u0027list\u0027 and try again.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        return new ListCommand(sortType);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":17,"YanXinyaoo":32}},{"path":"src/main/java/commandfactory/ListParticipantsCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.ListParticipantsCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating a ListParticipantsCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" * This factory generates a command that lists participants of a specific event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"public class ListParticipantsCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private final UI ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private final EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a ListParticipantsCommandFactory with the given UI, event manager, and participant manager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI for interacting with the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager The event manager to fetch events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The participant manager to verify the current user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    public ListParticipantsCommandFactory(UI ui, EventManager eventManager, ParticipantManager participantManager) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        this.eventManager \u003d eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a ListParticipantsCommand that lists participants for a selected event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * @return A ListParticipantsCommand for the selected event","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user is not logged in or the event index is invalid","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting ListParticipantsCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d participantManager.getCurrentUser();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        if (participant \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You are not logged in. Enter \u0027login\u0027 to log in first.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sxkhoo"},"content":"        ArrayList\u003cEvent\u003e events \u003d eventManager.getEventsByParticipant(participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sxkhoo"},"content":"        if (events.isEmpty()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sxkhoo"},"content":"            throw new SyncException(\"No events available.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sxkhoo"},"content":"        showAllEvents(events);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sxkhoo"},"content":"        ui.showMessage(\"Enter event index to list participants (or type \u0027exit\u0027 to cancel):\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d ui.readLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sxkhoo"},"content":"        ui.checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sxkhoo"},"content":"            int eventIndex \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sxkhoo"},"content":"            if (eventIndex \u003c 0 || eventIndex \u003e\u003d events.size()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sxkhoo"},"content":"                ui.showMessage(\"Invalid index. Please try again.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sxkhoo"},"content":"            // Show participants of the selected event","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sxkhoo"},"content":"            Command listCommand \u003d new ListParticipantsCommand(eventIndex);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yeeern27"},"content":"            return new ListParticipantsCommand(eventIndex);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sxkhoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sxkhoo"},"content":"            ui.showMessage(\"Invalid input. Please enter a valid number or \u0027exit\u0027.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yeeern27"},"content":"        return null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"     * Displays all available events for the logged-in user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sxkhoo"},"content":"    private void showAllEvents(ArrayList\u003cEvent\u003e events) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(\"Available Events:\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        for (int i \u003d 0; i \u003c events.size(); i++) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage((i + 1) + \". \" + events.get(i).getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":20,"sxkhoo":22,"YanXinyaoo":47,"yeeern27":2}},{"path":"src/main/java/commandfactory/LogOutCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.LogOutCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating a LogOutCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * This factory generates a command to log out the current user if they are logged in.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"public class LogOutCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LogOutCommandFactory.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a LogOutCommandFactory with the given participant manager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The participant manager for managing user sessions","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    public LogOutCommandFactory(ParticipantManager participantManager) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a LogOutCommand if the user is currently logged in.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @return A LogOutCommand to log the user out","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user is not logged in and attempts to log out","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting to create LogOutCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        if (participantManager.getCurrentUser() \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You are not logged in. Please enter \u0027login\u0027 to log in first.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"            return new LogOutCommand();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":15,"YanXinyaoo":27}},{"path":"src/main/java/commandfactory/LoginCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * Factory class responsible for creating a LoginCommand.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * This factory generates a command to log in a user if they are not already logged in.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"public class LoginCommandFactory implements CommandFactory {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a LoginCommandFactory with the given participant manager.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The participant manager for managing user sessions","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    public LoginCommandFactory(ParticipantManager participantManager) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a LoginCommand if the user is not already logged in.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @return A LoginCommand to log the user in","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user is already logged in and tries to log in again","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    public Command createCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        assert participantManager !\u003d null : \"ParticipantManager cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting LoginCommandFactory\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        if (participantManager.getCurrentUser() \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"            return new LoginCommand();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You are already logged in. Please enter \u0027logout\u0027 to log out first.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":15,"YanXinyaoo":28}},{"path":"src/main/java/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package event;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sxkhoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sxkhoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" * Represents an event that has a name, start and end time, location, description, and a list of participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" * Provides functionality to add/remove participants, list participants, and duplicate the event with a new name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"public class Event {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    private String name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private String location;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private String description;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sxkhoo"},"content":"    private ArrayList\u003cParticipant\u003e participants;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yeeern27"},"content":"    private String priority;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an Event with the specified details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param name        The name of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param startTime   The start time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param endTime     The end time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @param location    The location of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * @param description A brief description of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"    public Event(String name, LocalDateTime startTime, LocalDateTime endTime, String location, String description) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        this.location \u003d location;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sxkhoo"},"content":"        this.participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an Event with the specified details and a list of participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"     * @param name        The name of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"     * @param startTime   The start time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     * @param endTime     The end time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * @param location    The location of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     * @param description A brief description of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     * @param participants The list of participants in the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    public Event(String name, LocalDateTime startTime, LocalDateTime endTime, String location, String description,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"                 ArrayList\u003cParticipant\u003e participants) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        this.location \u003d location;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        this.participants \u003d participants;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"     * Gets the name of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"     * @return The name of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"    public String getName() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        return name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"     * @return The start time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        return startTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"     * Gets the end time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"     * @return The end time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        return endTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"     * Gets the location of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"     * @return The location of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"    public String getLocation() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"        return location;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"     * Gets the description of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"     * @return The description of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"        return description;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the name of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"     * @param name The new name of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"    public void setName(String name) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the start time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"     * @param startTime The new start time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"    public void setStartTime(LocalDateTime startTime) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the end time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"HuaZhenting"},"content":"     * @param endTime The new end time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"    public void setEndTime(LocalDateTime endTime) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the location of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"HuaZhenting"},"content":"     * @param location The new location of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"    public void setLocation(String location) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"        this.location \u003d location;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the description of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"HuaZhenting"},"content":"     * @param description The new description of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"HuaZhenting"},"content":"     * Creates a duplicate of the event with a new name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"HuaZhenting"},"content":"     * @param newName The new name for the duplicate event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"HuaZhenting"},"content":"     * @return A new Event object that is a duplicate of the current event with the new name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"    public Event duplicate(String newName) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"        return new Event(newName, this.startTime, this.endTime, this.location, this.description, this.participants);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"HuaZhenting"},"content":"     * Gets the list of participants for this event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"HuaZhenting"},"content":"     * @return A list of participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"sxkhoo"},"content":"    public ArrayList\u003cParticipant\u003e getParticipants() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"sxkhoo"},"content":"        return participants;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"HuaZhenting"},"content":"     * Adds a participant to the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"HuaZhenting"},"content":"     * @param participant The participant to add to the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the participant is already added to the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YanXinyaoo"},"content":"    public void addParticipant(Participant participant) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YanXinyaoo"},"content":"        assert participant !\u003d null : \"Participant cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting adding participant \");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YanXinyaoo"},"content":"        if (!participants.contains(participant)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"sxkhoo"},"content":"            participants.add(participant);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Participant is already in this event\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"HuaZhenting"},"content":"     * Removes a participant from the event by their name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantName The name of the participant to remove.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if the participant was removed successfully, false otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"sxkhoo"},"content":"    public boolean removeParticipant(String participantName) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"sxkhoo"},"content":"        return participants.removeIf(p -\u003e p.getName().equalsIgnoreCase(participantName));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if a participant with the specified name is already in the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantName The name of the participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if the participant is in the event, false otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean hasParticipant(String participantName) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"HuaZhenting"},"content":"        return participants.stream().anyMatch(p -\u003e p.getName().equalsIgnoreCase(participantName));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if a participant is already in the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"HuaZhenting"},"content":"     * @param participant The participant to check.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if the participant is in the event, false otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"HuaZhenting"},"content":"        return participants.stream().anyMatch(p -\u003e p.getName().equalsIgnoreCase(participant.getName()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"HuaZhenting"},"content":"     * Lists all participants in the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"HuaZhenting"},"content":"     * Prints the list to the console.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"sxkhoo"},"content":"    public void listParticipants() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"sxkhoo"},"content":"        if (participants.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"sxkhoo"},"content":"            System.out.println(\"No participants assigned to this event.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"sxkhoo"},"content":"        } else {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"sxkhoo"},"content":"            System.out.println(\"Participants for event \\\"\" + name + \"\\\":\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"sxkhoo"},"content":"            for (Participant p : participants) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"sxkhoo"},"content":"                System.out.println(\"- \" + p);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"sxkhoo"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"yeeern27"},"content":"    public void setPriority(String priority) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"yeeern27"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"yeeern27"},"content":"    public String getPriority() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"yeeern27"},"content":"        return priority;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a string representation of the event, including all details and participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"HuaZhenting"},"content":"     * @return A formatted string representing the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"YanXinyaoo"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"YanXinyaoo"},"content":"    public String toString() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"YanXinyaoo"},"content":"        return String.format(","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"YanXinyaoo"},"content":"                \"+----------------------+--------------------------------+\\n\" +","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"YanXinyaoo"},"content":"                        \"| Name                 | %s\\n\" +","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"YanXinyaoo"},"content":"                        \"| Start Time           | %s\\n\" +","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"YanXinyaoo"},"content":"                        \"| End Time             | %s\\n\" +","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"YanXinyaoo"},"content":"                        \"| Location             | %s\\n\" +","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"YanXinyaoo"},"content":"                        \"| Description          | %s\\n\" +","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"YanXinyaoo"},"content":"                        \"| Participants         | %s\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"YanXinyaoo"},"content":"                        \"+----------------------+--------------------------------+\",","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"YanXinyaoo"},"content":"                name,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"YanXinyaoo"},"content":"                startTime.format(formatter),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"YanXinyaoo"},"content":"                endTime.format(formatter),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"YanXinyaoo"},"content":"                location,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"YanXinyaoo"},"content":"                description,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"YanXinyaoo"},"content":"                participants","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"YanXinyaoo"},"content":"        );","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the list of participants for the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"HuaZhenting"},"content":"     * @param participants The new list of participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"YanXinyaoo"},"content":"    public void setParticipants(ArrayList\u003cParticipant\u003e participants) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"YanXinyaoo"},"content":"        this.participants \u003d participants;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"Lydialkx":1,"HuaZhenting":124,"sxkhoo":26,"YanXinyaoo":116,"yeeern27":10}},{"path":"src/main/java/event/EventManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package event;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lydialkx"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"import label.Priority;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":" * Manages events, including creation, deletion, updating, and participant assignments.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":" * It also handles event collision checks, stores events in persistent storage, and interacts with the UI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"public class EventManager {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    private ArrayList\u003cEvent\u003e events;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yeeern27"},"content":"    private final UI ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yeeern27"},"content":"    private final Storage storage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    private final UserStorage userStorage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an EventManager with the specified event list, UI, storage, and user storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * @param events      the list of events to manage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui          the UI used for displaying information.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * @param storage     the storage system for saving events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * @param userStorage the user storage system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    public EventManager(ArrayList\u003cEvent\u003e events, UI ui, Storage storage, UserStorage userStorage) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        this.events \u003d events;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        this.userStorage \u003d userStorage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an EventManager by loading events from a file and initializing necessary components.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     * @param filePath    the file path from which to load events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * @param userStorage the user storage system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error during synchronization.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"    public EventManager(String filePath, UserStorage userStorage) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        this.userStorage \u003d userStorage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        this.events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        this.storage \u003d new Storage(filePath, userStorage);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the list of all events managed by the EventManager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"     * @return the list of events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"    public ArrayList\u003cEvent\u003e getEvents() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        return events;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a specific event by its index.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"     * @param index the index of the event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"     * @return the event at the specified index.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if the index is invalid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"    public Event getEvent(int index) throws SyncException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c events.size()) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"            return events.get(index);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(SyncException.invalidEventIndexErrorMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the number of events managed by the EventManager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"     * @return the number of events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"    public int size() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        return events.size();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"     * Adds a new event to the event list after checking for any collisions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"     * If collisions are found, a warning is displayed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"     * @param event the event to be added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is a collision or other error.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"    public void addEvent(Event event) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        assert event !\u003d null : \"Event cannot be null\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting adding event\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"        // Set the exclude index to -1 to avoid excluding any element","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"        ArrayList\u003cEvent\u003e collisions \u003d checkCollision(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"                event.getStartTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"                event.getEndTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"                event.getLocation(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"                events,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"                -1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"        events.add(event);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Lydialkx"},"content":"        String priority;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Lydialkx"},"content":"        try {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Lydialkx"},"content":"            priority \u003d Priority.priorityInput();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Lydialkx"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Lydialkx"},"content":"            priority \u003d \"NULL\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Lydialkx"},"content":"        Priority.addPriority(priority);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showAddedMessage(event);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HuaZhenting"},"content":"        // If collisions are detected, show the collision warning","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"HuaZhenting"},"content":"        if (!collisions.isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"HuaZhenting"},"content":"            ui.showCollisionWarning(event, collisions);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Lydialkx"},"content":"        storage.saveEvents(events, Priority.getAllPriorities());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"HuaZhenting"},"content":"     * Adds a new event and assigns a participant to the event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"HuaZhenting"},"content":"     * @param event              the event to be added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the participant manager that provides the current user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there are any issues with participant availability or event collision.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"    public void addEvent(Event event, ParticipantManager participantManager) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"        assert event !\u003d null : \"Event cannot be null\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d participantManager.getCurrentUser();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"HuaZhenting"},"content":"        // Set the exclude index to -1 to avoid excluding any element","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e collisions \u003d checkCollision(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"                event.getStartTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"                event.getEndTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"                event.getLocation(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"HuaZhenting"},"content":"                events,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"HuaZhenting"},"content":"                -1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"        );","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"        if (!collisions.isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"HuaZhenting"},"content":"            ui.showCollisionWarning(event, collisions);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You can try choose a different timing or venue instead. \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"                    \"Enter \u0027add\u0027 to try again\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YanXinyaoo"},"content":"        if (participant \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"No user is currently selected. Please enter \u0027login\u0027 to log in.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"        if (!participant.isAvailableDuring(event.getStartTime(), event.getEndTime())) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Participant is not available at the given time. Enter \u0027add\u0027 to try again\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YanXinyaoo"},"content":"            participantManager.assignParticipant(event, participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YanXinyaoo"},"content":"        event.addParticipant(participant);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YanXinyaoo"},"content":"        events.add(event);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YanXinyaoo"},"content":"        String priority;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YanXinyaoo"},"content":"            priority \u003d Priority.priorityInput();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YanXinyaoo"},"content":"            priority \u003d \"NULL\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YanXinyaoo"},"content":"        Priority.addPriority(priority);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showAddedMessage(event);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YanXinyaoo"},"content":"        storage.saveEvents(events, Priority.getAllPriorities());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"HuaZhenting"},"content":"     * Displays all events managed by the EventManager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YanXinyaoo"},"content":"    public void viewAllEvents() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YanXinyaoo"},"content":"        assert events !\u003d null : \"Events list should not be null\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"yeeern27"},"content":"        if (!events.isEmpty()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YanXinyaoo"},"content":"            for (int i \u003d 0; i \u003c events.size(); i++) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YanXinyaoo"},"content":"                Event event \u003d events.get(i);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YanXinyaoo"},"content":"                assert event !\u003d null : \"Event at index \" + i + \" should not be null\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Lydialkx"},"content":"                ui.showEventWithIndex(event, i + 1, Priority.getPriority(i));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showEmptyListMessage();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a list of specified events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the list of events to display.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error with event retrieval.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"YanXinyaoo"},"content":"    public void viewEvents(List\u003cEvent\u003e events) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"YanXinyaoo"},"content":"        assert events !\u003d null : \"Events list should not be null\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"YanXinyaoo"},"content":"        if (!events.isEmpty()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"YanXinyaoo"},"content":"            for (int i \u003d 0; i \u003c events.size(); i++) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"YanXinyaoo"},"content":"                Event event \u003d events.get(i);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"YanXinyaoo"},"content":"                assert event !\u003d null : \"Event at index \" + i + \" should not be null\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"YanXinyaoo"},"content":"                String priority \u003d Priority.getPriority(i);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"sxkhoo"},"content":"                ui.showEventWithIndex(event, i + 1, priority);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showEmptyListMessage();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"HuaZhenting"},"content":"     * Deletes an event by its index.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"HuaZhenting"},"content":"     * @param index the index of the event to be deleted.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if the index is invalid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"YanXinyaoo"},"content":"    public void deleteEvent(int index) throws SyncException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Lydialkx"},"content":"        if (index \u003c 0 || index \u003e\u003d events.size()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Lydialkx"},"content":"            throw new SyncException(SyncException.invalidEventIndexErrorMessage());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Lydialkx"},"content":"        Event deletedEvent \u003d events.remove(index);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Lydialkx"},"content":"        Priority.removePriority(index);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Lydialkx"},"content":"        ui.showDeletedMessage(deletedEvent);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Lydialkx"},"content":"        storage.saveEvents(events, Priority.getAllPriorities());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"HuaZhenting"},"content":"     * Updates an existing event with new details.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"HuaZhenting"},"content":"     * @param index        the index of the event to update.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"HuaZhenting"},"content":"     * @param updatedEvent the new event details.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there are any issues with the update (e.g., invalid times, participant availability).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"sxkhoo"},"content":"    public void updateEvent(int index, Event updatedEvent) throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"sxkhoo"},"content":"        if (index \u003c 0 || index \u003e\u003d events.size()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"sxkhoo"},"content":"            throw new SyncException(SyncException.invalidEventIndexErrorMessage());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"sxkhoo"},"content":"        // Validate start/end time relationship","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"sxkhoo"},"content":"        if (updatedEvent.getStartTime().isAfter(updatedEvent.getEndTime())) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"sxkhoo"},"content":"            throw new SyncException(SyncException.startTimeAfterEndTimeMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"sxkhoo"},"content":"        if (updatedEvent.getEndTime().isBefore(updatedEvent.getStartTime())) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"sxkhoo"},"content":"            throw new SyncException(SyncException.endTimeBeforeStartTimeMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"YanXinyaoo"},"content":"        Event originalEvent \u003d events.get(index);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"YanXinyaoo"},"content":"        if (originalEvent.equals(updatedEvent)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"YanXinyaoo"},"content":"            return;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"YanXinyaoo"},"content":"        for (Participant p : originalEvent.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"YanXinyaoo"},"content":"            p.unassignEventTime(originalEvent.getStartTime(), originalEvent.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"YanXinyaoo"},"content":"        for (Participant p : originalEvent.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"sxkhoo"},"content":"            if (!p.isAvailableDuring(updatedEvent.getStartTime(), updatedEvent.getEndTime())) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"YanXinyaoo"},"content":"                for (Participant recover : originalEvent.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"YanXinyaoo"},"content":"                    recover.assignEventTime(originalEvent.getStartTime(), originalEvent.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"sxkhoo"},"content":"                throw new SyncException(SyncException.participantUnavailableDuringEditError(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"sxkhoo"},"content":"                        p.getName(), updatedEvent.getStartTime(), updatedEvent.getEndTime()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"sxkhoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"YanXinyaoo"},"content":"        events.set(index, updatedEvent);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"YanXinyaoo"},"content":"        for (Participant p : updatedEvent.getParticipants()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"YanXinyaoo"},"content":"            p.assignEventTime(updatedEvent.getStartTime(), updatedEvent.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"sxkhoo"},"content":"        events.set(index, updatedEvent);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"sxkhoo"},"content":"        ArrayList\u003cEvent\u003e collisions \u003d checkCollision(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"sxkhoo"},"content":"                updatedEvent.getStartTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"sxkhoo"},"content":"                updatedEvent.getEndTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"YanXinyaoo"},"content":"                updatedEvent.getLocation(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"HuaZhenting"},"content":"                events,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"HuaZhenting"},"content":"                index","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"sxkhoo"},"content":"        if (!collisions.isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"sxkhoo"},"content":"            ui.showCollisionWarning(updatedEvent, collisions);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"sxkhoo"},"content":"        } else {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"sxkhoo"},"content":"            ui.showEditedEvent(updatedEvent);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Lydialkx"},"content":"        storage.saveEvents(events, Priority.getAllPriorities());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"HuaZhenting"},"content":"     * Duplicates an existing event with a new name and adds it to the event list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventToDuplicate the event to be duplicated.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"HuaZhenting"},"content":"     * @param newName          the new name for the duplicated event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error during the duplication process.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"YanXinyaoo"},"content":"    public void duplicateEvent(Event eventToDuplicate, String newName) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"YanXinyaoo"},"content":"        Event duplicatedEvent \u003d eventToDuplicate.duplicate(newName);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"YanXinyaoo"},"content":"        events.add(duplicatedEvent);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Lydialkx"},"content":"        int originalIndex \u003d events.indexOf(eventToDuplicate);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Lydialkx"},"content":"        String originalPriority \u003d Priority.getPriority(originalIndex);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Lydialkx"},"content":"        Priority.addPriority(originalPriority);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Lydialkx"},"content":"        storage.saveEvents(events, Priority.getAllPriorities());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"HuaZhenting"},"content":"     * Checks for collisions between the specified event and the existing events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"HuaZhenting"},"content":"     * A collision occurs when an event overlaps in time and location with another event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"HuaZhenting"},"content":"     * @param start        the start time of the event to check for collisions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"HuaZhenting"},"content":"     * @param end          the end time of the event to check for collisions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"HuaZhenting"},"content":"     * @param location     the location of the event to check for collisions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"HuaZhenting"},"content":"     * @param events       the list of existing events to compare against.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"YanXinyaoo"},"content":"     * @param excludeIndex the index of the event to exclude from the collision","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"YanXinyaoo"},"content":"     *                     check (typically the event being edited).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"HuaZhenting"},"content":"     * @return a list of events that collide with the specified event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"HuaZhenting"},"content":"    public ArrayList\u003cEvent\u003e checkCollision(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"HuaZhenting"},"content":"            String start,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"HuaZhenting"},"content":"            String end,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"HuaZhenting"},"content":"            String location,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"HuaZhenting"},"content":"            ArrayList\u003cEvent\u003e events,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"HuaZhenting"},"content":"            int excludeIndex","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"HuaZhenting"},"content":"    ) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"HuaZhenting"},"content":"        assert start !\u003d null : \"Start time cannot be null\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"HuaZhenting"},"content":"        assert end !\u003d null : \"End time cannot be null\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"HuaZhenting"},"content":"        assert location !\u003d null : \"Location cannot be null\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"HuaZhenting"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"HuaZhenting"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"HuaZhenting"},"content":"        LocalDateTime endTime \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"HuaZhenting"},"content":"        ArrayList\u003cEvent\u003e collisions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"HuaZhenting"},"content":"        for (int i \u003d 0; i \u003c events.size(); i++) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"HuaZhenting"},"content":"            if (i \u003d\u003d excludeIndex) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"HuaZhenting"},"content":"                continue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"HuaZhenting"},"content":"            Event event \u003d events.get(i);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"YanXinyaoo"},"content":"            boolean timeOverlap \u003d !(event.getEndTime().isBefore(startTime) || event.getStartTime().isAfter(endTime));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"YanXinyaoo"},"content":"            boolean sameLocation \u003d event.getLocation().equals(location);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"YanXinyaoo"},"content":"            if (timeOverlap \u0026\u0026 sameLocation) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"HuaZhenting"},"content":"                collisions.add(event);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"HuaZhenting"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"HuaZhenting"},"content":"        return collisions;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the storage system used for managing events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"HuaZhenting"},"content":"     * @return the storage system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"sxkhoo"},"content":"    public Storage getStorage() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"sxkhoo"},"content":"        return storage;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the list of events that a specific participant is involved in.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"HuaZhenting"},"content":"     * If the participant is an admin, all events are returned.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager the participant manager that provides the current user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"HuaZhenting"},"content":"     * @return a list of events the participant is involved in.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"YanXinyaoo"},"content":"    public ArrayList\u003cEvent\u003e getEventsByParticipant(ParticipantManager participantManager) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d participantManager.getCurrentUser();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"YanXinyaoo"},"content":"        if (participant.isAdmin()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"YanXinyaoo"},"content":"            events \u003d this.events;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"YanXinyaoo"},"content":"            for (Event event : this.events) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"YanXinyaoo"},"content":"                if (event.hasParticipant(participant)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"YanXinyaoo"},"content":"                    events.add(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"YanXinyaoo"},"content":"        return events;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the list of events managed by the EventManager.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"HuaZhenting"},"content":"     * @param events the list of events to set.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"YanXinyaoo"},"content":"    public void setEvents(ArrayList\u003cEvent\u003e events) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"YanXinyaoo"},"content":"        this.events \u003d events;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"HuaZhenting"},"content":"     * Saves the current events and their associated priorities to persistent storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error saving the events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"YanXinyaoo"},"content":"    public void save() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"YanXinyaoo"},"content":"        storage.saveEvents(events, Priority.getAllPriorities());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"Lydialkx":26,"HuaZhenting":162,"sxkhoo":37,"YanXinyaoo":181,"yeeern27":5}},{"path":"src/main/java/exception/SyncException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package exception;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sxkhoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":" * This class defines custom exceptions used to handle synchronization and validation errors","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * related to commands, event details, and participant availability in the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * It provides various static methods to generate specific error messages for different types","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * of synchronization issues encountered during the operation of the event management system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"public class SyncException extends Exception {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a new SyncException with the specified detail message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     * @param message The detail message explaining the reason for the exception.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    public SyncException(String message) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"        super(message);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message for invalid commands entered by the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * @param command The invalid command entered by the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The ParticipantManager instance to check for login status.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string message with the error details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    public static String invalidCommandErrorMessage(String command, ParticipantManager participantManager) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        if (participantManager.getCurrentUser() \u003d\u003d null) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"            return \"   (╯°□°)╯︵ OOPS!!! Invalid command: \" + command + \"\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"                    \"   Please enter \u0027login\u0027 to login first.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"            return \"   (╯°□°)╯︵ OOPS!!! Invalid command: \" + command + \"\\n\" +","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"                    \"   Please enter a valid command or help to see all commands. \\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sxkhoo"},"content":"                    \"   Example: `add` or `list` or `edit`.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message for an invalid event index input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string message with the error details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    public static String invalidEventIndexErrorMessage() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        return \"   (╯°□°)╯︵ Invalid event index! Enter your command word to try again.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Please provide a valid event index.\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message for invalid event details entered by the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string message with the error details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    public static String invalidEventDetailsErrorMessage() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        return \"   (╯°□°)╯︵ OOPS!!! Invalid event details! Enter your command word to try again.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Please provide valid event details in the format: \\n\" +","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"                \"   `add Event Name | Start Date | End Date | Location | Description`.\\n\" +","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Example: `add Meeting | 2025-05-10 14:00 | 2025-05-10 15:00 | Room 101 | Discuss project`.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message for invalid filter input for event filtering.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string message with the error details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"    public static String invalidFilterInputErrorMessage() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        return \"   (╯°□°)╯︵ Invalid filter input! Enter \u0027filter\u0027 to try again.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"                \"   Please provide valid filter inputs in the format: \\n\" +","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"                \"   `filter {lower priority bound} {upper priority bound}`.\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message for invalid bound values used during event filtering.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string message with the error details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"    public static String invalidBoundErrorMessage() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"        return \"   (╯°□°)╯︵ Invalid bound values for filtering!\\n\" +","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"                \"   Please follow this format: filter {LOWER} {HIGHER}.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"                \"   Be careful that the lower priority cannot be higher than upper priority.\\n\" +","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"                \"   Example: filter LOW MEDIUM\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message for invalid priority range used during event filtering.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string message with the error details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"    public static String invalidPriorityFilterErrorMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"        return \"   (╯°□°)╯︵ Invalid bound values for filtering!\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"                \"   Please provide either one or two priority levels for filtering!\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"                \"   If you provide two priority levels, they will serve as the lower bound and upper bound.\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"                \"   Be careful that the lower priority cannot be higher than upper priority.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"                \"   Example: filter MEDIUM\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"                \"   Example: filter LOW MEDIUM\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message for an invalid date or time format entered by the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"     * @param type The type of time input (either start time or end time).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string message with the error details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"sxkhoo"},"content":"    public static String invalidDateTimeFormatMessage(String type) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"        return \"❌ Invalid \" + type + \" time format! Please enter in YYYY-MM-DD HH:MM format. \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"                \"\\\"Please enter any command word and try again.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message if the event start time is after the end time.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string message with the error details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"sxkhoo"},"content":"    public static String startTimeAfterEndTimeMessage() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"sxkhoo"},"content":"        return \"❌ Start time cannot be after current end time.\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message if the event end time is before the start time.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string message with the error details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"sxkhoo"},"content":"    public static String endTimeBeforeStartTimeMessage() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"sxkhoo"},"content":"        return \"❌ End time cannot be before current start time.\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message if a participant is unavailable during the specified time range.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"HuaZhenting"},"content":"     * @param name The name of the participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"HuaZhenting"},"content":"     * @param start The start time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"HuaZhenting"},"content":"     * @param end The end time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string message with the error details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"sxkhoo"},"content":"    public static String participantUnavailableDuringEditError(String name, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"sxkhoo"},"content":"        return \"❌ \" + name + \" is not available from \" + start + \" to \" + end;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"HuaZhenting"},"content":"     * Returns an error message if one or more participants are unavailable for the new event time.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string message with the error details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"sxkhoo"},"content":"    public static String participantConflictMessage() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"sxkhoo"},"content":"        return \"❌ One or more participants are unavailable for the new time.\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":93,"sxkhoo":21,"YanXinyaoo":36}},{"path":"src/main/java/label/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"package label;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"import java.util.List;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * This class handles event priorities, including defining valid priorities,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" * normalizing and validating priority inputs, and storing and managing a list of event priorities.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" * It provides methods for retrieving, updating, and removing priorities, as well as interacting","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" * with the user to set priorities for events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lydialkx"},"content":"public class Priority {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * Constant representing the HIGH priority level.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lydialkx"},"content":"    public static final String HIGH \u003d \"HIGH\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * Constant representing the MEDIUM priority level.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lydialkx"},"content":"    public static final String MEDIUM \u003d \"MEDIUM\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * Constant representing the LOW priority level.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"    public static final String LOW \u003d \"LOW\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * A list to store all the priorities assigned to events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"    private static final ArrayList\u003cString\u003e priorityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     * The UI instance used to interact with the user for input and output.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    private static final UI ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the numeric value associated with a given priority.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"     * @param priority The priority as a string (e.g., \"HIGH\", \"MEDIUM\", \"LOW\").","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     * @return The numeric value corresponding to the priority (3 for HIGH, 2 for MEDIUM, 1 for LOW).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lydialkx"},"content":"    public static int getValue(String priority) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lydialkx"},"content":"        switch (priority.toUpperCase()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lydialkx"},"content":"        case HIGH: return 3;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lydialkx"},"content":"        case MEDIUM: return 2;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lydialkx"},"content":"        case LOW: return 1;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lydialkx"},"content":"        default: return 0;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if the input string is a valid priority.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"     * @param input The priority input to validate.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"     * @return True if the input is a valid priority (LOW, MEDIUM, or HIGH), otherwise false.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lydialkx"},"content":"    public static boolean isValid(String input) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lydialkx"},"content":"        if (input \u003d\u003d null){","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lydialkx"},"content":"            return false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lydialkx"},"content":"        String allUpper \u003d input.trim().toUpperCase();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lydialkx"},"content":"        return allUpper.equals(HIGH) || allUpper.equals(MEDIUM) || allUpper.equals(LOW);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"     * Normalizes the input by trimming and converting it to uppercase.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"     * @param input The priority input to normalize.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"     * @return The normalized priority in uppercase.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lydialkx"},"content":"    public static String normalize(String input) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lydialkx"},"content":"        return input.trim().toUpperCase();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to input an event priority and validates the input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"     * If the input is invalid, the user is repeatedly prompted until a valid priority is entered.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"     * @return The valid priority input entered by the user (LOW, MEDIUM, or HIGH).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Lydialkx"},"content":"    public static String priorityInput() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(\"Enter event priority (LOW, MEDIUM, HIGH): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Lydialkx"},"content":"        String input;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Lydialkx"},"content":"        try {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"            input \u003d ui.readLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Lydialkx"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Lydialkx"},"content":"            return LOW;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Lydialkx"},"content":"        while (!isValid(input)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(\"Invalid priority. Please enter LOW, MEDIUM, or HIGH.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(\"Enter event priority (LOW, MEDIUM, HIGH): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"            input \u003d ui.readLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Lydialkx"},"content":"        return normalize(input);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"     * Adds a priority to the list of priorities.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"     * @param priority The priority to add to the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Lydialkx"},"content":"    public static void addPriority(String priority) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        assert priority !\u003d null : \"Priority cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting adding priority\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Lydialkx"},"content":"        priorityList.add(priority);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"     * Updates the priority at the specified index in the list of priorities.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"     * @param index The index of the priority to update.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HuaZhenting"},"content":"     * @param newPriority The new priority to assign at the given index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Lydialkx"},"content":"    public static void updatePriority(int index, String newPriority) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Lydialkx"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c priorityList.size()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Lydialkx"},"content":"            priorityList.set(index, newPriority);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the priority at the specified index in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"HuaZhenting"},"content":"     * @param index The index of the priority to retrieve.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"HuaZhenting"},"content":"     * @return The priority at the specified index, or \"LOW\" if the index is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Lydialkx"},"content":"    public static String getPriority(int index) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Lydialkx"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c priorityList.size()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Lydialkx"},"content":"            return priorityList.get(index);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Lydialkx"},"content":"        return LOW;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"HuaZhenting"},"content":"     * Removes the priority at the specified index from the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"HuaZhenting"},"content":"     * @param index The index of the priority to remove.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Lydialkx"},"content":"    public static void removePriority(int index) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Lydialkx"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c priorityList.size()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Lydialkx"},"content":"            priorityList.remove(index);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a list of all the priorities currently stored.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"HuaZhenting"},"content":"     * @return A list of all event priorities.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Lydialkx"},"content":"    public static ArrayList\u003cString\u003e getAllPriorities() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Lydialkx"},"content":"        return priorityList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"HuaZhenting"},"content":"     * Clears all the priorities in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Lydialkx"},"content":"    public static void clearPriorities() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Lydialkx"},"content":"        priorityList.clear();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"HuaZhenting"},"content":"     * Loads the priorities from storage into the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"HuaZhenting"},"content":"     * @param savedPriorities A list of priorities to load into the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Lydialkx"},"content":"    public static void loadFromStorage(List\u003cString\u003e savedPriorities) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Lydialkx"},"content":"        priorityList.clear();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Lydialkx"},"content":"        priorityList.addAll(savedPriorities);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"Lydialkx":83,"HuaZhenting":83,"YanXinyaoo":15}},{"path":"src/main/java/logger/EventSyncLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package logger;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * This class sets up and provides a logger for event synchronization operations.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" * The logger writes log messages to both the console and a log file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" * It supports various logging levels, with different output for console and file handlers.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"public class EventSyncLogger {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * The logger instance used for logging event synchronization activities.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(EventSyncLogger.class.getName());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * Sets up the logger configuration by initializing the console and file handlers.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * The console handler logs messages at the INFO level, and the file handler logs all levels.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     * The log messages are formatted using a simple formatter.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    public static void setupLogger() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"        // Console handler configuration","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        consoleHandler.setLevel(Level.INFO);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.addHandler(consoleHandler);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"            // File handler configuration","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"            FileHandler fileHandler \u003d new FileHandler(\"app.log\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"            LOGGER.addHandler(fileHandler);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"            LOGGER.log(Level.SEVERE, \"Error initializing file handler\", e);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Logger initialized successfully\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the logger instance for use in other parts of the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     * @return The logger instance.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    public static Logger getLogger() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        return LOGGER;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":21,"YanXinyaoo":38}},{"path":"src/main/java/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package parser;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" * This class is responsible for parsing and processing user input commands related to event synchronization.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" * It handles parsing of date-time strings, splitting commands, and prompting for participant access levels.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" * It also throws custom exceptions in case of invalid input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"public final class CommandParser {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * The UI instance used for interacting with the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private static UI ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yeeern27"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yeeern27"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the UI instance used for user interactions.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI instance to be set.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUi(UI ui) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * Parses a date-time string and converts it into a LocalDateTime object.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     * @param dateStr The date-time string to be parsed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     * @return The corresponding LocalDateTime object.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the input date-time format is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    public static LocalDateTime parseDateTime(String dateStr) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        assert dateStr !\u003d null : \"dateStr cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting parsing date time\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"            return LocalDateTime.parse(dateStr.trim(), DATE_FORMATTER);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Invalid date-time format. Use yyyy-MM-dd HH:mm. \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"                    \"Enter any command word to continue.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"     * Splits the user input for adding an event into its components.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"     * @param input The input string to be split.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"     * @return An array of strings representing the event components.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the input does not have exactly 5 parts.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"    public static String[] splitAddCommandInput(String input) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        String[] parts \u003d input.split(\"\\\\|\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        if (parts.length !\u003d 5) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(SyncException.invalidEventDetailsErrorMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        return parts;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to input the access level for a participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"     * @return The access level chosen by the user (either ADMIN or MEMBER).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the input is invalid or the user does not enter a valid number.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"    public static Participant.AccessLevel askAccessLevel() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sxkhoo"},"content":"        ui.showMessage(\"Enter participant\u0027s access level (1 for Admin, 2 for Member) (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d ui.readLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sxkhoo"},"content":"        ui.checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sxkhoo"},"content":"            int choice \u003d Integer.parseInt(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"            if (choice \u003d\u003d 1) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"                return Participant.AccessLevel.ADMIN;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"            } else if (choice \u003d\u003d 2) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"                return Participant.AccessLevel.MEMBER;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"            } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showMessage(\"Invalid choice. Defaulting to MEMBER.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"                return Participant.AccessLevel.MEMBER;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"You can only enter 1 or 2. Enter \u0027create\u0027 to try again.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":34,"sxkhoo":4,"YanXinyaoo":55,"yeeern27":4}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.AddEventCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.AddParticipantCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.ByeCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.CommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.CreateUserCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.DeleteCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.DuplicateCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.EditCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.FilterCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.FindCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.HelpCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.ListAllCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.ListCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.ListParticipantsCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.LogOutCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.LoginCommandFactory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"import logger.EventSyncLogger;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yeeern27"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yeeern27"},"content":"import ui.UI;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yeeern27"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":" * The Parser class is responsible for parsing user input and delegating the appropriate","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":" * command creation to the relevant","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":" * CommandFactory based on the user\u0027s input. It processes the input command, validates it, and returns a corresponding","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":" * CommandFactory object that creates a command to be executed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"public class Parser {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * The logger instance for logging information and warnings.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger logger \u003d EventSyncLogger.getLogger();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * The EventManager used to manage events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     * The ParticipantManager used to manage participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"     * The UI instance for user interaction.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    private final UI ui;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"     * The scanner used to read user input from the console.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Parser with the specified EventManager, ParticipantManager, and UI.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"     * Uses the default scanner for input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager The EventManager to manage events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The ParticipantManager to manage participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI instance to interact with the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"    public Parser(EventManager eventManager, ParticipantManager participantManager, UI ui) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"        this.eventManager \u003d eventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        logger.info(\"Parser initialized with default scanner.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Parser with the specified EventManager, ParticipantManager, UI, and custom scanner.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager The EventManager to manage events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"     * @param participantManager The ParticipantManager to manage participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI instance to interact with the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"     * @param scanner The custom scanner to read user input.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"    public Parser(EventManager eventManager, ParticipantManager participantManager, UI ui, Scanner scanner) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        this.eventManager \u003d eventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"        this.participantManager \u003d participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        logger.info(\"Parser initialized with custom scanner.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"     * Parses the user input and returns the corresponding CommandFactory to create the appropriate command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"     * @return The CommandFactory that will create the corresponding command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the input is invalid or the command is not recognized.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"    public CommandFactory parse(String input) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"        assert input !\u003d null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"        logger.info(\"Parsing command: \" + input);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yeeern27"},"content":"        String[] parts \u003d input.trim().toLowerCase().split(\" \", 2); // Split input","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yeeern27"},"content":"        if (parts.length \u003e 0) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yeeern27"},"content":"            String commandWord \u003d parts[0];","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yeeern27"},"content":"            switch (commandWord.toLowerCase()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"            case \"bye\":","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"                logger.info(\"Bye command received.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"                return new ByeCommandFactory(this.participantManager, this.ui);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HuaZhenting"},"content":"            case \"listall\":","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HuaZhenting"},"content":"                logger.info(\"List all command received.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HuaZhenting"},"content":"                return new ListAllCommandFactory(this.participantManager, this.ui);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"            case \"list\":","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"                logger.info(\"List command received.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"                return new ListCommandFactory(this.participantManager, this.ui);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"            case \"add\":","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"                logger.info(\"Add command received.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"                return new AddEventCommandFactory(this.participantManager, this.ui);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"            case \"delete\":","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"                logger.info(\"Delete command received.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"                return new DeleteCommandFactory(this.participantManager, this.ui, this.eventManager);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"            case \"duplicate\":","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"                logger.info(\"Duplicate command received.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"                return new DuplicateCommandFactory(this.participantManager, this.ui, this.eventManager);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"            case \"edit\":","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"                logger.info(\"Edit command received.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"                return new EditCommandFactory(this.participantManager,this.eventManager, this.ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yeeern27"},"content":"            case \"find\":","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yeeern27"},"content":"                if (parts.length \u003e 1) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yeeern27"},"content":"                    logger.info(\"Find command received with keyword: \" + parts[1]);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"                    return new FindCommandFactory(parts[1]);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yeeern27"},"content":"                } else {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yeeern27"},"content":"                    logger.warning(\"Find command received without keyword.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yeeern27"},"content":"                    throw new SyncException(\"Please provide a keyword\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yeeern27"},"content":"                }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"sxkhoo"},"content":"            case \"addparticipant\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"sxkhoo"},"content":"                logger.info(\"AddParticipant command received.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"                return new AddParticipantCommandFactory(this.eventManager, this.participantManager, this.ui);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"sxkhoo"},"content":"            case \"listparticipants\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"sxkhoo"},"content":"                logger.info(\"ListParticipants command received.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"                return new ListParticipantsCommandFactory(this.ui, this.eventManager, this.participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"HuaZhenting"},"content":"            case \"filter\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"HuaZhenting"},"content":"                logger.info(\"Filter command received.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"                return new FilterCommandFactory(this.participantManager, this.ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"            case \"login\":","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"                logger.info(\"Login command received.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"                return new LoginCommandFactory(this.participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"            case \"logout\":","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"                logger.info(\"Logout command received.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"                return new LogOutCommandFactory(this.participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"            case \"create\":","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"                logger.info(\"Create command received.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"                return new CreateUserCommandFactory(this.ui, this.participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YanXinyaoo"},"content":"            case \"help\":","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"                logger.info(\"Help command received.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"                return new HelpCommandFactory();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"            default:","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"                logger.warning(\"Invalid command received: \" + input);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"                throw new SyncException(SyncException.invalidCommandErrorMessage(input, this.participantManager));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yeeern27"},"content":"        } else {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yeeern27"},"content":"            logger.warning(\"Empty input received: \" + input);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yeeern27"},"content":"            throw new SyncException(\"Please provide a command\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":52,"sxkhoo":4,"YanXinyaoo":96,"yeeern27":19}},{"path":"src/main/java/participant/AvailabilitySlot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeeern27"},"content":"package participant;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yeeern27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" * Represents an availability slot with a start time and an end time.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * This class is used to define a period during which a participant is available.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yeeern27"},"content":"public class AvailabilitySlot {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     * The start time of the availability slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yeeern27"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * The end time of the availability slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yeeern27"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an AvailabilitySlot object with the given start and end times.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     * @param startTime The start time of the availability slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param endTime The end time of the availability slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yeeern27"},"content":"    public AvailabilitySlot(LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yeeern27"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yeeern27"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the start time of the availability slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * @return The start time of the availability slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yeeern27"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        assert this !\u003d null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting getting start time\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yeeern27"},"content":"        return startTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the end time of the availability slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * @return The end time of the availability slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yeeern27"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yeeern27"},"content":"        return endTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a string representation of the availability slot in the format","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"     * \"startTime - endTime\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string representation of the availability slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yeeern27"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yeeern27"},"content":"    public String toString() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yeeern27"},"content":"        return startTime.toString() + \" - \" + endTime.toString();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yeeern27"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":34,"YanXinyaoo":7,"yeeern27":26}},{"path":"src/main/java/participant/Participant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sxkhoo"},"content":"package participant;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yeeern27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yeeern27"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * Represents a participant with a name, password, access level, and available time slots.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * Provides methods to manage participant availability and access control.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sxkhoo"},"content":"public class Participant {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sxkhoo"},"content":"    private final String name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"    private final String password;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sxkhoo"},"content":"    private AccessLevel accessLevel;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yeeern27"},"content":"    private List\u003cAvailabilitySlot\u003e availableTimes;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     * Enum representing the access levels for a participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sxkhoo"},"content":"    public enum AccessLevel { ADMIN, MEMBER }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Participant with the specified name, password, and access level.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param name The name of the participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param password The password for the participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param accessLevel The access level of the participant (ADMIN or MEMBER).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    public Participant(String name, String password, AccessLevel accessLevel) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sxkhoo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        this.password \u003d password;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sxkhoo"},"content":"        this.accessLevel \u003d accessLevel;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yeeern27"},"content":"        this.availableTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Participant with the specified name, password, access level, and availability slots.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     * @param name The name of the participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     * @param password The password for the participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     * @param accessLevel The access level of the participant (ADMIN or MEMBER).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"     * @param availableTimes The list of availability slots for the participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    public Participant(String name, String password, AccessLevel accessLevel, List\u003cAvailabilitySlot\u003e availableTimes) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        this.password \u003d password;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        this.accessLevel \u003d accessLevel;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        this.availableTimes \u003d new ArrayList\u003c\u003e(availableTimes); // Defensive copy","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"     * Assigns an event time to the participant by adjusting their availability slots.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventStart The start time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventEnd The end time of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"     * @return True if the event time was successfully assigned, false otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"     * @throws IllegalArgumentException If the event end time is before the start time.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean assignEventTime(LocalDateTime eventStart, LocalDateTime eventEnd) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        assert eventEnd !\u003d null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting assigning event time to participant \");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        if (eventStart.isAfter(eventEnd)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"            throw new IllegalArgumentException(\"Event end time must be after start time.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cAvailabilitySlot\u003e newSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        boolean assigned \u003d false;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        for (AvailabilitySlot slot : availableTimes) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"            if (slot.getEndTime().isBefore(eventStart) || slot.getStartTime().isAfter(eventEnd)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"                newSlots.add(slot);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"            } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"                assigned \u003d true;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"                if (slot.getStartTime().isBefore(eventStart)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"                    newSlots.add(new AvailabilitySlot(slot.getStartTime(), eventStart.minusMinutes(1)));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"                if (slot.getEndTime().isAfter(eventEnd)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"                    newSlots.add(new AvailabilitySlot(eventEnd.plusMinutes(1), slot.getEndTime()));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"        if (assigned) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"            availableTimes \u003d newSlots;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"            return true;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        return false;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if the participant is available during a specific time range.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"     * @param start The start time of the period to check.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"     * @param end The end time of the period to check.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"     * @return True if the participant is available during the specified time range, false otherwise.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean isAvailableDuring(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"        return availableTimes.stream().anyMatch(slot -\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"                !slot.getStartTime().isAfter(start) \u0026\u0026","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"                        !slot.getEndTime().isBefore(end)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"        );","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the name of the participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HuaZhenting"},"content":"     * @return The name of the participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"    public String getName() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"        return name;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the password of the participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"     * @return The password of the participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"    public String getPassword() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"        return password;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if the provided password matches the participant\u0027s password.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"HuaZhenting"},"content":"     * @param password The password to check.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"HuaZhenting"},"content":"     * @return True if the provided password matches the participant\u0027s password, false otherwise.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean checkPassword(String password) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"        return this.password.equals(password);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"HuaZhenting"},"content":"     * Returns the access level of the participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"HuaZhenting"},"content":"     * @return The access level of the participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YanXinyaoo"},"content":"    public AccessLevel getAccessLevel() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"        return accessLevel;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"HuaZhenting"},"content":"     * Returns whether the participant has ADMIN access.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"HuaZhenting"},"content":"     * @return True if the participant has ADMIN access, false otherwise.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean isAdmin() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"        return accessLevel \u003d\u003d AccessLevel.ADMIN;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the access level of the participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"HuaZhenting"},"content":"     * @param accessLevel The new access level to set.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yeeern27"},"content":"    public void setAccessLevel(AccessLevel accessLevel) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yeeern27"},"content":"        this.accessLevel \u003d accessLevel;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a copy of the list of availability slots for the participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"HuaZhenting"},"content":"     * @return A copy of the list of availability slots.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yeeern27"},"content":"    public List\u003cAvailabilitySlot\u003e getAvailableTimes() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YanXinyaoo"},"content":"        return new ArrayList\u003c\u003e(availableTimes);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the list of availability slots for the participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"HuaZhenting"},"content":"     * @param availableTimes The list of availability slots to set.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yeeern27"},"content":"    public void setAvailableTimes(List\u003cAvailabilitySlot\u003e availableTimes) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YanXinyaoo"},"content":"        this.availableTimes \u003d new ArrayList\u003c\u003e(availableTimes);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a string representation of the participant, including their name and the number of available slots.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string representation of the participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"sxkhoo"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"sxkhoo"},"content":"    public String toString() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"yeeern27"},"content":"        return \"Participant: \" + name;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if this participant is equal to another object.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"HuaZhenting"},"content":"     * Two participants are considered equal if their names are the same (case-insensitive).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"HuaZhenting"},"content":"     * @param obj The object to compare.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"HuaZhenting"},"content":"     * @return True if the participants are equal, false otherwise.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"sxkhoo"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"sxkhoo"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"YanXinyaoo"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"YanXinyaoo"},"content":"            return true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"YanXinyaoo"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"YanXinyaoo"},"content":"            return false;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"sxkhoo"},"content":"        Participant other \u003d (Participant) obj;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"sxkhoo"},"content":"        return this.name.equalsIgnoreCase(other.name); // Use ignore case to match on name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"HuaZhenting"},"content":"     * Returns a hash code for this participant based on their name (case-insensitive).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"HuaZhenting"},"content":"     * @return The hash code of the participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"sxkhoo"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"sxkhoo"},"content":"    public int hashCode() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"sxkhoo"},"content":"        return name.toLowerCase().hashCode(); // Match the equals rule","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"YanXinyaoo"},"content":"     * Adds an availability slot for the participant. If the new","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"YanXinyaoo"},"content":"     * slot overlaps with existing ones, the overlapping slots are removed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"HuaZhenting"},"content":"     * The slots are then sorted by their start time.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"HuaZhenting"},"content":"     * @param start The start time of the new availability slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"HuaZhenting"},"content":"     * @param end The end time of the new availability slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"YanXinyaoo"},"content":"    public void addAvailableTime(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"YanXinyaoo"},"content":"        AvailabilitySlot newSlot \u003d new AvailabilitySlot(start, end);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.removeIf(slot -\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"YanXinyaoo"},"content":"                !slot.getStartTime().isAfter(newSlot.getEndTime()) \u0026\u0026","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"YanXinyaoo"},"content":"                        !slot.getEndTime().isBefore(newSlot.getStartTime())","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"YanXinyaoo"},"content":"        );","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.add(newSlot);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.sort((a, b) -\u003e a.getStartTime().compareTo(b.getStartTime()));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"HuaZhenting"},"content":"     * Unassigns an event time from the participant by merging the affected availability slots.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"HuaZhenting"},"content":"     * The slots are then sorted by their start time.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventStart The start time of the event to unassign.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventEnd The end time of the event to unassign.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"YanXinyaoo"},"content":"    public void unassignEventTime(LocalDateTime eventStart, LocalDateTime eventEnd) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"YanXinyaoo"},"content":"        AvailabilitySlot newSlot \u003d new AvailabilitySlot(eventStart, eventEnd);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cAvailabilitySlot\u003e mergedSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"YanXinyaoo"},"content":"        boolean inserted \u003d false;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"YanXinyaoo"},"content":"        for (AvailabilitySlot slot : availableTimes) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"YanXinyaoo"},"content":"            if (slot.getEndTime().isBefore(newSlot.getStartTime().minusMinutes(1))) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"YanXinyaoo"},"content":"                mergedSlots.add(slot);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"YanXinyaoo"},"content":"            } else if (slot.getStartTime().isAfter(newSlot.getEndTime().plusMinutes(1))) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"YanXinyaoo"},"content":"                if (!inserted) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"YanXinyaoo"},"content":"                    mergedSlots.add(newSlot);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"YanXinyaoo"},"content":"                    inserted \u003d true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"YanXinyaoo"},"content":"                mergedSlots.add(slot);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"YanXinyaoo"},"content":"            } else {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"YanXinyaoo"},"content":"                newSlot \u003d new AvailabilitySlot(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"yeeern27"},"content":"                        slot.getStartTime().isBefore(newSlot.getStartTime()) ? slot.getStartTime() :","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"yeeern27"},"content":"                                newSlot.getStartTime(),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"YanXinyaoo"},"content":"                        slot.getEndTime().isAfter(newSlot.getEndTime()) ? slot.getEndTime() : newSlot.getEndTime()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"YanXinyaoo"},"content":"                );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"YanXinyaoo"},"content":"        if (!inserted) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"YanXinyaoo"},"content":"            mergedSlots.add(newSlot);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"YanXinyaoo"},"content":"        mergedSlots.sort((a, b) -\u003e a.getStartTime().compareTo(b.getStartTime()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes \u003d mergedSlots;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":109,"sxkhoo":26,"YanXinyaoo":126,"yeeern27":20}},{"path":"src/main/java/participant/ParticipantManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeeern27"},"content":"package participant;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yeeern27"},"content":"import event.Event;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yeeern27"},"content":"import ui.UI;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yeeern27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yeeern27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":" * Manages the participants in the system, including user authentication,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":" * availability checking, and assignment to events.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" * The ParticipantManager handles user login, logout, adding new users, and checking availability for events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yeeern27"},"content":"public class ParticipantManager {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private ArrayList\u003cParticipant\u003e participants;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant currentUser;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yeeern27"},"content":"    private final UI ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private final UserStorage storage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"     * Constructs a ParticipantManager with a list of participants,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"     * UI instance, and storage for saving participant data.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"     * @param participants The list of participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * @param ui The UI instance for interacting with the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * @param storage The UserStorage instance for saving participant data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    public ParticipantManager(ArrayList\u003cParticipant\u003e participants, UI ui, UserStorage storage) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        this.participants \u003d participants;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        this.currentUser \u003d null;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yeeern27"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     * Gets the list of all participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"     * @return The list of participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"    public ArrayList\u003cParticipant\u003e getParticipants() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        return participants;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * Gets the currently logged-in participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     * @return The current user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    public Participant getCurrentUser() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        return currentUser;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"     * Adds a new participant to the system. Throws an exception if the user already exists.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"     * @param participant The participant to add.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the participant already exists.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"    public void addNewUser(Participant participant) throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        assert participant !\u003d null : \"Participant cannot be null\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting adding user \");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        if (participants.stream().anyMatch(p -\u003e p.getName().equals(participant.getName()))) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"User already exists.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        storage.saveUsers(participants);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"     * Deletes a participant from the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"     * @param participant The participant to delete.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs while deleting.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"    public void deleteUser(Participant participant) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        participants.remove(participant);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"        storage.saveUsers(participants);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"     * Retrieves a participant by their username.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"     * @param username The username of the participant to retrieve.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"     * @return The participant, or null if not found.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs while retrieving the participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"    public Participant getParticipant(String username) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"            for (Participant participant : participants) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"                if (participant.getName().equals(username)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"                    return participant;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"        return null;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"     * Logs in a participant by verifying their username and password.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user for their credentials and handles login success or failure.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"     * @return The current ParticipantManager instance after login.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during login.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"    public ParticipantManager login() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"sxkhoo"},"content":"        ui.showMessage(\"Please enter your Username (or type \u0027exit\u0027 to leave)\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        String username \u003d ui.readLine();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"sxkhoo"},"content":"        ui.checkForExit(username);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"        if(this.getParticipant(username) !\u003d null) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"sxkhoo"},"content":"            ui.showMessage(\"Please enter your password (or type \u0027exit\u0027 to leave)\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"            String password \u003d ui.readLine();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"sxkhoo"},"content":"            ui.checkForExit(password);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"            if(this.getParticipant(username).checkPassword(password)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"                this.currentUser \u003d this.getParticipant(username);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showSuccessLoginMessage();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showMenu();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"                return this;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"            } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"                ui.showMessage(\"Wrong password. Do you want to login again? (yes/no)\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"                if(ui.readLine().equalsIgnoreCase(\"yes\")) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"                    return this.login();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"                } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"                    ui.showMessage(\"Wrong password! Session ends\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"                    ui.showMessage(\"Please enter \u0027create\u0027 to create user first or \u0027login\u0027 to log in.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"                    return this;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(\"User not found. Please enter \u0027create\u0027 to create user first!\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"            return this;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"HuaZhenting"},"content":"     * Logs out the current participant, if any.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"    public void logout() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"        if (this.currentUser !\u003d null) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(this.currentUser.getName() + \" has logged out.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"            this.currentUser \u003d null;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(\"No user is currently logged in.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if a participant is available during the given event\u0027s time slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event to check for availability.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"HuaZhenting"},"content":"     * @param participant The participant to check.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"HuaZhenting"},"content":"     * @return True if the participant is available during the event time, false otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean checkParticipantAvailability(Event event, Participant participant) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(\"Checking participant availability\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yeeern27"},"content":"        for (AvailabilitySlot slot : participant.getAvailableTimes()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"            ui.showMessage(\"  -\" + slot.getStartTime() + \" to \" + slot.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yeeern27"},"content":"            LocalDateTime slotStart \u003d slot.getStartTime();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yeeern27"},"content":"            LocalDateTime slotEnd \u003d slot.getEndTime();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YanXinyaoo"},"content":"            if (event.getStartTime().isAfter(slotEnd) || event.getEndTime().isBefore(slotStart)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YanXinyaoo"},"content":"                continue;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yeeern27"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yeeern27"},"content":"            return true; // Participant is available","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showParticipantSlotCollisionWarning(event, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YanXinyaoo"},"content":"        return false;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"HuaZhenting"},"content":"     * Assigns a participant to an event, ensuring the participant is not already assigned.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event to assign the participant to.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"HuaZhenting"},"content":"     * @param participant The participant to assign.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"HuaZhenting"},"content":"     * @return True if the participant was successfully assigned, false otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the participant is already assigned to the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean assignParticipant(Event event, Participant participant) throws SyncException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YanXinyaoo"},"content":"        if (event.getParticipants().contains(participant)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"User has already been assigned to this event. Try another user/event.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YanXinyaoo"},"content":"            boolean assigned \u003d participant.assignEventTime(event.getStartTime(), event.getEndTime());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YanXinyaoo"},"content":"            storage.saveUsers(participants);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YanXinyaoo"},"content":"            return assigned;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the current logged-in participant.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"HuaZhenting"},"content":"     * @param user The participant to set as the current user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YanXinyaoo"},"content":"    public void setCurrentUser(Participant user) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"YanXinyaoo"},"content":"        this.currentUser \u003d user;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if the current logged-in participant is an admin.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"HuaZhenting"},"content":"     * @return True if the current user is an admin, false otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean isCurrentUserAdmin() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"YanXinyaoo"},"content":"        return this.currentUser.getAccessLevel() \u003d\u003d Participant.AccessLevel.ADMIN;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if the current logged-in participant is available during the given event\u0027s time slot.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event to check for availability.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"HuaZhenting"},"content":"     * @return True if the current user is available during the event time, false otherwise.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean checkCurrentParticipantAvailability(Event event) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"YanXinyaoo"},"content":"        return this.currentUser.isAvailableDuring(event.getStartTime(), event.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"YanXinyaoo"},"content":"    public void updateParticipant(Participant updated) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"YanXinyaoo"},"content":"        for (int i \u003d 0; i \u003c participants.size(); i++) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"YanXinyaoo"},"content":"            if (participants.get(i).getName().equalsIgnoreCase(updated.getName())) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"YanXinyaoo"},"content":"                participants.set(i, updated);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"YanXinyaoo"},"content":"                storage.saveUsers(participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"YanXinyaoo"},"content":"                return;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(updated);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"YanXinyaoo"},"content":"        storage.saveUsers(participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"YanXinyaoo"},"content":"    public void save() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"YanXinyaoo"},"content":"        storage.saveUsers(participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"YanXinyaoo"},"content":"    public void save(Participant participant) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"YanXinyaoo"},"content":"        boolean found \u003d false;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"YanXinyaoo"},"content":"        for (int i \u003d 0; i \u003c participants.size(); i++) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"YanXinyaoo"},"content":"            if (participants.get(i).getName().equals(participant.getName())) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"YanXinyaoo"},"content":"                participants.set(i, participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"YanXinyaoo"},"content":"                found \u003d true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"YanXinyaoo"},"content":"                break;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"YanXinyaoo"},"content":"        if (!found) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"YanXinyaoo"},"content":"            participants.add(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"YanXinyaoo"},"content":"        storage.saveUsers(participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"yeeern27"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":79,"sxkhoo":4,"YanXinyaoo":150,"yeeern27":23}},{"path":"src/main/java/seedu/EventSync.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sxkhoo"},"content":"package seedu;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.CommandFactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import parser.Parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yeeern27"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":" * The EventSync class is the main entry point for the event synchronization system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":" * It initializes the UI, event manager, participant manager, parser, and storage for event and user data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":" * This class processes user input and manages the synchronization of events and participants through commands.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yeeern27"},"content":"public class EventSync {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private final UI ui;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yeeern27"},"content":"    private final EventManager eventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private final ParticipantManager participantManager;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yeeern27"},"content":"    private final Parser parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private final Storage storage;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private final UserStorage userStorage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs an EventSync instance with specified file paths for event and user data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * Initializes the user interface, event manager, participant manager, parser, and storage components.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * @param filePathEvent The file path for event data storage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * @param filePathUser The file path for user data storage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during initialization.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    public EventSync(String filePathEvent, String filePathUser) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yeeern27"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        userStorage \u003d new UserStorage(filePathUser);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        storage \u003d new Storage(filePathEvent, userStorage);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(userStorage.loadUsers(), ui, userStorage);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(storage.loadEvents(), ui, storage, userStorage);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        parser \u003d new Parser(eventManager, participantManager, ui, scanner);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"     * Constructs an EventSync instance with an InputStream","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"     * for reading user input and specified file paths for event and user data.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * Initializes the user interface, event manager, participant manager, parser, and storage components.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     * @param inputStream The InputStream for reading user input (e.g., System.in).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     * @param filePathEvent The file path for event data storage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"     * @param filePathUser The file path for user data storage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during initialization.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"    public EventSync(InputStream inputStream,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"                     String filePathEvent, String filePathUser) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        userStorage \u003d new UserStorage(filePathUser);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        storage \u003d new Storage(filePathEvent, userStorage);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(storage.loadEvents(), ui, storage, userStorage);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(userStorage.loadUsers(), ui, userStorage);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        scanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        parser \u003d new Parser(eventManager, participantManager, ui, this.scanner);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"     * Starts the event synchronization application.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"     * It continuously reads user input, processes commands, and executes them.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"     * The loop will exit when an exit command is executed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yeeern27"},"content":"    public void run() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        while (!isExit \u0026\u0026 scanner.hasNextLine()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yeeern27"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yeeern27"},"content":"            try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"                CommandFactory factory \u003d parser.parse(input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"                Command c \u003d factory.createCommand();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"                c.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yeeern27"},"content":"            } catch (SyncException e) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yeeern27"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yeeern27"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sxkhoo"},"content":"            if (!isExit) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sxkhoo"},"content":"                System.out.print(\"\\nEnter your command: \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sxkhoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yeeern27"},"content":"        scanner.close();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"     * Main method to run the EventSync application with default file paths for event and user data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"     * @param args Command-line arguments (not used in this implementation).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during initialization or execution.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"    public static void main(String[] args) throws SyncException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"        new EventSync(\"./data/seedu.EventSync.txt\", \"./data/seedu.UserSync.txt\" ).run();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yeeern27"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":30,"sxkhoo":6,"YanXinyaoo":48,"yeeern27":19}},{"path":"src/main/java/sort/Sort.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"package sort;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"import event.Event;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":" * The abstract Sort class defines a blueprint for sorting algorithms that can be applied to a list of events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":" * Subclasses are required to implement the sorting logic based on the provided priorities.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":" *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":" * This class allows different sorting strategies to be used for sorting events,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":" * based on various criteria such as date, time, or other event attributes.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"public abstract class Sort {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"     * Sorts a list of events based on the specified priorities.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"     * @param events The list of events to be sorted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"     * @param priorities The list of priorities that determine how the events should be sorted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     *                   These could represent sorting criteria such as event time, name, etc.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    public abstract void sort(List\u003cEvent\u003e events, List\u003cString\u003e priorities);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"Lydialkx":6,"HuaZhenting":13,"YanXinyaoo":4}},{"path":"src/main/java/sort/SortByEndTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"package sort;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"import event.Event;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import label.Priority;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * The SortByEndTime class implements the sorting algorithm for a list of events,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * sorting them based on their end time in ascending order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * In case two events have the same end time, they are sorted based on their priority,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" * with higher priority events appearing first.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"public class SortByEndTime extends Sort {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * Sorts a list of events based on their end time and priority.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * The events are sorted in ascending order of their end time, and if two events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * have the same end time, they are sorted by their priority in descending order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * @param events The list of events to be sorted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * @param priorities The list of priorities corresponding to the events, used to break ties when two events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     *                   have the same end time. A higher priority value indicates a higher priority.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    public void sort(List\u003cEvent\u003e events, List\u003cString\u003e priorities) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        assert events !\u003d null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting sorting by end time \");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"        int n \u003d events.size();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"        for (int i \u003d 0; i \u003c n - 1; i++) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"            int bestIdx \u003d i;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"            for (int j \u003d i + 1; j \u003c n; j++) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"                boolean isEarlier \u003d events.get(j).getEndTime().isBefore(events.get(bestIdx).getEndTime());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"                boolean sameTimeHigherPriority \u003d events.get(j).getEndTime().equals(events.get(bestIdx).getEndTime()) \u0026\u0026","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"                        Priority.getValue(priorities.get(j)) \u003e Priority.getValue(priorities.get(bestIdx));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"                if (isEarlier || sameTimeHigherPriority) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lydialkx"},"content":"                    bestIdx \u003d j;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"                }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lydialkx"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lydialkx"},"content":"            swap(events, priorities, i, bestIdx);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"     * Swaps the elements at indices i and j in both the events and priorities lists.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * @param events The list of events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     * @param priorities The list of priorities.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     * @param i The index of the first element to swap.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     * @param j The index of the second element to swap.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sxkhoo"},"content":"    private void swap(List\u003cEvent\u003e events, List\u003cString\u003e priorities, int i, int j) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lydialkx"},"content":"        Event temp \u003d events.get(i);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lydialkx"},"content":"        events.set(i, events.get(j));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lydialkx"},"content":"        events.set(j, temp);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lydialkx"},"content":"        String tempPrio \u003d priorities.get(i);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lydialkx"},"content":"        priorities.set(i, priorities.get(j));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lydialkx"},"content":"        priorities.set(j, tempPrio);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"Lydialkx":33,"HuaZhenting":23,"sxkhoo":1,"YanXinyaoo":8}},{"path":"src/main/java/sort/SortByPriority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"package sort;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"import event.Event;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import label.Priority;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * The SortByPriority class implements the sorting algorithm for a list of events,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * sorting them based on their priority in descending order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * In case two events have the same priority, they are sorted based on their end time,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" * with earlier events appearing first.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"public class SortByPriority extends Sort {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * Sorts a list of events based on their priority and end time.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * The events are sorted in descending order of their priority. If two events have","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * the same priority, they are further sorted in ascending order of their end time.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * @param events The list of events to be sorted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * @param priorities The list of priorities corresponding to the events, used for sorting.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     *                   A higher priority value indicates a higher priority.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    public void sort(List\u003cEvent\u003e events, List\u003cString\u003e priorities) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        assert events !\u003d null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting sorting by priorities\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"        int n \u003d events.size();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"        for (int i \u003d 0; i \u003c n - 1; i++) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"            int bestIdx \u003d i;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"            for (int j \u003d i + 1; j \u003c n; j++) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"                int prioBest \u003d Priority.getValue(priorities.get(bestIdx));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"                int prioJ \u003d Priority.getValue(priorities.get(j));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"                boolean isHigherPriority \u003d prioJ \u003e prioBest;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"                boolean isSamePriorityEarlierEnd \u003d prioJ \u003d\u003d prioBest \u0026\u0026","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lydialkx"},"content":"                        events.get(j).getEndTime().isBefore(events.get(bestIdx).getEndTime());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lydialkx"},"content":"                if (isHigherPriority || isSamePriorityEarlierEnd) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lydialkx"},"content":"                    bestIdx \u003d j;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lydialkx"},"content":"                }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lydialkx"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lydialkx"},"content":"            swap(events, priorities, i, bestIdx);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     * Swaps the elements at indices i and j in both the events and priorities lists.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     * @param events The list of events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"     * @param priorities The list of priorities.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"     * @param i The index of the first element to swap.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"     * @param j The index of the second element to swap.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sxkhoo"},"content":"    private void swap(List\u003cEvent\u003e events, List\u003cString\u003e priorities, int i, int j) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lydialkx"},"content":"        Event tempEvent \u003d events.get(i);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lydialkx"},"content":"        events.set(i, events.get(j));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lydialkx"},"content":"        events.set(j, tempEvent);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lydialkx"},"content":"        String tempPrio \u003d priorities.get(i);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lydialkx"},"content":"        priorities.set(i, priorities.get(j));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lydialkx"},"content":"        priorities.set(j, tempPrio);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"Lydialkx":36,"HuaZhenting":23,"sxkhoo":1,"YanXinyaoo":8}},{"path":"src/main/java/sort/SortByStartTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"package sort;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"import event.Event;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import label.Priority;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":" * The SortByStartTime class implements the sorting algorithm for a list of events,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":" * sorting them based on their start time in ascending order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":" * If two events have the same start time, they are sorted based on their priority,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":" * with higher priority events appearing first.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"public class SortByStartTime extends Sort {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"     * Sorts a list of events based on their start time and priority.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"     * The events are sorted in ascending order of their start time. If two events have","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"     * the same start time, they are further sorted in descending order of their priority.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     * @param events The list of events to be sorted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * @param priorities The list of priorities corresponding to the events, used for sorting.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     *                   A higher priority value indicates a higher priority.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    public void sort(List\u003cEvent\u003e events, List\u003cString\u003e priorities) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        assert events !\u003d null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting sorting by start time \");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"        int n \u003d events.size();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"        for (int i \u003d 0; i \u003c n - 1; i++) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"            int bestIdx \u003d i;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"            for (int j \u003d i + 1; j \u003c n; j++) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"                boolean isEarlier \u003d events.get(j).getStartTime().isBefore(events.get(bestIdx).getStartTime());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"                boolean sameTimeHigherPriority \u003d events.get(j).getStartTime().equals(events.get(bestIdx).getStartTime())","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"                        \u0026\u0026 Priority.getValue(priorities.get(j)) \u003e Priority.getValue(priorities.get(bestIdx));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"                if (isEarlier || sameTimeHigherPriority) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lydialkx"},"content":"                    bestIdx \u003d j;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"                }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lydialkx"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lydialkx"},"content":"            swap(events, priorities, i, bestIdx);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"     * Swaps the elements at indices i and j in both the events and priorities lists.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * @param events The list of events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     * @param priorities The list of priorities.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     * @param i The index of the first element to swap.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     * @param j The index of the second element to swap.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sxkhoo"},"content":"    private void swap(List\u003cEvent\u003e events, List\u003cString\u003e priorities, int i, int j) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lydialkx"},"content":"        Event temp \u003d events.get(i);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lydialkx"},"content":"        events.set(i, events.get(j));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lydialkx"},"content":"        events.set(j, temp);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lydialkx"},"content":"        String tempPrio \u003d priorities.get(i);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lydialkx"},"content":"        priorities.set(i, priorities.get(j));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lydialkx"},"content":"        priorities.set(j, tempPrio);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"Lydialkx":33,"HuaZhenting":23,"sxkhoo":1,"YanXinyaoo":8}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package storage;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import label.Priority;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sxkhoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant.AccessLevel;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":" * The Storage class handles reading and writing event data to a file, ensuring that events","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":" * are properly loaded, saved, and synchronized. It works with both events and participants,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":" * storing and retrieving data in a specific format.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"public class Storage {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    private final String filePath;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    private final UserStorage userStorage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * Constructs a Storage object with the specified file path and user storage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * Ensures that the storage file exists by creating it if necessary.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"     * @param filePath The path to the event storage file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * @param userStorage The UserStorage object used to load participant data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during file creation or initialization.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"    public Storage(String filePath, UserStorage userStorage) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        this.userStorage \u003d userStorage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        ensureFileExists();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"     * Ensures that the storage file exists. If it doesn\u0027t, it creates the necessary directories","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"     * and the file itself.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If there is an error creating the file or directories.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    private void ensureFileExists() throws SyncException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"                Files.createFile(path);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Cannot create storage file: \" + filePath);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"     * Saves a list of events and their associated priorities to the storage file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"     * Each event is written in a specific format.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"     * @param events The list of events to be saved.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"     * @param allPriorities The list of priorities for the events.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during the saving process.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"    public void saveEvents(List\u003cEvent\u003e events, ArrayList\u003cString\u003e allPriorities) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        assert events !\u003d null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting saving events \");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lydialkx"},"content":"            for (int i \u003d 0; i \u003c events.size(); i++) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lydialkx"},"content":"                Event event \u003d events.get(i);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"                String priority \u003d (i \u003c allPriorities.size()) ? allPriorities.get(i) : Priority.LOW;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Lydialkx"},"content":"                writer.write(formatEvent(event, priority));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"                writer.newLine();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Error saving events: \" + e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"     * Loads events from the storage file. Each event is parsed and converted into an Event object.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"     * @return A list of Event objects loaded from the file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If an error occurs during the loading or parsing process.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"    public ArrayList\u003cEvent\u003e loadEvents() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Lydialkx"},"content":"        ArrayList\u003cString\u003e loadedPriorities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cParticipant\u003e allParticipants \u003d userStorage.loadUsers();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"            String line;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"                try {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"                    String[] parts \u003d parseEventLine(line.trim());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"                    Event event \u003d parseEvent(parts, allParticipants);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Lydialkx"},"content":"                    String priority \u003d parts[5];","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Lydialkx"},"content":"                    loadedPriorities.add(priority);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Lydialkx"},"content":"                    events.add(event);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"                    throw new SyncException(\"Skipping corrupted line: \" + line + \" | Error: \" + e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Lydialkx"},"content":"            Priority.loadFromStorage(loadedPriorities);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException | SyncException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"        return events;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"     * Formats an event into a string suitable for writing to the storage file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event to be formatted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"HuaZhenting"},"content":"     * @param priority The priority of the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"HuaZhenting"},"content":"     * @return A formatted string representing the event.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Lydialkx"},"content":"    private String formatEvent(Event event, String priority) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"        String participantsStr \u003d event.getParticipants().stream()","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"                .map(p -\u003e p.getName() + \":\" + p.getAccessLevel())","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"        return String.join(\" | \",","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"                event.getName(),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"                event.getStartTime().format(formatter),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"                event.getEndTime().format(formatter),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"                event.getLocation(),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Lydialkx"},"content":"                event.getDescription(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"sxkhoo"},"content":"                priority,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"                participantsStr);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"HuaZhenting"},"content":"     * Parses a line from the storage file into an array of strings representing the event data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"HuaZhenting"},"content":"     * @param line The line to be parsed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"HuaZhenting"},"content":"     * @return An array of strings representing the parsed event data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the line is invalid or incomplete.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"    private String[] parseEventLine(String line) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"        String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\", -1);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Missing required fields\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"        String[] normalized \u003d new String[7];","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YanXinyaoo"},"content":"        System.arraycopy(parts, 0, normalized, 0, Math.min(parts.length, 5));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"        normalized[5] \u003d (parts.length \u003e 5 \u0026\u0026 !parts[5].isEmpty()) ? parts[5] : \"LOW\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"        normalized[6] \u003d (parts.length \u003e 6) ? parts[6] : \"\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"        return normalized;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"HuaZhenting"},"content":"     * Parses an event\u0027s data from an array of strings and converts it into an Event object.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"HuaZhenting"},"content":"     * @param parts An array of strings containing the event data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"HuaZhenting"},"content":"     * @param allParticipants A list of all available participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"HuaZhenting"},"content":"     * @return The parsed Event object.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the event data is invalid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YanXinyaoo"},"content":"    private Event parseEvent(String[] parts, List\u003cParticipant\u003e allParticipants) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YanXinyaoo"},"content":"            if (parts[0] \u003d\u003d null || parts[1] \u003d\u003d null || parts[2] \u003d\u003d null) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YanXinyaoo"},"content":"                throw new SyncException(\"Missing required fields\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"sxkhoo"},"content":"            Event event \u003d new Event(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YanXinyaoo"},"content":"                    parts[0],","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YanXinyaoo"},"content":"                    LocalDateTime.parse(parts[1], formatter),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YanXinyaoo"},"content":"                    LocalDateTime.parse(parts[2], formatter),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"                    parts[3],","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YanXinyaoo"},"content":"                    parts[4]","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YanXinyaoo"},"content":"            );","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YanXinyaoo"},"content":"            if (!parts[6].isEmpty()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YanXinyaoo"},"content":"                String[] participantEntries \u003d parts[6].split(\"\\\\s*,\\\\s*\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"sxkhoo"},"content":"                for (String entry : participantEntries) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YanXinyaoo"},"content":"                    try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YanXinyaoo"},"content":"                        String[] participantData \u003d entry.split(\"\\\\s*:\\\\s*\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YanXinyaoo"},"content":"                        if (participantData.length !\u003d 2) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"YanXinyaoo"},"content":"                            throw new SyncException(\"Invalid participant format: \" + entry);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"YanXinyaoo"},"content":"                        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"sxkhoo"},"content":"                        String name \u003d participantData[0];","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"YanXinyaoo"},"content":"                        AccessLevel accessLevel \u003d AccessLevel.valueOf(participantData[1].toUpperCase());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"YanXinyaoo"},"content":"                        Participant participant \u003d allParticipants.stream()","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"YanXinyaoo"},"content":"                                .filter(p -\u003e p.getName().equalsIgnoreCase(name))","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"YanXinyaoo"},"content":"                                .findFirst()","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"YanXinyaoo"},"content":"                                .orElseThrow(() -\u003e new SyncException(\"Participant not found: \" + name));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"YanXinyaoo"},"content":"                        event.addParticipant(participant);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"YanXinyaoo"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"YanXinyaoo"},"content":"                        throw new SyncException(\"Invalid participant data: \" + entry);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"sxkhoo"},"content":"                    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"sxkhoo"},"content":"                }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"sxkhoo"},"content":"            return event;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Failed to parse event: \" + e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"Lydialkx":12,"HuaZhenting":55,"sxkhoo":11,"YanXinyaoo":139}},{"path":"src/main/java/storage/UserStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package storage;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant.AccessLevel;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"/**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":" * Handles storage-related operations for managing participants, including their availability slots.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":" * This class provides methods to save and load participant data from a file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":" * It also includes functionality for managing the format of the participant data, including their availability slots.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":" */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"public class UserStorage {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    private final String filePath;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    private final DateTimeFormatter slotFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     * Constructor that initializes the file path and ensures the storage file exists.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"     * @param filePath the file path where participant data is stored","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an issue creating or accessing the file","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    public UserStorage(String filePath) throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        ensureFileExists();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"     * Ensures that the file exists at the specified file path.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"     * If the file or directories do not exist, they are created.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an issue creating the file or directories","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"    private void ensureFileExists() throws SyncException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"                Files.createFile(path);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Cannot create storage file: \" + filePath);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"     * Saves a list of participants to the storage file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"     * @param participants a list of participants to be saved","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error while saving the data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"    public void saveUsers(List\u003cParticipant\u003e participants) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        assert participants !\u003d null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        LOGGER.info(\"Attempting save users\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"            for (Participant participant : participants) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"                writer.write(formatParticipant(participant));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"                writer.newLine();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Error saving users: \" + e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"     * Loads participants from the storage file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"     * @return a list of participants loaded from the file","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error while reading the data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"    public ArrayList\u003cParticipant\u003e loadUsers() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"            String line;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"                try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"                    Participant participant \u003d parseParticipant(line);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"                    participants.add(participant);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"                    throw new SyncException(\"Skipping corrupted line: \" + line);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException | SyncException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"        return participants;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"     * Formats a participant object into a string for saving to the storage file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"     * The string format is as follows: \"Name | AccessLevel | Password | AvailabilitySlots\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"     * @param participant the participant to be formatted","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"     * @return the formatted string representation of the participant","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"    private String formatParticipant(Participant participant) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"        // Format basic info","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"        sb.append(participant.getName()).append(\" | \")","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"                .append(participant.getAccessLevel().name()).append(\" | \")","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"                .append(participant.getPassword());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"        // Format availability slots","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"        sb.append(\" | \");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"        if (!participant.getAvailableTimes().isEmpty()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"            List\u003cString\u003e slotStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"            for (AvailabilitySlot slot : participant.getAvailableTimes()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"                slotStrings.add(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"                        slot.getStartTime().format(slotFormatter) + \",\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"                                slot.getEndTime().format(slotFormatter)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"                );","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"            sb.append(String.join(\";\", slotStrings));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"        return sb.toString();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"HuaZhenting"},"content":"     * Parses a string representing a participant from the file into a Participant object.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"HuaZhenting"},"content":"     * @param line the string representation of the participant","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"HuaZhenting"},"content":"     * @return the parsed Participant object","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException if there is an error in the data format","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant parseParticipant(String line) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"sxkhoo"},"content":"        String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\", -1); // handles spaces around `|`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"            throw new IllegalArgumentException(\"Missing required fields\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d new Participant(","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"                parts[0].trim(),","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"                parts[2].trim(),","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"                AccessLevel.valueOf(parts[1].trim().toUpperCase())","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"        );","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"        if (parts.length \u003e 3 \u0026\u0026 !parts[3].isEmpty()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"            String[] slotEntries \u003d parts[3].split(\";\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YanXinyaoo"},"content":"            for (String entry : slotEntries) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"                try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"                    String[] times \u003d entry.split(\",\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"                    if (times.length \u003d\u003d 2) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"                        LocalDateTime start \u003d LocalDateTime.parse(times[0].trim(), slotFormatter);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"                        LocalDateTime end \u003d LocalDateTime.parse(times[1].trim(), slotFormatter);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YanXinyaoo"},"content":"                        participant.addAvailableTime(start, end);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YanXinyaoo"},"content":"                    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YanXinyaoo"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YanXinyaoo"},"content":"                    throw new SyncException(String.format(\"Invalid slot format \u0027%s\u0027: %s\", entry, e.getMessage()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YanXinyaoo"},"content":"                }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YanXinyaoo"},"content":"        return participant;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"HuaZhenting"},"content":"     * Finds a participant by name from a list of participants.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"HuaZhenting"},"content":"     * @param participants the list of participants to search through","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"HuaZhenting"},"content":"     * @param name         the name of the participant to find","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"HuaZhenting"},"content":"     * @return the participant with the specified name, or null if not found","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YanXinyaoo"},"content":"    public Participant findUserByName(List\u003cParticipant\u003e participants, String name) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YanXinyaoo"},"content":"        return participants.stream()","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YanXinyaoo"},"content":"                .filter(p -\u003e p.getName().equalsIgnoreCase(name))","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"                .findFirst()","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YanXinyaoo"},"content":"                .orElse(null);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":48,"sxkhoo":1,"YanXinyaoo":139}},{"path":"src/main/java/ui/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package ui;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sxkhoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":" * The UI class provides methods for handling user interface operations related to event management.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":" * It supports displaying menus, messages, event details, and input prompts to the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"public class UI {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"    public static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(LoginCommand.class.getName());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"     * Sets the scanner instance to a new one for handling user inputs.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"     * @param newScanner The new scanner instance to be used.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    public void setScanner(Scanner newScanner) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        UI.scanner \u003d newScanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a message to the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"     * Displays the main menu for the EventSync application.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    public void showMenu() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"╔═════════════════════════════════════════╗\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║          EVENT SYNC COMMAND MENU        ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"╠═════════════════════════════════════════╣\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  \u003d\u003d\u003d Event Management Commands \u003d\u003d\u003d      ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  add            - Add new event         ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"║  listall        - List all events       ║\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  delete         - Delete an event       ║\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  edit           - Edit an event         ║\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  duplicate [ID] - Duplicate an event    ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  addparticipant - Add to event          ║\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║                                         ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  \u003d\u003d\u003d Participant Commands \u003d\u003d\u003d           ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  list           - List your events      ║\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  find [KEYWORD] - Search events         ║\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  filter         - Filter events         ║\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  listparticipants- List participants    ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║                                         ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  \u003d\u003d\u003d Session Commands \u003d\u003d\u003d               ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  create         - Create new user       ║\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  login          - Login to system       ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  logout         - Logout                ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║                                         ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  \u003d\u003d\u003d System Commands \u003d\u003d\u003d                ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"║  bye            - Exit program          ║\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yeeern27"},"content":"        System.out.println(\"║  help           - Show help menu        ║\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"╚═════════════════════════════════════════╝\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"     * Displays the event with its index and priority.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"     * @param event    The event to be displayed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"     * @param index    The index of the event in the list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"     * @param priority The priority of the event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Lydialkx"},"content":"    public void showEventWithIndex(Event event, int index, String priority) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lydialkx"},"content":"        System.out.println(\"The event \" + index + \" is: \");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lydialkx"},"content":"        System.out.println(event.toString());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lydialkx"},"content":"        System.out.println(\"Priority: \" + priority);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Lydialkx"},"content":"        System.out.println();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a message when the list is empty.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"    public void showEmptyListMessage() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"There is nothing to view\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"     * Prints the matching events to the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"     * @param events A list of events to be displayed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"    public void printMatchingEvents(ArrayList\u003cEvent\u003e events) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"        if (events.isEmpty()){","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yeeern27"},"content":"            System.out.println(\"No matching events found.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        } else {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"            System.out.println(\"Found \" + events.size() + \" matching events.\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"            System.out.println(\"Here are the matching events in your list: \");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"            for (int i \u003d 0; i \u003c events.size(); i++) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + events.get(i).toString());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to input event details for adding an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"    public void showAddFormat() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"Enter event details (format: Event Name | \" +","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"                \"Start Date | End Date | Location | Description):\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a message confirming that the event has been added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event that has been added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"    public void showAddedMessage(Event event) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"The event\\n\" + event.toString() + \"\\nhas been added to the list.\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a message with the available options for editing an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event that is being edited.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"    public void showEditCommandMessage(Event event) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"\\nEditing Event: \" + event.getName());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"1. Edit Name\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"2. Edit Start Time\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"3. Edit End Time\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"4. Edit Location\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"5. Edit Description\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"6. Done Editing\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.print(\"Select an option: \");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a message when an invalid input is entered for editing an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"    public void showEditCommandCorrectFormat() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"Invalid input! Please enter a number from 1 to 5\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to input a new event name for editing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"    public void showEditCommandStep1() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"sxkhoo"},"content":"        System.out.print(\"Enter New Event Name  (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to input a new start time for editing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"    public void showEditCommandStep2() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"sxkhoo"},"content":"        System.out.print(\"Enter New Start Time (YYYY-MM-DD HH:MM) (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to input a new end time for editing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YanXinyaoo"},"content":"    public void showEditCommandStep3() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"sxkhoo"},"content":"        System.out.print(\"Enter New End Time (YYYY-MM-DD HH:MM) (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to input a new event location for editing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YanXinyaoo"},"content":"    public void showEditCommandStep4() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"sxkhoo"},"content":"        System.out.print(\"Enter New Event Location (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to input a new event description for editing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YanXinyaoo"},"content":"    public void showEditCommandStep5() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"sxkhoo"},"content":"        System.out.print(\"Enter New Event Description (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"HuaZhenting"},"content":"     * Displays the updated event details after editing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The edited event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YanXinyaoo"},"content":"    public void showEditedEvent(Event event) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"\\nUpdated Event Details:\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(event);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"YanXinyaoo"},"content":"    public void showByeMessage() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"Bye!\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a warning when there is a scheduling conflict with a new event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"HuaZhenting"},"content":"     * @param newEvent   The new event being scheduled.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"HuaZhenting"},"content":"     * @param collisions A list of events that overlap with the new event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"HuaZhenting"},"content":"    public void showCollisionWarning(Event newEvent, ArrayList\u003cEvent\u003e collisions) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"Warning: Scheduling Conflict\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"Time of the new event overlaps with the following event(s):\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"HuaZhenting"},"content":"        for (Event collision : collisions) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"HuaZhenting"},"content":"            System.out.println(collision.toString());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"HuaZhenting"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"HuaZhenting"},"content":"        System.out.println(\"Please edit your events to resolve the conflict.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a warning when there is a scheduling conflict with participant availability.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"HuaZhenting"},"content":"     * @param event      The event being scheduled.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"HuaZhenting"},"content":"     * @param collisions A list of events that have a scheduling conflict with the participants.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"yeeern27"},"content":"    public void showParticipantSlotCollisionWarning(Event event, ArrayList\u003cEvent\u003e collisions) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"yeeern27"},"content":"        System.out.println(\"Warning: Scheduling Conflict\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"yeeern27"},"content":"        System.out.println(\"Participants are not able to attend\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"yeeern27"},"content":"        for (Event collision : collisions) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"yeeern27"},"content":"            System.out.println(collision.toString());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"yeeern27"},"content":"        System.out.println(\"Please find another participant\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a message confirming that an event has been deleted.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event that has been deleted.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Lydialkx"},"content":"    public void showDeletedMessage(Event event) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Lydialkx"},"content":"        System.out.println(\"\\\"\" + event.getName() + \"\\\" has been deleted.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to input a command for duplicating an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"HuaZhenting"},"content":"     * @return The input command for duplicating the event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user enters an invalid input or cancels the operation.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"sxkhoo"},"content":"    public String readDuplicateEventInput() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"sxkhoo"},"content":"        System.out.print(\"Enter duplicate command (format: \u003cindex\u003e \u003cNew Event Name\u003e) (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"sxkhoo"},"content":"        checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"sxkhoo"},"content":"        return input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a list of matching events with their indices.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"HuaZhenting"},"content":"     * @param matchingEvents A list of events that match the user\u0027s criteria.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventManager   The event manager instance used to retrieve event details.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Lydialkx"},"content":"    public void showMatchingEventsWithIndices(ArrayList\u003cEvent\u003e matchingEvents, EventManager eventManager) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Lydialkx"},"content":"        System.out.println(\"\\nMatching Events:\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Lydialkx"},"content":"        for (int i \u003d 0; i \u003c matchingEvents.size(); i++) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Lydialkx"},"content":"            System.out.println((i + 1) + \". \" + matchingEvents.get(i).getName());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Lydialkx"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"HuaZhenting"},"content":"     * Asks the user for confirmation before deleting an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"HuaZhenting"},"content":"     * @param eventName The name of the event to be deleted.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if the user confirms deletion, false otherwise.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Lydialkx"},"content":"    public boolean confirmDeletion(String eventName) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Lydialkx"},"content":"        System.out.print(\"Confirm deletion of \\\"\" + eventName + \"\\\"? (yes/no): \");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Lydialkx"},"content":"        String confirmation \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Lydialkx"},"content":"        return confirmation.equals(\"yes\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a message confirming that the deletion process has been cancelled.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Lydialkx"},"content":"    public void showDeletionCancelledMessage() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Lydialkx"},"content":"        System.out.println(\"Deletion cancelled.\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to input participant details for adding a participant.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"sxkhoo"},"content":"    public void showAddParticipantFormat() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"sxkhoo"},"content":"        System.out.println(\"Enter participant details (format: Name | Email | AccessLevel[ADMIN/MEMBER]):\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a message confirming that a participant has been added to an event.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"HuaZhenting"},"content":"     * @param p The participant that was added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"sxkhoo"},"content":"    public void showParticipantAdded(Participant p) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"sxkhoo"},"content":"        System.out.println(\"Participant added: \" + p);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a logout message to the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"YanXinyaoo"},"content":"    public void showLogOutMessage() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"Bye! Press \u0027login\u0027 to log in or \u0027create\u0027 to create a new user.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"HuaZhenting"},"content":"     * Asks the user for a confirmation input.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"HuaZhenting"},"content":"     * @param message The message to be displayed for confirmation.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"HuaZhenting"},"content":"     * @return true if the user confirms, false otherwise.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"YanXinyaoo"},"content":"    public boolean askConfirmation(String message) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"YanXinyaoo"},"content":"        return input.equals(\"y\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a success message when a user successfully logs in.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"YanXinyaoo"},"content":"    public void showSuccessLoginMessage() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"Successfully logged in.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a success message when a user is successfully created.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"HuaZhenting"},"content":"     * @param participant The participant that was created.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"YanXinyaoo"},"content":"    public void showSuccessCreateMessage(Participant participant) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"Successfully created: \" + participant.getName());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"Please enter \u0027login\u0027 to log in or continue with your previous command.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"HuaZhenting"},"content":"     * Displays a welcome message to the user when the system starts.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"YanXinyaoo"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"Welcome to EventSync!\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"Press \u0027login\u0027 to log in or \u0027create\u0027 to create a new user.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"HuaZhenting"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"HuaZhenting"},"content":"     * @return The line of input entered by the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"YanXinyaoo"},"content":"    public String readLine() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"YanXinyaoo"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"HuaZhenting"},"content":"     * Reads an integer input from the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"HuaZhenting"},"content":"     * @return The integer input entered by the user, or null if the input is not a valid integer.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"YanXinyaoo"},"content":"    public Integer readInt() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"YanXinyaoo"},"content":"            return Integer.parseInt(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"YanXinyaoo"},"content":"            return null;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"HuaZhenting"},"content":"     * Displays the edit menu for an event with options to modify various event details.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"HuaZhenting"},"content":"     * @param event The event being edited.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"YanXinyaoo"},"content":"    public void showEditCommandMessageWithOptions(event.Event event) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"\\n--- Editing Event ---\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"What would you like to edit?\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"1. Name\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"2. Start Time (format: yyyy-MM-dd HH:mm)\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"3. End Time (format: yyyy-MM-dd HH:mm)\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"4. Location\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"5. Description\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"6. Done\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.print(\"Enter your choice (1-6): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"HuaZhenting"},"content":"     * Reads the input for adding an event from the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"HuaZhenting"},"content":"     * @return The input string containing event details.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user cancels the operation by typing \u0027exit\u0027.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"sxkhoo"},"content":"    public String readAddCommandInput() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.print(\"Enter event details (format: Event Name | \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"sxkhoo"},"content":"                \"Start Date | End Date | Location | Description) (or type \u0027exit\u0027 to cancel) : \\n\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"sxkhoo"},"content":"        checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"sxkhoo"},"content":"        return input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"HuaZhenting"},"content":"     * Splits the input string for adding a participant and validates the format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"HuaZhenting"},"content":"     * @return A string array with the event index and participant name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the input format is invalid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"YanXinyaoo"},"content":"    public String[] splitAddParticipantCommandInput() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.println(\"Use: \u003cEventIndex\u003e | \u003cParticipant Name\u003e\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"sxkhoo"},"content":"        System.out.println(\"Type \u0027exit\u0027 to cancel.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"sxkhoo"},"content":"        checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"YanXinyaoo"},"content":"        String[] parts \u003d input.split(\"\\\\|\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"YanXinyaoo"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"YanXinyaoo"},"content":"            throw new SyncException(\"Invalid format. Use: \u003cEventIndex\u003e | \u003cParticipant Name\u003e. \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"YanXinyaoo"},"content":"                    \"Enter \u0027addparticipant\u0027 to try again.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"YanXinyaoo"},"content":"        return parts;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"HuaZhenting"},"content":"     * Reads the name input from the user to search for events to delete.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"HuaZhenting"},"content":"     * @return The name entered by the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user cancels the operation by typing \u0027exit\u0027.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"sxkhoo"},"content":"    public String readDeleteName() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"sxkhoo"},"content":"        System.out.print(\"Enter name to search for events to delete (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"sxkhoo"},"content":"        checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"sxkhoo"},"content":"        return input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"HuaZhenting"},"content":"     * Reads a filter input (priority or range) from the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"HuaZhenting"},"content":"     * @return The input filter entered by the user (either a priority or a range).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user types \"exit\", the operation is cancelled.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"sxkhoo"},"content":"    public String readFilterInput() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"sxkhoo"},"content":"        System.out.print(\"Enter a priority or a range (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"sxkhoo"},"content":"        checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"sxkhoo"},"content":"        return input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to enter a participant\u0027s name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"HuaZhenting"},"content":"     * @return The name of the participant entered by the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user types \"exit\", the operation is cancelled.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"sxkhoo"},"content":"    public String askParticipantName() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"sxkhoo"},"content":"        System.out.print(\"Enter participant\u0027s name (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"sxkhoo"},"content":"        checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"sxkhoo"},"content":"        return input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"HuaZhenting"},"content":"     * Prompts the user to enter a participant\u0027s password.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"HuaZhenting"},"content":"     * @return The password of the participant entered by the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user types \"exit\", the operation is cancelled.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"sxkhoo"},"content":"    public String askPassword() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"sxkhoo"},"content":"        System.out.print(\"Enter participant\u0027s password (or type \u0027exit\u0027 to cancel): \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"sxkhoo"},"content":"        checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"sxkhoo"},"content":"        return input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"HuaZhenting"},"content":"     * Reads the list sorting command input from the user (priority, start, or end).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"HuaZhenting"},"content":"     * @return The sorting type (priority, start, or end) entered by the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user types \"exit\", the operation is cancelled.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"sxkhoo"},"content":"    public String readListCommandInput() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"sxkhoo"},"content":"        System.out.print(\"Enter your sort type (priority, start, end) or type \u0027exit\u0027 to cancel: \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"sxkhoo"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"sxkhoo"},"content":"        checkForExit(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"sxkhoo"},"content":"        return input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"HuaZhenting"},"content":"     * Reads input from the user to add a participant, following the specified format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"HuaZhenting"},"content":"     * @return The input containing event index, participant name, access level, and availability.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"YanXinyaoo"},"content":"    public String readAddParticipantInput() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"YanXinyaoo"},"content":"        System.out.print(\"Follow this format: \u003cEventIndex\u003e | \u003cParticipant Name\u003e | \u003cAccessLevel\u003e | \u003cAvailability\u003e \\n\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"HuaZhenting"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"HuaZhenting"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"HuaZhenting"},"content":"     * Checks if the user input is \"exit\", and if so, throws a SyncException to cancel the operation.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"HuaZhenting"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"HuaZhenting"},"content":"     * @param input The user input to be checked.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"HuaZhenting"},"content":"     * @throws SyncException If the user types \"exit\", the operation is cancelled.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"HuaZhenting"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"sxkhoo"},"content":"    public void checkForExit(String input) throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"sxkhoo"},"content":"        if (input.trim().equalsIgnoreCase(\"exit\")) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"sxkhoo"},"content":"            throw new SyncException(\"Operation cancelled.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"sxkhoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"Lydialkx":27,"HuaZhenting":218,"sxkhoo":59,"YanXinyaoo":192,"yeeern27":14}},{"path":"src/test/java/DeleteEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lydialkx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"import event.Event;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lydialkx"},"content":"import ui.UI;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lydialkx"},"content":"class DeleteEventTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lydialkx"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lydialkx"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"        Storage storage \u003d new Storage(\"./data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, storage, userStorage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lydialkx"},"content":"    void testDeleteValidEvent() throws SyncException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lydialkx"},"content":"        Event event \u003d new Event(\"Test Event\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 5, 1, 10, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 5, 1, 11, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"                \"Lab\", \"Test Desc\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(1, eventManager.size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"        eventManager.deleteEvent(0);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(0, eventManager.size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"    void testDeleteInvalidIndex() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lydialkx"},"content":"        assertThrows(SyncException.class, () -\u003e eventManager.deleteEvent(5));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Lydialkx":42,"YanXinyaoo":3}},{"path":"src/test/java/DuplicateEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yeeern27"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yeeern27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yeeern27"},"content":"import event.Event;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yeeern27"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yeeern27"},"content":"import ui.UI;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yeeern27"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yeeern27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yeeern27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yeeern27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yeeern27"},"content":"class DuplicateEventTest {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yeeern27"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yeeern27"},"content":"    private UI ui;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yeeern27"},"content":"    private Event event;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yeeern27"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yeeern27"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"        Storage storage \u003d new Storage(\"./data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, storage, userStorage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yeeern27"},"content":"        event \u003d new Event(\"Team Meeting\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yeeern27"},"content":"                LocalDateTime.parse(\"2025/05/10 14:00\", DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\")),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yeeern27"},"content":"                LocalDateTime.parse(\"2025/05/10 16:00\", DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\")),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yeeern27"},"content":"                \"Conference Room\", \"Discuss project updates\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yeeern27"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yeeern27"},"content":"    void testDuplicateEvent() throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yeeern27"},"content":"        // Simulate duplicating the event","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yeeern27"},"content":"        eventManager.duplicateEvent(event, \"Duplicate Meeting\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yeeern27"},"content":"        // Verify that the event was duplicated and added to the list","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yeeern27"},"content":"        assertEquals(2, eventManager.size());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"Duplicate Meeting\", eventManager.getEvent(1).getName());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yeeern27"},"content":"        assertEquals(event.getStartTime(), eventManager.getEvent(1).getStartTime());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yeeern27"},"content":"        assertEquals(event.getEndTime(), eventManager.getEvent(1).getEndTime());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yeeern27"},"content":"        assertEquals(event.getLocation(), eventManager.getEvent(1).getLocation());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yeeern27"},"content":"        assertEquals(event.getDescription(), eventManager.getEvent(1).getDescription());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yeeern27"},"content":"    void testFindEventByDescription() throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yeeern27"},"content":"        // Add another event to test find method with multiple events","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yeeern27"},"content":"        Event anotherEvent \u003d new Event(\"Presentation\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yeeern27"},"content":"                LocalDateTime.parse(\"2025/05/11 10:00\", DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\")),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yeeern27"},"content":"                LocalDateTime.parse(\"2025/05/11 12:00\", DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\")),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yeeern27"},"content":"                \"Lecture Hall\", \"Present project findings\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yeeern27"},"content":"        eventManager.addEvent(anotherEvent);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yeeern27"},"content":"        // Simulate finding events by description","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yeeern27"},"content":"        ArrayList\u003cEvent\u003e matchingEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yeeern27"},"content":"        for (Event currentEvent : eventManager.getEvents()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yeeern27"},"content":"            if (currentEvent.getDescription().toLowerCase().contains(\"project\")) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yeeern27"},"content":"                matchingEvents.add(currentEvent);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yeeern27"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yeeern27"},"content":"        // Verify that the find method returns the correct events","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yeeern27"},"content":"        assertEquals(2, matchingEvents.size());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yeeern27"},"content":"        assertTrue(matchingEvents.contains(event));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yeeern27"},"content":"        assertTrue(matchingEvents.contains(anotherEvent));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yeeern27"},"content":"    void testFindEventNoMatch() throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yeeern27"},"content":"        // Simulate finding events by description with no matches","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yeeern27"},"content":"        ArrayList\u003cEvent\u003e matchingEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yeeern27"},"content":"        for (Event currentEvent : eventManager.getEvents()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yeeern27"},"content":"            if (currentEvent.getDescription().toLowerCase().contains(\"nonexistent\")) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yeeern27"},"content":"                matchingEvents.add(currentEvent);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yeeern27"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yeeern27"},"content":"        // Verify that the find method returns an empty list when no matches are found","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yeeern27"},"content":"        assertTrue(matchingEvents.isEmpty());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yeeern27"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Lydialkx":6,"YanXinyaoo":2,"yeeern27":79}},{"path":"src/test/java/EditEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sxkhoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sxkhoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sxkhoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sxkhoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sxkhoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sxkhoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sxkhoo"},"content":"import ui.UI;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sxkhoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sxkhoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sxkhoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sxkhoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sxkhoo"},"content":"class EditEventTest {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sxkhoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sxkhoo"},"content":"    private UI ui;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sxkhoo"},"content":"    private Event event;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sxkhoo"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sxkhoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sxkhoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sxkhoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sxkhoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sxkhoo"},"content":"        Storage storage \u003d new Storage(\"data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, storage, userStorage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sxkhoo"},"content":"        event \u003d new Event(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sxkhoo"},"content":"                \"Team Meeting\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 14:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 16:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sxkhoo"},"content":"                \"Conference Room\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sxkhoo"},"content":"                \"Discuss project updates\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sxkhoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sxkhoo"},"content":"    void testEditEventName() throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sxkhoo"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sxkhoo"},"content":"                \"Updated Meeting\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sxkhoo"},"content":"                event.getStartTime(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sxkhoo"},"content":"                event.getEndTime(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sxkhoo"},"content":"                event.getLocation(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sxkhoo"},"content":"                event.getDescription()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sxkhoo"},"content":"        eventManager.updateEvent(0, updatedEvent);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(\"Updated Meeting\", eventManager.getEvent(0).getName());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sxkhoo"},"content":"    void testEditEventStartTime() throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sxkhoo"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sxkhoo"},"content":"                event.getName(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 15:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sxkhoo"},"content":"                event.getEndTime(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sxkhoo"},"content":"                event.getLocation(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sxkhoo"},"content":"                event.getDescription()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sxkhoo"},"content":"        eventManager.updateEvent(0, updatedEvent);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(LocalDateTime.parse(\"2025-05-10 15:00\", formatter), eventManager.getEvent(0).getStartTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sxkhoo"},"content":"    void testEditEventEndTime() throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sxkhoo"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sxkhoo"},"content":"                event.getName(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sxkhoo"},"content":"                event.getStartTime(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 18:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sxkhoo"},"content":"                event.getLocation(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sxkhoo"},"content":"                event.getDescription()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sxkhoo"},"content":"        eventManager.updateEvent(0, updatedEvent);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(LocalDateTime.parse(\"2025-05-10 18:00\", formatter), eventManager.getEvent(0).getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sxkhoo"},"content":"    void testEditEventLocation() throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sxkhoo"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sxkhoo"},"content":"                event.getName(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sxkhoo"},"content":"                event.getStartTime(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sxkhoo"},"content":"                event.getEndTime(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sxkhoo"},"content":"                \"New Location\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sxkhoo"},"content":"                event.getDescription()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sxkhoo"},"content":"        eventManager.updateEvent(0, updatedEvent);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(\"New Location\", eventManager.getEvent(0).getLocation());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"sxkhoo"},"content":"    void testEditEventDescription() throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"sxkhoo"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"sxkhoo"},"content":"                event.getName(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"sxkhoo"},"content":"                event.getStartTime(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"sxkhoo"},"content":"                event.getEndTime(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"sxkhoo"},"content":"                event.getLocation(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sxkhoo"},"content":"                \"Updated description\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"sxkhoo"},"content":"        eventManager.updateEvent(0, updatedEvent);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(\"Updated description\", eventManager.getEvent(0).getDescription());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"sxkhoo"},"content":"    void testInvalidEventIndex() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"sxkhoo"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"sxkhoo"},"content":"                \"Invalid Event\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"sxkhoo"},"content":"                event.getStartTime(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"sxkhoo"},"content":"                event.getEndTime(),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"sxkhoo"},"content":"                \"Invalid Location\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"sxkhoo"},"content":"                \"Invalid description\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"sxkhoo"},"content":"        assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"sxkhoo"},"content":"            eventManager.updateEvent(100, updatedEvent);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"sxkhoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"sxkhoo"},"content":"    void testStartTimeAfterEndTime() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"sxkhoo"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"sxkhoo"},"content":"                event.getName(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 17:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 16:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"sxkhoo"},"content":"                event.getLocation(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"sxkhoo"},"content":"                event.getDescription()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"sxkhoo"},"content":"        assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"sxkhoo"},"content":"            eventManager.updateEvent(0, updatedEvent);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"sxkhoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"sxkhoo"},"content":"    void testEndTimeBeforeStartTime() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"sxkhoo"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"sxkhoo"},"content":"                event.getName(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 14:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 13:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"sxkhoo"},"content":"                event.getLocation(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"sxkhoo"},"content":"                event.getDescription()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"sxkhoo"},"content":"        assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"sxkhoo"},"content":"            eventManager.updateEvent(0, updatedEvent);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"sxkhoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"sxkhoo"},"content":"    void testUnavailableParticipantAfterEdit() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"sxkhoo"},"content":"        // Add a participant with availability from 14:00 to 15:00 only","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"sxkhoo"},"content":"        Participant participant \u003d new Participant(\"Alice\", \"pw\", Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"sxkhoo"},"content":"        participant.setAvailableTimes(List.of(new AvailabilitySlot(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 14:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 15:00\", formatter))));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"sxkhoo"},"content":"        event.addParticipant(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"sxkhoo"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"sxkhoo"},"content":"                event.getName(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 15:30\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.parse(\"2025-05-10 16:30\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"sxkhoo"},"content":"                event.getLocation(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"sxkhoo"},"content":"                event.getDescription()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"sxkhoo"},"content":"        // Reattach the same participant","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"sxkhoo"},"content":"        updatedEvent.addParticipant(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"sxkhoo"},"content":"        assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"sxkhoo"},"content":"            eventManager.updateEvent(0, updatedEvent);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"sxkhoo"},"content":"        });","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"sxkhoo"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Lydialkx":6,"sxkhoo":169,"yeeern27":2}},{"path":"src/test/java/EventSyncTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sxkhoo"},"content":"import seedu.EventSync;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"class EventSyncTest {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"    private ui.UI ui;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    private Participant adminUser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lydialkx"},"content":"        ui \u003d new ui.UI();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/UserSyncTest.txt\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"        Storage storage \u003d new Storage(\"./data/EventSyncTest.txt\", userStorage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, storage, userStorage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    void testAddEvent() throws SyncException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Team Meeting\",","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.parse(\"2025/05/10 14:00\", formatter),","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.parse(\"2025/05/10 16:00\", formatter),","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"                \"Conference Room\", \"Team Meeting\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(1, eventManager.size());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(event, eventManager.getEvent(0));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"    void testGetEventValidIndex() throws SyncException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Team Meeting\",","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.parse(\"2025/05/10 14:00\", formatter),","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.parse(\"2025/05/10 16:00\", formatter),","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"                \"Conference Room\", \"Team Meeting\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        Event fetchedEvent \u003d eventManager.getEvent(0);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(event, fetchedEvent);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"    void testGetEventInvalidIndex() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"            eventManager.getEvent(100);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"    public void testEventSync() throws SyncException {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"add\\nTeam Meeting | 2020-05-10 14:00 | 2025-05-10 16:00 | Conference Room | \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"                \"A team meeting to discuss project updates\\nbye\\n\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        InputStream in \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        EventSync eventSync \u003d new EventSync(in, \"./data/EventSyncTest.txt\", \"./data/UserSyncTest.txt\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        PrintStream originalSystemOut \u003d System.out;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        eventSync.run();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        System.setOut(originalSystemOut);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        String output \u003d outputStream.toString().trim();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(output.contains(\"Please enter \u0027login\u0027 to login.\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"    void testAddEventWithCollision() throws SyncException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"        Event event1 \u003d new Event(\"Team Meeting\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 14:00\", formatter),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 16:00\", formatter),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"                \"Conference Room\", \"Team Meeting\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"        eventManager.addEvent(event1);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"        assertEquals(1, eventManager.size());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HuaZhenting"},"content":"        Event event2 \u003d new Event(\"Project Discussion\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 15:00\", formatter),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 17:00\", formatter),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HuaZhenting"},"content":"                \"Meeting Room\", \"Project brainstorming\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HuaZhenting"},"content":"        eventManager.addEvent(event2);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HuaZhenting"},"content":"        assertEquals(2, eventManager.size());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HuaZhenting"},"content":"        ArrayList\u003cEvent\u003e collisions \u003d eventManager.checkCollision(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HuaZhenting"},"content":"                \"2025-05-10 15:00\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HuaZhenting"},"content":"                \"2025-05-10 17:00\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HuaZhenting"},"content":"                \"Conference Room\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HuaZhenting"},"content":"                eventManager.getEvents(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HuaZhenting"},"content":"                -1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HuaZhenting"},"content":"        );","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HuaZhenting"},"content":"        // Verify collision detected with team meeting","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HuaZhenting"},"content":"        assertEquals(1, collisions.size());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HuaZhenting"},"content":"        assertEquals(\"Team Meeting\", collisions.get(0).getName());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HuaZhenting"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HuaZhenting"},"content":"    void testAddEventWithoutCollision() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HuaZhenting"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HuaZhenting"},"content":"        Event event1 \u003d new Event(\"Team Meeting\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 14:00\", formatter),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 16:00\", formatter),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HuaZhenting"},"content":"                \"Conference Room\", \"Team Meeting\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HuaZhenting"},"content":"        eventManager.addEvent(event1);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"HuaZhenting"},"content":"        Event event2 \u003d new Event(\"Project Discussion\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 16:30\", formatter),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 17:30\", formatter),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HuaZhenting"},"content":"                \"Meeting Room\", \"Project brainstorming\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HuaZhenting"},"content":"        eventManager.addEvent(event2);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"HuaZhenting"},"content":"        assertEquals(2, eventManager.size());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"HuaZhenting"},"content":"        event2.setStartTime(LocalDateTime.parse(\"2025/05/10 15:00\", formatter));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"HuaZhenting"},"content":"        event2.setEndTime(LocalDateTime.parse(\"2025/05/10 16:30\", formatter));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"HuaZhenting"},"content":"        ArrayList\u003cEvent\u003e collisions \u003d eventManager.checkCollision(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"HuaZhenting"},"content":"                \"2025-05-10 15:00\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"HuaZhenting"},"content":"                \"2025-05-10 18:00\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"HuaZhenting"},"content":"                \"Home\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"HuaZhenting"},"content":"                eventManager.getEvents(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"HuaZhenting"},"content":"                -1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"HuaZhenting"},"content":"        );","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"HuaZhenting"},"content":"        // Verify no collision detected","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"HuaZhenting"},"content":"        assertEquals(0, collisions.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"HuaZhenting"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"HuaZhenting"},"content":"    void testEditEventToResolveCollision() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"HuaZhenting"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"HuaZhenting"},"content":"        Event event1 \u003d new Event(\"Team Meeting\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 14:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 16:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"HuaZhenting"},"content":"                \"Conference Room\", \"Team Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"HuaZhenting"},"content":"        eventManager.addEvent(event1);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"HuaZhenting"},"content":"        ArrayList\u003cEvent\u003e collisions1 \u003d eventManager.checkCollision(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"HuaZhenting"},"content":"                \"2025-05-10 15:30\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"HuaZhenting"},"content":"                \"2025-05-10 17:30\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"HuaZhenting"},"content":"                \"Conference Room\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"HuaZhenting"},"content":"                eventManager.getEvents(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"HuaZhenting"},"content":"                -1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"HuaZhenting"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"HuaZhenting"},"content":"        assertEquals(1, collisions1.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"HuaZhenting"},"content":"        Event event2 \u003d new Event(\"Project Discussion\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 15:30\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 17:30\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"HuaZhenting"},"content":"                \"Conference Room\", \"Project brainstorming\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"HuaZhenting"},"content":"        eventManager.addEvent(event2);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"HuaZhenting"},"content":"        assertEquals(2, eventManager.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"HuaZhenting"},"content":"        ArrayList\u003cEvent\u003e collisions2 \u003d eventManager.checkCollision(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"HuaZhenting"},"content":"                \"2025-05-10 15:30\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"HuaZhenting"},"content":"                \"2025-05-10 17:30\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"HuaZhenting"},"content":"                \"Home\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"HuaZhenting"},"content":"                eventManager.getEvents(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"HuaZhenting"},"content":"                1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"HuaZhenting"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"HuaZhenting"},"content":"        // Verify no collision detected","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"HuaZhenting"},"content":"        assertEquals(0, collisions2.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"Lydialkx":7,"HuaZhenting":93,"sxkhoo":3,"YanXinyaoo":78}},{"path":"src/test/java/ListAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import command.ListAllCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HuaZhenting"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HuaZhenting"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HuaZhenting"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HuaZhenting"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"class ListAllCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HuaZhenting"},"content":"    private Participant adminUser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    private Participant memberUser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"        ui \u003d new ui.UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/UserListAllTest.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"        Storage storage \u003d new Storage(\"./data/ListAllTest.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HuaZhenting"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HuaZhenting"},"content":"        participantManager \u003d new ParticipantManager(participants, ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HuaZhenting"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HuaZhenting"},"content":"        Event event1 \u003d new Event(\"Team Meeting\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 14:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/10 16:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HuaZhenting"},"content":"                \"Conference Room\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HuaZhenting"},"content":"                \"Weekly Scheduled Team Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HuaZhenting"},"content":"        Event event2 \u003d new Event(\"Concert\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/11 19:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.parse(\"2025/05/11 22:00\", formatter),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"                \"Hall\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HuaZhenting"},"content":"                \"Watch a Concert\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, storage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"        eventManager.addEvent(event1);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HuaZhenting"},"content":"        eventManager.addEvent(event2);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"        adminUser \u003d new Participant(\"Alice\", \"1234\", Participant.AccessLevel.ADMIN);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"        memberUser \u003d new Participant(\"Bob\", \"5678\", Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HuaZhenting"},"content":"        participants.add(adminUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"        participants.add(memberUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"        event1.addParticipant(adminUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"        event2.addParticipant(memberUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"    // Test ListAllCommand for Admin User","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"    void testListAllCommandForAdmin_outputsTwoEvents() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"        participantManager.setCurrentUser(adminUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"        ListAllCommand command \u003d new ListAllCommand(\"priority\", ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HuaZhenting"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HuaZhenting"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HuaZhenting"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HuaZhenting"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HuaZhenting"},"content":"        assertTrue(output.contains(\"Team Meeting\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HuaZhenting"},"content":"        assertTrue(output.contains(\"Concert\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HuaZhenting"},"content":"    // Test that Memeber cannot access ListAllCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"    void testListAllCommandForMember_showsAdminWarning() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HuaZhenting"},"content":"        participantManager.setCurrentUser(memberUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HuaZhenting"},"content":"        ListAllCommand command \u003d new ListAllCommand(\"priority\", ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HuaZhenting"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HuaZhenting"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HuaZhenting"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HuaZhenting"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HuaZhenting"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HuaZhenting"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HuaZhenting"},"content":"        assertTrue(output.contains(\"Sorry, you need to be an ADMIN to access all events.\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"HuaZhenting":97,"yeeern27":1}},{"path":"src/test/java/ListParticipantsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sxkhoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sxkhoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sxkhoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sxkhoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sxkhoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sxkhoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sxkhoo"},"content":"class ListParticipantsTest {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sxkhoo"},"content":"    private Event event;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sxkhoo"},"content":"    private Participant participant1;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sxkhoo"},"content":"    private Participant participant2;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sxkhoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sxkhoo"},"content":"    void setUp() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sxkhoo"},"content":"        // Set up the event and participants for testing","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sxkhoo"},"content":"        event \u003d new Event(\"Team Meeting\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.of(2025, 5, 1, 9, 0),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.of(2025, 5, 1, 10, 0),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sxkhoo"},"content":"                \"Conference Room\",","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sxkhoo"},"content":"                \"Discussion on project status\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sxkhoo"},"content":"        participant1 \u003d new Participant(\"Alice\", \"1234\", Participant.AccessLevel.ADMIN);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sxkhoo"},"content":"        participant2 \u003d new Participant(\"Bob\", \"5678\", Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sxkhoo"},"content":"    void testListParticipantsWhenNoParticipants() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sxkhoo"},"content":"        // Test when no participants have been added to the event","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sxkhoo"},"content":"        event.listParticipants(); // Expect the message \"No participants assigned to this event.\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sxkhoo"},"content":"    void testListParticipantsWithOneParticipant() throws SyncException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sxkhoo"},"content":"        // Add one participant and list participants","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sxkhoo"},"content":"        event.addParticipant(participant1);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sxkhoo"},"content":"        // Capture the output (assuming listParticipants prints output)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sxkhoo"},"content":"        // Here, you might want to use a custom OutputStream or similar approach to capture printed statements.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sxkhoo"},"content":"        event.listParticipants(); // Expect the message \"Participants for event: Team Meeting\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sxkhoo"},"content":"    void testListParticipantsWithMultipleParticipants() throws SyncException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sxkhoo"},"content":"        // Add two participants and list participants","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sxkhoo"},"content":"        event.addParticipant(participant1);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sxkhoo"},"content":"        event.addParticipant(participant2);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sxkhoo"},"content":"        // Verify the list output is correct, assuming it prints the list of participants","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sxkhoo"},"content":"        event.listParticipants(); // Expect both Alice and Bob to be printed as participants","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sxkhoo"},"content":"    void testAddParticipant() throws SyncException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sxkhoo"},"content":"        // Add a participant and ensure they are added successfully","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sxkhoo"},"content":"        event.addParticipant(participant1);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sxkhoo"},"content":"        assertTrue(event.hasParticipant(\"Alice\"), \"Participant should be added to the event.\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sxkhoo"},"content":"    void testAddDuplicateParticipant() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sxkhoo"},"content":"        // Try adding the same participant twice and expect an exception","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sxkhoo"},"content":"        assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sxkhoo"},"content":"            event.addParticipant(participant1);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sxkhoo"},"content":"            event.addParticipant(participant1); // This should throw SyncException","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sxkhoo"},"content":"        });","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sxkhoo"},"content":"    void testRemoveParticipant() throws SyncException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sxkhoo"},"content":"        // Add a participant and then remove them","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sxkhoo"},"content":"        event.addParticipant(participant1);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sxkhoo"},"content":"        boolean removed \u003d event.removeParticipant(\"Alice\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sxkhoo"},"content":"        assertTrue(removed, \"Participant should be removed successfully.\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sxkhoo"},"content":"        assertFalse(event.hasParticipant(\"Alice\"), \"Participant should no longer be in the event.\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sxkhoo"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"sxkhoo":80,"YanXinyaoo":3}},{"path":"src/test/java/ParticipantManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"import event.Event;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import ui.UI;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lydialkx"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lydialkx"},"content":"public class ParticipantManagerTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lydialkx"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lydialkx"},"content":"    private ArrayList\u003cParticipant\u003e participants;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lydialkx"},"content":"    private UI ui;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lydialkx"},"content":"    private UserStorage storage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lydialkx"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lydialkx"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sxkhoo"},"content":"        storage \u003d new UserStorage(\"data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lydialkx"},"content":"        participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"        participantManager \u003d new ParticipantManager(participants, ui, storage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    void testAddAndDeleteUser() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"        Participant p \u003d new Participant(\"Alice\", \"pass\", Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"        participantManager.addNewUser(p);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(1, participantManager.getParticipants().size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"        participantManager.deleteUser(p);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(0, participantManager.getParticipants().size());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lydialkx"},"content":"    void testGetParticipant_success() throws SyncException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lydialkx"},"content":"        Participant p \u003d new Participant(\"Bob\", \"1234\", Participant.AccessLevel.ADMIN);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lydialkx"},"content":"        participantManager.addNewUser(p);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lydialkx"},"content":"        Participant result \u003d participantManager.getParticipant(\"Bob\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"Bob\", result.getName());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lydialkx"},"content":"    void testGetParticipant_notFound() throws SyncException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lydialkx"},"content":"        Participant result \u003d participantManager.getParticipant(\"Ghost\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lydialkx"},"content":"        assertNull(result);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lydialkx"},"content":"    void testAssignParticipant_success() throws SyncException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lydialkx"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 4, 2, 10, 0);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lydialkx"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 4, 2, 11, 0);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lydialkx"},"content":"        Participant p \u003d new Participant(\"Eve\", \"pwd\", Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lydialkx"},"content":"        p.addAvailableTime(start.minusHours(1), end.plusHours(1));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lydialkx"},"content":"        participantManager.addNewUser(p);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lydialkx"},"content":"        Event event \u003d new Event(\"Meeting\", start, end, \"Room 1\", \"Team Sync\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lydialkx"},"content":"        boolean assigned \u003d participantManager.assignParticipant(event, p);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lydialkx"},"content":"        assertTrue(assigned);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Lydialkx"},"content":"    void testCheckParticipantAvailability_true() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Lydialkx"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 4, 2, 10, 0);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Lydialkx"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 4, 2, 11, 0);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Lydialkx"},"content":"        Participant p \u003d new Participant(\"Carol\", \"pass\", Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Lydialkx"},"content":"        p.addAvailableTime(start.minusHours(1), end.plusHours(1));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Lydialkx"},"content":"        Event event \u003d new Event(\"Event\", start, end, \"Room A\", \"Desc\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lydialkx"},"content":"        assertTrue(participantManager.checkParticipantAvailability(event, p));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Lydialkx"},"content":"    void testCheckParticipantAvailability_false() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Lydialkx"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 4, 2, 10, 0);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Lydialkx"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 4, 2, 11, 0);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Lydialkx"},"content":"        Participant p \u003d new Participant(\"Dave\", \"pass\", Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Lydialkx"},"content":"        p.addAvailableTime(start.minusHours(2), start.minusHours(1));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Lydialkx"},"content":"        Event event \u003d new Event(\"Clash\", start, end, \"Room B\", \"Blocked\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Lydialkx"},"content":"        assertFalse(participantManager.checkParticipantAvailability(event, p));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"    void testLogout() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Lydialkx"},"content":"        Participant p \u003d new Participant(\"Frank\", \"pass\", Participant.AccessLevel.ADMIN);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Lydialkx"},"content":"        participantManager.addNewUser(p);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Lydialkx"},"content":"        participantManager.logout(); // nothing to logout","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Lydialkx"},"content":"        assertNull(participantManager.getCurrentUser());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Lydialkx":96,"sxkhoo":1,"YanXinyaoo":6}},{"path":"src/test/java/ParticipantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sxkhoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sxkhoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sxkhoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sxkhoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sxkhoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sxkhoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sxkhoo"},"content":"import java.util.List;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sxkhoo"},"content":"class ParticipantTest {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sxkhoo"},"content":"    private Participant participant;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sxkhoo"},"content":"    private AvailabilitySlot slot1;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sxkhoo"},"content":"    private AvailabilitySlot slot2;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sxkhoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sxkhoo"},"content":"    void setUp() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"        participant \u003d new Participant(\"Alice\", \"1234\", Participant.AccessLevel.ADMIN);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sxkhoo"},"content":"        slot1 \u003d new AvailabilitySlot(","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.of(2025, 5, 1, 9, 0),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.of(2025, 5, 1, 10, 0)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sxkhoo"},"content":"        slot2 \u003d new AvailabilitySlot(","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.of(2025, 5, 2, 14, 0),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.of(2025, 5, 2, 15, 0)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sxkhoo"},"content":"    void testParticipantCreation() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(\"Alice\", participant.getName());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(Participant.AccessLevel.ADMIN, participant.getAccessLevel());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sxkhoo"},"content":"        assertTrue(participant.getAvailableTimes().isEmpty());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sxkhoo"},"content":"    void testSetAccessLevel() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sxkhoo"},"content":"        participant.setAccessLevel(Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(Participant.AccessLevel.MEMBER, participant.getAccessLevel());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sxkhoo"},"content":"    void testSetAndGetAvailabilitySlots() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sxkhoo"},"content":"        List\u003cAvailabilitySlot\u003e availabilityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sxkhoo"},"content":"        availabilityList.add(slot1);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sxkhoo"},"content":"        availabilityList.add(slot2);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sxkhoo"},"content":"        participant.setAvailableTimes(availabilityList);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sxkhoo"},"content":"        List\u003cAvailabilitySlot\u003e retrievedSlots \u003d participant.getAvailableTimes();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(2, retrievedSlots.size());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(slot1.getStartTime(), retrievedSlots.get(0).getStartTime());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(slot2.getEndTime(), retrievedSlots.get(1).getEndTime());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sxkhoo"},"content":"    void testToStringOutput() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sxkhoo"},"content":"        List\u003cAvailabilitySlot\u003e availabilityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sxkhoo"},"content":"        availabilityList.add(slot1);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sxkhoo"},"content":"        participant.setAvailableTimes(availabilityList);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sxkhoo"},"content":"        String output \u003d participant.toString();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sxkhoo"},"content":"        assertTrue(output.contains(\"Participant: Alice\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sxkhoo"},"content":"    void testAssignEventTimeValidSlot() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sxkhoo"},"content":"        participant.addAvailableTime(slot1.getStartTime(), slot1.getEndTime());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sxkhoo"},"content":"        boolean assigned \u003d participant.assignEventTime(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.of(2025, 5, 1, 9, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.of(2025, 5, 1, 10, 0)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sxkhoo"},"content":"        assertTrue(assigned, \"Participant should be assigned if available.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(0, participant.getAvailableTimes().size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sxkhoo"},"content":"    void testAssignEventTimeNoOverlap() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sxkhoo"},"content":"        participant.addAvailableTime(slot1.getStartTime(), slot1.getEndTime());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sxkhoo"},"content":"        boolean assigned \u003d participant.assignEventTime(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.of(2025, 5, 1, 11, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sxkhoo"},"content":"                LocalDateTime.of(2025, 5, 1, 12, 0)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sxkhoo"},"content":"        );","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sxkhoo"},"content":"        assertFalse(assigned, \"Participant should not be assigned if unavailable.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(1, participant.getAvailableTimes().size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"sxkhoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"sxkhoo"},"content":"    void testEqualsAndHashCode() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"sxkhoo"},"content":"        Participant p1 \u003d new Participant(\"Alice\", \"pass\", Participant.AccessLevel.ADMIN);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yeeern27"},"content":"        Participant p2 \u003d new Participant(\"alice\", \"different\", Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yeeern27"},"content":"        // same name, different case","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"sxkhoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(p1, p2);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sxkhoo"},"content":"        assertEquals(p1.hashCode(), p2.hashCode());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"sxkhoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"sxkhoo"},"content":"}","lastModifiedDate":"2025-03-30","isFullCredit":false}],"authorContributionMap":{"Lydialkx":1,"sxkhoo":99,"YanXinyaoo":1,"yeeern27":5}},{"path":"src/test/java/PriorityFilterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HuaZhenting"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HuaZhenting"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HuaZhenting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HuaZhenting"},"content":"import event.Event;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HuaZhenting"},"content":"import event.EventManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HuaZhenting"},"content":"import label.Priority;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HuaZhenting"},"content":"import command.FilterCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HuaZhenting"},"content":"import ui.UI;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HuaZhenting"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HuaZhenting"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HuaZhenting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HuaZhenting"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HuaZhenting"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HuaZhenting"},"content":"class PriorityFilterTest {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HuaZhenting"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lydialkx"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HuaZhenting"},"content":"    private UI ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HuaZhenting"},"content":"    private ArrayList\u003cEvent\u003e testEvents;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HuaZhenting"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HuaZhenting"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HuaZhenting"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HuaZhenting"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        Storage storage \u003d new Storage(\"./data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, storage, userStorage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HuaZhenting"},"content":"        Priority.clearPriorities();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"HIGH\\nMEDIUM\\nLOW\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HuaZhenting"},"content":"        Event low \u003d  new Event(\"Low Priority\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 1, 10, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.of(2025, 4, 1, 12, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HuaZhenting"},"content":"                \"Home\", \"Chores\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HuaZhenting"},"content":"        Event middle \u003d new Event(\"Medium Priority\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 2, 14, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HuaZhenting"},"content":"                LocalDateTime.of(2025, 4, 2, 16, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HuaZhenting"},"content":"                \"Office\", \"Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HuaZhenting"},"content":"        Event high \u003d new Event(\"High Priority\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lydialkx"},"content":"                 LocalDateTime.of(2025, 4, 3, 9, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HuaZhenting"},"content":"                 LocalDateTime.of(2025, 4, 3, 10, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HuaZhenting"},"content":"                 \"Remote\", \"Deadline\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HuaZhenting"},"content":"        eventManager.addEvent(low);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HuaZhenting"},"content":"        eventManager.addEvent(middle);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HuaZhenting"},"content":"        eventManager.addEvent(high);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HuaZhenting"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HuaZhenting"},"content":"    void testFilterLowToMedium() throws SyncException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lydialkx"},"content":"        FilterCommand cmd \u003d new FilterCommand(1, 2);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lydialkx"},"content":"        cmd.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lydialkx"},"content":"        String out \u003d outputStreamCaptor.toString();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lydialkx"},"content":"        assertTrue(out.contains(\"Low Priority\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lydialkx"},"content":"        assertTrue(out.contains(\"Medium Priority\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HuaZhenting"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HuaZhenting"},"content":"    void testFilterHighOnly() throws SyncException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Lydialkx"},"content":"        FilterCommand cmd \u003d new FilterCommand(3, 3);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Lydialkx"},"content":"        cmd.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HuaZhenting"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lydialkx"},"content":"        String out \u003d outputStreamCaptor.toString();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lydialkx"},"content":"        assertTrue(out.contains(\"High Priority\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HuaZhenting"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HuaZhenting"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Lydialkx":25,"HuaZhenting":50,"YanXinyaoo":8}},{"path":"src/test/java/PriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import label.Priority;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lydialkx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lydialkx"},"content":"import java.util.List;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"public class PriorityTest {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lydialkx"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lydialkx"},"content":"        Priority.clearPriorities();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lydialkx"},"content":"    @AfterEach","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lydialkx"},"content":"    public void tearDown() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lydialkx"},"content":"        Priority.clearPriorities();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"    public void testIsValid() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lydialkx"},"content":"        assertTrue(Priority.isValid(\"HIGH\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lydialkx"},"content":"        assertTrue(Priority.isValid(\"medium\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"        assertTrue(Priority.isValid(\"low\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lydialkx"},"content":"        assertFalse(Priority.isValid(\"urgent\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lydialkx"},"content":"        assertFalse(Priority.isValid(\"\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"        assertFalse(Priority.isValid(null));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"    public void testNormalize() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"HIGH\", Priority.normalize(\"high\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"LOW\", Priority.normalize(\"Low\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"MEDIUM\", Priority.normalize(\" medium \"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"    public void testGetValue() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(3, Priority.getValue(\"HIGH\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(2, Priority.getValue(\"MEDIUM\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(1, Priority.getValue(\"LOW\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Lydialkx"},"content":"    public void testAddAndGetPriority() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Lydialkx"},"content":"        Priority.addPriority(\"HIGH\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Lydialkx"},"content":"        Priority.addPriority(\"LOW\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"HIGH\", Priority.getPriority(0));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"LOW\", Priority.getPriority(1));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lydialkx"},"content":"    public void testUpdatePriority() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Lydialkx"},"content":"        Priority.addPriority(\"LOW\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Lydialkx"},"content":"        Priority.updatePriority(0, \"MEDIUM\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"MEDIUM\", Priority.getPriority(0));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Lydialkx"},"content":"    public void testRemovePriority() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Lydialkx"},"content":"        Priority.addPriority(\"HIGH\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Lydialkx"},"content":"        Priority.addPriority(\"LOW\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Lydialkx"},"content":"        Priority.removePriority(0);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"LOW\", Priority.getPriority(0));  // LOW should now be at index 0","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Lydialkx"},"content":"    public void testClearPriorities() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Lydialkx"},"content":"        Priority.addPriority(\"HIGH\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Lydialkx"},"content":"        Priority.addPriority(\"LOW\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Lydialkx"},"content":"        Priority.clearPriorities();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(0, Priority.getAllPriorities().size());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Lydialkx"},"content":"    public void testLoadPriorities() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Lydialkx"},"content":"        List\u003cString\u003e saved \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Lydialkx"},"content":"        saved.add(\"HIGH\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Lydialkx"},"content":"        saved.add(\"MEDIUM\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Lydialkx"},"content":"        Priority.loadFromStorage(saved);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"HIGH\", Priority.getPriority(0));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"MEDIUM\", Priority.getPriority(1));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Lydialkx"},"content":"    public void testGetPriorityOutOfBounds() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"LOW\", Priority.getPriority(0));  // default fallback","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"Lydialkx":99}},{"path":"src/test/java/SortByEndTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"import event.Event;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"import sort.SortByEndTime;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lydialkx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lydialkx"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"class SortByEndTimeTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lydialkx"},"content":"    void testSortByEndTimeThenPriority() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"        List\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lydialkx"},"content":"        List\u003cString\u003e priorities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"        events.add(new Event(\"Event A\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 1, 10, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 2, 12, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lydialkx"},"content":"                \"Room A\", \"Description A\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lydialkx"},"content":"        priorities.add(\"MEDIUM\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lydialkx"},"content":"        events.add(new Event(\"Event B\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 1, 9, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 1, 11, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lydialkx"},"content":"                \"Room B\", \"Description B\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"        priorities.add(\"MEDIUM\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lydialkx"},"content":"        events.add(new Event(\"Event C\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 1, 8, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 1, 11, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"                \"Room C\", \"Description C\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"        priorities.add(\"HIGH\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"        new SortByEndTime().sort(events, priorities);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"Event C\", events.get(0).getName());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"Event B\", events.get(1).getName());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"Event A\", events.get(2).getName());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Lydialkx":42}},{"path":"src/test/java/SortByPriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"import sort.SortByPriority;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"import event.Event;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lydialkx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lydialkx"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"class SortByPriorityTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lydialkx"},"content":"    void testSortByPriorityThenEndTime() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"        List\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lydialkx"},"content":"        List\u003cString\u003e priorities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"        events.add(new Event(\"Event A\", LocalDateTime.of(2025, 5, 10, 12, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 5, 10, 13, 0), \"Loc\", \"Desc\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lydialkx"},"content":"        priorities.add(\"LOW\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lydialkx"},"content":"        events.add(new Event(\"Event B\", LocalDateTime.of(2025, 5, 10, 12, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 5, 10, 14, 0), \"Loc\", \"Desc\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lydialkx"},"content":"        priorities.add(\"HIGH\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lydialkx"},"content":"        events.add(new Event(\"Event C\", LocalDateTime.of(2025, 5, 10, 11, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 5, 10, 13, 0), \"Loc\", \"Desc\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"        priorities.add(\"MEDIUM\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lydialkx"},"content":"        new SortByPriority().sort(events, priorities);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"Event B\", events.get(0).getName()); // HIGH","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"Event C\", events.get(1).getName()); // MEDIUM","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"Event A\", events.get(2).getName()); // LOW","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Lydialkx":36}},{"path":"src/test/java/SortByStartTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Lydialkx"},"content":"import event.Event;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Lydialkx"},"content":"import sort.SortByStartTime;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Lydialkx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Lydialkx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Lydialkx"},"content":"import java.util.List;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Lydialkx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Lydialkx"},"content":"class SortByStartTimeTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Lydialkx"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Lydialkx"},"content":"    void testSortByPriorityThenEndTime() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Lydialkx"},"content":"        List\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Lydialkx"},"content":"        List\u003cString\u003e priorities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Lydialkx"},"content":"        events.add(new Event(\"Event A\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 2, 10, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 2, 12, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Lydialkx"},"content":"                \"Room A\", \"Description A\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Lydialkx"},"content":"        priorities.add(\"MEDIUM\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Lydialkx"},"content":"        events.add(new Event(\"Event B\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 1, 10, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 1, 12, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Lydialkx"},"content":"                \"Room B\", \"Description B\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Lydialkx"},"content":"        priorities.add(\"MEDIUM\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Lydialkx"},"content":"        events.add(new Event(\"Event C\",","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 1, 10, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Lydialkx"},"content":"                LocalDateTime.of(2025, 4, 1, 11, 0),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"                \"Room C\", \"Description C\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"        priorities.add(\"HIGH\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"        new SortByStartTime().sort(events, priorities);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"Event C\", events.get(0).getName());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"Event B\", events.get(1).getName());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Lydialkx"},"content":"        assertEquals(\"Event A\", events.get(2).getName());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Lydialkx"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Lydialkx"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"Lydialkx":42}},{"path":"src/test/java/command/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"class AddEventCommandTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private Event event;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private AddEventCommand command;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private Storage eventStorage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cAvailabilitySlot\u003e availableTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.add(new AvailabilitySlot(LocalDateTime.of(2020, 5, 10, 14, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 16, 0)));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        Participant testUser \u003d new Participant(\"john_doe\", \"password123\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"                Participant.AccessLevel.ADMIN, availableTimes);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(testUser);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        event \u003d new Event(\"Test Event\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 14, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 16, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"                \"Lab\", \"Test Desc\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        command \u003d new AddEventCommand(event);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(1, eventManager.size());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"    void testGetEvent() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(event, command.getEvent());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecuteThrowsSyncException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        Event invalidEvent \u003d new Event(\"Invalid Event\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 16, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 14, 0),  // 结束时间 \u003c 开始时间","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"                \"Lab\", \"Invalid Desc\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        AddEventCommand invalidCommand \u003d new AddEventCommand(invalidEvent);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        assertThrows(SyncException.class, () -\u003e invalidCommand.execute(eventManager, ui, participantManager));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":78}},{"path":"src/test/java/command/AddParticipantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"class AddParticipantCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant admin;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cAvailabilitySlot\u003e availableTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.add(new AvailabilitySlot(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 10, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 14, 0)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        ));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        admin \u003d new Participant(\"admin\", \"pw\", Participant.AccessLevel.ADMIN, availableTimes);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"                \"Team Meeting\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 11, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 13, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"                \"na\", \"na\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute_addExistingParticipantSuccessfully() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cAvailabilitySlot\u003e slots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        slots.add(new AvailabilitySlot(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 10, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 14, 0)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        ));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        Participant bob \u003d new Participant(\"Bob\", \"pw\", Participant.AccessLevel.MEMBER, slots);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(bob);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        AddParticipantCommand command \u003d new AddParticipantCommand(0, \"Bob\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"                ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d eventManager.getEvent(0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(event.getParticipants().contains(bob), \"Participant should be added to the event\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute_addNonexistentParticipantCreatesNew() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(\"Y\\nNewGuy\\npw\\n1\\n1\\n2025-04-09 10:00\\n2025-04-09 14:00\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"        AddParticipantCommand command \u003d new AddParticipantCommand(0, \"NewGuy\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"                ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        Participant created \u003d participantManager.getParticipant(\"NewGuy\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(created);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"NewGuy\", created.getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d eventManager.getEvent(0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(event.getParticipants().contains(created));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute_addUnavailableParticipant() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cAvailabilitySlot\u003e slots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"        slots.add(new AvailabilitySlot(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 16, 0)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"        ));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        Participant eve \u003d new Participant(\"Eve\", \"pw\", Participant.AccessLevel.MEMBER, slots);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(eve);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"        AddParticipantCommand command \u003d new AddParticipantCommand(0, \"Eve\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"                ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d eventManager.getEvent(0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"        assertFalse(event.getParticipants().contains(eve));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"    private void simulateInput(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner scanner \u003d new Scanner(in);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(scanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":118}},{"path":"src/test/java/command/CommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"class CommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"    void testIsExitDefault() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d new Command() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"            @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yeeern27"},"content":"            public void execute(EventManager events, UI ui, ParticipantManager participantManager)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yeeern27"},"content":"                    throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"        };","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"        assertFalse(command.isExit(), \"Default isExit() should return false\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":22,"yeeern27":2}},{"path":"src/test/java/command/CreateUserCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"class CreateUserCommandTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    private CreateUserCommand createUserCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant participant;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private UserStorage userStorage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        participant \u003d new Participant(\"john_doe\", \"password123\", Participant.AccessLevel.MEMBER, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        createUserCommand \u003d new CreateUserCommand(participant);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecuteSuccessfullyAddsNewUser() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        createUserCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(participantManager.getParticipants().contains(participant),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"                \"Participant should be added to the ParticipantManager.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecuteThrowsSyncExceptionWhenAddNewUserFails() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(participant);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException thrown \u003d assertThrows(SyncException.class, () -\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"                createUserCommand.execute(eventManager, ui, participantManager));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"User already exists.\", thrown.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":58}},{"path":"src/test/java/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"class DeleteCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private UserStorage userStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private Storage eventStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        InputStream testInput \u003d new ByteArrayInputStream(\"\".getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(new Scanner(testInput));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, new UserStorage(\"./data/test-users.txt\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    void testDeleteEventSuccessfully() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Event\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 13, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"                \"Lab\", \"na\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(\"yes\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        DeleteCommand command \u003d new DeleteCommand(0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(0, eventManager.getEvents().size(), \"Event should be deleted\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"    void testCancelDeletion() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Event\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 13, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"                \"Lab\", \"na\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(\"no\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        DeleteCommand command \u003d new DeleteCommand(0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(1, eventManager.getEvents().size(), \"Event should NOT be deleted\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"    void testNoEventsToDelete() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(\"yes\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        DeleteCommand command \u003d new DeleteCommand(0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException e \u003d assertThrows(SyncException.class,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"                () -\u003e command.execute(eventManager, ui, participantManager));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Invalid event index. Please enter a valid index.\", e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"    void testInvalidNegativeIndex() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"        DeleteCommand command \u003d new DeleteCommand(-1);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException e \u003d assertThrows(SyncException.class,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"                () -\u003e command.execute(eventManager, ui, participantManager));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Invalid event index. Please enter a valid index.\", e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"    void testIndexOutOfBounds() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Event\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 13, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"                \"Lab\", \"na\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"        DeleteCommand command \u003d new DeleteCommand(2); // Only 1 event at index 0","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException e \u003d assertThrows(SyncException.class,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"                () -\u003e command.execute(eventManager, ui, participantManager));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Invalid event index. Please enter a valid index.\", e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"    private void simulateInput(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"        InputStream inputStream \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":110}},{"path":"src/test/java/command/DuplicateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"public class DuplicateCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private UserStorage userStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private Storage eventStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    private Event originalEvent;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        InputStream testInput \u003d new ByteArrayInputStream(\"\".getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(new Scanner(testInput));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        originalEvent \u003d new Event(\"Event\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 13, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"                \"Lab\", \"na\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        events.add(originalEvent);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(events, ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"                new UserStorage(\"./data/test-users.txt\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"    public void testDuplicateCommandCreatesNewEvent() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        String newName \u003d \"Duplicated Event\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        DuplicateCommand command \u003d new DuplicateCommand(originalEvent, newName);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cEvent\u003e events \u003d eventManager.getEvents();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(2, events.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        Event duplicated \u003d events.get(1);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(newName, duplicated.getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(originalEvent.getStartTime(), duplicated.getStartTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(originalEvent.getEndTime(), duplicated.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":66}},{"path":"src/test/java/command/EditEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"public class EditEventCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant admin;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant member;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    private Event originalEvent;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        originalEvent \u003d new Event(\"Event\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 13, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"                \"Lab\", \"Description\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        events.add(originalEvent);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(events, ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cAvailabilitySlot\u003e availableTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.add(new AvailabilitySlot(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 10, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 14, 0)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        ));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.add(new AvailabilitySlot(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 12, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 16, 0)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        ));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        admin \u003d new Participant(\"admin\", \"pw\", Participant.AccessLevel.ADMIN, availableTimes);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        member \u003d new Participant(\"member\", \"pw\", Participant.AccessLevel.MEMBER, availableTimes);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        originalEvent.setParticipants(participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandAdminRole() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"1\\nNew Event Name\\n6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"New Event Name\", originalEvent.getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Event editing completed.\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandNoAdminRole() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(member);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"            command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"You are not currently administrator.\", exception.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandEditName() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"1\\nNew Event Name\\n6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"New Event Name\", originalEvent.getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandEditStartTime() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput\u003d \"2\\n2025-05-10 12:00\\n6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yeeern27"},"content":"        assertEquals(LocalDateTime.of(2025, 5, 10, 12, 0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yeeern27"},"content":"                originalEvent.getStartTime());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandEditEndTime() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"3\\n2025-05-10 15:00\\n6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yeeern27"},"content":"        assertEquals(LocalDateTime.of(2025, 5, 10, 15, 0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yeeern27"},"content":"                originalEvent.getEndTime());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandEditLocation() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"4\\nNew Location\\n6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"New Location\", originalEvent.getLocation());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandEditDescription() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"5\\nNew Description\\n6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"New Description\", originalEvent.getDescription());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandEditCancel() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Event\", originalEvent.getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Event editing completed.\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandInvalidChoice() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"invalid\\n6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Event editing completed.\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandOutOfRangeChoice() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"7\\n6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Event editing completed.\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandInvalidStartTime() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"2\\ninvalid format\\n2025-05-10 12:30\\n6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Invalid format\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandCancelStartTimeEdit() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime originalStartTime \u003d originalEvent.getStartTime();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(originalStartTime, originalEvent.getStartTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandCancelEndTimeEdit() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime originalEndTime \u003d originalEvent.getEndTime();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(originalEndTime, originalEvent.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandStartTimeAfterEndTime() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"2\\n2025-05-10 15:00\\n2025-05-10 12:30\\n6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"yeeern27"},"content":"        assertEquals(LocalDateTime.of(2025, 5, 10, 12, 30),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"yeeern27"},"content":"                originalEvent.getStartTime());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandEndTimeBeforeStartTime() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"3\\n2025-05-10 12:00\\n2025-05-10 15:30\\n6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"yeeern27"},"content":"        assertEquals(LocalDateTime.of(2025, 5, 10, 15, 30),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"yeeern27"},"content":"                originalEvent.getEndTime());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandParticipantConflictStartTime() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cAvailabilitySlot\u003e limitedAvailability \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"YanXinyaoo"},"content":"        limitedAvailability.add(new AvailabilitySlot(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 13, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 14, 0)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"YanXinyaoo"},"content":"        ));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participantWithLimitedAvailability \u003d new Participant(\"limited\", \"pw\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"YanXinyaoo"},"content":"                Participant.AccessLevel.MEMBER, limitedAvailability);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participantWithLimitedAvailability);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"YanXinyaoo"},"content":"        originalEvent.setParticipants(participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"yeeern27"},"content":"        assertEquals(LocalDateTime.of(2025, 5, 10, 13, 0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"yeeern27"},"content":"                originalEvent.getStartTime());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandParticipantConflictEndTime() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cAvailabilitySlot\u003e limitedAvailability \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"YanXinyaoo"},"content":"        limitedAvailability.add(new AvailabilitySlot(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 13, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 5, 10, 14, 0)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"YanXinyaoo"},"content":"        ));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participantWithLimitedAvailability \u003d new Participant(\"limited\", \"pw\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"YanXinyaoo"},"content":"                Participant.AccessLevel.MEMBER, limitedAvailability);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participantWithLimitedAvailability);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"YanXinyaoo"},"content":"        originalEvent.setParticipants(participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"yeeern27"},"content":"        assertEquals(LocalDateTime.of(2025, 5, 10, 14, 0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"yeeern27"},"content":"                originalEvent.getEndTime());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandCancelLocationEdit() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Lab\", originalEvent.getLocation());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"yeeern27"},"content":"    public void testEditEventCommandCancelDescriptionEdit() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"6\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(simulatedInput);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"YanXinyaoo"},"content":"        EditEventCommand command \u003d new EditEventCommand(0, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Description\", originalEvent.getDescription());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"YanXinyaoo"},"content":"    private void simulateInput(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":349,"yeeern27":31}},{"path":"src/test/java/command/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import label.Priority;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"public class FilterCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    private UserStorage userStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    private Storage eventStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        eventStorage \u003d new Storage(\"./data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(events, ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yeeern27"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        Priority.clearPriorities();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yeeern27"},"content":"    public void testFilterCommandValidPriorityRange() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"HIGH\\nMEDIUM\\nLOW\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2020, 5, 10, 14, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2020, 5, 10, 16, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yeeern27"},"content":"        eventManager.addEvent(new Event(\"Event 1\", startTime, endTime, \"Location 1\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yeeern27"},"content":"                \"Description 1\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yeeern27"},"content":"        eventManager.addEvent(new Event(\"Event 2\", startTime, endTime, \"Location 2\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yeeern27"},"content":"                \"Description 2\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yeeern27"},"content":"        eventManager.addEvent(new Event(\"Event 3\", startTime, endTime, \"Location 3\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yeeern27"},"content":"                \"Description 3\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        FilterCommand command \u003d new FilterCommand(1, 1);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        String output \u003d outputStreamCaptor.toString();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(output.contains(\"Event 2\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(output.contains(\"Event 3\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"    public void testAddEventWithPriority() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"MEDIUM\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2020, 5, 10, 14, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2020, 5, 10, 16, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yeeern27"},"content":"        Event newEvent \u003d new Event(\"New Event\", startTime, endTime, \"New Location\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yeeern27"},"content":"                \"New Description\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(newEvent);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"MEDIUM\", Priority.getPriority(eventManager.size() - 1));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":83,"yeeern27":10}},{"path":"src/test/java/command/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"class FindCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant admin;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant regularUser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private Event teamMeeting;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    private Event conference;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    private TestUI testUI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    private static class TestUI extends UI {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        private ArrayList\u003cEvent\u003e lastPrintedEvents;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        public void printMatchingEvents(ArrayList\u003cEvent\u003e events) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"            this.lastPrintedEvents \u003d new ArrayList\u003c\u003e(events);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        public ArrayList\u003cEvent\u003e getLastPrintedEvents() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"            return lastPrintedEvents;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        testUI \u003d new TestUI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d testUI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        admin \u003d new Participant(\"admin\", \"pw\", Participant.AccessLevel.ADMIN, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        regularUser \u003d new Participant(\"user\", \"pw\", Participant.AccessLevel.MEMBER, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(regularUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        teamMeeting \u003d new Event(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"                \"Team Meeting\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 10, 10, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 10, 12, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"                \"Conference Room\", \"Weekly team sync-up discussion\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        conference \u003d new Event(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"                \"Annual Conference\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 15, 9, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 15, 17, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"                \"Convention Center\", \"Tech industry annual conference\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(teamMeeting);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(conference);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"        teamMeeting.addParticipant(regularUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute_userNotLoggedIn() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        FindCommand findCommand \u003d new FindCommand(\"Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        Exception exception \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"            findCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(exception.getMessage().contains(\"You are not logged in\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute_adminUserFindsEvents() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"        FindCommand findCommand \u003d new FindCommand(\"Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        findCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e results \u003d testUI.getLastPrintedEvents();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(1, results.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Team Meeting\", results.get(0).getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute_regularUserFindsOwnEvents() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(regularUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"        FindCommand findCommand \u003d new FindCommand(\"Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"        findCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e results \u003d testUI.getLastPrintedEvents();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(1, results.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Team Meeting\", results.get(0).getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute_findByDescription() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"        FindCommand findCommand \u003d new FindCommand(\"sync\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"        findCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e results \u003d testUI.getLastPrintedEvents();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(1, results.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Team Meeting\", results.get(0).getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(results.get(0).getDescription().contains(\"sync\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute_findByIndustry() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"        FindCommand findCommand \u003d new FindCommand(\"tech\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"        findCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e results \u003d testUI.getLastPrintedEvents();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(1, results.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Annual Conference\", results.get(0).getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(results.get(0).getDescription().contains(\"Tech\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute_noMatchingEvents() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"        FindCommand findCommand \u003d new FindCommand(\"Nonexistent\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"        findCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e results \u003d testUI.getLastPrintedEvents();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(0, results.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute_caseInsensitiveSearch() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YanXinyaoo"},"content":"        FindCommand findCommand \u003d new FindCommand(\"mEeTiNg\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"        findCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e results \u003d testUI.getLastPrintedEvents();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(1, results.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Team Meeting\", results.get(0).getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecute_multipleMatchingEvents() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YanXinyaoo"},"content":"        Event anotherMeeting \u003d new Event(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YanXinyaoo"},"content":"                \"Department Meeting\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 12, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 12, 16, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YanXinyaoo"},"content":"                \"Meeting Room 2\", \"Department heads meeting\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YanXinyaoo"},"content":"        );","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(anotherMeeting);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YanXinyaoo"},"content":"        FindCommand findCommand \u003d new FindCommand(\"Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YanXinyaoo"},"content":"        findCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e results \u003d testUI.getLastPrintedEvents();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(2, results.size());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YanXinyaoo"},"content":"        boolean foundTeamMeeting \u003d false;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"        boolean foundDepartmentMeeting \u003d false;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YanXinyaoo"},"content":"        for (Event event : results) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YanXinyaoo"},"content":"            if (event.getName().equals(\"Team Meeting\")) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YanXinyaoo"},"content":"                foundTeamMeeting \u003d true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YanXinyaoo"},"content":"            } else if (event.getName().equals(\"Department Meeting\")) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YanXinyaoo"},"content":"                foundDepartmentMeeting \u003d true;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(foundTeamMeeting);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(foundDepartmentMeeting);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":198}},{"path":"src/test/java/command/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"class HelpCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yeeern27"},"content":"    void testExecuteShowsMenu() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        HelpCommand helpCommand \u003d new HelpCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        helpCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        String output \u003d outputStreamCaptor.toString();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(output.contains(\"MENU\"), \"The menu should be shown.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":45,"yeeern27":1}},{"path":"src/test/java/command/ListAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"class ListAllCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    private ArrayList\u003cEvent\u003e events;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"HIGH\\nMEDIUM\\nLOW\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime1 \u003d LocalDateTime.of(2023, 5, 1, 10, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime1 \u003d LocalDateTime.of(2023, 5, 1, 12, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(new Event(\"Event 1\", startTime1, endTime1, \"Location 1\", \"Description 1\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime2 \u003d LocalDateTime.of(2023, 6, 1, 14, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime2 \u003d LocalDateTime.of(2023, 6, 1, 16, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(new Event(\"Event 2\", startTime2, endTime2, \"Location 2\", \"Description 2\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        Participant admin \u003d new Participant(\"admin\", \"password\", Participant.AccessLevel.ADMIN);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yeeern27"},"content":"    void testExecuteAdminUser() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        ListAllCommand listAllCommand \u003d new ListAllCommand(\"start\", ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        listAllCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        String output \u003d outputStreamCaptor.toString();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(output.contains(\"Event 1\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(output.contains(\"Event 2\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yeeern27"},"content":"    void testExecuteNoUserLoggedIn() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"no\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        ListAllCommand listAllCommand \u003d new ListAllCommand(\"start\", ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"        assertThrows(SyncException.class, () -\u003e listAllCommand.execute(eventManager, ui, participantManager));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yeeern27"},"content":"    void testExecuteNonAdminUser() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        Participant nonAdmin \u003d new Participant(\"user\", \"password\", Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(nonAdmin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        ListAllCommand listAllCommand \u003d new ListAllCommand(\"start\", ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"        listAllCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        String output \u003d outputStreamCaptor.toString();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(output.contains(\"Sorry, you need to be an ADMIN to access all events\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yeeern27"},"content":"    void testExecuteEmptyEventList() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.setEvents(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        ListAllCommand listAllCommand \u003d new ListAllCommand(\"start\", ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"        listAllCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"        String output \u003d outputStreamCaptor.toString();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(output.contains(\"No events in the system\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yeeern27"},"content":"    void testExecuteInvalidSortType() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"        ListAllCommand listAllCommand \u003d new ListAllCommand(\"invalid\", ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"        listAllCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"        String output \u003d outputStreamCaptor.toString();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(output.contains(\"Unknown sort type. Showing unsorted list.\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":112,"yeeern27":5}},{"path":"src/test/java/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"class ListCommandTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private ListCommand listCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant participant;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    private PrintStream originalOut;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        participant \u003d new Participant(\"john_doe\", \"password123\", Participant.AccessLevel.MEMBER, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cAvailabilitySlot\u003e availableTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.add(new AvailabilitySlot(LocalDateTime.of(2020, 5, 10, 14, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 16, 0)));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        participant \u003d new Participant(\"john_doe\", \"password123\", Participant.AccessLevel.ADMIN, availableTimes);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(participants, ui, null);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(participant);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        listCommand \u003d new ListCommand(\"priority\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        originalOut \u003d System.out;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecuteWithNoUserLoggedIn() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(participant);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.logout();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"no\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"        listCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStream.toString().contains(\"No user logged in.\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecuteWithNoEvents() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        ListCommand listCommandNoEvents \u003d new ListCommand(\"priority\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        listCommandNoEvents.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStream.toString().contains(\"No events assigned to you.\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecuteWithEvents() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Event1\", LocalDateTime.now(), LocalDateTime.now().plusHours(1), \"meeting room\", \"NA\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        event.addParticipant(participant);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"        listCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStream.toString().contains(\"Event1\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecuteWithInvalidSortType() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(participant);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"        ListCommand invalidSortCommand \u003d new ListCommand(\"invalid\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Test Event\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 14, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 16, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"                \"Lab\", \"Test Desc\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        event.addParticipant(participant);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"        invalidSortCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStream.toString().contains(\"Unknown sort type.\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"    void testExecuteWithEmptyEventList() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"        ListCommand emptyEventListCommand \u003d new ListCommand(\"start\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"        emptyEventListCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStream.toString().contains(\"No events assigned to you.\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":115}},{"path":"src/test/java/command/ListParticipantsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"public class ListParticipantsCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime1 \u003d LocalDateTime.of(2023, 5, 1, 10, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime1 \u003d LocalDateTime.of(2023, 5, 1, 12, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Event 1\", startTime1, endTime1, \"Location 1\", \"Description 1\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant1 \u003d new Participant(\"Alice\", \"password\", Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant2 \u003d new Participant(\"Bob\", \"password\", Participant.AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        event.addParticipant(participant1);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        event.addParticipant(participant2);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yeeern27"},"content":"    public void testExecuteListParticipants() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        ListParticipantsCommand command \u003d new ListParticipantsCommand(0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        String output \u003d outputStreamCaptor.toString().trim();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(output.contains(\"Alice\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(output.contains(\"Bob\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yeeern27"},"content":"    public void testExecuteInvalidEventIndex() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        ListParticipantsCommand command \u003d new ListParticipantsCommand(999);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException thrown \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"            command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(thrown.getMessage().contains(\"Invalid event index!\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":72,"yeeern27":2}},{"path":"src/test/java/command/LogOutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"class LogOutCommandTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cAvailabilitySlot\u003e availableTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.add(new AvailabilitySlot(LocalDateTime.of(2020, 5, 10, 14, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 16, 0)));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        Participant testUser \u003d new Participant(\"john_doe\", \"password123\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"                Participant.AccessLevel.ADMIN, availableTimes);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(testUser);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(testUser);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        EventManager eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Test Event\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 14, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 16, 0),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"                \"Lab\", \"Test Desc\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"    void testLogOutCommand() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        LogOutCommand logOutCommand \u003d new LogOutCommand();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        logOutCommand.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStream.toString().contains(\"has logged out\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        assertNull(participantManager.getCurrentUser());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":66}},{"path":"src/test/java/command/LoginCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package command;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"public class LoginCommandTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cAvailabilitySlot\u003e availableTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.add(new AvailabilitySlot(","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 10, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 9, 14, 0)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        ));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        Participant admin \u003d new Participant(\"admin\", \"pw\", Participant.AccessLevel.ADMIN, availableTimes);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yeeern27"},"content":"    public void testExecuteLogin() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"admin\\npw\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        LoginCommand command \u003d new LoginCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        command.execute(eventManager, ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(participantManager.getCurrentUser() !\u003d null,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"                \"ParticipantManager should be logged in after calling login.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":56,"yeeern27":1}},{"path":"src/test/java/commandfactory/AddEventCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import command.AddEventCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import parser.CommandParser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"class AddEventCommandFactoryTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private AddEventCommandFactory addEventCommandFactory;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, null); // Simplified ParticipantManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        addEventCommandFactory \u003d new AddEventCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandWhenNotLoggedIn() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException thrown \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"            addEventCommandFactory.createCommand();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"You are not logged in. Please enter \u0027login\u0027 to login.\", thrown.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandWhenUserIsNotAdmin() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(new participant.Participant(\"john_doe\", \"password123\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"                participant.Participant.AccessLevel.MEMBER, new ArrayList\u003c\u003e()));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException thrown \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"            addEventCommandFactory.createCommand();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Only admin can create events!\", thrown.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandWithValidAdminUser() throws SyncException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(new participant.Participant(\"admin\",","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"                \"adminpass\", participant.Participant.AccessLevel.ADMIN, new ArrayList\u003c\u003e()));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"Test Event|2025-05-01 10:00|2025-05-01 12:00|Room A|Test Description\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"                \"\\n\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        String[] parts \u003d CommandParser.splitAddCommandInput(simulatedInput); // Split input into parts","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime \u003d CommandParser.parseDateTime(parts[1]); // Parse the start time","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime \u003d CommandParser.parseDateTime(parts[2]); // Parse the end time","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Test Event\", parts[0].trim());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(LocalDateTime.of(2025, 5, 1, 10, 0), startTime);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(LocalDateTime.of(2025, 5, 1, 12, 0), endTime);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Room A\", parts[3].trim());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Test Description\", parts[4].trim());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d addEventCommandFactory.createCommand();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof AddEventCommand);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        Event newEvent \u003d ((AddEventCommand) command).getEvent();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Test Event\", newEvent.getName());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(LocalDateTime.of(2025, 5, 1, 10, 0), newEvent.getStartTime());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(LocalDateTime.of(2025, 5, 1, 12, 0), newEvent.getEndTime());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Room A\", newEvent.getLocation());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Test Description\", newEvent.getDescription());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":91}},{"path":"src/test/java/commandfactory/AddParticipantCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.AddParticipantCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant.AccessLevel;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"public class AddParticipantCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    private AddParticipantCommandFactory factory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant admin;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        admin \u003d new Participant(\"admin\", \"admin123\", AccessLevel.ADMIN);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participantList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        participantList.add(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(participantList, ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(admin);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        factory \u003d new AddParticipantCommandFactory(eventManager, participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yeeern27"},"content":"    void testCreateCommand_invalidInputFormat_throws() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yeeern27"},"content":"        simulateInput(\"1|john|extra\"); // Incorrect number of parts","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yeeern27"},"content":"        SyncException e \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"Invalid format. Use: \u003cEventIndex\u003e | \u003cParticipant Name\u003e. Enter \u0027addparticipant\u0027 to try again.\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yeeern27"},"content":"                e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yeeern27"},"content":"    void testCreateCommand_inputCancelled_throws() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yeeern27"},"content":"        simulateInput(\"exit\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yeeern27"},"content":"        SyncException e \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(true, e.getMessage().contains(\"cancel\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yeeern27"},"content":"    void testCreateCommand_emptyParticipantName_throws() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yeeern27"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2020, 5, 10, 14, 0);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yeeern27"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2020, 5, 10, 14, 30);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yeeern27"},"content":"        Event event \u003d new Event(\"Test Event\", startTime, endTime,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yeeern27"},"content":"                \"Test Location\", \"Test Description\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yeeern27"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yeeern27"},"content":"        simulateInput(\"1|\"); // Empty participant name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yeeern27"},"content":"        SyncException e \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"Invalid format. Use: \u003cEventIndex\u003e | \u003cParticipant Name\u003e. Enter \u0027addparticipant\u0027 to try again.\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yeeern27"},"content":"                e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommand_validInput_success() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2020, 5, 10, 14, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2020, 5, 10, 14, 30);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Test Event\", startTime, endTime,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"                \"Test Location\", \"Test Description\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"        Participant p2 \u003d new Participant(\"john\", \"pw\", AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cAvailabilitySlot\u003e slots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        slots.add(new AvailabilitySlot(LocalDateTime.of(2020, 5, 10, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 14, 30)));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"        p2.setAvailableTimes(slots);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(p2);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(\"1|john\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        AddParticipantCommand command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(0, command.getEventIndex());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"john\", command.getParticipantName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yeeern27"},"content":"    void testCreateCommand_negativeEventIndex_throws() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yeeern27"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2020, 5, 10, 14, 0);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yeeern27"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2020, 5, 10, 14, 30);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yeeern27"},"content":"        Event event \u003d new Event(\"Test Event\", startTime, endTime,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yeeern27"},"content":"                \"Test Location\", \"Test Description\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yeeern27"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yeeern27"},"content":"        simulateInput(\"-1|john\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yeeern27"},"content":"        SyncException e \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"Event index cannot be negative. Please enter a valid index.\", e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yeeern27"},"content":"    void testCreateCommand_eventIndexOutOfBounds_throws() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yeeern27"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2020, 5, 10, 14, 0);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yeeern27"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2020, 5, 10, 14, 30);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yeeern27"},"content":"        Event event \u003d new Event(\"Test Event\", startTime, endTime,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yeeern27"},"content":"                \"Test Location\", \"Test Description\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yeeern27"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yeeern27"},"content":"        simulateInput(\"100|john\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yeeern27"},"content":"        SyncException e \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"Event index is out of bounds. Please enter a valid index.\", e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommand_notLoggedIn_throws() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException e \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"You are not logged in. Enter \u0027login\u0027 to log in first.\", e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommand_nonAdminUser_throws() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"        Participant user \u003d new Participant(\"user\", \"pw\", AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(user);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException e \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Only ADMIN users can add participants. Please \u0027logout\u0027 and \u0027login\u0027 to an ADMIN user\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"                e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommand_invalidEventNumber_throws() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2020, 5, 10, 14, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2020, 5, 10, 14, 30);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Test Event\", startTime, endTime,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"                \"Test Location\", \"Test Description\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"        Participant p2 \u003d new Participant(\"john\", \"pw\", AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(p2);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(\"abc\\njohn\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException e \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Invalid format. Use: \u003cEventIndex\u003e | \u003cParticipant Name\u003e. Enter \u0027addparticipant\u0027 to try again.\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YanXinyaoo"},"content":"                e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YanXinyaoo"},"content":"    private void simulateInput(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YanXinyaoo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(in);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":120,"yeeern27":53}},{"path":"src/test/java/commandfactory/ByeCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.ByeCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"class ByeCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private ByeCommandFactory factory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(new Participant(\"admin\", \"admin123\", Participant.AccessLevel.ADMIN));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(participants, ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        factory \u003d new ByeCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommand_returnsByeCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof ByeCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":39,"yeeern27":2}},{"path":"src/test/java/commandfactory/CreateUserCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import command.CreateUserCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"class CreateUserCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    private CreateUserCommandFactory factory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cAvailabilitySlot\u003e availableTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.add(new AvailabilitySlot(LocalDateTime.of(2020, 5, 10, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 16, 0)));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        participant \u003d new Participant(\"admin_user\", \"admin123\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"                Participant.AccessLevel.ADMIN, availableTimes);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(participants, ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        factory \u003d new CreateUserCommandFactory(ui, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandWithValidInputs() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        // Simulate valid input for creating a participant","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(\"John Doe\\npassword123\\n1\\n1\\n2025-04-08 09:00\\n2025-04-08 17:00\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof CreateUserCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        CreateUserCommand createUserCommand \u003d (CreateUserCommand) command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d createUserCommand.getParticipant();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"John Doe\", participant.getName());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(Participant.AccessLevel.ADMIN, participant.getAccessLevel());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        assertFalse(participant.getAvailableTimes().isEmpty());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsIfParticipantExists() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yeeern27"},"content":"        participantManager.addNewUser(new Participant(\"John Doe\", \"password123\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yeeern27"},"content":"                Participant.AccessLevel.ADMIN));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(\"John Doe\\nnewpassword123\\n1\\n1\\n2025-04-08 09:00\\n2025-04-08 17:00\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Participant John Doe already exists. Please enter \u0027create\u0027 and try another name.\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"                exception.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsIfNoAvailabilitySlots() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(\"Jane Doe\\npassword123\\n1\\n0\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(exception.getMessage().contains(\"Number of availability slots must be at least 1\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsIfEndBeforeStart() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(\"Alice\\npassword123\\n1\\n1\\n2025-04-08 17:00\\n2025-04-08 09:00\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(exception.getMessage().contains(\"End time must be after start time\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsIfInvalidNumberOfSlots() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"        simulateInput(\"Bob\\npassword123\\n1\\n-1\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(true,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"                exception.getMessage().contains(\"Number of availability slots must be at least 1\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"    private void simulateInput(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"        InputStream inputStream \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":111,"yeeern27":2}},{"path":"src/test/java/commandfactory/DeleteCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import command.DeleteCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.LinkedList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Queue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"public class DeleteCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    private TestUI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    private DeleteCommandFactory factory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant adminUser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    public class TestUI extends UI {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        private final Queue\u003cString\u003e inputs \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        public void addInput(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"            inputs.offer(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        public String readDeleteName() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"            return inputs.poll();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws Exception {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new TestUI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        adminUser \u003d new Participant(\"admin\", \"pass\", Participant.AccessLevel.ADMIN, List.of());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(adminUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(participants, ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(adminUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(\"./data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2020, 5, 10, 14, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2020, 5, 10, 14, 30);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Test Event\", startTime, endTime,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"                \"Test Location\", \"Test Description\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(new Event(\"Meeting\", LocalDateTime.of(2025, 4, 7, 10, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025,4,7,10,30), \"Test Location\", \"Test Description\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(new Event(\"Meeting2\", LocalDateTime.of(2025, 4, 7, 12, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 7, 12, 30), \"Test Location\", \"Test Description\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(new Event(\"Meeting with team\", LocalDateTime.of(2025, 4, 7, 15, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 7, 15, 30), \"Test Location\", \"Test Description\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"        factory \u003d new DeleteCommandFactory(participantManager, ui, eventManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"    void testDeleteSingleMatchingEvent() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        ui.addInput(\"team\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"    void testDeleteMultipleMatchingEventsWithUserInputIndex() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        ui.addInput(\"Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        String consoleInput \u003d \"2\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        System.setIn(new ByteArrayInputStream(consoleInput.getBytes()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        DeleteCommand deleteCommand \u003d (DeleteCommand) command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(3, deleteCommand.getEventIndex());  // \"Meeting with team\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsIfUserNotLoggedIn() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        ui.addInput(\"Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"            new DeleteCommandFactory(participantManager, ui, eventManager).createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"not logged in\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsIfUserIsNotAdmin() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"        Participant normalUser \u003d new Participant(\"user\", \"pw\", Participant.AccessLevel.MEMBER, List.of());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(normalUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"        ui.addInput(\"Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"            new DeleteCommandFactory(participantManager, ui, eventManager).createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"Only admin\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsIfEventNotFound() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"        ui.addInput(\"Nonexistent\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"            factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"No events found\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsIfInvalidIndexFormatEntered() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"        ui.addInput(\"Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"        System.setIn(new ByteArrayInputStream(\"abc\\n\".getBytes()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"            factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"Invalid index format\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsIfOutOfBoundsIndexEntered() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"        ui.addInput(\"Meeting\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"        System.setIn(new ByteArrayInputStream(\"10\\n\".getBytes()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"            factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"Invalid event index\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":156}},{"path":"src/test/java/commandfactory/DuplicateCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.DuplicateCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"public class DuplicateCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    public class TestUI extends UI {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        private String simulatedInput;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        public void setSimulatedInput(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"            this.simulatedInput \u003d input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        public String readDuplicateEventInput() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"            return simulatedInput;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    private TestUI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    private DuplicateCommandFactory factory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant adminUser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws Exception {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new TestUI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        adminUser \u003d new Participant(\"admin\", \"pass\", Participant.AccessLevel.ADMIN, List.of());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(adminUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(participants, ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(adminUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(\"./data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2020, 5, 10, 14, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2020, 5, 10, 14, 30);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Test Event\", startTime, endTime,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"                \"Test Location\", \"Test Description\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        factory \u003d new DuplicateCommandFactory(participantManager, ui, eventManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"    void testValidDuplicateCommandReturnsDuplicateCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"1 Copied Event\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof DuplicateCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsWhenUserNotLoggedIn() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"1 Copied Event\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"            new DuplicateCommandFactory(participantManager, ui, eventManager).createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"not logged in\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsWhenUserIsNotAdmin() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        Participant normalUser \u003d new Participant(\"user\", \"pw\", Participant.AccessLevel.MEMBER, List.of());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(normalUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"1 Copied Event\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"            new DuplicateCommandFactory(participantManager, ui, eventManager).createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"Only admin\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsWhenInputFormatInvalid() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"1\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"Invalid duplicate command format\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsWhenIndexNotNumber() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"abc New Name\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"Invalid index format\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"    void testThrowsWhenIndexOutOfBounds() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"10 New Name\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, () -\u003e factory.createCommand());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"Invalid event index\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":124}},{"path":"src/test/java/commandfactory/EditCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.EditEventCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"public class EditCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private static class MockUI extends UI {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"        private String simulatedInput;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        public String readFilterInput() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"            return simulatedInput;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        public void setSimulatedInput(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"            this.simulatedInput \u003d input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    private MockUI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    private EditCommandFactory editCommandFactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant adminUser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws Exception {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new MockUI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        adminUser \u003d new Participant(\"admin\", \"pass\", Participant.AccessLevel.ADMIN,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"                List.of());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(adminUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(participants, ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(adminUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(\"./data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2020, 5, 10, 14, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2020, 5, 10, 14, 30);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Test Event\", startTime, endTime,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"                \"Test Location\", \"Test Description\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        editCommandFactory \u003d new EditCommandFactory(participantManager, eventManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandReturnsEditEventCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"1\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d editCommandFactory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof EditEventCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandThrowsIfNotLoggedIn() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"1\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"        EditCommandFactory factory \u003d new EditCommandFactory(participantManager, eventManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"not logged in\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandThrowsIfNotAdmin() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"        Participant user \u003d new Participant(\"user\", \"pw\", Participant.AccessLevel.MEMBER, List.of());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(user);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"1\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        EditCommandFactory factory \u003d new EditCommandFactory(participantManager, eventManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException ex \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(ex.getMessage().contains(\"Only admin\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandThrowsOnInvalidInput() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"abc\"); // not a number","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"        assertThrows(SyncException.class, () -\u003e editCommandFactory.createCommand());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":105}},{"path":"src/test/java/commandfactory/FilterCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import command.FilterCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yeeern27"},"content":"import label.Priority;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"public class FilterCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private MockUI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private static class MockUI extends UI {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        private String simulatedInput;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        public String readFilterInput() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"            return simulatedInput;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        public void setSimulatedInput(String input) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"            this.simulatedInput \u003d input;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new MockUI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        participant \u003d new Participant(\"admin_user\", \"admin123\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yeeern27"},"content":"                Participant.AccessLevel.ADMIN, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(participants, ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    public void testSinglePriorityInput() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"LOW\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        FilterCommandFactory factory \u003d new FilterCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof FilterCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        FilterCommand filterCommand \u003d (FilterCommand) command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yeeern27"},"content":"        assertEquals(Priority.getValue(Priority.LOW), filterCommand.getLowerBound());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"    public void testPriorityRangeInput() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"LOW HIGH\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        FilterCommandFactory factory \u003d new FilterCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof FilterCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        FilterCommand filterCommand \u003d (FilterCommand) command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yeeern27"},"content":"        assertEquals(Priority.getValue(Priority.LOW), filterCommand.getLowerBound());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yeeern27"},"content":"        assertEquals(Priority.getValue(Priority.HIGH), filterCommand.getUpperBound());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"    public void testInvalidPriorityThrowsException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"banana\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        FilterCommandFactory factory \u003d new FilterCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException e \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(SyncException.invalidPriorityFilterErrorMessage(), e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"    public void testReversedBoundThrowsException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"HIGH LOW\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        FilterCommandFactory factory \u003d new FilterCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException e \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(SyncException.invalidBoundErrorMessage(), e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"    public void testTooManyArgumentsThrowsException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"LOW MEDIUM HIGH\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        FilterCommandFactory factory \u003d new FilterCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException e \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(e.getMessage().contains(\"Please provide one or two priority\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yeeern27"},"content":"    public void testEmptyInputThrowsException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"      \");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"        FilterCommandFactory factory \u003d new FilterCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yeeern27"},"content":"        SyncException e \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"Input string should not be empty\", e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yeeern27"},"content":"    public void testNullInputThrowsException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"        FilterCommandFactory factory \u003d new FilterCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yeeern27"},"content":"        SyncException e \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"Input string should not be null\", e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"    public void testNoUserLoggedInThrowsException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setSimulatedInput(\"LOW\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"        FilterCommandFactory factory \u003d new FilterCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException e \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"You are not logged in. Enter \u0027login\u0027 to log in first.\", e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yeeern27"},"content":"    public void testCaseInsensitivity() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yeeern27"},"content":"        ui.setSimulatedInput(\"lOw hIgH\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yeeern27"},"content":"        FilterCommandFactory factory \u003d new FilterCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yeeern27"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yeeern27"},"content":"        FilterCommand filterCommand \u003d (FilterCommand) command;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yeeern27"},"content":"        assertEquals(Priority.getValue(Priority.LOW), filterCommand.getLowerBound());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yeeern27"},"content":"        assertEquals(Priority.getValue(Priority.HIGH), filterCommand.getUpperBound());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yeeern27"},"content":"    public void testWhitespaceHandling() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yeeern27"},"content":"        ui.setSimulatedInput(\"  LOW HIGH  \");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yeeern27"},"content":"        FilterCommandFactory factory \u003d new FilterCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yeeern27"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yeeern27"},"content":"        FilterCommand filterCommand \u003d (FilterCommand) command;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yeeern27"},"content":"        assertEquals(Priority.getValue(Priority.LOW), filterCommand.getLowerBound());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yeeern27"},"content":"        assertEquals(Priority.getValue(Priority.HIGH), filterCommand.getUpperBound());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yeeern27"},"content":"    public void testNonPriorityStringThrowsException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yeeern27"},"content":"        ui.setSimulatedInput(\"test\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yeeern27"},"content":"        FilterCommandFactory factory \u003d new FilterCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yeeern27"},"content":"        SyncException e \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yeeern27"},"content":"        assertEquals(SyncException.invalidPriorityFilterErrorMessage(), e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":122,"yeeern27":40}},{"path":"src/test/java/commandfactory/FindCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.FindCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"public class FindCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"    public void testCreateCommand_validKeyword_returnsFindCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"        String keyword \u003d \"apple\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"        FindCommandFactory factory \u003d new FindCommandFactory(keyword);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof FindCommand, \"Expected instance of FindCommand\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    public void testCreateCommand_nullKeyword_throwsAssertionError() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"            FindCommandFactory factory \u003d new FindCommandFactory(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"            factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    public void testCreateCommand_emptyKeyword_throwsAssertionError() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"            FindCommandFactory factory \u003d new FindCommandFactory(\"\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"            factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":39}},{"path":"src/test/java/commandfactory/HelpCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import command.HelpCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"public class HelpCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yeeern27"},"content":"    public void testCreateCommandReturnsHelpCommand() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"        HelpCommandFactory factory \u003d new HelpCommandFactory();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof HelpCommand, \"Expected a HelpCommand instance\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":17,"yeeern27":1}},{"path":"src/test/java/commandfactory/ListAllCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"class ListAllCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private ListAllCommandFactory listAllCommandFactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cAvailabilitySlot\u003e availableTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.add(new AvailabilitySlot(LocalDateTime.of(2020, 5, 10, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 16, 0)));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        participant \u003d new Participant(\"admin_user\", \"admin123\", Participant.AccessLevel.ADMIN, availableTimes);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(participants, ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        listAllCommandFactory \u003d new ListAllCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandWithoutLogin() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null); // 模拟未登录","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"            listAllCommandFactory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"You are not logged in. Please enter \u0027login\u0027 to login.\", exception.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandWithNonAdminUser() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        Participant normalUser \u003d new Participant(\"normal\", \"pw\", Participant.AccessLevel.MEMBER, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(normalUser); // 模拟非 admin 用户","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"            listAllCommandFactory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Sorry, you need to be an ADMIN to access all events.\", exception.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":68}},{"path":"src/test/java/commandfactory/ListCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import command.ListCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"class ListCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    private ListCommandFactory listCommandFactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    private Participant participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    private PrintStream originalOut;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        participant \u003d new Participant(\"john_doe\", \"password123\", Participant.AccessLevel.MEMBER, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cAvailabilitySlot\u003e availableTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        availableTimes.add(new AvailabilitySlot(LocalDateTime.of(2020, 5, 10, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2020, 5, 10, 16, 0)));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        participant \u003d new Participant(\"john_doe\", \"password123\", Participant.AccessLevel.ADMIN, availableTimes);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(participants, ui, null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        listCommandFactory \u003d new ListCommandFactory(participantManager, ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        originalOut \u003d System.out;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandWithValidInput() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"end\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d listCommandFactory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(command, \"Command should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof ListCommand, \"Command should be an instance of ListCommand\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandWithEmptyInput() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"\\n\"; // 空输入，模拟换行符","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"            listCommandFactory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"    void testCreateCommandWithValidEventIndex() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"1\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d listCommandFactory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(command, \"Command should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof ListCommand, \"Command should be an instance of ListCommand\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":100,"yeeern27":3}},{"path":"src/test/java/commandfactory/ListParticipantsCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"public class ListParticipantsCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private ListParticipantsCommandFactory factory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    private InputStream originalSystemIn;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        originalSystemIn \u003d System.in;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        Storage storage \u003d new Storage(\"./data/test-events.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, storage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    @AfterEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    void tearDown() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        System.setIn(originalSystemIn);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yeeern27"},"content":"    public void testCreateCommandNoUserLoggedInThrowsSyncException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        factory \u003d new ListParticipantsCommandFactory(ui, eventManager, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"You are not logged in. Enter \u0027login\u0027 to log in first.\", exception.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yeeern27"},"content":"    public void testCreateCommandUserLoggedInReturnsListParticipantsCommand() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yeeern27"},"content":"        Participant testUser \u003d new Participant(\"john_doe\", \"password123\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yeeern27"},"content":"                Participant.AccessLevel.ADMIN, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(testUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(testUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2020, 5, 10, 14, 0);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2020, 5, 10, 14, 30);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yeeern27"},"content":"        Event event \u003d new Event(\"Test Event\", startTime, endTime, \"Test Location\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yeeern27"},"content":"                \"Test Description\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager.addEvent(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        UI mockUi \u003d new UI() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"            @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"            public String readLine() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"                return \"exit\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        };","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        factory \u003d new ListParticipantsCommandFactory(mockUi, eventManager, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Operation cancelled.\", exception.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yeeern27"},"content":"    public void testCreateCommandNoEventsAvailableThrowsSyncException() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yeeern27"},"content":"        Participant testUser \u003d new Participant(\"john_doe\", \"password123\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yeeern27"},"content":"                Participant.AccessLevel.ADMIN, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(testUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(testUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        UI mockUi \u003d new UI() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"            @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"            public void showMessage(String message) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        };","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        factory \u003d new ListParticipantsCommandFactory(mockUi, eventManager, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"No events available.\", exception.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":89,"yeeern27":9}},{"path":"src/test/java/commandfactory/LogInCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import command.LoginCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"public class LogInCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private LoginCommandFactory factory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), null, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        factory \u003d new LoginCommandFactory(participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yeeern27"},"content":"    public void testCreateCommandNoUserLoggedInReturnsLoginCommand() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof LoginCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yeeern27"},"content":"    public void testCreateCommandUserLoggedInThrowsSyncException() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yeeern27"},"content":"        Participant testUser \u003d new Participant(\"john_doe\", \"password123\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yeeern27"},"content":"                Participant.AccessLevel.ADMIN, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(testUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(testUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"You are already logged in. Please enter \u0027logout\u0027 to log out first.\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yeeern27"},"content":"                exception.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":42,"yeeern27":6}},{"path":"src/test/java/commandfactory/LogOutCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package commandfactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import command.Command;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import command.LogOutCommand;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"public class LogOutCommandFactoryTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private LogOutCommandFactory factory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), null, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yeeern27"},"content":"        Participant testUser \u003d new Participant(\"john_doe\", \"password123\",","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yeeern27"},"content":"                Participant.AccessLevel.ADMIN, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.addNewUser(testUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(testUser);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        factory \u003d new LogOutCommandFactory(participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yeeern27"},"content":"    public void testCreateCommandNotLoggedInThrowsException() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, factory::createCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"You are not logged in. Please enter \u0027login\u0027 to log in first.\", exception.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yeeern27"},"content":"    public void testCreateCommandLoggedInReturnsLogOutCommand() throws SyncException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        Command command \u003d factory.createCommand();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(command instanceof LogOutCommand);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":45,"yeeern27":4}},{"path":"src/test/java/exception/SyncExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package exception;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"public class SyncExceptionTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yeeern27"},"content":"    public void testInvalidCommandErrorMessageNoUserLoggedIn() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(null);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        String command \u003d \"add\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"   (╯°□°)╯︵ OOPS!!! Invalid command: add\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Please enter \u0027login\u0027 to login first.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.invalidCommandErrorMessage(command, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yeeern27"},"content":"        assertEquals(expectedMessage, actualMessage, \"The error message should match when no \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yeeern27"},"content":"                \"user is logged in.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yeeern27"},"content":"    public void testInvalidCommandErrorMessageUserLoggedIn() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d new Participant(\"John\", \"password\", Participant.AccessLevel.ADMIN);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager.setCurrentUser(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        String command \u003d \"add\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"   (╯°□°)╯︵ OOPS!!! Invalid command: add\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Please enter a valid command or help to see all commands. \\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Example: `add` or `list` or `edit`.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.invalidCommandErrorMessage(command, participantManager);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yeeern27"},"content":"        assertEquals(expectedMessage, actualMessage, \"The error message should match when a user is \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yeeern27"},"content":"                \"logged in.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"    public void testInvalidEventIndexErrorMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"   (╯°□°)╯︵ Invalid event index! Enter your command word to try again.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Please provide a valid event index.\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.invalidEventIndexErrorMessage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(expectedMessage, actualMessage, \"The event index error message should be as expected.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"    public void testInvalidEventDetailsErrorMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"   (╯°□°)╯︵ OOPS!!! Invalid event details! Enter your command word to try again.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Please provide valid event details in the format: \\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"                \"   `add Event Name | Start Date | End Date | Location | Description`.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Example: `add Meeting | 2025-05-10 14:00 | 2025-05-10 15:00 | Room 101 | Discuss project`.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.invalidEventDetailsErrorMessage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(expectedMessage, actualMessage, \"The event details error message should be as expected.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"    public void testInvalidFilterInputErrorMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"   (╯°□°)╯︵ Invalid filter input! Enter \u0027filter\u0027 to try again.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Please provide valid filter inputs in the format: \\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"                \"   `filter {lower priority bound} {upper priority bound}`.\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.invalidFilterInputErrorMessage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(expectedMessage, actualMessage, \"The filter input error message should be as expected.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"    public void testInvalidBoundErrorMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"   (╯°□°)╯︵ Invalid bound values for filtering!\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Please follow this format: filter {LOWER} {HIGHER}.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Be careful that the lower priority cannot be higher than upper priority.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Example: filter LOW MEDIUM\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.invalidBoundErrorMessage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(expectedMessage, actualMessage, \"The bound error message should be as expected.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"    public void testInvalidPriorityFilterErrorMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"   (╯°□°)╯︵ Invalid bound values for filtering!\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Please provide either one or two priority levels for filtering!\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"                \"   If you provide two priority levels, they will serve as the lower bound and upper bound.\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Be careful that the lower priority cannot be higher than upper priority.\\n\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Example: filter MEDIUM\" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"                \"   Example: filter LOW MEDIUM\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.invalidPriorityFilterErrorMessage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(expectedMessage, actualMessage, \"The priority filter error \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"                \"message should be as expected.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"    public void testInvalidDateTimeFormatMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"❌ Invalid start time format! Please enter in YYYY-MM-DD HH:MM format. \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"                \"\\\"Please enter any command word and try again.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.invalidDateTimeFormatMessage(\"start\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(expectedMessage, actualMessage, \"The datetime format error \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"                \"message should be as expected.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"    public void testStartTimeAfterEndTimeMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"❌ Start time cannot be after current end time.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.startTimeAfterEndTimeMessage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(expectedMessage, actualMessage, \"The start time after end time error \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"                \"message should be as expected.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"    public void testEndTimeBeforeStartTimeMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"❌ End time cannot be before current start time.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.endTimeBeforeStartTimeMessage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(expectedMessage, actualMessage, \"The end time before start time error \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"                \"message should be as expected.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParticipantUnavailableDuringEditError() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"        String name \u003d \"John Doe\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"❌ John Doe is not available from 2025-05-10T10:00 to 2025-05-10T12:00\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.participantUnavailableDuringEditError(name,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yeeern27"},"content":"                LocalDateTime.of(2025, 5, 10, 10, 0), LocalDateTime.of(2025,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yeeern27"},"content":"                        5, 10, 12, 0));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(expectedMessage, actualMessage, \"The participant unavailable \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"                \"during edit error message should be as expected.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParticipantConflictMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YanXinyaoo"},"content":"        String expectedMessage \u003d \"❌ One or more participants are unavailable for the new time.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YanXinyaoo"},"content":"        String actualMessage \u003d SyncException.participantConflictMessage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yeeern27"},"content":"        assertEquals(expectedMessage, actualMessage, \"The participant conflict message should be as \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yeeern27"},"content":"                \"expected.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":162,"yeeern27":10}},{"path":"src/test/java/logger/EventSyncLoggerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package logger;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.File;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"public class EventSyncLoggerTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"        EventSyncLogger.setupLogger();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    public void testConsoleHandlerLevel() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"        Logger logger \u003d EventSyncLogger.getLogger();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        ConsoleHandler consoleHandler \u003d null;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        for (var handler : logger.getHandlers()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"            if (handler instanceof ConsoleHandler) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"                consoleHandler \u003d (ConsoleHandler) handler;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"                break;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(consoleHandler, \"ConsoleHandler should be initialized\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(Level.INFO, consoleHandler.getLevel(), \"ConsoleHandler level should be INFO\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    public void testFileHandlerInitialization() throws IOException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"        Logger logger \u003d EventSyncLogger.getLogger();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        FileHandler fileHandler \u003d null;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        for (var handler : logger.getHandlers()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"            if (handler instanceof FileHandler) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"                fileHandler \u003d (FileHandler) handler;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"                break;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(fileHandler, \"FileHandler should be initialized\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(Level.ALL, fileHandler.getLevel(), \"FileHandler level should be ALL\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"    public void testLoggerInfoMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        Logger logger \u003d EventSyncLogger.getLogger();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        LogCaptureHandler captureHandler \u003d new LogCaptureHandler(Level.INFO);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        logger.addHandler(captureHandler);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        logger.info(\"Logger initialized successfully\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(captureHandler.getLogMessages().contains(\"Logger initialized successfully\"),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"                \"Log should contain \u0027Logger initialized successfully\u0027\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"    public void testFileNotCreatedInTest() throws IOException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        System.setProperty(\"java.util.logging.ConsoleHandler.file\", \"temp.log\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        Logger logger \u003d EventSyncLogger.getLogger();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        FileHandler fileHandler \u003d new FileHandler(\"temp.log\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        logger.addHandler(fileHandler);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        logger.info(\"Test info message\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        File logFile \u003d new File(\"temp.log\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(logFile.exists(), \"Log file should exist after logging\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        logFile.delete();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"    public static class LogCaptureHandler extends ConsoleHandler {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        private StringBuilder logMessages \u003d new StringBuilder();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        public LogCaptureHandler(Level level) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"            setLevel(level);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"        @Override","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        public void publish(java.util.logging.LogRecord record) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"            logMessages.append(record.getMessage()).append(\"\\n\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"        public String getLogMessages() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"            return logMessages.toString();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":101}},{"path":"src/test/java/parser/CommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package parser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"public class CommandParserTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"    private CommandParser parser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"        parser \u003d new CommandParser();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"        parser.setUi(ui);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseDateTimeValidFormat() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        String validDate \u003d \"2025-05-10 14:00\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        LocalDateTime result \u003d CommandParser.parseDateTime(validDate);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(LocalDateTime.of(2025, 5, 10, 14, 0), result);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseDateTimeInvalidFormat() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        String invalidDate \u003d \"2025-05-10 14:00:00\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        assertThrows(SyncException.class, () -\u003e CommandParser.parseDateTime(invalidDate));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    public void testSplitAddCommandInputValid() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"Meeting | 2025-05-10 14:00 | 2025-05-10 15:00 | Room 101 | Discuss project\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        String[] result \u003d CommandParser.splitAddCommandInput(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(5, result.length);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"    public void testSplitAddCommandInputInvalid() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"Meeting | 2025-05-10 14:00 | Room 101 | Discuss project\"; // 少于5个部分","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        assertThrows(SyncException.class, () -\u003e CommandParser.splitAddCommandInput(input));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    public void testAskAccessLevelValidAdminInput() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"1\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        System.setIn(new ByteArrayInputStream(simulatedInput.getBytes()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(new Scanner(System.in));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        Participant.AccessLevel level \u003d parser.askAccessLevel();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(Participant.AccessLevel.ADMIN, level);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"    public void testAskAccessLevelValidMemberInput() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"2\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"        System.setIn(new ByteArrayInputStream(simulatedInput.getBytes()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(new Scanner(System.in));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"        Participant.AccessLevel level \u003d parser.askAccessLevel();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(Participant.AccessLevel.MEMBER, level);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"    public void testAskAccessLevelInvalidInput() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"3\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        System.setIn(new ByteArrayInputStream(simulatedInput.getBytes()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(new Scanner(System.in));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        Participant.AccessLevel level \u003d parser.askAccessLevel();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(Participant.AccessLevel.MEMBER, level);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"    public void testAskAccessLevelInvalidFormat() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"no\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"        System.setIn(new ByteArrayInputStream(simulatedInput.getBytes()));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(new Scanner(System.in));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        assertThrows(SyncException.class, () -\u003e parser.askAccessLevel());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":97}},{"path":"src/test/java/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package parser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import storage.UserStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import ui.UI;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import participant.ParticipantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import event.EventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import commandfactory.CommandFactory;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"public class ParserTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"    private Parser parser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"    private EventManager eventManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"    private ParticipantManager participantManager;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/test-users.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        Storage eventStorage \u003d new Storage(\"./data/commandTest/AddEventCommandTest.txt\", userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        participantManager \u003d new ParticipantManager(new ArrayList\u003c\u003e(), ui, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        eventManager \u003d new EventManager(new ArrayList\u003c\u003e(), ui, eventStorage, userStorage);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"        parser \u003d new Parser(eventManager, participantManager, ui, scanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseByeCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"bye\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseListAllCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"listall\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseListCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseAddCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"add event_name | 2024-05-01 12:00 | 2024-05-01 14:00 | description | details\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseDeleteCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"delete event_id\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseDuplicateCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"duplicate event_id\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseEditCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"edit event_id | new_description\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseFindCommandWithKeyword() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"find event\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseFindCommandWithoutKeyword() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"find\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yeeern27"},"content":"        assertThrows(SyncException.class, () -\u003e parser.parse(input), \"Find command without keyword \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yeeern27"},"content":"                \"should throw SyncException\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseAddParticipantCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"addparticipant participant_name | event_id\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseListParticipantsCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"listparticipants\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseFilterCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"filter event_type\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseLoginCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"login username password\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseLogoutCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"logout\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseCreateCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"create username password\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseHelpCommand() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"help\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YanXinyaoo"},"content":"        CommandFactory commandFactory \u003d parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(commandFactory, \"CommandFactory should not be null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseInvalidCommand() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"invalidCommand\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yeeern27"},"content":"        assertThrows(SyncException.class, () -\u003e parser.parse(input), \"Invalid command should throw \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yeeern27"},"content":"                \"SyncException\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"    public void testParseEmptyCommand() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"        String input \u003d \"\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yeeern27"},"content":"        assertThrows(SyncException.class, () -\u003e parser.parse(input), \"Empty input should throw \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yeeern27"},"content":"                \"SyncException\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":155,"yeeern27":6}},{"path":"src/test/java/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Lydialkx"},"content":"import label.Priority;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"public class StorageTest {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    private static final String TEST_FILE_PATH \u003d \"./data/StorageTest.txt\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() throws SyncException, IOException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Lydialkx"},"content":"        Files.createDirectories(Paths.get(\"./data\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        UserStorage userStorage \u003d new UserStorage(\"./data/StorageTestUsers.txt\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Lydialkx"},"content":"        storage \u003d new Storage(TEST_FILE_PATH, userStorage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Lydialkx"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"        Files.deleteIfExists(Paths.get(TEST_FILE_PATH));","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        Priority.clearPriorities();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    @AfterEach","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    public void tearDown() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"            Files.deleteIfExists(Paths.get(TEST_FILE_PATH));","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"    public void testSaveEvents() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        Event event1 \u003d new Event(\"Event 1\", LocalDateTime.of(2025, 3, 25, 10, 0),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 3, 25, 11, 0), \"Room 101\", \"Description 1\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"        Event event2 \u003d new Event(\"Event 2\", LocalDateTime.of(2025, 3, 26, 14, 0),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 3, 26, 15, 0), \"Room 102\", \"Description 2\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Lydialkx"},"content":"        storage.saveEvents(List.of(event1, event2), Priority.getAllPriorities());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        Path filePath \u003d Paths.get(TEST_FILE_PATH);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(Files.exists(filePath), \"File should be created\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        try (BufferedReader reader \u003d Files.newBufferedReader(filePath)) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"            String line1 \u003d reader.readLine();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"            String line2 \u003d reader.readLine();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"            assertNotNull(line1, \"File should contain events\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"            assertNotNull(line2, \"File should contain events\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"            assertTrue(line1.contains(\"Event 1\"));","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"            assertTrue(line2.contains(\"Event 2\"));","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"            fail(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"    public void testLoadEvents() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        Event event1 \u003d new Event(\"Event 1\", LocalDateTime.of(2025, 3, 25, 10, 0),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 3, 25, 11, 0), \"Room 101\", \"Description 1\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"        Event event2 \u003d new Event(\"Event 2\", LocalDateTime.of(2025, 3, 26, 14, 0),","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 3, 26, 15, 0), \"Room 102\", \"Description 2\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Lydialkx"},"content":"        storage.saveEvents(List.of(event1, event2), Priority.getAllPriorities());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cEvent\u003e events \u003d storage.loadEvents();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(2, events.size(), \"There should be 2 events loaded\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Event 1\", events.get(0).getName(), \"Event 1 should be loaded correctly\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Event 2\", events.get(1).getName(), \"Event 2 should be loaded correctly\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"    public void testLoadEventsWithCorruptedFile() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(Paths.get(TEST_FILE_PATH))) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"            writer.write(\"Invalid Event Data\");","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"        assertThrows(SyncException.class, () -\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"                storage.loadEvents());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"    public void testSaveEventsWithCorrectPriorities() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"        Event event1 \u003d new Event(\"Event 1\", LocalDateTime.of(2025, 3, 25, 10, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 3, 25, 11, 0), \"Room 101\", \"Description 1\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YanXinyaoo"},"content":"        Event event2 \u003d new Event(\"Event 2\", LocalDateTime.of(2025, 3, 26, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 3, 26, 15, 0), \"Room 102\", \"Description 2\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"        // 先添加优先级","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"        Priority.addPriority(\"HIGH\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"        Priority.addPriority(\"LOW\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"        storage.saveEvents(List.of(event1, event2), Priority.getAllPriorities());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"        Path filePath \u003d Paths.get(TEST_FILE_PATH);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(Files.exists(filePath), \"File should be created\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"        try (BufferedReader reader \u003d Files.newBufferedReader(filePath)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"            String line1 \u003d reader.readLine();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YanXinyaoo"},"content":"            String line2 \u003d reader.readLine();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"            // 输出文件内容以便调试","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"            System.out.println(\"Line 1: \" + line1);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YanXinyaoo"},"content":"            System.out.println(\"Line 2: \" + line2);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YanXinyaoo"},"content":"            assertTrue(line1.contains(\"HIGH\"), \"Event 1 should have HIGH priority\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YanXinyaoo"},"content":"            assertTrue(line2.contains(\"LOW\"), \"Event 2 should have LOW priority\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YanXinyaoo"},"content":"            fail(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YanXinyaoo"},"content":"    public void testLoadEventsWithValidData() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YanXinyaoo"},"content":"        Event event1 \u003d new Event(\"Event 1\", LocalDateTime.of(2025, 3, 25, 10, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 3, 25, 11, 0), \"Room 101\", \"Description 1\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YanXinyaoo"},"content":"        Event event2 \u003d new Event(\"Event 2\", LocalDateTime.of(2025, 3, 26, 14, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 3, 26, 15, 0), \"Room 102\", \"Description 2\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YanXinyaoo"},"content":"        storage.saveEvents(List.of(event1, event2), Priority.getAllPriorities());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cEvent\u003e events \u003d storage.loadEvents();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(2, events.size(), \"There should be 2 events loaded\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Event 1\", events.get(0).getName(), \"Event 1 should be loaded correctly\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(\"Event 2\", events.get(1).getName(), \"Event 2 should be loaded correctly\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YanXinyaoo"},"content":"    public void testSyncExceptionOnLoadEvents() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YanXinyaoo"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(Paths.get(TEST_FILE_PATH))) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YanXinyaoo"},"content":"            writer.write(\"Invalid Event Data\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YanXinyaoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"            storage.loadEvents();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YanXinyaoo"},"content":"            fail(\"Expected SyncException to be thrown when loading invalid events\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (SyncException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"            assertTrue(e.getMessage().contains(\"Skipping corrupted line\"), \"Expected SyncException for corrupted data\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"Lydialkx":8,"YanXinyaoo":156}},{"path":"src/test/java/storage/UserStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package storage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YanXinyaoo"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant.AccessLevel;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import participant.AvailabilitySlot;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.File;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.List;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"public class UserStorageTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private static final String TEST_FILE_PATH \u003d \"./data/testUsers.txt\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private UserStorage userStorage;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        try {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"            Files.deleteIfExists(Paths.get(TEST_FILE_PATH));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yeeern27"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"        userStorage \u003d new UserStorage(TEST_FILE_PATH);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"    public void testEnsureFileExists() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(file.exists(), \"The user storage file should be created.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"    public void testSaveUsers() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d new Participant(\"John Doe\", \"password123\", AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        userStorage.saveUsers(participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cParticipant\u003e loadedParticipants \u003d userStorage.loadUsers();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(1, loadedParticipants.size(), \"There should be one participant loaded.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"John Doe\", loadedParticipants.get(0).getName(), \"The participant\u0027s name \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yeeern27"},"content":"                \"should match.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"    public void testLoadUsers() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant1 \u003d new Participant(\"John Doe\", \"password123\", AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant2 \u003d new Participant(\"Jane Smith\", \"password456\", AccessLevel.ADMIN);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant1);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant2);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        userStorage.saveUsers(participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cParticipant\u003e loadedParticipants \u003d userStorage.loadUsers();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(2, loadedParticipants.size(), \"There should be two participants loaded.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"John Doe\", loadedParticipants.get(0).getName(),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yeeern27"},"content":"                \"The first participant\u0027s name should match.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"Jane Smith\", loadedParticipants.get(1).getName(),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yeeern27"},"content":"                \"The second participant\u0027s name should match.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"    public void testSaveAndLoadAvailabilitySlots() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d new Participant(\"John Doe\", \"password123\", AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yeeern27"},"content":"        AvailabilitySlot slot \u003d new AvailabilitySlot(LocalDateTime.of(2025, 4, 7, 9,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yeeern27"},"content":"                0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 4, 7, 10, 0));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YanXinyaoo"},"content":"        participant.addAvailableTime(slot.getStartTime(), slot.getEndTime());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YanXinyaoo"},"content":"        userStorage.saveUsers(participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cParticipant\u003e loadedParticipants \u003d userStorage.loadUsers();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(1, loadedParticipants.size(), \"There should be one participant loaded.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yeeern27"},"content":"        assertEquals(1, loadedParticipants.get(0).getAvailableTimes().size(),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yeeern27"},"content":"                \"The participant should have one availability slot.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(slot.getStartTime(), loadedParticipants.get(0).getAvailableTimes().get(0).getStartTime(),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YanXinyaoo"},"content":"                \"The availability start time should match.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YanXinyaoo"},"content":"    public void testFindUserByName() throws SyncException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant1 \u003d new Participant(\"John Doe\", \"password123\", AccessLevel.MEMBER);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant2 \u003d new Participant(\"Jane Smith\", \"password456\", AccessLevel.ADMIN);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YanXinyaoo"},"content":"        List\u003cParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant1);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YanXinyaoo"},"content":"        participants.add(participant2);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YanXinyaoo"},"content":"        userStorage.saveUsers(participants);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YanXinyaoo"},"content":"        Participant foundParticipant \u003d userStorage.findUserByName(participants, \"john doe\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YanXinyaoo"},"content":"        assertNotNull(foundParticipant, \"The participant should be found by name.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yeeern27"},"content":"        assertEquals(\"John Doe\", foundParticipant.getName(),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yeeern27"},"content":"                \"The found participant\u0027s name should match.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YanXinyaoo"},"content":"        Participant notFoundParticipant \u003d userStorage.findUserByName(participants, \"nonexistent\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YanXinyaoo"},"content":"        assertNull(notFoundParticipant, \"The participant should not be found.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YanXinyaoo"},"content":"    public void testHandleCorruptedFile() throws IOException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YanXinyaoo"},"content":"        String corruptedLine \u003d \"John Doe | USER | password123 | invalidSlot\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YanXinyaoo"},"content":"        Files.write(Paths.get(TEST_FILE_PATH), corruptedLine.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YanXinyaoo"},"content":"        SyncException exception \u003d assertThrows(SyncException.class, () -\u003e {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YanXinyaoo"},"content":"            userStorage.loadUsers();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YanXinyaoo"},"content":"        });","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yeeern27"},"content":"        assertTrue(exception.getMessage().contains(\"Skipping corrupted line\"),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yeeern27"},"content":"                \"The exception message should mention corrupted lines.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":109,"yeeern27":15}},{"path":"src/test/java/ui/PrintMatchingEventsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yeeern27"},"content":"package ui;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yeeern27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yeeern27"},"content":"import event.Event;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yeeern27"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yeeern27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yeeern27"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yeeern27"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yeeern27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yeeern27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yeeern27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yeeern27"},"content":"public class PrintMatchingEventsTest {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yeeern27"},"content":"    private UI ui;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yeeern27"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yeeern27"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yeeern27"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yeeern27"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yeeern27"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yeeern27"},"content":"    public void testPrintMatchingEventsEmptyList() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yeeern27"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yeeern27"},"content":"        ui.printMatchingEvents(events);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yeeern27"},"content":"        String output \u003d outputStreamCaptor.toString().trim();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yeeern27"},"content":"        assertTrue(output.contains(\"No matching events found.\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yeeern27"},"content":"    public void testPrintMatchingEventsNonEmptyList() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yeeern27"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yeeern27"},"content":"        // Parse String to LocalDateTime using DateTimeFormatter","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yeeern27"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yeeern27"},"content":"        LocalDateTime startTime1 \u003d LocalDateTime.parse(\"2023-10-26 10:00\", formatter);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yeeern27"},"content":"        LocalDateTime endTime1 \u003d LocalDateTime.parse(\"2023-10-26 12:00\", formatter);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yeeern27"},"content":"        LocalDateTime startTime2 \u003d LocalDateTime.parse(\"2023-10-27 14:00\", formatter);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yeeern27"},"content":"        LocalDateTime endTime2 \u003d LocalDateTime.parse(\"2023-10-27 16:00\", formatter);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yeeern27"},"content":"        events.add(new Event(\"Event 1\", startTime1, endTime1, \"Location 1\", \"Description 1\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yeeern27"},"content":"        events.add(new Event(\"Event 2\", startTime2, endTime2, \"Location 2\", \"Description 2\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yeeern27"},"content":"        ui.printMatchingEvents(events);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yeeern27"},"content":"        String output \u003d outputStreamCaptor.toString().trim();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yeeern27"},"content":"        assertTrue(output.contains(\"Found 2 matching events.\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yeeern27"},"content":"        assertTrue(output.contains(\"1. +----------------------+--------------------------------+\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yeeern27"},"content":"        assertTrue(output.contains(\"2. +----------------------+--------------------------------+\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yeeern27"},"content":"}","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"yeeern27":55}},{"path":"src/test/java/ui/UITest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YanXinyaoo"},"content":"package ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yeeern27"},"content":"import exception.SyncException;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yeeern27"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YanXinyaoo"},"content":"import event.Event;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YanXinyaoo"},"content":"import participant.Participant;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"public class UITest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"    private UI ui;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    public void testShowMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":"        String message \u003d \"Test message\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(message));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YanXinyaoo"},"content":"    public void testShowMenu() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showMenu();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"          EVENT SYNC COMMAND MENU    \"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YanXinyaoo"},"content":"    public void testReadLine() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"TestInput\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YanXinyaoo"},"content":"        String result \u003d ui.readLine();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(simulatedInput, result + \"\\n\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YanXinyaoo"},"content":"    public void testReadInt() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"123\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YanXinyaoo"},"content":"        Integer result \u003d ui.readInt();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YanXinyaoo"},"content":"        assertEquals(123, result);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YanXinyaoo"},"content":"    public void testReadIntInvalid() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"abc\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YanXinyaoo"},"content":"        Integer result \u003d ui.readInt();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YanXinyaoo"},"content":"        assertNull(result, \"Input should be invalid and return null\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yeeern27"},"content":"    public void testReadFilterInputValid() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yeeern27"},"content":"        String simulatedInput \u003d \"4 5\\n\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yeeern27"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yeeern27"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yeeern27"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yeeern27"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yeeern27"},"content":"            String result \u003d ui.readFilterInput();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yeeern27"},"content":"            assertEquals(\"4 5\", result);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yeeern27"},"content":"        } catch (SyncException e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yeeern27"},"content":"            Assertions.fail(\"SyncException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yeeern27"},"content":"    public void testReadFilterInputInvalid() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yeeern27"},"content":"        String simulatedInput \u003d \"invalid\\n\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yeeern27"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yeeern27"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yeeern27"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yeeern27"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yeeern27"},"content":"            String result \u003d ui.readFilterInput();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yeeern27"},"content":"            assertEquals(\"invalid\", result);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yeeern27"},"content":"        } catch (SyncException e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yeeern27"},"content":"            Assertions.fail(\"SyncException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yeeern27"},"content":"    public void testReadListCommandInputValidAll() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yeeern27"},"content":"        String simulatedInput \u003d \"all\\n\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yeeern27"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yeeern27"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yeeern27"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yeeern27"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yeeern27"},"content":"            String result \u003d ui.readListCommandInput();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yeeern27"},"content":"            assertEquals(\"all\", result);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yeeern27"},"content":"        } catch (SyncException e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yeeern27"},"content":"            Assertions.fail(\"SyncException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yeeern27"},"content":"    public void testReadListCommandInputValidParticipants() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yeeern27"},"content":"        String simulatedInput \u003d \"participants EventName\\n\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yeeern27"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yeeern27"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yeeern27"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yeeern27"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yeeern27"},"content":"            String result \u003d ui.readListCommandInput();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yeeern27"},"content":"            assertEquals(\"participants EventName\", result);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yeeern27"},"content":"        } catch (SyncException e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yeeern27"},"content":"            Assertions.fail(\"SyncException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yeeern27"},"content":"    public void testReadListCommandInputInvalid() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yeeern27"},"content":"        String simulatedInput \u003d \"invalid\\n\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yeeern27"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yeeern27"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yeeern27"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yeeern27"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yeeern27"},"content":"            String result \u003d ui.readListCommandInput();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yeeern27"},"content":"            assertEquals(\"invalid\", result);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yeeern27"},"content":"        } catch (SyncException e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yeeern27"},"content":"            Assertions.fail(\"SyncException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YanXinyaoo"},"content":"    public void testShowAddFormat() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showAddFormat();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Enter event \" +","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YanXinyaoo"},"content":"                \"details (format: Event Name | Start Date | End Date | Location | Description):\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YanXinyaoo"},"content":"    public void testShowAddedMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YanXinyaoo"},"content":"        Event event \u003d new Event(\"Sample Event\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 3, 25, 10, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YanXinyaoo"},"content":"                LocalDateTime.of(2025, 3, 25, 11, 0),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YanXinyaoo"},"content":"                \"Room 101\", \"Sample Description\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showAddedMessage(event);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"has been added to the list.\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YanXinyaoo"},"content":"    public void testConfirmDeletion() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"yes\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YanXinyaoo"},"content":"        boolean result \u003d ui.confirmDeletion(\"Test Event\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(result, \"The confirmation input should return true.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YanXinyaoo"},"content":"    public void testConfirmDeletionNegative() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"no\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YanXinyaoo"},"content":"        boolean result \u003d ui.confirmDeletion(\"Test Event\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"YanXinyaoo"},"content":"        assertFalse(result, \"The confirmation input should return false.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"YanXinyaoo"},"content":"    public void testAskConfirmation() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YanXinyaoo"},"content":"        String simulatedInput \u003d \"y\\n\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"YanXinyaoo"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"YanXinyaoo"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"YanXinyaoo"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"YanXinyaoo"},"content":"        boolean result \u003d ui.askConfirmation(\"Are you sure?\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(result);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"YanXinyaoo"},"content":"    public void testShowSuccessCreateMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"YanXinyaoo"},"content":"        Participant participant \u003d new Participant(\"John Doe\", \"password123\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"YanXinyaoo"},"content":"                Participant.AccessLevel.ADMIN);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showSuccessCreateMessage(participant);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Successfully created: John Doe\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"YanXinyaoo"},"content":"    public void testShowSuccessLoginMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showSuccessLoginMessage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Successfully logged in.\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"YanXinyaoo"},"content":"    public void testShowLogOutMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showLogOutMessage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"yeeern27"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Bye! Press \u0027login\u0027 to log in or \u0027create\u0027 \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"yeeern27"},"content":"                \"to create a new user.\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"yeeern27"},"content":"    public void testReadAddCommandInputValid() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"yeeern27"},"content":"        String simulatedInput \u003d \"Event Name | 2025-03-25 10:00 | 2025-03-25 11:00 | Room 101 | Description\\n\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"yeeern27"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"yeeern27"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"yeeern27"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"yeeern27"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"yeeern27"},"content":"            String result \u003d ui.readAddCommandInput();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"yeeern27"},"content":"            assertEquals(simulatedInput.trim(), result);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"yeeern27"},"content":"        } catch (SyncException e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"yeeern27"},"content":"            Assertions.fail(\"SyncException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"yeeern27"},"content":"    @Test","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"yeeern27"},"content":"    public void testReadAddCommandInputInvalid() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"yeeern27"},"content":"        String simulatedInput \u003d \"Invalid Input\\n\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"yeeern27"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"yeeern27"},"content":"        Scanner testScanner \u003d new Scanner(inputStream);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"yeeern27"},"content":"        ui.setScanner(testScanner);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"yeeern27"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"yeeern27"},"content":"            String result \u003d ui.readAddCommandInput();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"yeeern27"},"content":"            assertEquals(simulatedInput.trim(), result);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"yeeern27"},"content":"        } catch (SyncException e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"yeeern27"},"content":"            Assertions.fail(\"SyncException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"yeeern27"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"yeeern27"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"yeeern27"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"YanXinyaoo"},"content":"    public void testShowCollisionWarning() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"yeeern27"},"content":"        Event newEvent \u003d new Event(\"New Event\", LocalDateTime.of(2025, 3, 25, 10,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"yeeern27"},"content":"                0), LocalDateTime.of(2025, 3, 25, 11, 0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"yeeern27"},"content":"                \"Room 101\", \"Description\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e collisions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"yeeern27"},"content":"        collisions.add(new Event(\"Existing Event\", LocalDateTime.of(2025, 3, 25, 10,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"yeeern27"},"content":"                0), LocalDateTime.of(2025, 3, 25, 11, 0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"yeeern27"},"content":"                \"Room 102\", \"Description\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showCollisionWarning(newEvent, collisions);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Warning: Scheduling Conflict\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"YanXinyaoo"},"content":"    public void testShowParticipantSlotCollisionWarning() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"yeeern27"},"content":"        Event event \u003d new Event(\"Event with Conflict\", LocalDateTime.of(2025, 3, 25,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"yeeern27"},"content":"                10, 0), LocalDateTime.of(2025, 3, 25, 11, 0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"yeeern27"},"content":"                \"Room 101\", \"Description\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"YanXinyaoo"},"content":"        ArrayList\u003cEvent\u003e collisions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"yeeern27"},"content":"        collisions.add(new Event(\"Conflicting Event\", LocalDateTime.of(2025, 3, 25,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"yeeern27"},"content":"                10, 0), LocalDateTime.of(2025, 3, 25, 11, 0),","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"yeeern27"},"content":"                \"Room 102\", \"Description\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showParticipantSlotCollisionWarning(event, collisions);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Warning: Scheduling Conflict\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"YanXinyaoo"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"YanXinyaoo"},"content":"    public void testShowByeMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"YanXinyaoo"},"content":"        ui.showByeMessage();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"YanXinyaoo"},"content":"        assertTrue(outputStreamCaptor.toString().contains(\"Bye!\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"YanXinyaoo"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"YanXinyaoo"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":173,"yeeern27":121}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"# 确保data目录存在","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"if not exist data mkdir data","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"# 使用绝对路径确保data目录被正确创建","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"echo Actual output:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"type ACTUAL.TXT","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"echo.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"echo Expected output:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"type EXPECTED.TXT","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"echo.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YanXinyaoo"},"content":"if errorlevel 1 (","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"    echo Test failed! Differences found:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"    FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YanXinyaoo"},"content":") else (","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"    echo Test passed!","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YanXinyaoo"},"content":")","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":18,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YanXinyaoo"},"content":"# change to the directory containing the script","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YanXinyaoo"},"content":"cd \"$(dirname \"$0\")\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YanXinyaoo"},"content":"# Store the project root directory","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YanXinyaoo"},"content":"PROJECT_ROOT\u003d\"$(cd .. \u0026\u0026 pwd)\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YanXinyaoo"},"content":"# Clean and build the project","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YanXinyaoo"},"content":"cd \"$PROJECT_ROOT\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YanXinyaoo"},"content":"# Ensure data directory exists","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YanXinyaoo"},"content":"mkdir -p data","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YanXinyaoo"},"content":"# Create EventSync.txt if it doesn\u0027t exist","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YanXinyaoo"},"content":"touch data/EventSync.txt","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YanXinyaoo"},"content":"# Change to text-ui-test directory","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YanXinyaoo"},"content":"# Find the jar file (use full path)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YanXinyaoo"},"content":"JAR_PATH\u003d$(find \"$PROJECT_ROOT/build/libs\" -mindepth 1 -print -quit)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YanXinyaoo"},"content":"# Run the jar and compare outputs","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YanXinyaoo"},"content":"java -jar \"$JAR_PATH\" \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YanXinyaoo"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YanXinyaoo"},"content":"# Normalize line endings (remove Windows-style line endings)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YanXinyaoo"},"content":"tr -d \u0027\\r\u0027 \u003c EXPECTED.TXT \u003e EXPECTED-UNIX.TXT","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YanXinyaoo"},"content":"tr -d \u0027\\r\u0027 \u003c ACTUAL.TXT \u003e ACTUAL-UNIX.TXT","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YanXinyaoo"},"content":"# Compare files","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YanXinyaoo"},"content":"diff EXPECTED-UNIX.TXT ACTUAL-UNIX.TXT","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YanXinyaoo"},"content":"# Check the result","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"YanXinyaoo":26,"-":17}}]
