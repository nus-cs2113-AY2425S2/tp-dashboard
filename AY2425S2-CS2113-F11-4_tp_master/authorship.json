[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"## FlashCLI","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 17 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 17 in a previous Intellij project.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the setup**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"Betahaxer":1,"-":65}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"    mainClass.set(\"flashcli.FlashCLI\")","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"    archiveBaseName.set(\"FlashCLI\")","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Betahaxer":3,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |    Name     |                     Github Profile                     | Portfolio ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ElonKoh"},"content":"--------|:-----------:|:------------------------------------------------------:|:---------:","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lishunyang12"},"content":" My doc | Li shunyang | [https://github.com/lishunyang12](https://github.com/) |www.linkedin.com/in/shunyangli","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Felix Yuen  |        [Github](https://github.com/felfelyuen)         | [Portfolio](docs/team/felfelyuen.md)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Man Zhong  |         [Github](https://github.com/manz9802)          | [Portfolio]()","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Poh Yu Wen  |         [Github](https://github.com/Betahaxer)         | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ElonKoh"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Koh Elon   |          [Github](https://github.com/ElonKoh)          | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false}],"authorContributionMap":{"ManZ9802":1,"felfelyuen":1,"Betahaxer":2,"lishunyang12":1,"-":3,"ElonKoh":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"# FlashCLI Developer Guide","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lishunyang12"},"content":"## Table of Contents","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"1. [Acknowledgements](#1-acknowledgements)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"2. [Notes](#2-notes)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"3. [Implementation](#3-implementation)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"    - [3.1. Flashcard Features](#31-flashcard-features)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"        - [3.1.1. Create a flashcard](#311-create-a-flashcard)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"        - [3.1.2. Edit a flashcard](#312-edit-a-flashcard)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"        - [3.1.3. Delete a flashcard](#313-delete-a-flashcard)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"        - [3.1.4. View a flashcard answer](#314-view-a-flashcard-answer)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"        - [3.1.5. Insert code snippet in a flashcard](#315-insert-code-snippet-in-a-flashcard)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"    - [3.2. Deck Features](#32-deck-features)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"        - [3.2.1. Creating a new deck](#321-creating-a-new-deck)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"        - [3.2.2. Renaming decks](#322-renaming-decks)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"        - [3.2.3. Listing all decks](#323-listing-all-decks)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"        - [3.2.4. Selecting a deck](#324-selecting-a-deck)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"        - [3.2.5. Deleting a deck](#325-deleting-a-deck)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"        - [3.2.6. Searching](#326-searching)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"        - [3.2.7. Save/Load Functionality](#327-saveload-functionality)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"        - [3.2.8. Viewing quiz results ](#328-viewing-quiz-results)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"4. [Appendix A: Product Scope](#appendix-a-product-scope)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"5. [Appendix B: User Stories](#appendix-b-user-stories)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"6. [Appendix C: Non-Functional Requirements](#appendix-c-non-functional-requirements)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"7. [Appendix D: Glossary](#appendix-d-glossary)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"8. [Appendix E: Instructions for manual testing](#appendix-e-instructions-for-manual-testing)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"## 1. Acknowledgements","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lishunyang12"},"content":"Third-party libraries used:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lishunyang12"},"content":"- Java SE 17 - Core Java platform","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lishunyang12"},"content":"- JUnit 5 - Unit testing framework","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lishunyang12"},"content":"- PlantUML - For generating UML diagrams","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"This project\u0027s structure was inspired by the SE-EDU AddressBook-Level3 and AddressBook-Level4 project.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"## 2. Notes","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lishunyang12"},"content":"This Developer Guide documents the core architecture and key components of FlashCLI, but does not exhaustively cover all implemented classes","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"## 3. Implementation","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"This section describes some noteworthy details on how the features are implemented. ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"### 3.1. Flashcard features","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"### 3.1.1. Create a flashcard","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"This command allows the user to create a new flashcard with compulsory `QUESTION` and `ANSWER` fields, denoted by `/q` and `/a` tags.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"The create flashcard mechanism is facilitated by `Deck` and `CommandCreateFlashcard`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"The feature requires a deck to be selected before usage.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"Duplicates of the same flashcard are allowed.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"#### **Before creating the flashcard, these conditions must be satisfied:**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"* **Contains all arguments**: Arguments should have both tags `/q` and `/a`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"* **Correct order**: The `/q` tag comes before the `/a` tag.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"* **No text before `/q` tag**: There must be no text before the `/q` tag, i.e. `hello/q QUESTION /a ANSWER` is not permitted.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"* **No empty fields**: Neither `QUESTION` nor `ANSWER` field can be empty. This includes having only whitespaces in the fields.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Betahaxer"},"content":"In addition, any text after the first `/q` or `/a` tag will be considered as `QUESTION` or `ANSWER` respectively.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Betahaxer"},"content":"In particular, if there are multiple `/q` or `/a` tags, they will be considered part of the `QUESTION` or `ANSWER`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"e.g. `/q What is the weather today? /q extra question /a Sunny /a extra answer`\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"**Question**: `What is the weather today? /q extra question`\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"**Answer**: `Sunny /a extra answer`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"Note that the question and answer fields will be trimmed.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"If the arguments are invalid, the exception `FlashCLIArgumentException` will be thrown with a custom message which is shown to the user.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"**Below is the sequence diagram describing the operations for creating the flashcard:**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"![](images/CreateFlashcardSequenceDiagram.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Betahaxer"},"content":"1. When the command is executed using `CommandCreateFlashcard#executeCommand()`, the `Deck#createFlashcard()` method is called.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Betahaxer"},"content":"2. Then, `Deck#checkQuestionAndAnswer()` checks if the arguments are valid, according to the previously mentioned [conditions](#before-creating-the-flashcard-these-conditions-must-be-satisfied).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Betahaxer"},"content":"3. If it is valid, the question and answer strings will be passed to create a new `Flashcard` object.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Betahaxer"},"content":"4. A success message will then be shown to the user upon completion.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Betahaxer"},"content":"**Note**: The lifeline for `CommandCreateFlashcard` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Betahaxer"},"content":"#### Why is it implemented this way?","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Betahaxer"},"content":"- The user has to select a deck before creating a flashcard, which prevents flashcards from being created and not being in any decks.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Betahaxer"},"content":"- Each command eg `CommandCreateFlashcard` is a separate class, allowing the code to achieve the **Separation of Concerns** design principle.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Betahaxer"},"content":"- The tags `/q` and `/a` are compulsory to prevent improper creation of Flashcard objects.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Betahaxer"},"content":"- Any text after the first `/q` or `/a` tag will be considered as `QUESTION` or `ANSWER` respectively, to simplify the usage of the command and allow for a greater range of characters in the question.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Betahaxer"},"content":"- Allowing duplicates gives users the flexibility to structure their decks according to their study preferences. For example, repeating a flashcard can help reinforce a key concept by increasing exposure during review.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Betahaxer"},"content":"#### Alternatives Considered:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Betahaxer"},"content":"- Using a regex expression","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Betahaxer"},"content":"  - Pros: More concise code, can handle a wider range of possible inputs with increased flexibility.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Betahaxer"},"content":"  - Cons: Difficult to debug and understand, especially for Developers with little experience with regex.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Betahaxer"},"content":"- Only allowing `/q` and `/a` tags i.e. should have no foreign tags allowed","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Betahaxer"},"content":"  - Pros: Ensures that user keys in only the inputs required.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Betahaxer"},"content":"  - Cons: Difficult to define what is a \"foreign\" tag. Users might not be able to use `/` in their `QUESTION` or `ANSWER`. Also significantly increases complexity without achieving much functionality.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Betahaxer"},"content":"### 3.1.2. Edit a flashcard","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ElonKoh"},"content":"#### Design","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ElonKoh"},"content":"This feature enables the user to edit the question and answer to a specific flashcard by supplying its index and updated question and answer. It assumes the user has already selected a deck.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ElonKoh"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ElonKoh"},"content":"![](images/EditSequenceDiagram.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ElonKoh"},"content":"#### Implementation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ElonKoh"},"content":"##### `Deck#editFlashcard(int index, String arguments)`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ElonKoh"},"content":"- Replaces the existing flashcard at index with updated question and answer","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ElonKoh"},"content":"- Returns a confirmation of the updated flashcard that was edited","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ElonKoh"},"content":"##### `CommandEdit#executeCommand()`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ElonKoh"},"content":"- Parses the index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ElonKoh"},"content":"- Validates that it\u0027s a valid number and within bounds","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ElonKoh"},"content":"- Replaces and updates the existing flashcard and displays the updated flashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ElonKoh"},"content":"**Edge Cases Handled:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ElonKoh"},"content":"- Invalid index format → `NumberFormatException`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ElonKoh"},"content":"- Out-of-bounds index → `ArrayIndexOutOfBoundsException`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Betahaxer"},"content":"### 3.1.3. Delete a flashcard","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Betahaxer"},"content":"#### Design","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Betahaxer"},"content":"The delete flashcard feature allows users to remove a specific flashcard from the currently selected deck based on a 0-based index. The system validates the index and ensures it’s within bounds.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Betahaxer"},"content":"#### Class Diagram","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Betahaxer"},"content":"![](images/DeleteClassDiagram.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Betahaxer"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Betahaxer"},"content":"![](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Betahaxer"},"content":"#### Implementation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Betahaxer"},"content":"##### `Deck#deleteFlashcard(int index)`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Betahaxer"},"content":"- Removes the flashcard at the given index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Betahaxer"},"content":"- Returns a confirmation message with the deleted flashcard\u0027s content","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Betahaxer"},"content":"##### `CommandDelete#executeCommand()`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Betahaxer"},"content":"- Parses the index from user input","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Betahaxer"},"content":"- Validates it as a number and within bounds","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Betahaxer"},"content":"- Invokes `deleteFlashcard(...)`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Betahaxer"},"content":"- Displays confirmation or appropriate error messages","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Betahaxer"},"content":"**Edge Cases Handled:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Betahaxer"},"content":"- Invalid input format (e.g., not an integer) → `NumberFormatException`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Betahaxer"},"content":"- Index out of bounds → `ArrayIndexOutOfBoundsException`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Betahaxer"},"content":"### 3.1.4. View a flashcard answer","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Betahaxer"},"content":"#### Design","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Betahaxer"},"content":"This feature enables the user to view the answer to a specific flashcard by supplying its index. It assumes the user has already selected a deck.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Betahaxer"},"content":"#### Class Diagram","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Betahaxer"},"content":"![](images/ViewAnsClassDiagram.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Betahaxer"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Betahaxer"},"content":"![](images/ViewAnsSeqDiagram.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Betahaxer"},"content":"#### Implementation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Betahaxer"},"content":"##### `Deck#viewFlashcardAnswer(int index)`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Betahaxer"},"content":"- Returns the answer text of the flashcard at the given index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Betahaxer"},"content":"##### `CommandViewAnswer#executeCommand()`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Betahaxer"},"content":"- Parses the index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Betahaxer"},"content":"- Validates that it\u0027s a valid number and within bounds","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Betahaxer"},"content":"- Retrieves and displays the answer","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Betahaxer"},"content":"### 3.1.5. Insert code snippet in a flashcard","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ElonKoh"},"content":"#### Design","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ElonKoh"},"content":"This feature enables the user to insert a code snippet to a specific flashcard by supplying its index and code snippet. It assumes the user has already selected a deck.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ElonKoh"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ElonKoh"},"content":"![](images/InsertSequenceDiagram.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ElonKoh"},"content":"#### Implementation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ElonKoh"},"content":"##### `Deck#insertCodeSnippet(int index, String arguments)`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ElonKoh"},"content":"- Formats and adds a code snippet into an existing flashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ElonKoh"},"content":"- Returns a confirmation of the updated flashcard with the code snippet","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ElonKoh"},"content":"##### `CommandInsertCode#executeCommand()`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ElonKoh"},"content":"- Parses the index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ElonKoh"},"content":"- Validates that it\u0027s a valid number and within bounds","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ElonKoh"},"content":"- Inserts the provided code snippet into the existing flashcard and displays the updated flashcard with code snippet","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ElonKoh"},"content":"**Edge Cases Handled:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ElonKoh"},"content":"- Invalid index format → `NumberFormatException`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ElonKoh"},"content":"- Out-of-bounds index → `ArrayIndexOutOfBoundsException`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Betahaxer"},"content":"### 3.2. Deck features","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Betahaxer"},"content":"### 3.2.1. Creating a New Deck","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Betahaxer"},"content":"This feature allows the user to create a new deck with a deck name. ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Betahaxer"},"content":"The create deck mechanism is facilitated by `DeckManager` and `CommandCreateDeck`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Betahaxer"},"content":"To ensure deck names are unique, a LinkedHashMap is used to track existing deck names.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Betahaxer"},"content":"#### **Before creating the deck, these conditions must be satisfied:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Betahaxer"},"content":"* **Duplicate Deck Name**: If the user attempts to create a deck with a name that already exists, an error message is displayed, and the command is not executed.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Betahaxer"},"content":"* **Empty Deck Name**: if the new deck name is empty or consists only of whitespaces, it is considered invalid.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Betahaxer"},"content":"Note that the provided deck name will be trimmed.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Betahaxer"},"content":"A `FlashCLIArgumentException` will be thrown for each of these cases, with a custom message and the error is displayed to the user.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Betahaxer"},"content":"#### Implementation of `DeckManager.createDeck()`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Betahaxer"},"content":"Below shows the sequence diagram of the operations of creating a deck:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Betahaxer"},"content":"![](images/CreateDeckSequenceDiagram.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Betahaxer"},"content":"1. When the command is executed using `CommandCreateDeck#executeCommand()`, the `DeckManager.createDeck()` method is called.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Betahaxer"},"content":"2. The `DeckManager.createDeck()` method checks for the conditions listed above.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Betahaxer"},"content":"3. Then, a new `Deck` object is created and stored in the LinkHashMap, with the name as the key and the `Deck` object as the value.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Betahaxer"},"content":"4. A success message will then be shown to the user upon completion.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Betahaxer"},"content":"The diagram purposely omits interactions with `Ui` as it would unnecessarily complicate the diagram. Hence, to clarify, the error and success messages will be shown to the user for each condition. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Betahaxer"},"content":"**Note**: The lifeline for `CommandCreateDeck` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Betahaxer"},"content":"#### Why is it implemented this way?","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Betahaxer"},"content":"- Decks are not allowed to have duplicates as it would decrease usability of the application","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Betahaxer"},"content":"- As such, a type of HashMaps has to be used. LinkedHashMaps are chosen due to the small time complexity to find decks, and also for their ability to handle duplicates efficiently. The reason for LinkedHashMaps over regular HashMaps is explained in the [select decks feature](#).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Betahaxer"},"content":"- The features for Decks are also in a separate class `DeckManger` to align with the Single Responsibility Principle","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Betahaxer"},"content":"#### Why is it implemented this way?","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Betahaxer"},"content":"- **Deck name uniqueness** is enforced to prevent user confusion and improve usability, ensuring each deck can be clearly identified.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Betahaxer"},"content":"- A **`LinkedHashMap`** is used over `HashMap` for efficient `O(1)` lookups and to preserve the insertion order of decks, which supports predictable and user-friendly display — a consideration also relevant in the [select decks feature](#).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Betahaxer"},"content":"- **`DeckManager` handles all deck-related logic** to follow the **Single Responsibility Principle**, improving code maintainability and separation of concerns.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Betahaxer"},"content":"#### Alternatives Considered:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Betahaxer"},"content":"- See [Select Decks](#)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Betahaxer"},"content":"### 3.2.2. Renaming decks","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Betahaxer"},"content":"The `rename` command is implemented using the `Deck` class and the `CommandRenameDeck` class. Similar to creating decks, a hashmap is used to track existing deck names. A deck has to be selected before being able to use this command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Betahaxer"},"content":"#### Implementation of `DeckManager.renameDeck()`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Betahaxer"},"content":"Below shows the sequence diagram for the operations of rename deck:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Betahaxer"},"content":"![](images/RenameDeckSequenceDiagram.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Betahaxer"},"content":"1. The user issues the command to rename an existing deck.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Betahaxer"},"content":"2. The `DeckManager.renameDeck()` method checks whether the deck name already exists in the hashmap.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Betahaxer"},"content":"3. If the new name is unique, the `name` attribute of `Deck` object will be updated to the new name. Then, the new name with the renamed `Deck` object will be added to the hashmap as a new entry. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Betahaxer"},"content":"4. The old entry will then be removed from the hashmap.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Betahaxer"},"content":"#### Handling Edge Cases","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Betahaxer"},"content":"* **Unchanged Name**: If the user renames back to the same name as previous, it will not be allowed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Betahaxer"},"content":"* **Duplicate Deck Name**: The user will not be able to rename the selected deck to deck names that are already created.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Betahaxer"},"content":"* **Empty Deck Name / Whitespace-Only Names**: Empty deck names or names consisting solely of spaces are considered invalid.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Betahaxer"},"content":"A `FlashCLIArgumentException` will be thrown for each of these cases, with a custom message and the error is displayed to the user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Betahaxer"},"content":"### 3.2.3. Listing all decks","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Betahaxer"},"content":"The `decks` command is implemented using the `Deck` class and the `CommandViewDecks` class. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Betahaxer"},"content":"#### Implementation of `DeckManager.viewDecks()`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Betahaxer"},"content":"* Using the `StringBuilder` class from `java.lang`, the method prints the name of each deck in the hashmap, along with a counter index that goes from 1 to n.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Betahaxer"},"content":"#### Handling Edge Cases","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Betahaxer"},"content":"* **No Decks**: If there are no decks available, the user will not be able to list them.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Betahaxer"},"content":"A `FlashCLIArgumentException` will be thrown for each of these cases, with a custom message and the error is displayed to the user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Betahaxer"},"content":"### 3.2.4. Selecting a deck","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Betahaxer"},"content":"This command allows the user to select a deck via its `INDEX`, which can be viewed using the `decks` command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Betahaxer"},"content":"The `select` command is implemented using the `Deck` class and the `CommandSelectDeck` class.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Betahaxer"},"content":"#### **Before selecting a deck, these conditions must be satisfied:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Betahaxer"},"content":"* **No Decks**: If there are no decks available, the user will not be able to select any decks.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Betahaxer"},"content":"* **Invalid index**: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Betahaxer"},"content":"  * Checks the following conditions:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Betahaxer"},"content":"    * Empty or whitespace input provided","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Betahaxer"},"content":"    * Not a number","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Betahaxer"},"content":"    * Index out of bounds","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Betahaxer"},"content":"A `FlashCLIArgumentException` will be thrown for each of these cases, with a custom message and the error is displayed to the user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Betahaxer"},"content":"#### Implementation of `DeckManager.selectDeck()`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Betahaxer"},"content":"![](images/SelectDeckSequenceDiagram.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Betahaxer"},"content":"* Checks for the [conditions](#before-selecting-a-deck-these-conditions-must-be-satisfied) listed above","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Betahaxer"},"content":"* `DeckManager.checkAndGetListIndex()` checks if the index is valid and returns listIndex.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Betahaxer"},"content":"* Then, we get the deck corresponding to that index. The `LinkedHashMap` has to be converted into a `Set` via the `entrySet()` method.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Betahaxer"},"content":"### 3.2.5. Deleting a deck","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Betahaxer"},"content":"The `remove` command is implemented using the `Deck` class and the `CommandDeleteDeck` class.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Betahaxer"},"content":"#### Implementation of `DeckManager.deleteDeck()`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Betahaxer"},"content":"* Removes the selected deck from the hashmap via its key if the deck exists.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Betahaxer"},"content":"* Also deselects the deck if the currentDeck is the deck being deleted. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Betahaxer"},"content":"* A confirmation message is raised to the user before deletion. This can be found in `Parser`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Betahaxer"},"content":"#### Handling Edge Cases","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Betahaxer"},"content":"* **No Decks**: There are no decks to delete.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Betahaxer"},"content":"* **Deck not found**: The deck does not exists as it is not in the hashmap. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Betahaxer"},"content":"* **Empty Deck Name / Whitespace-Only Names**: The deck name is empty or consists of only whitespace, which is not a valid deck name.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Betahaxer"},"content":"A `FlashCLIArgumentException` will be thrown for each of these cases, with a custom message and the error is displayed to the user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Betahaxer"},"content":"### 3.2.6. Searching","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"ManZ9802"},"content":"#### Design","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"ManZ9802"},"content":"The flashcard application supports searching for flashcards either within the currently selected deck or globally across all decks.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"ManZ9802"},"content":"The search feature is designed with the following constraints:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"ManZ9802"},"content":"- Users may search by question (`/q`) and/or answer (`/a`)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"ManZ9802"},"content":"- If no deck is selected, the search is performed globally across all decks","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"ManZ9802"},"content":"- If a deck is selected, only that deck is searched","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"ManZ9802"},"content":"- The system is case-insensitive and supports partial matches","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"ManZ9802"},"content":"##### Class Diagram","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"ManZ9802"},"content":"The following PlantUML diagram shows the key classes involved in the search operation:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"ManZ9802"},"content":"![](images/SearchClassDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"ManZ9802"},"content":"##### Sequence Diagram","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"ManZ9802"},"content":"Below is a simplified sequence of how a search request is handled:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"ManZ9802"},"content":"![](images/SearchSequenceDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"ManZ9802"},"content":"#### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"ManZ9802"},"content":"##### `Deck#searchFlashcardQuestion(String arguments)`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"ManZ9802"},"content":"This method parses the search arguments for `/q` and `/a` prefixes and returns flashcards that match either (or both) the question or answer. It supports edge cases such as:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"ManZ9802"},"content":"- Only `/q` or only `/a` provided","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"ManZ9802"},"content":"- Input in any order (`/a first /qsecond` works too)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"ManZ9802"},"content":"- Case insensitivity","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"ManZ9802"},"content":"The method throws a `FlashCLIArgumentException` if neither `/q` nor `/a` is present.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"ManZ9802"},"content":"```java","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"ManZ9802"},"content":"String queryQuestion \u003d ...; // parsed from arguments","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"ManZ9802"},"content":"String queryAnswer \u003d ...;   // parsed from arguments","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"ManZ9802"},"content":"for (Flashcard f : flashcards) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"ManZ9802"},"content":"  boolean matches \u003d ...;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"ManZ9802"},"content":"  if (matches) matched.add(f);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"ManZ9802"},"content":"return matched;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"ManZ9802"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"ManZ9802"},"content":"##### `DeckManager#globalSearch(String arguments)`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"ManZ9802"},"content":"This method iterates through all decks in `DeckManager.decks`, calls `deck.searchFlashcardQuestion()`, and returns a formatted string of results including the deck name, question, and answer.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"ManZ9802"},"content":"**Edge cases handled:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"ManZ9802"},"content":"- No decks exist → `EmptyListException`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"ManZ9802"},"content":"- Malformed arguments → `FlashCLIArgumentException`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"ManZ9802"},"content":"- No matches → returns `\"No matching flashcards found in any deck.\"`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"ManZ9802"},"content":"##### `CommandSearchFlashcard`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"ManZ9802"},"content":"This command bridges user input with search logic:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"ManZ9802"},"content":"- If `DeckManager.currentDeck \u003d\u003d null`, invokes `DeckManager.globalSearch()`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"ManZ9802"},"content":"- Otherwise, calls `Deck.searchFlashcardQuestion()`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"ManZ9802"},"content":"- Sends output to `Ui.showToUser(...)`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"ManZ9802"},"content":"#### Considerations \u0026 Limitations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"ManZ9802"},"content":"- Currently does not support regex or fuzzy matching","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"ManZ9802"},"content":"- Could be extended to highlight matched terms or paginate long results","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"ManZ9802"},"content":"- Error handling is gracefully propagated to the UI layer","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Betahaxer"},"content":"### 3.2.7. Save/Load Functionality","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"ManZ9802"},"content":"#### Design","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"ManZ9802"},"content":"The Save/Load functionality ensures persistence of flashcard data between sessions. When the program exits, it serializes all in-memory `Deck` objects into individual `.txt` files in the `./data/decks` directory. Upon startup, it reconstructs the decks by reading and parsing these `.txt` files.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"ManZ9802"},"content":"This design allows easy access, portability, and simple debugging via text files, avoiding binary or JSON formats for simplicity.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"ManZ9802"},"content":"#### Class Diagram","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"ManZ9802"},"content":"![](images/SaveClassDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"ManZ9802"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"ManZ9802"},"content":"![](images/SaveSequenceDiagram.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"ManZ9802"},"content":"#### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"ManZ9802"},"content":"##### `Saving.saveAllDecks(Map\u003cString, Deck\u003e)`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"ManZ9802"},"content":"- Creates `./data/decks/` directory if not present  ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"ManZ9802"},"content":"- Removes any `.txt` files that no longer correspond to in-memory decks  ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"ManZ9802"},"content":"- Iterates over each deck and writes its flashcards in:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"ManZ9802"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"ManZ9802"},"content":"Q: question text","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"ManZ9802"},"content":"A: answer text","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"ManZ9802"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"ManZ9802"},"content":"Each flashcard is separated by a blank line for clarity.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"ManZ9802"},"content":"**Edge cases handled:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"ManZ9802"},"content":"- Missing directory → automatically created","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"ManZ9802"},"content":"- Deleted decks → corresponding `.txt` files removed","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"ManZ9802"},"content":"##### `Loading.loadAllDecks()`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"ManZ9802"},"content":"- Reads all `.txt` files in `./data/decks`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"ManZ9802"},"content":"- Infers deck name from filename (e.g. `bio.txt` → deck name \u003d `bio`)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"ManZ9802"},"content":"- Parses `Q:` and `A:` pairs into `Flashcard` objects","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"ManZ9802"},"content":"- Adds each loaded `Deck` to a `LinkedHashMap`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"ManZ9802"},"content":"**Edge cases handled:**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"ManZ9802"},"content":"- Non-existent or empty folder → returns empty deck map","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"ManZ9802"},"content":"- Files with missing/partial questions/answers → skipped or handled gracefully","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"ManZ9802"},"content":"##### `FlashCLI.main()` Integration","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"ManZ9802"},"content":"```java","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"ManZ9802"},"content":"DeckManager.decks \u003d Loading.loadAllDecks();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"ManZ9802"},"content":"...","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"ManZ9802"},"content":"Saving.saveAllDecks(DeckManager.decks);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"ManZ9802"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"ManZ9802"},"content":"- Loads decks at startup  ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"ManZ9802"},"content":"- Saves them at exit, after user types the `exit` command  ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"ManZ9802"},"content":"#### Considerations","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"ManZ9802"},"content":"- File format is human-readable and editable","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"ManZ9802"},"content":"- Current implementation assumes well-formed files","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"ManZ9802"},"content":"- Future improvements: introduce backup/restore, encryption, or support for import/export formats like JSON/CSV","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"Betahaxer"},"content":"### 3.2.8. Viewing quiz results","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"lishunyang12"},"content":"#### Design","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"lishunyang12"},"content":"The quiz result system tracks and displays user performance after completing a flashcard quiz. It maintains three parallel collections during quizzes:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"lishunyang12"},"content":"    incorrectFlashcards - Stores flashcards answered incorrectly","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"lishunyang12"},"content":"    incorrectIndexes - Tracks original positions of incorrect answers","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"lishunyang12"},"content":"    incorrectAnswers - Records the user\u0027s wrong responses","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"lishunyang12"},"content":"This design enables detailed post-quiz analysis while maintaining data consistency between the collections.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"lishunyang12"},"content":"#### Class Diagram","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"lishunyang12"},"content":"![](images/QuizResultClassDiagram.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"lishunyang12"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"lishunyang12"},"content":"![](images/QuizresultSequence-Quiz_result_Display_Sequence.png)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"lishunyang12"},"content":"#### Key operations:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"lishunyang12"},"content":"1. Validates quiz completion status ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"lishunyang12"},"content":"2. Ensures collection sizes match","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"lishunyang12"},"content":"3. Calculates and displays:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"lishunyang12"},"content":"4. Total questions answered","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"lishunyang12"},"content":"5. Correct/incorrect counts","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"lishunyang12"},"content":"6. Calls showMistakes() for detailed review","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"Betahaxer"},"content":"## Appendix A: Product scope","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"Betahaxer"},"content":"**Target user profile:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"Betahaxer"},"content":"- CS2113 student","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"ManZ9802"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"ManZ9802"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"ManZ9802"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"Betahaxer"},"content":"**Value proposition:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"ManZ9802"},"content":"This app provides a no-frills solution to helping CS2113 students study and ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"ManZ9802"},"content":"practice using terminal commands while memorising key information required for the course.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"Betahaxer"},"content":"## Appendix B: User Stories","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                                                    | So that I can ...                                      |","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"Betahaxer"},"content":"|---------|----------|------------------------------------------------------------------|--------------------------------------------------------|","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"Betahaxer"},"content":"| v1.0    | student  | create flashcards with CS2113 information on them                | memorise information in digestible quantities          |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"Betahaxer"},"content":"| v1.0    | student  | view all my flashcards created                                   | see how many of them are created                       |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"Betahaxer"},"content":"| v1.0    | student  | view the questions without answers                               | test my understanding of a specific question           |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"Betahaxer"},"content":"| v1.0    | student  | delete flashcards                                                | remove outdated information                            |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"Betahaxer"},"content":"| v1.0    | student  | edit my flashcards                                               | make updates to flashcards when necessary              |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"Betahaxer"},"content":"| v1.0    | student  | show the answer after answering the questions                    | check my answers                                       |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | mark each flashcard according to how well I remember the content | review concepts I get wrong often                      |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | search for specific flashcards by keywords                       | revise certain questions I have trouble with           |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | see what functions the flashcard app has                         | know how to use the commands effectively               |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | test all cards in a deck                                         | revise the concepts related to the deck\u0027s topic        |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | shuffle the deck                                                 | prevent memorizing answers based on order              |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | view flashcards that I got wrong after testing                   | identify my mistakes and improve my understanding      |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | add code snippets into flashcards                                | properly format code in questions to aid understanding |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | organise flashcards into different decks                         | study them by topic                                    |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | rename decks                                                     | make updates to the deck\u0027s topic                       |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | view all decks                                                   | easily navigate and manage my flashcards               |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | search for specific flashcards                                   | find the flashcard I want quickly                      |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | access my flashcards and decks across sessions                   | continue my revision without losing progress           |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"Betahaxer"},"content":"| v2.0    | student  | see a nice UI                                                    | have a comfortable viewing experience                  |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"Betahaxer"},"content":"## Appendix C: Non-Functional Requirements","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"ElonKoh"},"content":"1. Should be compatible on any mainstream OS as long as it has Java 17 or above installed. ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"ElonKoh"},"content":"2. The system should respond to user input within 5 seconds for most commands under typical usage.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"ElonKoh"},"content":"3. Should be intuitive for most users familiar with a command line user interface .","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"ElonKoh"},"content":"4. End-users should be able to set up and run the flashcard quizzes within 3 steps (create deck, add flashcard, quiz).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"ElonKoh"},"content":"5. The system has automated logging after the end of every session, and be able to store up to a casual amount of usage.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"Betahaxer"},"content":"## Appendix D: Glossary","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"felfelyuen"},"content":"* *Mainstream OS* - Windows, Linux, Unix, macOS","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"felfelyuen"},"content":"* *Flashcard* - An Object with parameters *index*, *question*, *answer*, *codeSnippet*, *isLearned*","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"felfelyuen"},"content":"* *Deck* - An Object that holds array of Flashcards, as well as other parameters.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"felfelyuen"},"content":"* *CLI* - Command Line Interface","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"felfelyuen"},"content":"* *EmptyListException* - thrown if there is an empty list present","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"felfelyuen"},"content":"* *FlashCLIArgumentException* - thrown if an invalid input is inputted","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"felfelyuen"},"content":"* *QuizCancelledException* - thrown if the quiz is cancelled halfway","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"Betahaxer"},"content":"## Appendix E: Instructions for manual testing","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"lishunyang12"},"content":"### Notes","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"lishunyang12"},"content":"* *Testing Purpose* - These instructions are for basic testing only","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"lishunyang12"},"content":"* *Expected Output* - Describes system behavior, not exact console output","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"lishunyang12"},"content":"### Setup","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"lishunyang12"},"content":"* *Java Requirement* - Ensure Java 17+ is installed","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"lishunyang12"},"content":"* *Download* - Get latest FlashCLI.jar","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"lishunyang12"},"content":"* *Run Command* - Execute `java -jar FlashCLI_2.0.jar`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"lishunyang12"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"lishunyang12"},"content":"### Test Cases","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"lishunyang12"},"content":"#### 1. Userguide Command","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"lishunyang12"},"content":"* *Test Case 1 - Valid Input*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: the user is under a deck named \"computer science\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"lishunyang12"},"content":"  user_guide:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"lishunyang12"},"content":"* *Expected*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"lishunyang12"},"content":"  Quick Start:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"lishunyang12"},"content":"  Create a deck of flashcards with \"new\", select it with \"select\", and begin adding flashcards with \"add\"!","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"lishunyang12"},"content":"    List of commands","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"lishunyang12"},"content":"#### 2. Add Flashcard Command","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"lishunyang12"},"content":"* *Test Case 1 - Valid Input*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: the user is under a deck named \"computer science\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"lishunyang12"},"content":"  add /q What is binary number 1101\u0027s decimal Equivalent? /a 13","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"lishunyang12"},"content":"* *Expected*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"lishunyang12"},"content":"  Added a new flashcard.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"lishunyang12"},"content":"  Question: What is binary number 1101\u0027s decimal Equivalent?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"lishunyang12"},"content":"  Answer: 13","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"lishunyang12"},"content":"  You have 1 flashcard(s) in your deck.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"lishunyang12"},"content":"* *Test Case 2 - Missing deck*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: None","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"lishunyang12"},"content":"  add /q What is binary number 1101\u0027s decimal Equivalent? /a 13","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"lishunyang12"},"content":"* *Expected*: Prompts for category input","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"lishunyang12"},"content":"  Select a deck first!","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"lishunyang12"},"content":"* *Test Case 3 - Reversed order*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: the user is under a deck named \"computer science\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"lishunyang12"},"content":"  add /a What is binary number 1101\u0027s decimal Equivalent? /q 13","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"lishunyang12"},"content":"* *Expected*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"lishunyang12"},"content":"  /a Answer first /q Question later","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"lishunyang12"},"content":"  Usage: add /q {QUESTION} /a {ANSWER}","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"lishunyang12"},"content":"#### 3. Create deck Command","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"lishunyang12"},"content":"* *Test Case 1 - Valid Input*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: None","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"lishunyang12"},"content":"  new computer science","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"lishunyang12"},"content":"* *Expected*: Deck \"computer science\" created, number of decks: 1","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"lishunyang12"},"content":"#### 4. Show Decks Command","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"lishunyang12"},"content":"* *Test Case 1 - Valid Input*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: At least 1 deck exists","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"lishunyang12"},"content":"  decks","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"lishunyang12"},"content":"* *Expected*: List of decks:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"lishunyang12"},"content":"1. computer science","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"lishunyang12"},"content":"#### 5. Show Flashcards Command","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"lishunyang12"},"content":"* *Test Case 1 - Valid Input*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: Under a deck and at least 1 flashcard exists","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"lishunyang12"},"content":"  list","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"lishunyang12"},"content":"* *Expected*: List of flashcards:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"lishunyang12"},"content":"1. Is ant a type of insect?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"lishunyang12"},"content":"#### 6. View Category Command","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"lishunyang12"},"content":"* *Test Case*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: Under a deck and at least 1 flashcard exists","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"lishunyang12"},"content":"  view-category","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"lishunyang12"},"content":"* *Expected*: Displays all categories","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"lishunyang12"},"content":"#### 7. Learn and unlearn Command","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"lishunyang12"},"content":"* *Test Case","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: Under a deck and at least 1 flashcard exists","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"lishunyang12"},"content":"* *Input1*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"lishunyang12"},"content":"  mark_learned 1","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"lishunyang12"},"content":"* *Expected1*: Changed flashcard number 1 into learned","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"lishunyang12"},"content":"* ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"lishunyang12"},"content":"* *Input2*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"lishunyang12"},"content":"  mark_unlearned 1","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"lishunyang12"},"content":"* *Expected1*: Changed flashcard number 1 into unlearned","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"lishunyang12"},"content":"#### 8. Insert code snippet","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"lishunyang12"},"content":"* *Test Case*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: Under a deck and at least 1 flashcard exists","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"lishunyang12"},"content":"  insert_code 1 /c printf(hello world)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"lishunyang12"},"content":"* *Expected*: Inserted code snippet to flashcard.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"lishunyang12"},"content":"  Question: hello","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"lishunyang12"},"content":"  Answer: world","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"lishunyang12"},"content":"  Code Snippet: printf(hello world)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"lishunyang12"},"content":"#### 8. Quiz mode","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"lishunyang12"},"content":"* *Test Case*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: Under a deck and at least 1 flashcard exists","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"lishunyang12"},"content":"  quiz","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"lishunyang12"},"content":"* *Expected*: Entering quiz mode... get ready!","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"lishunyang12"},"content":"  Type \u0027exit_quiz\u0027 to cancel the quiz and leave at anytime","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"lishunyang12"},"content":"  Cancelling the quiz would not save your results","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"lishunyang12"},"content":"  You have 1 question left:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"lishunyang12"},"content":"  What is binary number 1101\u0027s decimal Equivalent? ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"lishunyang12"},"content":"* ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"lishunyang12"},"content":"    13","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"lishunyang12"},"content":"* *Expected*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"lishunyang12"},"content":"  Correct!","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"lishunyang12"},"content":"  You finished the test! You took: 15 seconds!","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"lishunyang12"},"content":"  Type view_res to check your test result","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"lishunyang12"},"content":"    view_res","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"lishunyang12"},"content":"* *Expected*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"lishunyang12"},"content":"  Correct!","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"lishunyang12"},"content":"  You have answered 1 questions in the quiz.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"lishunyang12"},"content":"  Great job! You have answered all of questions correctly.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"lishunyang12"},"content":"#### 9. Edit flashcard command","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"lishunyang12"},"content":"* *Test Case*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: Under a deck and at least 1 flashcard exists","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"lishunyang12"},"content":"  edit 1 /q what is binary number 1001\u0027s decimal Equivalent? /a 9","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"lishunyang12"},"content":"* *Expected*: Inserted code snippet to flashcard.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"lishunyang12"},"content":"  Question: hello","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"lishunyang12"},"content":"  Answer: world","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"lishunyang12"},"content":"  Code Snippet: Updated flashcard.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"lishunyang12"},"content":"  Edit Question: hello","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"lishunyang12"},"content":"  Updated: what is binary number 1001\u0027s decimal Equivalent?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"lishunyang12"},"content":"  Edit Answer: world","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"lishunyang12"},"content":"  Updated: 9","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"lishunyang12"},"content":"#### 10. search flashcard","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"lishunyang12"},"content":"* *Test Case1 - search by question*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: Under a deck and at least 1 flashcard exists","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"lishunyang12"},"content":"  search /q What is OOP?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"lishunyang12"},"content":"* *Expected*: Flashcards matched:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"lishunyang12"},"content":"  Question: What is OOP?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"lishunyang12"},"content":"  Answer: Object-Oriented Prog","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"lishunyang12"},"content":"* *Test Case2 - search by answer*","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"lishunyang12"},"content":"* *Prerequisites*: Under a deck and at least 1 flashcard exists","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"lishunyang12"},"content":"* *Input*:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"lishunyang12"},"content":"  search /a Object-Oriented Prog","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"lishunyang12"},"content":"  ```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"lishunyang12"},"content":"* *Expected*: Flashcards matched:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"lishunyang12"},"content":"  Question: What is OOP?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"lishunyang12"},"content":"  Answer: Object-Oriented Prog","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"lishunyang12"},"content":"### Command Prefix Key","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"lishunyang12"},"content":"| Prefix | Purpose      | Example                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"Betahaxer"},"content":"|--------|--------------|---------------------------|","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"lishunyang12"},"content":"| /q     | Question     | `/q What is OOP?`         |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"lishunyang12"},"content":"| /a     | Answer       | `/a Object-Oriented Prog` |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"lishunyang12"},"content":"| /c     | Code snippet | `/c System.out.println()` |","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"ManZ9802":135,"felfelyuen":10,"Betahaxer":304,"lishunyang12":232,"-":28,"ElonKoh":57}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"FlashCLI 2.0 is a command-line flashcard application designed specifically for CS2113 Software Engineering students. It helps students create, manage, and review flashcards efficiently, making it easier to retain important concepts in Java, software design, and coding best practices.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"2. Download the latest `.jar` file from [here](https://github.com/AY2425S2-CS2113-F11-4/tp/releases).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for FlashCLI.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar FlashCLI.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"   You should be greeted with a welcome message.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`user_guide`** and pressing Enter will list the available commands.\u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"   Some example commands you can try:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"    * `new testDeck` : Creates a new deck named \"testDeck\".","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"    * `select 1` : Selects the first deck.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"    * `add /q What is an assertion? /a Assertions are used to...` : Creates a new flashcard with the question and answer provided.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"    * `list`: Shows the list of flashcards in the selected deck.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"### Flashcard Features","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"### Viewing user guide: `user_guide`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"Displays possible instructions that can be inputted.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"Format: `user_guide`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"felfelyuen"},"content":"Example: ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"felfelyuen"},"content":"[INPUT]: user_guide","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"felfelyuen"},"content":"Quick Start:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"felfelyuen"},"content":"Create a deck of flashcards with \"new\", select it with \"select\", and begin adding flashcards with \"add\"!","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"felfelyuen"},"content":"List of commands:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"felfelyuen"},"content":"\"add\": creates a flashcard","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"felfelyuen"},"content":"\"list\": shows list of flashcards","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"felfelyuen"},"content":"\"qn\": views the flashcard\u0027s question","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ManZ9802"},"content":"\"ans\": views the flashcard\u0027s answer","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"felfelyuen"},"content":"\"delete\": deletes the flashcard","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"felfelyuen"},"content":"\"edit\": edits the flashcard question/answer","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"felfelyuen"},"content":"\"insert_code\": inserts code snippet for a flashcard","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":"\"quiz\": quizzes the unlearned flashcards","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"felfelyuen"},"content":"\"mark_learned\": marks flashcard as learned","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"felfelyuen"},"content":"\"mark_unlearned\": marks flashcard as unlearned","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"felfelyuen"},"content":"\"view_results\": views results from quiz after quiz is completed","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"felfelyuen"},"content":"\"new\": creates a new deck of flashcards","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"felfelyuen"},"content":"\"rename\": renames flashcard deck","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"felfelyuen"},"content":"\"decks\": shows list of decks","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"\"select\": selects a deck ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"\"remove\": deletes a deck","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"\"unselect\": unselects a deck","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ManZ9802"},"content":"\"search\": searches within a deck or globally","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"felfelyuen"},"content":"\"exit\": exits the program","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"felfelyuen"},"content":"Go to the flashCli User Guide website for more details","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"### Create flashcards: `add`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"Creates a flashcard which consists of the fields questions and answers and adds it to the selected deck. All fields are required. A deck must be selected first before using this command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"Refer to the Developer\u0027s Guide for more information on the command.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ManZ9802"},"content":"Format: `add /q QUESTION /a ANSWER`\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"Examples:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ManZ9802"},"content":"* `add /q What language is used in CS2113? /a Java` → Adds a new flashcard with the question **What language is used in CS2113?** and answer **Java** to the current selected deck.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"If no deck is selected, this command cannot be used.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"felfelyuen"},"content":"### Summary view of the flashcard deck: `list`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"felfelyuen"},"content":"Shows a list of all the flashcards in your deck, including information about the index and question of each flashcard. Limit to only 50 flashcards per page.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"felfelyuen"},"content":"Format: `list`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"felfelyuen"},"content":"Examples:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"felfelyuen"},"content":"[INPUT]: list","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ManZ9802"},"content":"1. /q What colour is an apple? ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ManZ9802"},"content":"2. /q What language is used in CS2113?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"felfelyuen"},"content":"### View question only: `qn`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"felfelyuen"},"content":"Show the question of a flashcard via its index.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"felfelyuen"},"content":"Format: `qn INDEX`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"felfelyuen"},"content":"INDEX must be a positive integer, ie: 1, 2, 3","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"felfelyuen"},"content":"Examples:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"felfelyuen"},"content":"[INPUT]: qn 3","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: What is a java interface?","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"felfelyuen"},"content":"interface Interface{","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"felfelyuen"},"content":"void method();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"felfelyuen"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ManZ9802"},"content":"### View answer only: `ans`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ManZ9802"},"content":"Show the answer of a flashcard via its index.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ManZ9802"},"content":"Format: `ans INDEX`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ManZ9802"},"content":"INDEX must be a positive integer, ie: 1, 2, 3","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ManZ9802"},"content":"Examples:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ManZ9802"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ManZ9802"},"content":"[INPUT]: ans 3","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ManZ9802"},"content":"[OUTPUT]:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ManZ9802"},"content":"Answer of flashcard 3","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ManZ9802"},"content":"Answer: Java","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ManZ9802"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ElonKoh"},"content":"### Edit question and answer: `edit`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ElonKoh"},"content":"Show the question of a flashcard via its index.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ElonKoh"},"content":"Format: `edit INDEX /q QUESTION /a ANSWER`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ElonKoh"},"content":"INDEX must be a positive integer, ie: 1, 2, 3","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ElonKoh"},"content":"Examples:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ElonKoh"},"content":"```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ElonKoh"},"content":"[INPUT]: edit 3 /q What is a java interface? /a a special class","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ElonKoh"},"content":"[OUTPUT]: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ElonKoh"},"content":"Updated flashcard","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ElonKoh"},"content":"Edit Question: Old placeholder question here","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ElonKoh"},"content":"Updated: What is a java interface?","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ElonKoh"},"content":"Edit Answer: Old placeholder answer here","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ElonKoh"},"content":"Updated: a special class","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ElonKoh"},"content":"```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ElonKoh"},"content":"### Insert code snippet: `Insert_code`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ElonKoh"},"content":"Show the question of a flashcard via its index.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ElonKoh"},"content":"Format: `insert_code INDEX /c CODE_SNIPPET`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ElonKoh"},"content":"INDEX must be a positive integer, ie: 1, 2, 3","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ElonKoh"},"content":"Examples:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ElonKoh"},"content":"```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ElonKoh"},"content":"[INPUT]: insert_code 3 /c interface Interface{ void method(); }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ElonKoh"},"content":"[OUTPUT]: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ElonKoh"},"content":"Inserted code snippet to flashcard.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ElonKoh"},"content":"Question: What is a java interface?","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ElonKoh"},"content":"Answer: a special class","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ElonKoh"},"content":"Code Snippet: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ElonKoh"},"content":"interface Interface{ ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ElonKoh"},"content":"   void method(); ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ElonKoh"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ElonKoh"},"content":"```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ManZ9802"},"content":"### Delete flashcard: `delete`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ManZ9802"},"content":"Delete the flashcard in the deck via its index","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ManZ9802"},"content":"Format: `delete INDEX`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ManZ9802"},"content":"INDEX must be a positive integer, ie: 1, 2, 3","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ManZ9802"},"content":"Examples:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ManZ9802"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ManZ9802"},"content":"[INPUT]: delete 3","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ManZ9802"},"content":"[OUTPUT]:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ManZ9802"},"content":"Deleted flashcard 3","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ManZ9802"},"content":"Question: What language is used in CS2113?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ManZ9802"},"content":"Answer: Java","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ManZ9802"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"felfelyuen"},"content":"### Quiz mode with timer: `quiz`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"felfelyuen"},"content":"Enters quiz mode. The unlearned flashcards in the deck would be shuffled and the user would have to enter the correct answer for each flashcard. If the flashcard is answered correctly, it would be marked as learned, and the user would not see the flashcard again if they enter quiz mode afterwards. They can re-add the question by marking the flashcard as unlearned. After the quiz, they can type `view_results` to view their results and re-quiz the unlearned flashcards.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"felfelyuen"},"content":"The user can type `exit_quiz` to exit the test mode, but the progress would not be saved.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"felfelyuen"},"content":"Format: `quiz`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"felfelyuen"},"content":"Examples: ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"felfelyuen"},"content":"[INPUT]: quiz","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: Entering quiz mode... get ready!","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: You have 2 questions left:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: What language is used in CS2113?","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"felfelyuen"},"content":"[INPUT]: Java.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: Correct!","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: You have 1 question left:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: What colour is an apple?","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"felfelyuen"},"content":"[INPUT]: Blue.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: Incorrect.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: You finished the test! You took: 22 seconds!","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"felfelyuen"},"content":"Type view_results to check your test result","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"felfelyuen"},"content":"### Mark as learned: `mark_learned`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"felfelyuen"},"content":"Marks the question as learned. Flashcards that are correctly answered in quiz mode would be automatically marked as learned. Learned flashcards are not tested again in quiz mode.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"felfelyuen"},"content":"Format: `mark_learned INDEX`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"felfelyuen"},"content":"INDEX must be a positive integer, i.e: 1, 2, 3","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"felfelyuen"},"content":"Examples:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"felfelyuen"},"content":"[INPUT]:mark_learned 2","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: Changed flashcard number 2 into learned","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"felfelyuen"},"content":"### Unmark learned: `mark_unlearned`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"felfelyuen"},"content":"Marks the flashcard as unlearned. Unlearned flashcards are tested in quiz mode.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"felfelyuen"},"content":"Format: `mark_unlearned INDEX`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"felfelyuen"},"content":"INDEX must be a positive integer, i.e: 1, 2, 3","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"felfelyuen"},"content":"Examples:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"felfelyuen"},"content":"[INPUT]:mark_unlearned 2","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"felfelyuen"},"content":"[OUTPUT]: Changed flashcard number 2 into unlearned","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"felfelyuen"},"content":"```","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Betahaxer"},"content":"### View test results: `view_results`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Betahaxer"},"content":"Views the flashcards that were answered wrong after test mode.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Betahaxer"},"content":"Format: `view_results`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Betahaxer"},"content":"Examples:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Betahaxer"},"content":"[INPUT]: view_resultS","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Betahaxer"},"content":"[OUTPUT]: Your test for DECK_WEEK result is 9/10, correctness: 90%","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Betahaxer"},"content":"Your wrong answers are following:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Betahaxer"},"content":"-Q1. What colour is an apple?  Your answer: Red","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Betahaxer"},"content":"Correct answer: Blue","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Betahaxer"},"content":"-Q5. What is the capital of the UK? Your answer: Washington DC     ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Betahaxer"},"content":"Correct answer: London","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Betahaxer"},"content":"    Type “redo” to restart the test.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Betahaxer"},"content":"```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ManZ9802"},"content":"### Search Flashcards: `search`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ManZ9802"},"content":"Searches for the specified flashcard. If no deck is selected, the search will be across all decks.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ManZ9802"},"content":"However, if a deck is selected, then the search will only be specific to that deck.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ManZ9802"},"content":"Format: `search /q QUESTION /a ANSWER` either /q or /a can be omitted if required. Non-case specific.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ManZ9802"},"content":"Examples:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ManZ9802"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ManZ9802"},"content":"[INPUT]: search /q What language is used in CS2113? /a Java","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ManZ9802"},"content":"[OUTPUT]: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ManZ9802"},"content":"Flashcards matched: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ManZ9802"},"content":"Deck: CS2113","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ManZ9802"},"content":"Question: What language is used in CS2113?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ManZ9802"},"content":"Answer: Java","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ManZ9802"},"content":"[INPUT]: select CS2113","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ManZ9802"},"content":"[INPUT]: search /q What language is used in CS2113?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ManZ9802"},"content":"[OUTPUT]: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ManZ9802"},"content":"Flashcards matched: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ManZ9802"},"content":"Question: What language is used in CS2113?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ManZ9802"},"content":"Answer: Java","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ManZ9802"},"content":"[INPUT]: search /a java","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ManZ9802"},"content":"[OUTPUT]: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ManZ9802"},"content":"Flashcards matched: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ManZ9802"},"content":"Question: What language is used in CS2113?","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ManZ9802"},"content":"Answer: Java","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ManZ9802"},"content":"```","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Betahaxer"},"content":"### Deck Features","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Betahaxer"},"content":"### Create a new deck: `new`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Betahaxer"},"content":"Creates a new deck with the given deck name. Deck name should not already be in use.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Betahaxer"},"content":"**Format:** `new DECKNAME`\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Betahaxer"},"content":"**Examples:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Betahaxer"},"content":"* `new testDeck` → Creates a new deck named **testDeck** (if the name is not already taken).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Betahaxer"},"content":"### **Select a Deck: `select`**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Betahaxer"},"content":"Selects the specified deck via the index. There must be an available deck to select to use this command. You can view decks to select using the `decks` command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Betahaxer"},"content":"**Format:** `select INDEX`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Betahaxer"},"content":"**Examples:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Betahaxer"},"content":"* **`select 1`** → Selects the first deck.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Betahaxer"},"content":"### **Rename a Deck: `rename`**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Betahaxer"},"content":"Renames the currently selected deck to a new name. A deck must be selected before using this command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Betahaxer"},"content":"**Format:** `rename NEWNAME`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Betahaxer"},"content":"**Examples:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Betahaxer"},"content":"* **`rename testDeck2`** → Renames the current deck to **testDeck2**.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Betahaxer"},"content":"### **View All Decks: `decks`**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Betahaxer"},"content":"Displays a list of all available decks.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Betahaxer"},"content":"**Format:** `decks`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Betahaxer"},"content":"**Examples:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Betahaxer"},"content":"* **`decks`** → Lists all existing decks.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Betahaxer"},"content":"### **Delete a Deck: `remove`**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Betahaxer"},"content":"Deletes the specified deck. There will be a confirmation before deletion to prevent accidental deletion. The user can also view decks to delete using the `decks` command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Betahaxer"},"content":"This action is **permanent** and **cannot be undone**.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Betahaxer"},"content":"**Format:** `remove INDEX`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Betahaxer"},"content":"**Examples:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Betahaxer"},"content":"* **`remove 2`** → Deletes the second deck in the list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Betahaxer"},"content":"### **Unselect a Deck: `unselect`**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Betahaxer"},"content":"Unselects the specified deck. There must be a deck selected to use this command. This command does not take any arguments.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Betahaxer"},"content":"**Format:** `unselect`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Betahaxer"},"content":"**Examples:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Betahaxer"},"content":"* **`unselect`** → If deck \"testDeck\" is selected, this unselects \"testDeck\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Betahaxer"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Betahaxer"},"content":"**Q**: I have created many flashcards, will my data be saved?","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Betahaxer"},"content":"**A**: Yes, your data will be saved to a txt file under `./data/decks/`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Betahaxer"},"content":"**A**: It\u0027s easy, simply install FlashCLI using the instructions given in [Quick Start](#Quick-Start). Then, overwrite the txt file located in `./data/decks/` on the new computer.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Betahaxer"},"content":"## Known Issues","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Betahaxer"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Betahaxer"},"content":"| Action               | Format, Examples                                                                                  |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"ElonKoh"},"content":"|----------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Betahaxer"},"content":"| **View User Guide**  | `user_guide`                                                                                      |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"ManZ9802"},"content":"| **Create Flashcard** | `add /q QUESTION /a ANSWER` e.g. `add /q What language is used in CS2113? /a Java`                |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Betahaxer"},"content":"| **List Flashcards**  | `list`                                                                                            |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Betahaxer"},"content":"| **View Question**    | `qn INDEX` e.g. `qn 3`                                                                            |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Betahaxer"},"content":"| **View Answer**      | `ans INDEX` e.g. `ans 3`                                                                          |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Betahaxer"},"content":"| **Delete Flashcard** | `delete INDEX` e.g. `delete 3`                                                                    |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"ManZ9802"},"content":"| **Edit Flashcard**   | `edit INDEX [/q QUESTION] [/a ANSWER]` e.g.  `edit 2 /q What is substitutability? /a A method`    |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"ElonKoh"},"content":"| **Search Flashcard** | `search /q QUESTION /a ANSWER` e.g. `search /q What language is used in CS2113? /a Java`          |      ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Betahaxer"},"content":"| **New Deck**         | `new DECKNAME` e.g.  `new testDeck`                                                               |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Betahaxer"},"content":"| **Select Deck**      | `select DECKNAME` e.g. `select testDeck`                                                          |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Betahaxer"},"content":"| **Rename Deck**      | `rename NEWNAME` e.g. `rename testDeck2`                                                          |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Betahaxer"},"content":"| **View Decks**       | `decks`                                                                                           |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Betahaxer"},"content":"| **Delete Deck**      | `remove DECKNAME` e.g. `remove testDeck`                                                          |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Betahaxer"},"content":"| **Quiz Mode**        | `quiz`                                                                                            |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Betahaxer"},"content":"| **View Results**     | `view_results` , `redo`                                                                           |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"ElonKoh"},"content":"| **Code Snippet**     | `insert_code INDEX /c CODE_SNIPPET` e.g. `insert_code 3 /c interface Interface{ void method(); }` |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Betahaxer"},"content":"| **Mark Learned**     | `mark_learned INDEX` e.g. `mark_learned 2`                                                        |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Betahaxer"},"content":"| **Mark Unlearned**   | `mark_unlearned INDEX` e.g. `mark_unlearned 2`                                                    |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Betahaxer"},"content":"| **Exit**             | `exit`                                                                                            |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"ManZ9802":61,"felfelyuen":96,"Betahaxer":129,"-":32,"ElonKoh":39}},{"path":"docs/diagrams/ChangeIsLearnedSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"actor User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"User -\u003e CommandChangeLearned **: executeCommand()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"CommandChangeLearned++","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"CommandChangeLearned -\u003e Deck++: changeIsLearned()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"    Deck -\u003e Ui++: showToUser(changed isLearned value)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":"return","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":"return","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":"CommandChangeLearned --\u003e User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"felfelyuen"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"felfelyuen":14}},{"path":"docs/diagrams/CreateDeckSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"hide footbox","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"participant \"\u003c\u003cclass\u003e\u003e \\n:FlashCLI\" as FlashCLI","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"participant \"c:CommandCreateDeck\" as CommandCreateDeck","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"participant \"\u003c\u003cclass\u003e\u003e \\n :DeckManager\" as DeckManager","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"participant \":FlashCLIArgumentException\" as FlashCLIArgumentException","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"participant \":Deck\" as Deck","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"FlashCLI -\u003e CommandCreateDeck: executeCommand()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"activate CommandCreateDeck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"CommandCreateDeck -\u003e DeckManager: createDeck(...)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"activate DeckManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"alt invalid or duplicate deck name","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"    DeckManager -\u003e FlashCLIArgumentException","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"    activate FlashCLIArgumentException","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"    deactivate FlashCLIArgumentException","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"else else","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"    create Deck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"    DeckManager -\u003e Deck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"    activate Deck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    Deck --\u003e DeckManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"    deactivate Deck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    DeckManager --\u003e CommandCreateDeck : success message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"    deactivate DeckManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"    CommandCreateDeck --\u003e FlashCLI","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"    deactivate CommandCreateDeck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"    destroy CommandCreateDeck","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"end alt","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Betahaxer":33}},{"path":"docs/diagrams/CreateFlashcardSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"hide footbox","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n :FlashCLI\" as FlashCLI","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"participant \"c:CommandCreateFlashcard\" as CommandCreateFlashcard","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"participant \":Deck\" as Deck","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"participant \":Flashcard\" as Flashcard","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"FlashCLI -\u003e CommandCreateFlashcard: executeCommand()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"activate CommandCreateFlashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"CommandCreateFlashcard -\u003e Deck: createFlashcard()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"activate Deck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"Deck -\u003e Deck: checkQuestionAndAnswer()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"activate Deck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"Deck --\u003e Deck: question and answer","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"deactivate Deck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"create Flashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"Deck -\u003e Flashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"activate Flashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"Flashcard--\u003eDeck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"deactivate Flashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"Deck --\u003e CommandCreateFlashcard: success message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"deactivate Deck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"CommandCreateFlashcard -\u003e Ui: showToUser()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"activate Ui","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"Ui --\u003e CommandCreateFlashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"deactivate Ui","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"CommandCreateFlashcard --\u003e FlashCLI","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"deactivate CommandCreateFlashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"destroy CommandCreateFlashcard","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Betahaxer":37}},{"path":"docs/diagrams/DeleteClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"class CommandDelete {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"  - String arguments","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"  + executeCommand()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"class Deck {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"  + String deleteFlashcard(int): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"CommandDelete --\u003e Deck","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"ManZ9802":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"actor User","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"User -\u003e CommandDelete : executeCommand()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"CommandDelete -\u003e Deck : deleteFlashcard(index)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"Deck -\u003e CommandDelete : confirmation message","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"CommandDelete -\u003e Ui : showToUser(message)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"ManZ9802":7}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ElonKoh"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ElonKoh"},"content":"actor User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ElonKoh"},"content":"activate Flashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ElonKoh"},"content":"User -\u003e CommandEdit : executeCommand()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ElonKoh"},"content":"activate CommandEdit","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ElonKoh"},"content":"CommandEdit -\u003e UI : showToUser()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ElonKoh"},"content":"activate UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ElonKoh"},"content":"return","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ElonKoh"},"content":"CommandEdit -\u003e Flashcard : editFlashcard(int, String)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ElonKoh"},"content":"deactivate CommandEdit","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ElonKoh"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"ElonKoh":11}},{"path":"docs/diagrams/InsertSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ElonKoh"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ElonKoh"},"content":"actor User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ElonKoh"},"content":"activate Flashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ElonKoh"},"content":"User -\u003e CommandInsertCode : executeCommand()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ElonKoh"},"content":"activate CommandInsertCode","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ElonKoh"},"content":"CommandInsertCode -\u003e UI : showToUser()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ElonKoh"},"content":"activate UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ElonKoh"},"content":"return","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ElonKoh"},"content":"CommandInsertCode -\u003e Flashcard : insertCodeSnippet(int, String)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ElonKoh"},"content":"deactivate CommandInsertCode","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ElonKoh"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"ElonKoh":11}},{"path":"docs/diagrams/ListSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"actor User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"User -\u003e CommandListQuestion **: executeCommand()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"CommandListQuestion++","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"CommandListQuestion -\u003e Deck++: listFlashcards()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"alt [deck is not empty]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"loop [flashcards.size()]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":"    Deck -\u003e Ui++: showToUser(question)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":"    return","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":"end","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"end","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"return","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"felfelyuen"},"content":"CommandListQuestion --\u003e User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"felfelyuen"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"felfelyuen":17}},{"path":"docs/diagrams/QuizSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"actor User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"User -\u003e CommandQuizFlashcards **: executeCommand()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"CommandQuizFlashcards++","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"CommandQuizFlashcards -\u003e Deck++: quizFlashcards()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"Deck -\u003e Timer **","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"Timer ++","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"loop [flashcards.size()]","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":"    alt [unlearned]","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":"    Deck -\u003e Deck++: handleQuestion","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":"    Deck -\u003e Ui++: showToUser(question)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"    return","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"    Deck -\u003e Deck++: handleAnswer","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"felfelyuen"},"content":"    return","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"felfelyuen"},"content":"    Deck -\u003e Ui++ : showToUser(correct? statement)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"    return","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"felfelyuen"},"content":"    return","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"felfelyuen"},"content":"    end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"felfelyuen"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"felfelyuen"},"content":"return duration","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"felfelyuen"},"content":"Deck -\u003e Ui++ : showToUser(quiz ended + duration)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"return","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"felfelyuen"},"content":"Deck --\u003e CommandQuizFlashcards","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"felfelyuen"},"content":"CommandQuizFlashcards --\u003e User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"felfelyuen"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"felfelyuen":28}},{"path":"docs/diagrams/RenameDeckSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"actor User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"participant CommandRenameDeck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"participant DeckManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"participant FlashCLIArgumentException","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"participant Deck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"activate User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"create CommandRenameDeck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"User -\u003e CommandRenameDeck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"activate CommandRenameDeck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"CommandRenameDeck --\u003e User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"deactivate CommandRenameDeck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"User -\u003e CommandRenameDeck: executeCommand()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"activate CommandRenameDeck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"CommandRenameDeck -\u003e DeckManager: renameDeck()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"activate DeckManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"alt invalid deck name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    DeckManager -\u003e FlashCLIArgumentException","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"    activate FlashCLIArgumentException","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    FlashCLIArgumentException --\u003e User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"    deactivate FlashCLIArgumentException","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"else else","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"    DeckManager -\u003e DeckManager:getName()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    activate DeckManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"    DeckManager --\u003e DeckManager: current deck name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    deactivate DeckManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    DeckManager -\u003e Deck:setName()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"    activate Deck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"    Deck --\u003e DeckManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"    deactivate Deck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"    DeckManager --\u003e CommandRenameDeck: success message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"    deactivate DeckManager","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"    CommandRenameDeck --\u003e User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"    deactivate CommandRenameDeck","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"end alt","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"Betahaxer":45}},{"path":"docs/diagrams/SaveClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"class Saving {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"  + saveAllDecks(Map\u003cString, Deck\u003e)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"class Loading {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"  + loadAllDecks(): Map\u003cString, Deck\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"class DeckManager {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"  + static Map\u003cString, Deck\u003e decks","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"Saving --\u003e DeckManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"Loading --\u003e DeckManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"ManZ9802":16}},{"path":"docs/diagrams/SaveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"actor User","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"User -\u003e FlashCLI : main()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"FlashCLI -\u003e Loading : loadAllDecks()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"Loading -\u003e FileSystem : read .txt files","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"Loading -\u003e Deck : create flashcards","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"FlashCLI -\u003e User : run session","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"User -\u003e FlashCLI : exit command","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"FlashCLI -\u003e Saving : saveAllDecks(decks)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"Saving -\u003e FileSystem : write .txt files (overwrite + delete removed)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"ManZ9802":11}},{"path":"docs/diagrams/SearchClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"class CommandSearchFlashcard {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"  - String arguments","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"  + executeCommand()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"class DeckManager {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"  + static Deck currentDeck","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"  + static Map\u003cString, Deck\u003e decks","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"  + static String globalSearch(String): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"class Deck {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"  + List\u003cFlashcard\u003e flashcards","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"  + List\u003cFlashcard\u003e searchFlashcardQuestion(String): List\u003cFlashcard\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"class Flashcard {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"  + String question","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"  + String answer","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"CommandSearchFlashcard --\u003e DeckManager","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"DeckManager --\u003e Deck","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"Deck --\u003e Flashcard","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"ManZ9802":26}},{"path":"docs/diagrams/SearchSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"actor User","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"User -\u003e CommandSearchFlashcard : executeCommand()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"alt Deck selected","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"    CommandSearchFlashcard -\u003e Deck : searchFlashcardQuestion(arguments)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"    Deck -\u003e Deck : filter Flashcards","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"    Deck -\u003e CommandSearchFlashcard : result","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"else No deck selected","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"    CommandSearchFlashcard -\u003e DeckManager : globalSearch(arguments)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"    DeckManager -\u003e Deck : searchFlashcardQuestion(arguments) [loop over decks]","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"    DeckManager -\u003e CommandSearchFlashcard : result","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"end","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"CommandSearchFlashcard -\u003e Ui : showToUser(result)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"ManZ9802":14}},{"path":"docs/diagrams/SelectDeckSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"@startuml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"hide footbox","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n :FlashCLI\" as FlashCLI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"participant \"c:CommandSelectDeck\" as CommandSelectDeck","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n :DeckManager\" as DeckManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"FlashCLI -\u003e CommandSelectDeck: executeCommand()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"activate CommandSelectDeck","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"CommandSelectDeck -\u003e DeckManager: selectDeck()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"activate DeckManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"DeckManager -\u003e DeckManager: checkAndGetListIndex()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"activate DeckManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"DeckManager --\u003e DeckManager: listIndex","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"deactivate DeckManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"DeckManager -\u003e DeckManager: getDeckByIndex(listIndex)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"activate DeckManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"DeckManager --\u003e DeckManager:deck to select","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"deactivate DeckManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"DeckManager --\u003e CommandSelectDeck: success message","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"deactivate DeckManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"CommandSelectDeck -\u003e Ui: showToUser()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"activate Ui","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"Ui --\u003e CommandSelectDeck","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"deactivate Ui","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"CommandSelectDeck --\u003e FlashCLI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"deactivate CommandSelectDeck","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"destroy CommandSelectDeck","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"@enduml","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Betahaxer":33}},{"path":"docs/diagrams/ViewAnsClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"class CommandViewAnswer {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"  - String arguments","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"  + executeCommand()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"class Deck {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"  + String viewFlashcardAnswer(int): String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"CommandViewAnswer --\u003e Deck","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"ManZ9802":12}},{"path":"docs/diagrams/ViewAnsSeqDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"actor User","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"User -\u003e CommandViewAnswer : executeCommand()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"CommandViewAnswer -\u003e Deck : viewFlashcardAnswer(index)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"Deck -\u003e CommandViewAnswer : answer string","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"CommandViewAnswer -\u003e Ui : showToUser(answer)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"ManZ9802":7}},{"path":"docs/diagrams/ViewQuestionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"actor User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"User -\u003e CommandViewQuestion **: executeCommand()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"CommandViewQuestion++","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"CommandViewQuestion -\u003e Deck++: viewFlashcardQuestion()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"Deck -\u003e CommandViewQuestion: String question","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"CommandViewQuestion -\u003e Ui++: showToUser(question)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":"CommandViewQuestion -\u003e User","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"felfelyuen":13}},{"path":"docs/diagrams/ViewResultsClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lishunyang12"},"content":"@startuml QuizResultClassDiagram","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lishunyang12"},"content":"skinparam {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lishunyang12"},"content":"    classFontSize 13","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lishunyang12"},"content":"    arrowFontSize 12","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lishunyang12"},"content":"    classAttributeFontSize 12","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lishunyang12"},"content":"}","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lishunyang12"},"content":"package \"Command Layer\" {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lishunyang12"},"content":"    abstract class Command {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lishunyang12"},"content":"        +{abstract} executeCommand()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lishunyang12"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lishunyang12"},"content":"    class CommandViewQuizResult {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lishunyang12"},"content":"        +executeCommand()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lishunyang12"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lishunyang12"},"content":"}","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lishunyang12"},"content":"package \"Deck Layer\" {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lishunyang12"},"content":"    class Deck {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lishunyang12"},"content":"        -incorrectIndexes: ArrayList\u003cInteger\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lishunyang12"},"content":"        -incorrectFlashcards: ArrayList\u003cFlashcard\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lishunyang12"},"content":"        -incorrectAnswers: ArrayList\u003cString\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lishunyang12"},"content":"        +showQuizResult(): String","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lishunyang12"},"content":"        +showMistakes(): void","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lishunyang12"},"content":"        -validateArrays(): boolean","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lishunyang12"},"content":"        -calculateStats(): String","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lishunyang12"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lishunyang12"},"content":"}","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lishunyang12"},"content":"package \"Data Model\" {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lishunyang12"},"content":"    class Flashcard {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lishunyang12"},"content":"        -question: String","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lishunyang12"},"content":"        -answer: String","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lishunyang12"},"content":"        -codeSnippet: String","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lishunyang12"},"content":"        +getQuestion(): String","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lishunyang12"},"content":"        +getAnswer(): String","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lishunyang12"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lishunyang12"},"content":"}","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lishunyang12"},"content":"package \"UI Layer\" {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lishunyang12"},"content":"    class Ui {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lishunyang12"},"content":"        +showToUser(message: String): void","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lishunyang12"},"content":"        +showError(error: String): void","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lishunyang12"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lishunyang12"},"content":"}","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lishunyang12"},"content":"\u0027 Relationships","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lishunyang12"},"content":"Command \u003c|-- CommandViewQuizResult","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lishunyang12"},"content":"CommandViewQuizResult --\u003e Deck : \"1..1\" calls","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lishunyang12"},"content":"CommandViewQuizResult --\u003e Ui : \"1..1\" displays through","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lishunyang12"},"content":"Deck \"1\" *-- \"0..*\" Flashcard : contains","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lishunyang12"},"content":"Deck \"1\" *-- \"0..*\" Integer : incorrectIndexes","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lishunyang12"},"content":"Deck \"1\" *-- \"0..*\" String : incorrectAnswers","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lishunyang12"},"content":"\u0027 Method call annotations","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lishunyang12"},"content":"note top of Deck","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lishunyang12"},"content":"  showQuizResult() workflow:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lishunyang12"},"content":"  1. validateArrays()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lishunyang12"},"content":"  2. calculateStats()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lishunyang12"},"content":"  3. showMistakes()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lishunyang12"},"content":"end note","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lishunyang12"},"content":"note right of Flashcard","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lishunyang12"},"content":"  Data structure for:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lishunyang12"},"content":"  - Original questions","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lishunyang12"},"content":"  - Correct answers","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lishunyang12"},"content":"end note","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lishunyang12"},"content":"@enduml","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"lishunyang12":71}},{"path":"docs/diagrams/ViewResultsSeqDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lishunyang12"},"content":"@startuml QuizResultSequence","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lishunyang12"},"content":"title Quiz Result Display Sequence","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lishunyang12"},"content":"actor User","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lishunyang12"},"content":"participant UI","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lishunyang12"},"content":"participant Deck","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lishunyang12"},"content":"participant Flashcard","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lishunyang12"},"content":"group showQuizResult()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lishunyang12"},"content":"    User -\u003e UI: enters \"quiz-result\" command","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lishunyang12"},"content":"    UI -\u003e Deck: showQuizResult()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lishunyang12"},"content":"    alt Quiz not completed","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lishunyang12"},"content":"        Deck -\u003e UI: throws FlashCLIArgumentException\\n\"Quiz not completed\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lishunyang12"},"content":"    else Arrays mismatched","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lishunyang12"},"content":"        Deck -\u003e UI: throws FlashCLIArgumentException\\n\"Arrays size mismatch\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lishunyang12"},"content":"    else Valid case","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lishunyang12"},"content":"        Deck -\u003e Deck: get incorrectAnswersSize\\nincorrectIndexesSize\\nincorrectFlashcardsSize\\ntotalQuestionsSize","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lishunyang12"},"content":"        Deck -\u003e UI: \"You answered X questions\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lishunyang12"},"content":"        alt All correct","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lishunyang12"},"content":"            Deck -\u003e UI: \"Full marks! No mistakes\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lishunyang12"},"content":"        else Has mistakes","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lishunyang12"},"content":"            Deck -\u003e UI: \"You got Y correct, Z incorrect\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lishunyang12"},"content":"            Deck -\u003e UI: \"Review your mistakes:\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lishunyang12"},"content":"            Deck -\u003e Deck: showMistakes()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lishunyang12"},"content":"        end","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lishunyang12"},"content":"    end","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lishunyang12"},"content":"    Deck -\u003e User: returns success message","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lishunyang12"},"content":"end","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lishunyang12"},"content":"group showMistakes()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lishunyang12"},"content":"    loop for each incorrect index","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lishunyang12"},"content":"        Deck -\u003e Deck: get index from incorrectIndexes","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lishunyang12"},"content":"        Deck -\u003e Flashcard: getQuestion()\\ngetAnswer()","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lishunyang12"},"content":"        Deck -\u003e Deck: get user\u0027s wrong answer\\nfrom incorrectAnswers","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lishunyang12"},"content":"        Deck -\u003e UI: \"Flashcard X: Q:...\\nCorrect:...\\nYour answer:...\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lishunyang12"},"content":"    end","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lishunyang12"},"content":"end","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lishunyang12"},"content":"@enduml","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"lishunyang12":44}},{"path":"docs/team/betahaxer.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"# Poh Yu Wen - Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"## Project: FlashCLI","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"## Overview","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"FlashCLI is a command-line flashcard application designed specifically for CS2113 Software Engineering students. It helps students create, manage, and review flashcards efficiently, making it easier to retain important concepts in Java, software design, and coding best practices.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"Given below are my contributions to the project","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"### Summary of Contributions ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"- **New Feature**: Added the feature to create a flashcard. The flashcard has a question and answer field which are mandatory.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"    - What it does: Allows the user to add new flashcards to their selected deck.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"    - Justification: This feature is essential for users to be able to add content to the flashcard application.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"    - Highlights:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"    - Credits: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    - ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"- **Code contributed:** [RepoSense link](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dBetahaxer\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"- **Project Management:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"- **Enhancement to existing features:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"- **Documentation:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"  - User Guide:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"  - Developer\u0027s Guide:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"- **Community:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"- **Tools:**","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"ManZ9802":8,"Betahaxer":16}},{"path":"docs/team/elonkoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ElonKoh"},"content":"# Koh Elon - Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"## Project: FlashCLI","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"## Overview","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"FlashCLI is a command-line flashcard application designed specifically for CS2113 Software Engineering students. It helps students create, manage, and review flashcards efficiently, making it easier to retain important concepts in Java, software design, and coding best practices.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"Given below are my contributions to the project","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"### Summary of Contributions","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ElonKoh"},"content":"- **New Feature**:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ElonKoh"},"content":"    - Edit flashcard","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ElonKoh"},"content":"    - Insert code snippets","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ElonKoh"},"content":"    - Timer","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"ManZ9802":7,"ElonKoh":5}},{"path":"docs/team/felfelyuen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"# Felix Yuen Pin Qi - Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"list view qn quiz mode islearned","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"## Project: FlashCLI","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"## Overview","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"FlashCLI is a command-line flashcard application designed specifically for CS2113 Software Engineering students. It helps students create, manage, and review flashcards efficiently, making it easier to retain important concepts in Java, software design, and coding best practices.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"Given below are my contributions to the project","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":"### Summary of Contributions","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":"- **New Feature**: Added the ability to list all the flashcard questions","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":"    - What it does: Allows the user to list for all the flashcard questions in the deck.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"    - Justification: This feature allows the user to view all their flashcard questions simultaneously, and this helps them identify each flashcard by the index more easily.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"    - Highlights:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"felfelyuen"},"content":"    - Credits:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"felfelyuen"},"content":"- **New Feature**: Added the ability to view question per flashcard. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"    - What it does: Allows the user to view the flashcard\u0027s question for a specific index.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"felfelyuen"},"content":"    - Justification: This feature simply allows the user to view the flashcard\u0027s question, as well as view any code snippet that is tied to that question.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"felfelyuen"},"content":"    - Highlights:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"felfelyuen"},"content":"    - Credits: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"felfelyuen"},"content":"- **New Feature**: Added the ability to quiz the flashcards.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"felfelyuen"},"content":"    - What it does: Allows the user to enter quiz mode, quizzing the unlearned flashcards in the deck one by one, and giving the total time taken to finish the quiz. Correctly answered flashcards would be deemed as learned, and would not be quizzed again, unless they are marked as unlearned by the user.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"felfelyuen"},"content":"    - Justification: This feature improves the product significantly, as the quiz mode can help the user test whether they have memorised the information well, and see which areas need improvement and which do not.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"    - Highlights: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"felfelyuen"},"content":"    - Credits: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"felfelyuen"},"content":"- **New Feature**: Added the ability to mark a flashcard as learned or unlearned.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"    - What it does: Allows the user to mark a flashcard as learned or unlearned.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"felfelyuen"},"content":"    - Justification: This feature allows the user to customise which flashcards they would like to be tested in quiz mode, and which flashcards they do not want. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"felfelyuen"},"content":"    - This could be particularly useful for the user to quiz on specific topics.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"felfelyuen"},"content":"    - Highlights:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"felfelyuen"},"content":"    - Credits:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"felfelyuen"},"content":"- Code contributed: [RepoSense link](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dfelfelyuen\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dfelfelyuen\u0026tabRepo\u003dAY2425S2-CS2113-F11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"felfelyuen"},"content":"- **Project Management**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"felfelyuen"},"content":"  - Opened team repository","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"felfelyuen"},"content":"  - Managed issue tracker and milestones setup for 1.0 and 2.0","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"felfelyuen"},"content":"  - Released 2.0 version.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"felfelyuen"},"content":"- **Documentation:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"felfelyuen"},"content":"    - User Guide:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"felfelyuen"},"content":"        - Added documentation for the features `list`, `qn` ,`mark_learned`, `mark_unlearned` and `quiz` [#64](https://github.com/AY2425S2-CS2113-F11-4/tp/pull/64)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"felfelyuen"},"content":"    - Developer\u0027s Guide:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"felfelyuen"},"content":"        - Added implementation details for the `list`, `qn`, `quiz` and `changeIsLearned` feature. [#64](https://github.com/AY2425S2-CS2113-F11-4/tp/pull/64)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"felfelyuen"},"content":"        - Added Glossary in the appendix. [#64](https://github.com/AY2425S2-CS2113-F11-4/tp/pull/64)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"felfelyuen"},"content":"- **Community:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"felfelyuen"},"content":"    - PRs reviewed (with non-trivial comments) [#58](https://github.com/AY2425S2-CS2113-F11-4/tp/pull/58)","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"felfelyuen":46}},{"path":"docs/team/lishunyang12.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lishunyang12"},"content":"# Li Shunyang - Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"## Project: FlashCLI","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"## Overview","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"FlashCLI is a command-line flashcard application designed specifically for CS2113 Software Engineering students. It helps students create, manage, and review flashcards efficiently, making it easier to retain important concepts in Java, software design, and coding best practices.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"Given below are my contributions to the project","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"### Summary of Contributions","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lishunyang12"},"content":"- **New Feature**: Add the ability to output quiz result upon completion of a quiz.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lishunyang12"},"content":"    - What it does: Allows the user to view his/her quiz result to check mistakes. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lishunyang12"},"content":"      The incorrectly answered flashcard will be outputted for user\u0027s review. If ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lishunyang12"},"content":"    - user doesn\u0027t have any mistakes, the terminal will respond with a celebrate tone.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lishunyang12"},"content":"    - The method can only be executed when a quiz is completed. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lishunyang12"},"content":"    - Justification: This feature improves the product significantly because a user can access their","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lishunyang12"},"content":"      their mistakes and review them accordingly. This feature will be extremely useful during exam period.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lishunyang12"},"content":"    - Highlights: A stretch goal method was supposed to be merged to the upstream, which is to give user a second chance to take a test with only wrongly answered flashcards.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lishunyang12"},"content":"      The stretch objective is also very helpful to serve the purpose because it enables a iterative process of revision. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lishunyang12"},"content":"      The wrongly answered flashcards will be a global variable assigned to the test deck. However, developer struggled to debug the ridiculous issue encountered in IDE, which could","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lishunyang12"},"content":"      not be resolved even after he consulted his teammate. The break point and other debugging techniques couldn\u0027t work for the issue. Due to time concern, the developer decided to drop the stretch goal. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lishunyang12"},"content":"    - Credits: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lishunyang12"},"content":"  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lishunyang12"},"content":"- **New Feature(Not implemented upon failure of gradle test)**: Added a colorful ASCIl text effect for opening title.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lishunyang12"},"content":"    - What it does: It output a colored fading UI effect for the title to make the application more interesting.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lishunyang12"},"content":"    - Highlights: The feature cannot be merged to the main repo because it constantly failed the gradle i/o test","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lishunyang12"},"content":"      when developer exhausted its debugging skills and asked peer, TA and prof.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lishunyang12"},"content":"      https://github.com/AY2425S2-CS2113-F11-4/tp/actions?page\u003d3","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lishunyang12"},"content":"    - Credits: ChatGPT for organizing color ASCIl constants","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lishunyang12"},"content":"  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lishunyang12"},"content":"- **New Feature(Not implemented upon failure of gradle test)**: Added a loading effect before execution of each command.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lishunyang12"},"content":"    - What it does: Add a colorful and interactive colored loading progress bar to notify user","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lishunyang12"},"content":"      that the command is being processed. This will not determine if the command is illegal because","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lishunyang12"},"content":"      the checking is allocated to be at the back. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lishunyang12"},"content":"    - Highlights: The feature cannot be merged to the main repo because it constantly failed the gradle i/o test","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lishunyang12"},"content":"      when developer exhausted its debugging skills and asked peer, TA and prof. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lishunyang12"},"content":"      https://github.com/AY2425S2-CS2113-F11-4/tp/actions?page\u003d3","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lishunyang12"},"content":"    - Credits: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lishunyang12"},"content":"  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lishunyang12"},"content":"- Code contributed: [RepoSense link](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dmanz9802\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lishunyang12"},"content":"- **Documentation:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lishunyang12"},"content":"    - User Guide:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lishunyang12"},"content":"        - Added documentation for the features `View_res`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lishunyang12"},"content":"    - Developer\u0027s Guide:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lishunyang12"},"content":"        - Added implementation details, sequence diagram and class diagram for the `View_res`. [#68](https://github.com/AY2425S2-CS2113-F11-4/tp/pull/68)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lishunyang12"},"content":"        - Added manual test instruction in the appendix. [#62](https://github.com/AY2425S2-CS2113-F11-4/tp/pull/62)","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"ManZ9802":7,"lishunyang12":41}},{"path":"docs/team/manz9802.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"# Wong Man Zhong - Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"## Project: FlashCLI","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"## Overview","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"FlashCLI is a command-line flashcard application designed specifically for CS2113 Software Engineering students. It helps students create, manage, and review flashcards efficiently, making it easier to retain important concepts in Java, software design, and coding best practices.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"Given below are my contributions to the project","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"### Summary of Contributions ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"- **New Feature**: Added the ability to search for a specific flashcard.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"  - What it does: Allows the user to search for flashcards based on either the question or answer or both.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"  The search will be automatically global if no deck is selected and local to the deck if one is selected.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"  - Justification: This feature improves the product significantly because a user can access specific flashcards","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"  that is relevant to a specific query they have in mind without going through all the decks/flashcards.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"  This provides a quick and convenient way to look for flashcards.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"  - Highlights:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"  - Credits: ChatGPT for LinkedHashMap handling for global search function","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"- **New Feature**: Added the ability to save and load flashcard decks.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"  - What it does: Saves the decks and flashcards created into a directory when exiting the program.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"  Upon startup, the program will extract the saved decks and flashcards from the directory for the user to manipulate","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"  inside the program. Each deck is saved as its own .txt file. Deleted decks will likewise have their file deleted upon exit. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"  - Justification: This feature improves the product significantly as a user can now retain the decks and flashcards created","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"  even after closing the program. This allows the user to build off created decks instead of starting from scratch each time.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"  This also facilitates sharing of decks between users to enhance the learning experience.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"  - Highlights: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"  - Credits: CS2113 iP for introducing saving and loading methods.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"- **New Feature**: Added the ability to delete flashcards from a deck.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"  - What it does: Removes the flashcard from the deck based on index. This action cannot be undone.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"  - Justification: This feature improves the product by allowing the users to remove outdated content or flashcards created by mistake.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ManZ9802"},"content":"  This keeps each deck concise and updated, instead of being cluttered with unnecessary information.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"  - Highlights:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"  - Credits:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"- **New Feature**: Added the ability to view the answer to a specific flashcard.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ManZ9802"},"content":"  - What it does: Shows the answer to the flashcard based on index.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ManZ9802"},"content":"  - Justification: This feature enhances the usability of the application by allowing users to check specific answers ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ManZ9802"},"content":"  without starting a full review or quiz session.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ManZ9802"},"content":"  It supports targeted learning by enabling quick recall and revision of particular concepts,","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ManZ9802"},"content":"  which is especially useful when clarifying doubts or revisiting difficult questions.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ManZ9802"},"content":"  - Highlights:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ManZ9802"},"content":"  - Credits:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ManZ9802"},"content":"- Code contributed: [RepoSense link](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dmanz9802\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ManZ9802"},"content":"- **Documentation:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ManZ9802"},"content":"  - User Guide:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ManZ9802"},"content":"    - Added documentation for the features `search`, `delete` and `ans` [#67](https://github.com/AY2425S2-CS2113-F11-4/tp/pull/67)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ManZ9802"},"content":"  - Developer\u0027s Guide:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ManZ9802"},"content":"    - Added implementation details for the `search`, `delete`, `ans` and save/load feature. [#59](https://github.com/AY2425S2-CS2113-F11-4/tp/pull/59)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ManZ9802"},"content":"    - Added Product Scope in the appendix. [#59](https://github.com/AY2425S2-CS2113-F11-4/tp/pull/59)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ManZ9802"},"content":"- **Community:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ManZ9802"},"content":"  - Reported bugs [#67](https://github.com/AY2425S2-CS2113-F11-4/tp/pull/67) [#60](https://github.com/AY2425S2-CS2113-F11-4/tp/pull/60)","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"ManZ9802":50}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command. The specific implementation of this method is provided","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"     * by subclasses and defines what happens when the command is triggered.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"    public abstract void executeCommand();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Betahaxer":10}},{"path":"src/main/java/command/CommandChangeLearned.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"package command;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INVALID_INDEX_INPUT;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":"public class CommandChangeLearned extends Command {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":"    private final boolean isLearned;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"    public CommandChangeLearned(String arguments, boolean isLearned) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"felfelyuen"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"felfelyuen"},"content":"        this.isLearned \u003d isLearned;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"felfelyuen"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"felfelyuen"},"content":"            String output \u003d currentDeck.changeIsLearned(arguments, isLearned);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"felfelyuen"},"content":"            Ui.showToUser(output);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"felfelyuen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(INVALID_INDEX_INPUT);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"felfelyuen"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"felfelyuen"},"content":"}","lastModifiedDate":"2025-03-30","isFullCredit":false}],"authorContributionMap":{"felfelyuen":29}},{"path":"src/main/java/command/CommandCreateDeck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.createDeck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * Command to create a new deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003eExecutes the creation of a deck using the provided arguments.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":" * Displays either the success message or an error message based on the result.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"public class CommandCreateDeck extends Command{","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"    public final String arguments;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"    public CommandCreateDeck(String arguments) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command to create the deck and shows the result to the user.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"     * \u003cp\u003eIf an error occurs during deck creation, an error message is displayed.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(createDeck(arguments));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"Betahaxer":34}},{"path":"src/main/java/command/CommandCreateFlashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.CREATE_USAGE;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" * command class to create a new flashcard","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"public class CommandCreateFlashcard extends Command{","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"    public CommandCreateFlashcard(String arguments) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"     * executes the command to create the flashcard","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(currentDeck.createFlashcard(arguments));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(CREATE_USAGE);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Betahaxer":30}},{"path":"src/main/java/command/CommandDeleteDeck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package command;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.deleteDeck;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"public class CommandDeleteDeck extends Command {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"    private final int listIndex;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"    public CommandDeleteDeck(int listIndex) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"        this.listIndex \u003d listIndex;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(deleteDeck(this.listIndex));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"Betahaxer":24}},{"path":"src/main/java/command/CommandDeleteFlashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"package command;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INVALID_INDEX_INPUT;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":" * Class to handle deleting of flashcards","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"public class CommandDeleteFlashcard extends Command{","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    public CommandDeleteFlashcard(String arguments) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"     * executes command to delete flashcard","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"            int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(currentDeck.deleteFlashcard(index));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(INVALID_INDEX_INPUT);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"ManZ9802":24,"felfelyuen":4,"Betahaxer":4}},{"path":"src/main/java/command/CommandEditFlashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElonKoh"},"content":"package command;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ElonKoh"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ElonKoh"},"content":"import static constants.ErrorMessages.EDIT_USAGE;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INVALID_INDEX_INPUT;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"public class CommandEditFlashcard extends Command {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ElonKoh"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    public CommandEditFlashcard(String arguments) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ElonKoh"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ElonKoh"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ElonKoh"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ElonKoh"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ElonKoh"},"content":"            int index \u003d Integer.parseInt(arguments.split(\" \", 2)[0]);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(currentDeck.editFlashcard(index, arguments));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ElonKoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ElonKoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(INVALID_INDEX_INPUT);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ElonKoh"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ElonKoh"},"content":"            Ui.showError(EDIT_USAGE);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ElonKoh"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"felfelyuen":4,"Betahaxer":6,"ElonKoh":22}},{"path":"src/main/java/command/CommandInsertCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElonKoh"},"content":"package command;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ElonKoh"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ElonKoh"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ElonKoh"},"content":"import static constants.ErrorMessages.INSERT_USAGE;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INVALID_INDEX_INPUT;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ElonKoh"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ElonKoh"},"content":"public class CommandInsertCode extends Command{","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ElonKoh"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ElonKoh"},"content":"    public CommandInsertCode(String arguments) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ElonKoh"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ElonKoh"},"content":"    @Override","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ElonKoh"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ElonKoh"},"content":"        try {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ElonKoh"},"content":"            int index \u003d Integer.parseInt(arguments.split(\" \", 2)[0]);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ElonKoh"},"content":"            String output \u003d currentDeck.insertCodeSnippet(index, arguments);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ElonKoh"},"content":"            Ui.showToUser(output);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ElonKoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ElonKoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(INVALID_INDEX_INPUT);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ElonKoh"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ElonKoh"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ElonKoh"},"content":"            Ui.showError(INSERT_USAGE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ElonKoh"},"content":"}","lastModifiedDate":"2025-03-29","isFullCredit":false}],"authorContributionMap":{"felfelyuen":4,"ElonKoh":28}},{"path":"src/main/java/command/CommandListQuestion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"package command;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":" * Class that handles listing all the questions","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":"public class CommandListQuestion extends Command{","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"     * executes the command to view all the questions.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"felfelyuen"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"            String list \u003d currentDeck.listFlashcards();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"felfelyuen"},"content":"            Ui.showToUser(list);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"felfelyuen"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"felfelyuen":21,"Betahaxer":2}},{"path":"src/main/java/command/CommandQuizFlashcards.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"import exceptions.QuizCancelledException;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":" * Class that handles quizzing of the current Deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"public class CommandQuizFlashcards extends Command{","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"felfelyuen"},"content":"     * executes command to quiz all the questions in the deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"felfelyuen"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"felfelyuen"},"content":"            currentDeck.quizFlashcards();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"felfelyuen"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"felfelyuen"},"content":"        } catch (QuizCancelledException e) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"            Ui.showToUser(e.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"felfelyuen":26}},{"path":"src/main/java/command/CommandRenameDeck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.renameDeck;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * Command to rename a selected deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003eRenames a deck to the provided new deck name.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":" * Displays either the success message or an error message based on the result.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"public class CommandRenameDeck extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"    public CommandRenameDeck(String arguments) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command to rename the deck and shows the result to the user.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"     * \u003cp\u003eIf an error occurs during renaming, an error message is displayed.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(renameDeck(this.arguments));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Betahaxer":33}},{"path":"src/main/java/command/CommandSearchFlashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"package command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"import static deck.DeckManager.globalSearch;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"public class CommandSearchFlashcard extends Command {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"    public CommandSearchFlashcard(String arguments) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"     * Executes the command to search globally/locally depending on whether the deck is selected","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"     * and shows the result to the user.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"     *","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"     * \u003cp\u003eIf an error occurs during deck creation, an error message is displayed.\u003c/p\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"            String list;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"            if (currentDeck \u003d\u003d null) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"                list \u003d globalSearch(arguments);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"            } else {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"                list \u003d currentDeck.searchFlashcard(arguments);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"            Ui.showToUser(list);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"        } catch (FlashCLIArgumentException | EmptyListException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"ManZ9802":35}},{"path":"src/main/java/command/CommandSelectDeck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.selectDeck;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * Command to switch to a deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003eSwitches to a deck that is available.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":" * Displays either the success message or an error message based on the result.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"public class CommandSelectDeck extends Command {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"    public CommandSelectDeck(String arguments) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command to switch to the deck and shows the result to the user.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"     * \u003cp\u003eIf an error occurs during switching, an error message is displayed.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(selectDeck(arguments));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Betahaxer":33}},{"path":"src/main/java/command/CommandUnselectDeck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package command;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.unselectDeck;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import ui.Ui;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"public class CommandUnselectDeck extends Command {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"    private final String arguments;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"    public CommandUnselectDeck(String arguments) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command to unselect current deck","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(unselectDeck(this.arguments));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Betahaxer":23}},{"path":"src/main/java/command/CommandUserGuide.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"package command;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"import static constants.UserGuideMessages.USER_GUIDE_INFORMATION;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"/**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":" * Class to print user guide information","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":" */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":"public class CommandUserGuide extends Command{","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"    @Override","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"felfelyuen"},"content":"        Ui.showToUser(USER_GUIDE_INFORMATION);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"felfelyuen":16}},{"path":"src/main/java/command/CommandViewAnswer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"package command;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INVALID_INDEX_INPUT;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":" * class to handle viewing of flashcard answer","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"public class CommandViewAnswer extends Command {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"    public CommandViewAnswer(String arguments) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"     * executes the command to view the answer","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"            int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(currentDeck.viewFlashcardAnswer(index));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(INVALID_INDEX_INPUT);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"felfelyuen"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"ManZ9802":24,"felfelyuen":6,"Betahaxer":2}},{"path":"src/main/java/command/CommandViewDecks.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.viewDecks;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * Command to view all decks available.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003eLists all decks that are available.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":" * Displays either the success message or an error message based on the result.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"public class CommandViewDecks extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"    private final String arguments;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"    public CommandViewDecks(String arguments) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"     * Executes the command to list decks and shows the result to the user.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"     * \u003cp\u003eIf an error occurs during deck viewing, an error message is displayed.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(viewDecks(this.arguments));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Betahaxer":31}},{"path":"src/main/java/command/CommandViewQuestion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"package command;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INVALID_INDEX_INPUT;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":"/**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":" * Class that handles viewing of the question of the flashcard","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":" */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"public class CommandViewQuestion extends Command{","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"    private final String arguments;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"felfelyuen"},"content":"    public CommandViewQuestion(String arguments) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"felfelyuen"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"felfelyuen"},"content":"     * executes the command to view the question.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"felfelyuen"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"            int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(currentDeck.viewFlashcardQuestion(index));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"felfelyuen"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"felfelyuen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(INVALID_INDEX_INPUT);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"felfelyuen"},"content":"}","lastModifiedDate":"2025-03-16","isFullCredit":false}],"authorContributionMap":{"felfelyuen":29,"Betahaxer":2}},{"path":"src/main/java/command/CommandViewQuizResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lishunyang12"},"content":"package command;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lishunyang12"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lishunyang12"},"content":"import ui.Ui;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lishunyang12"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lishunyang12"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lishunyang12"},"content":" * Class that handles viewing of the quiz results","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lishunyang12"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lishunyang12"},"content":"public class CommandViewQuizResult extends Command{","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lishunyang12"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lishunyang12"},"content":"     * executes command to quiz all the questions in the deck.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lishunyang12"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lishunyang12"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lishunyang12"},"content":"    public void executeCommand() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lishunyang12"},"content":"        try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lishunyang12"},"content":"            Ui.showToUser(currentDeck.showQuizResult());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lishunyang12"},"content":"        }  catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lishunyang12"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lishunyang12"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lishunyang12"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lishunyang12"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"lishunyang12":24}},{"path":"src/main/java/constants/CommandConstants.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package constants;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":" * class to hold all the command constants","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"public class CommandConstants {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"    // flashcard commands","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"    public static final String ADD_CARD \u003d \"add\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"    public static final String VIEW_QN \u003d \"qn\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"    public static final String VIEW_ANS \u003d \"ans\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"    public static final String EDIT_CARD \u003d \"edit\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"    public static final String LIST_CARDS \u003d \"list\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    public static final String DELETE_CARD \u003d \"delete\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"    public static final String INSERT_CODE \u003d \"insert_code\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"    public static final String SEARCH_CARD \u003d \"search\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"    // quiz commands","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"felfelyuen"},"content":"    public static final String QUIZ \u003d \"quiz\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"    public static final String MARK_UNLEARNED \u003d \"mark_unlearned\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"    public static final String MARK_LEARNED \u003d \"mark_learned\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lishunyang12"},"content":"    public static final String VIEW_RES \u003d \"view_res\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    // deck commands","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"    public static final String NEW_DECK \u003d \"new\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    public static final String SELECT_DECK \u003d \"select\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"    public static final String RENAME_DECK \u003d \"rename\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"    public static final String VIEW_DECKS \u003d \"decks\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"    public static final String REMOVE_DECK \u003d \"remove\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"    public static final String UNSELECT_DECK \u003d \"unselect\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"    // system commands","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"felfelyuen"},"content":"    public static final String USER_GUIDE \u003d \"user_guide\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"    public static final String EXIT \u003d \"exit\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"ManZ9802":1,"felfelyuen":2,"Betahaxer":30,"lishunyang12":2}},{"path":"src/main/java/constants/ConfirmationMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package constants;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"public class ConfirmationMessages {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"    public static final String CONFIRM_DELETE_DECK \u003d \"Are you sure you want to delete the deck \\\"%s\\\"?\" +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"            \" Doing so will delete all your flashcards.\\n\" + \"Please enter \u0027yes\u0027 or \u0027no\u0027.\" ;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"    public static final String DECK_NOT_DELETED \u003d \"Deck \\\"%s\\\" not deleted.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"Betahaxer":7}},{"path":"src/main/java/constants/ErrorMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package constants;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.ADD_CARD;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.REMOVE_DECK;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.SELECT_DECK;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.UNSELECT_DECK;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.VIEW_QN;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.VIEW_ANS;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.EDIT_CARD;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.LIST_CARDS;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.DELETE_CARD;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.INSERT_CODE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.SEARCH_CARD;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.QUIZ;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.MARK_UNLEARNED;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.MARK_LEARNED;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.VIEW_RES;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.NEW_DECK;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.RENAME_DECK;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.VIEW_DECKS;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.USER_GUIDE;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.EXIT;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lishunyang12"},"content":" * Class to hold all error messages.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"public class ErrorMessages {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lishunyang12"},"content":"    // Flashcard error messages","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"    public static final String CREATE_USAGE \u003d \"Usage: \" + ADD_CARD + \" /q {QUESTION} /a {ANSWER}\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"    public static final String CREATE_MISSING_FIELD \u003d \"Missing /q or /a in input.\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    public static final String CREATE_MISSING_DESCRIPTION \u003d \"Question or Answer cannot be empty.\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"    public static final String CREATE_INVALID_ORDER \u003d \"/a Answer first /q Question later\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    public static final String CREATE_INVALID_INPUT_ERROR \u003d \"Invalid input: Text found before the /q tag. \" +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"            \"Please start your input with /q.\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"felfelyuen"},"content":"    public static final String INVALID_INDEX_INPUT \u003d \"Input is not a number\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"felfelyuen"},"content":"    public static final String INDEX_OUT_OF_BOUNDS \u003d \"Input is out of bounds of current list of flashcards\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"    public static final String EDIT_USAGE \u003d \"Usage: \" + EDIT_CARD + \" {INDEX} /q {QUESTION} /a {ANSWER}\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"felfelyuen"},"content":"    public static final String EMPTY_LIST \u003d \"Invalid: List is empty.\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lishunyang12"},"content":"    // Deck error messages","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"    public static final String MISSING_DECK_NAME \u003d \"Deck must have a name.\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"    public static final String NO_DECK_TO_SWITCH \u003d \"No decks available. Create a deck before selecting.\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"    public static final String NO_DECK_ERROR \u003d \"Select a deck first!\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"    public static final String VIEW_DECKS_NO_ARGUMENTS_ALLOWED \u003d \"The \u0027decks\u0027 command does not take any arguments.\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"    public static final String UNSELECT_NO_ARGUMENTS_ALLOWED \u003d \"The \u0027unselect\u0027 command does not take any arguments.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"    public static final String EMPTY_DECK_NAME \u003d \"Deck name must not be empty!\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"    public static final String DUPLICATE_DECK_NAME \u003d \"Deck name already exists!\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"    public static final String UNCHANGED_DECK_NAME \u003d \"Deck name is unchanged!\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"    public static final String NO_DECK_TO_VIEW \u003d \"No decks available. Create a deck to start.\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"    public static final String DELETE_EMPTY_DECK_ERROR \u003d \"No decks available. Unable to delete.\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"    public static final String DECK_INDEX_OUT_OF_BOUNDS \u003d \"Index is out of bounds of the current list of decks.\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"    public static final String DECK_EMPTY_INPUT \u003d \"Index cannot be empty.\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"    public static final String NO_DECK_TO_UNSELECT \u003d \"No deck selected.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lishunyang12"},"content":"    // Code insertion error messages","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ElonKoh"},"content":"    public static final String INSERT_MISSING_FIELD \u003d \"Missing /c in input.\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ElonKoh"},"content":"    public static final String INSERT_MISSING_CODE \u003d \"Code snippet cannot be empty.\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"    public static final String INSERT_USAGE \u003d \"Usage: \" + INSERT_CODE + \" {INDEX} /c {CODE_SNIPPET}\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lishunyang12"},"content":"    // Quiz error messages","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ManZ9802"},"content":"    public static final String CHANGE_IS_LEARNED_MISSING_INDEX \u003d \"No input index detected.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lishunyang12"},"content":"    public static final String INCOMPLETED_QUIZ \u003d \"Complete a quiz first\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lishunyang12"},"content":"    public static final String MISMATCHED_ARRAYS \u003d \"Attempted to view Quiz results, but arrays are mismatched.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lishunyang12"},"content":"    // Search error messages","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ManZ9802"},"content":"    public static final String SEARCH_MISSING_FIELD \u003d \"Missing /q or /a in input.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ManZ9802"},"content":"    public static final String SEARCH_RESULT_EMPTY \u003d \"No matching flashcards found.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ManZ9802"},"content":"    public static final String SEARCH_EMPTY_DECK \u003d \"Deck is empty!\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lishunyang12"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lishunyang12"},"content":"    // Command help message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lishunyang12"},"content":"    public static final String POSSIBLE_COMMANDS \u003d String.format(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"            \"Possible commands are: %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,\\n\" +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"                    \"%s, %s, %s, %s, %s, %s, %s, %s, %s, %s.\",","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lishunyang12"},"content":"            ADD_CARD, VIEW_QN, VIEW_ANS, EDIT_CARD, LIST_CARDS, DELETE_CARD,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lishunyang12"},"content":"            INSERT_CODE, SEARCH_CARD, QUIZ, MARK_UNLEARNED, MARK_LEARNED, VIEW_RES,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"            NEW_DECK, SELECT_DECK, RENAME_DECK, VIEW_DECKS, REMOVE_DECK, UNSELECT_DECK,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"            USER_GUIDE, EXIT","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lishunyang12"},"content":"    );","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"ManZ9802":5,"felfelyuen":3,"Betahaxer":44,"lishunyang12":26,"ElonKoh":2}},{"path":"src/main/java/constants/QuizMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"package constants;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.VIEW_RES;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":" * Class to hold all messages related to quiz.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"felfelyuen"},"content":"public class QuizMessages {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":"    public static final String QUIZ_START \u003d","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":"            \"Entering quiz mode... get ready!\\n\" +","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":"            \"Type \u0027exit_quiz\u0027 to cancel the quiz and leave at anytime\\n\" +","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"            \"Cancelling the quiz would not save your results\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"    public static final String QUIZ_END \u003d","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"felfelyuen"},"content":"            \"You finished the test! You took: %s seconds!\\n\" +","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lishunyang12"},"content":"            \"Type \" + VIEW_RES + \" to check your test result\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"    public static final String QUIZ_NO_ANSWER_DETECTED \u003d \"No answer detected. Input your answer again:\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"felfelyuen"},"content":"    public static final String QUIZ_CANCEL \u003d \"exit_quiz\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"felfelyuen"},"content":"    public static final String QUIZ_CANCEL_MESSAGE \u003d \"Quiz stopped! Exiting quiz...\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"felfelyuen"},"content":"    public static final String QUIZ_CORRECT \u003d \"Correct!\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"felfelyuen"},"content":"    public static final String QUIZ_INCORRECT \u003d \"Incorrect.\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"felfelyuen"},"content":"    public static final String QUIZ_QUESTIONS_LEFT \u003d \"You have %s questions left:\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"felfelyuen"},"content":"    public static final String QUIZ_LAST_QUESTION \u003d \"You have 1 question left:\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"    public static final String QUIZ_NO_UNLEARNED \u003d \"You have no unlearned questions.\\n\" +","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"felfelyuen"},"content":"            \"Unmark some questions with mark_unlearned before continuing\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"felfelyuen":24,"lishunyang12":2}},{"path":"src/main/java/constants/SuccessMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package constants;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":" * class to hold all success messages","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"public class SuccessMessages {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"    public static final String CREATE_SUCCESS \u003d \"Added a new flashcard.\\n\" +","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"            \"Question: %s\\n\" +","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"            \"Answer: %s\\n\" +","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"            \"You have %d flashcard(s) in your deck.\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"    public static final String VIEW_QUESTION_SUCCESS \u003d \"Question of flashcard: %s\\n\" +","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ElonKoh"},"content":"            \"Question: %s\\n\" +","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ElonKoh"},"content":"            \"%s\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"    public static final String VIEW_ANSWER_SUCCESS \u003d \"Answer of flashcard %s\\n\" +","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"            \"Answer: %s\\n\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ElonKoh"},"content":"    public static final String EDIT_SUCCESS \u003d \"Updated flashcard.\\n\" +","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ElonKoh"},"content":"            \"Edit Question: %s\\n\" +","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ElonKoh"},"content":"            \"Updated: %s\\n\" +","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ElonKoh"},"content":"            \"Edit Answer: %s\\n\" +","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ElonKoh"},"content":"            \"Updated: %s\\n\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"felfelyuen"},"content":"    public static final String LIST_SUCCESS \u003d \"List of flashcards:\\n%s\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"    public static final String DELETE_SUCCESS \u003d \"Deleted flashcard %s\\n\" +","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"            \"Question: %s\\n\" +","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"            \"Answer: %s\\n\";","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"felfelyuen"},"content":"    public static final String CREATE_DECK_SUCCESS \u003d \"Deck \\\"%s\\\" created, number of decks: %d\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"    public static final String SELECT_DECK_SUCCESS \u003d \"Switched to deck \\\"%s\\\"\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    public static final String RENAME_DECK_SUCCESS \u003d \"Renamed deck \\\"%s\\\" to \\\"%s\\\" \";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"    public static final String VIEW_DECKS_SUCCESS \u003d \"List of decks:\\n%s\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    public static final String DELETE_DECK_SUCCESS \u003d \"Deleted deck \\\"%s\\\"\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"    public static final String UNSELECT_DECK_SUCCESS \u003d \"Deck \\\"%s\\\" unselected\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ElonKoh"},"content":"    public static final String INSERT_SUCCESS \u003d \"Inserted code snippet to flashcard.\\n\" +","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ElonKoh"},"content":"            \"Question: %s\\n\" +","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ElonKoh"},"content":"            \"Answer: %s\\n\" +","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ElonKoh"},"content":"            \"Code Snippet: %s\\n\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"felfelyuen"},"content":"    public static final String CHANGED_ISLEARNED_SUCCESS \u003d \"Changed flashcard number %s into %s\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ManZ9802"},"content":"    public static final String SEARCH_SUCCESS \u003d \"Flashcards matched: \\n%s\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lishunyang12"},"content":"    public static final String QUIZRESULT_FULL_MARKS \u003d \"Great job! You have answered all of questions correctly.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lishunyang12"},"content":"    public static final String VIEW_QUIZRESULT_SUCCESS \u003d \"This is the end of the test report.\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"ManZ9802":9,"felfelyuen":6,"Betahaxer":15,"lishunyang12":2,"ElonKoh":12}},{"path":"src/main/java/constants/UserGuideMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"package constants;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.ADD_CARD;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.NEW_DECK;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.LIST_CARDS;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.REMOVE_DECK;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.SELECT_DECK;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.UNSELECT_DECK;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.VIEW_QN;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.VIEW_ANS;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.DELETE_CARD;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.EDIT_CARD;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"felfelyuen"},"content":"import static constants.CommandConstants.INSERT_CODE;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"felfelyuen"},"content":"import static constants.CommandConstants.MARK_LEARNED;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"felfelyuen"},"content":"import static constants.CommandConstants.MARK_UNLEARNED;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"import static constants.CommandConstants.QUIZ;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.VIEW_RES;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"felfelyuen"},"content":"import static constants.CommandConstants.RENAME_DECK;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"felfelyuen"},"content":"import static constants.CommandConstants.VIEW_DECKS;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.SEARCH_CARD;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.EXIT;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"/**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lishunyang12"},"content":" * Class to store the user guide information.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"felfelyuen"},"content":" */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"public class UserGuideMessages {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"felfelyuen"},"content":"    public static final String USER_GUIDE_INFORMATION \u003d","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"felfelyuen"},"content":"            \"Quick Start:\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"felfelyuen"},"content":"                    \"Create a deck of flashcards with \\\"\" + NEW_DECK +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"                    \"\\\", select it with \\\"\" + SELECT_DECK +","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"                    \"\\\", and begin adding flashcards with \\\"\" + ADD_CARD + \"\\\"!\\n\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"felfelyuen"},"content":"                    \"List of commands:\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"                    \"\\\"\" + ADD_CARD + \"\\\": creates a flashcard\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"                    \"\\\"\" + LIST_CARDS + \"\\\": shows list of flashcards\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"felfelyuen"},"content":"                    \"\\\"\" + VIEW_QN + \"\\\": views the flashcard\u0027s question\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"felfelyuen"},"content":"                    \"\\\"\" + VIEW_ANS + \"\\\": views the flashcard\u0027s answer\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"                    \"\\\"\" + DELETE_CARD + \"\\\": deletes the flashcard\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"                    \"\\\"\" + EDIT_CARD + \"\\\": edits the flashcard question/answer\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"felfelyuen"},"content":"                    \"\\\"\" + INSERT_CODE + \"\\\": inserts code snippet for a flashcard\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"felfelyuen"},"content":"                    \"\\\"\" + MARK_LEARNED + \"\\\": marks flashcard as learned\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"felfelyuen"},"content":"                    \"\\\"\" + MARK_UNLEARNED + \"\\\": marks flashcard as unlearned\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"felfelyuen"},"content":"                    \"\\\"\" + QUIZ + \"\\\": quizzes the unlearned flashcards\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lishunyang12"},"content":"                    \"\\\"\" + VIEW_RES + \"\\\": views results from quiz after quiz is completed\\n\" +","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"felfelyuen"},"content":"                    \"\\\"\" + NEW_DECK + \"\\\": creates a new deck of flashcards\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"felfelyuen"},"content":"                    \"\\\"\" + RENAME_DECK + \"\\\": renames flashcard deck\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"felfelyuen"},"content":"                    \"\\\"\" + VIEW_DECKS + \"\\\": shows list of decks\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"                    \"\\\"\" + SELECT_DECK + \"\\\": selects deck of flashcards\\n\" +","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"                    \"\\\"\" + REMOVE_DECK + \"\\\": deletes the deck\\n\" +","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"                    \"\\\"\" + UNSELECT_DECK + \"\\\": unselects the deck\\n\" +","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"                    \"\\\"\" + SEARCH_CARD + \"\\\": searches within a deck or globally\\n\" +","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"felfelyuen"},"content":"                    \"\\\"\" + EXIT + \"\\\": exits the program\\n\\n\" +","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"felfelyuen"},"content":"                    \"Go to the flashCli User Guide website for more details\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"felfelyuen"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"felfelyuen":28,"Betahaxer":16,"lishunyang12":9}},{"path":"src/main/java/deck/Deck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package deck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"import static constants.ErrorMessages.CHANGE_IS_LEARNED_MISSING_INDEX;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.CREATE_INVALID_INPUT_ERROR;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.CREATE_INVALID_ORDER;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.CREATE_MISSING_FIELD;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.CREATE_MISSING_DESCRIPTION;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.EMPTY_LIST;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ElonKoh"},"content":"import static constants.ErrorMessages.INSERT_MISSING_CODE;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ElonKoh"},"content":"import static constants.ErrorMessages.INSERT_MISSING_FIELD;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"import static constants.ErrorMessages.SEARCH_EMPTY_DECK;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"import static constants.ErrorMessages.SEARCH_MISSING_FIELD;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"import static constants.ErrorMessages.SEARCH_RESULT_EMPTY;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lishunyang12"},"content":"import static constants.ErrorMessages.INCOMPLETED_QUIZ;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lishunyang12"},"content":"import static constants.ErrorMessages.MISMATCHED_ARRAYS;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_CANCEL;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_CANCEL_MESSAGE;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_CORRECT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_END;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_INCORRECT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_LAST_QUESTION;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_NO_ANSWER_DETECTED;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_NO_UNLEARNED;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_QUESTIONS_LEFT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_START;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"felfelyuen"},"content":"import static constants.SuccessMessages.CHANGED_ISLEARNED_SUCCESS;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.CREATE_SUCCESS;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"import static constants.SuccessMessages.DELETE_SUCCESS;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ElonKoh"},"content":"import static constants.SuccessMessages.EDIT_SUCCESS;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ElonKoh"},"content":"import static constants.SuccessMessages.INSERT_SUCCESS;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"felfelyuen"},"content":"import static constants.SuccessMessages.LIST_SUCCESS;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ManZ9802"},"content":"import static constants.SuccessMessages.SEARCH_SUCCESS;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ElonKoh"},"content":"import static constants.SuccessMessages.VIEW_ANSWER_SUCCESS;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ElonKoh"},"content":"import static constants.SuccessMessages.VIEW_QUESTION_SUCCESS;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lishunyang12"},"content":"import static constants.SuccessMessages.VIEW_QUIZRESULT_SUCCESS;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lishunyang12"},"content":"import static constants.SuccessMessages.QUIZRESULT_FULL_MARKS;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"import java.util.Collections;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"felfelyuen"},"content":"import exceptions.QuizCancelledException;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ElonKoh"},"content":"import parser.Parser;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"felfelyuen"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ElonKoh"},"content":"import timer.Timer;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":" * Represents a deck that contains a collection of flashcards.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":" *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003eThis class provides functionalities to manage flashcards within the deck,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":" * including adding, viewing, editing, listing, and deleting flashcards.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":" * Each deck has a name and maintains a list of flashcards.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":" *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003eInstances of this class support various operations on flashcards,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":" * such as retrieving a flashcard\u0027s question or answer, modifying its content,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":" * and handling user input errors related to flashcard management.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":" *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003eLogging is implemented to track actions performed on the deck,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":" * ensuring better debugging and error handling.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"public class Deck {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lishunyang12"},"content":"    private static boolean isQuizCompleted \u003d false;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"    private static final Logger logger \u003d Logger.getLogger(Deck.class.getName());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"    private String name;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"    private ArrayList\u003cFlashcard\u003e flashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"felfelyuen"},"content":"    private final ArrayList\u003cFlashcard\u003e incorrectFlashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"felfelyuen"},"content":"    private final ArrayList\u003cInteger\u003e incorrectIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"felfelyuen"},"content":"    private final ArrayList\u003cString\u003e incorrectAnswers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ElonKoh"},"content":"    private Timer timer;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"    private record Result(String question, String answer) { }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"     * Creates a new deck with the specified name.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"     * @param name the name of the deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"    public Deck(String name) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Betahaxer"},"content":"     * Returns the name of the deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Betahaxer"},"content":"     * @return the deck name.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Betahaxer"},"content":"    public String getName() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Betahaxer"},"content":"        return name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Betahaxer"},"content":"     * Sets a new name for the deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Betahaxer"},"content":"     * @param name the new name for the deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Betahaxer"},"content":"    public void setName(String name) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Betahaxer"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Betahaxer"},"content":"    public void setFlashcards(ArrayList\u003cFlashcard\u003e flashcards) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Betahaxer"},"content":"        this.flashcards \u003d flashcards;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Betahaxer"},"content":"     * Returns the list of flashcards in the deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Betahaxer"},"content":"     * @return an {@code ArrayList} of {@code Flashcard} objects.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Betahaxer"},"content":"    public ArrayList\u003cFlashcard\u003e getFlashcards() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Betahaxer"},"content":"        return flashcards;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ManZ9802"},"content":"    public int getDeckSize() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ManZ9802"},"content":"        return flashcards.size();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ManZ9802"},"content":"     * helper function to directly insert a flashcard into the deck","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ManZ9802"},"content":"     * without having to create one","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ManZ9802"},"content":"     * @param flashcard","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ManZ9802"},"content":"    //@@ author ManZ9802","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ManZ9802"},"content":"    public void insertFlashcard (Flashcard flashcard) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ManZ9802"},"content":"        flashcards.add(flashcard);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Betahaxer"},"content":"     * Creates a new flashcard from the given input string.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Betahaxer"},"content":"     * \u003cp\u003eThe input must include both a question (\"/q\") and an answer (\"/a\"),","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Betahaxer"},"content":"     * with the question appearing before the answer.\u003c/p\u003e","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments The input string containing the flashcard details.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Betahaxer"},"content":"     * @return A success message confirming the flashcard creation.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException If required fields are missing,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Betahaxer"},"content":"     *         incorrectly ordered, or empty.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Betahaxer"},"content":"    //@@author Betahaxer","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Betahaxer"},"content":"    public String createFlashcard(String arguments) throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Betahaxer"},"content":"        logger.info(\"Starting to create a flashcard with arguments: \" + arguments);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Betahaxer"},"content":"        Result result \u003d checkQuestionAndAnswer(arguments);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Betahaxer"},"content":"        String question \u003d result.question;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Betahaxer"},"content":"        String answer \u003d result.answer;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Betahaxer"},"content":"        int flashcardIndex \u003d flashcards.size();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Betahaxer"},"content":"        Flashcard newFlashcard \u003d new Flashcard(flashcardIndex, question, answer);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Betahaxer"},"content":"        flashcards.add(newFlashcard);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Betahaxer"},"content":"        logger.info(\"Successfully created a flashcard: Question: \" + question + \", Answer: \" + answer);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Betahaxer"},"content":"        return String.format(CREATE_SUCCESS,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Betahaxer"},"content":"                newFlashcard.getQuestion(), newFlashcard.getAnswer(), flashcards.size());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Betahaxer"},"content":"     * Helper function that extracts the positions of the","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Betahaxer"},"content":"     * question (\"/q\") and answer (\"/a\") from the input string.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Betahaxer"},"content":"     * Checks if the required fields are missing or in the wrong order.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments The input string containing the flashcard details.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Betahaxer"},"content":"     * @return A {@code Result} containing the start indices of \"/q\" and \"/a\".","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException If required fields are missing or in the wrong order.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Betahaxer"},"content":"    private Result checkQuestionAndAnswer(String arguments) throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Betahaxer"},"content":"        int qIndex \u003d arguments.indexOf(\"/q\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Betahaxer"},"content":"        int aIndex \u003d arguments.indexOf(\"/a\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Betahaxer"},"content":"        if (qIndex \u003d\u003d -1 || aIndex \u003d\u003d -1) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Missing /q or /a tag.\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(CREATE_MISSING_FIELD);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Betahaxer"},"content":"        if (qIndex \u003e aIndex) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"/q must come before /a.\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(CREATE_INVALID_ORDER);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Betahaxer"},"content":"        boolean hasTextBeforeQTag \u003d !arguments.substring(0, qIndex).trim().isEmpty();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Betahaxer"},"content":"        if (hasTextBeforeQTag) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Text found before /q tag.\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(CREATE_INVALID_INPUT_ERROR);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Betahaxer"},"content":"        String question \u003d arguments.substring(qIndex + \"/q\".length(), aIndex).trim();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Betahaxer"},"content":"        String answer \u003d arguments.substring(aIndex + \"/a\".length()).trim();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Betahaxer"},"content":"        if (question.isEmpty() || answer.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Question or answer is empty.\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(CREATE_MISSING_DESCRIPTION);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Betahaxer"},"content":"        return new Result(question, answer);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Betahaxer"},"content":"     * Views the flashcard question","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Betahaxer"},"content":"     * @param index index of flashcard to view","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Betahaxer"},"content":"     * @return the question in the format of VIEW_QUESTION_SUCCESS","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Betahaxer"},"content":"     * @throws ArrayIndexOutOfBoundsException if the index is outside of list size","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"felfelyuen"},"content":"    //@@author felfelyuen","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"felfelyuen"},"content":"    public String viewFlashcardQuestion(int index) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"felfelyuen"},"content":"        if (index \u003c\u003d 0 || index \u003e flashcards.size()) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"felfelyuen"},"content":"            throw new ArrayIndexOutOfBoundsException(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"felfelyuen"},"content":"        int arrayIndex \u003d index - 1;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"felfelyuen"},"content":"        Flashcard flashcardToView \u003d flashcards.get(arrayIndex);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"felfelyuen"},"content":"        assert flashcardToView !\u003d null : \"flashcard object should not be null\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"felfelyuen"},"content":"        String question \u003d flashcardToView.getQuestion();","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"felfelyuen"},"content":"        assert !question.isEmpty() : \"Question should not be empty when viewing flashcards\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"felfelyuen"},"content":"        String codeSnippet \u003d flashcardToView.getCodeSnippet();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"felfelyuen"},"content":"        return String.format(VIEW_QUESTION_SUCCESS, index, question, codeSnippet);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"felfelyuen"},"content":"     * Views flashcard answer","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"felfelyuen"},"content":"     * @param index index of flashcard","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"felfelyuen"},"content":"     * @return the answer in the format of VIEW_ANSWER_SUCCESS","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"felfelyuen"},"content":"     * @throws ArrayIndexOutOfBoundsException if the index is outside of list size","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"felfelyuen"},"content":"    public String viewFlashcardAnswer(int index) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"felfelyuen"},"content":"        if (index \u003c\u003d 0 || index \u003e flashcards.size()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"felfelyuen"},"content":"            throw new ArrayIndexOutOfBoundsException(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"felfelyuen"},"content":"        int arrayIndex \u003d index - 1;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"felfelyuen"},"content":"        Flashcard flashcardToView \u003d flashcards.get(arrayIndex);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"felfelyuen"},"content":"        assert flashcardToView !\u003d null : \"flashcard object should not be null\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"felfelyuen"},"content":"        String answer \u003d flashcardToView.getAnswer();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"felfelyuen"},"content":"        assert !answer.isEmpty() : \"Answer should not be empty when viewing flashcards\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"felfelyuen"},"content":"        return String.format(VIEW_ANSWER_SUCCESS, index, answer);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"felfelyuen"},"content":"     * Edits the flashcard","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"felfelyuen"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"felfelyuen"},"content":"     * @param index     index of flashcard to view","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"felfelyuen"},"content":"     * @param arguments user inputs containing updated question and answer","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"felfelyuen"},"content":"     * @return the updated flashcard in the format of EDIT_SUCCESS","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"felfelyuen"},"content":"     * @throws ArrayIndexOutOfBoundsException if the index is outside of list size","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"felfelyuen"},"content":"    public String editFlashcard(int index, String arguments)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"felfelyuen"},"content":"            throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"felfelyuen"},"content":"            FlashCLIArgumentException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"felfelyuen"},"content":"        boolean containsAllArguments \u003d arguments.contains(\"/q\") \u0026\u0026 arguments.contains(\"/a\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"felfelyuen"},"content":"        if (!containsAllArguments) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"felfelyuen"},"content":"            throw new FlashCLIArgumentException(CREATE_MISSING_FIELD);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"felfelyuen"},"content":"        int questionStart \u003d arguments.indexOf(\"/q\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"felfelyuen"},"content":"        int answerStart \u003d arguments.indexOf(\"/a\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"felfelyuen"},"content":"        if (questionStart \u003e answerStart) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"felfelyuen"},"content":"            throw new FlashCLIArgumentException(CREATE_INVALID_ORDER);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"felfelyuen"},"content":"        String updatedQuestion \u003d arguments.substring(questionStart + \"/q\".length(), answerStart).trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"felfelyuen"},"content":"        String updatedAnswer \u003d arguments.substring(answerStart + \"/a\".length()).trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"felfelyuen"},"content":"        if (updatedQuestion.isEmpty() || updatedAnswer.isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"felfelyuen"},"content":"            throw new FlashCLIArgumentException(CREATE_MISSING_DESCRIPTION);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"felfelyuen"},"content":"        Flashcard updatedFlashcard \u003d new Flashcard(index, updatedQuestion, updatedAnswer);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"felfelyuen"},"content":"        if (index \u003c\u003d 0 || index \u003e flashcards.size()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"felfelyuen"},"content":"            throw new ArrayIndexOutOfBoundsException(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"felfelyuen"},"content":"        int arrayIndex \u003d index - 1;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"felfelyuen"},"content":"        Flashcard oldFlashcard \u003d flashcards.get(arrayIndex);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"felfelyuen"},"content":"        String oldQuestion \u003d oldFlashcard.getQuestion();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"felfelyuen"},"content":"        String oldAnswer \u003d oldFlashcard.getAnswer();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"felfelyuen"},"content":"        flashcards.set(arrayIndex, updatedFlashcard);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"felfelyuen"},"content":"        return String.format(EDIT_SUCCESS,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"felfelyuen"},"content":"                oldQuestion, updatedQuestion, oldAnswer, updatedAnswer);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"felfelyuen"},"content":"     * lists out the questions of the flashcards","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"felfelyuen"},"content":"     * @return list of questions in the format of LIST_SUCCESS","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"felfelyuen"},"content":"     * @throws EmptyListException if the list is empty","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"felfelyuen"},"content":"    //@@author felfelyuen","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"felfelyuen"},"content":"    public String listFlashcards() throws EmptyListException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"felfelyuen"},"content":"        if (flashcards.isEmpty()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"felfelyuen"},"content":"            throw new EmptyListException(EMPTY_LIST);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"felfelyuen"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"felfelyuen"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"felfelyuen"},"content":"        for (Flashcard question : flashcards) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"felfelyuen"},"content":"            String currentQuestion \u003d question.getQuestion();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"felfelyuen"},"content":"            list.append(i).append(\". \").append(currentQuestion);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"felfelyuen"},"content":"            if (i !\u003d flashcards.size()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"felfelyuen"},"content":"                list.append(\"\\n\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"felfelyuen"},"content":"            }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"felfelyuen"},"content":"            i++;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"felfelyuen"},"content":"        return String.format(LIST_SUCCESS, list);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"felfelyuen"},"content":"     * Deletes the flashcard","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"felfelyuen"},"content":"     * @param index index of flashcard","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"felfelyuen"},"content":"     * @return the flashcard details in the format of DELETE_SUCCESS","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"felfelyuen"},"content":"     * @throws ArrayIndexOutOfBoundsException if the index is outside of list size","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"felfelyuen"},"content":"    public String deleteFlashcard(int index) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"felfelyuen"},"content":"        if (index \u003c\u003d 0 || index \u003e flashcards.size()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"felfelyuen"},"content":"            throw new ArrayIndexOutOfBoundsException(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"felfelyuen"},"content":"        int arrayIndex \u003d index - 1;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"felfelyuen"},"content":"        Flashcard flashcardToDelete \u003d flashcards.get(arrayIndex);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"felfelyuen"},"content":"        assert flashcardToDelete !\u003d null : \"flashcard object should not be null\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"felfelyuen"},"content":"        flashcards.remove(arrayIndex);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"felfelyuen"},"content":"        return String.format(DELETE_SUCCESS, index, flashcardToDelete.getQuestion(), flashcardToDelete.getAnswer());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"felfelyuen"},"content":"     * quizzes flashcards within the current deck","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"felfelyuen"},"content":"     * clears incorrect_flashcards, incorrect_card_indexes and incorrect_answers if quiz starts.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"felfelyuen"},"content":"     * adds into incorrect_flashcards, incorrect_card_indexes and incorrect_answers if incorrect answers are given.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"felfelyuen"},"content":"     * @throws EmptyListException if there are no flashcards in the deck","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"felfelyuen"},"content":"    //@@author felfelyuen","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"felfelyuen"},"content":"    public boolean quizFlashcards() throws EmptyListException, QuizCancelledException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"felfelyuen"},"content":"        logger.info(\"starting to enter quiz mode:\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"felfelyuen"},"content":"        if (flashcards.isEmpty()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"felfelyuen"},"content":"            throw new EmptyListException(EMPTY_LIST);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"felfelyuen"},"content":"        incorrectIndexes.clear();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"felfelyuen"},"content":"        incorrectFlashcards.clear();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"felfelyuen"},"content":"        incorrectAnswers.clear();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"felfelyuen"},"content":"        logger.info(\"Found \" + flashcards.size() + \" flashcards in the deck\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"felfelyuen"},"content":"        logger.info(\"starting sorting and shuffling:\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"felfelyuen"},"content":"        ArrayList\u003cFlashcard\u003e queue \u003d shuffleDeck(flashcards);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"felfelyuen"},"content":"        if (queue.isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"felfelyuen"},"content":"            throw new EmptyListException(QUIZ_NO_UNLEARNED);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"felfelyuen"},"content":"        Ui.showToUser(QUIZ_START);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"felfelyuen"},"content":"        long startTime \u003d System.nanoTime();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"felfelyuen"},"content":"        timer \u003d new Timer(startTime);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"felfelyuen"},"content":"        int lastIndex \u003d queue.size() - 1;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"felfelyuen"},"content":"        assert lastIndex \u003e\u003d 0 : \"Queue size should not be zero\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"felfelyuen"},"content":"        for (int i \u003d 0; i \u003c lastIndex; i++) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"felfelyuen"},"content":"            int questionsLeft \u003d queue.size() - i;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"felfelyuen"},"content":"            Ui.showToUser(String.format(QUIZ_QUESTIONS_LEFT, questionsLeft));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"felfelyuen"},"content":"            handleQuestionForQuiz(queue.get(i));","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"felfelyuen"},"content":"        logger.info(\"Last question:\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"felfelyuen"},"content":"        Ui.showToUser(QUIZ_LAST_QUESTION);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"felfelyuen"},"content":"        handleQuestionForQuiz(queue.get(lastIndex));","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"felfelyuen"},"content":"        logger.info(\"Finished asking questions, tabulating timer amount:\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"felfelyuen"},"content":"        long timeTaken \u003d timer.getDuration();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"felfelyuen"},"content":"        assert timeTaken \u003e 0 : \"Timer_amount should not be zero\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"felfelyuen"},"content":"        logger.info(\"Exiting quiz mode:\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"felfelyuen"},"content":"        Ui.showToUser(String.format(QUIZ_END, timeTaken));","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"felfelyuen"},"content":"        isQuizCompleted \u003d true;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"felfelyuen"},"content":"        return true;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"felfelyuen"},"content":"     * handles asking the flashcard\u0027s question and taking in the input","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"felfelyuen"},"content":"     * function specific for quiz, as incorrect answer would affect the arrays for incorrect answers","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"felfelyuen"},"content":"     * @param indexCard to ask the question from","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"felfelyuen"},"content":"     * @throws QuizCancelledException if user wants to cancel halfway through the quiz","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"felfelyuen"},"content":"    //@@author felfelyuen","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"felfelyuen"},"content":"    public void handleQuestionForQuiz(Flashcard indexCard) throws QuizCancelledException {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"felfelyuen"},"content":"        Ui.showToUser(indexCard.getQuestion());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"felfelyuen"},"content":"        String userAnswer \u003d Ui.getUserCommand().trim();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"felfelyuen"},"content":"        while (userAnswer.isEmpty()) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"felfelyuen"},"content":"            logger.info(\"no answer detected\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"felfelyuen"},"content":"            Ui.showError(QUIZ_NO_ANSWER_DETECTED);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"felfelyuen"},"content":"            userAnswer \u003d Ui.getUserCommand().trim();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"felfelyuen"},"content":"        boolean answerCorrect \u003d handleAnswerForFlashcard(indexCard, userAnswer);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"felfelyuen"},"content":"        if (!answerCorrect) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"felfelyuen"},"content":"            logger.info(\"Adding into incorrect answer arrays:\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"felfelyuen"},"content":"            int incorrectIndex \u003d indexCard.getIndex();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"felfelyuen"},"content":"            incorrectIndexes.add(incorrectIndex);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"felfelyuen"},"content":"            incorrectFlashcards.add(indexCard);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"felfelyuen"},"content":"            incorrectAnswers.add(userAnswer);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"felfelyuen"},"content":"        indexCard.setIsLearned(answerCorrect);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"felfelyuen"},"content":"     * checks if the answer is correct with a specific flashcard","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"felfelyuen"},"content":"     * @param indexCard the card with the question and index","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"felfelyuen"},"content":"     * @param userAnswer the answer that is inputted","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"felfelyuen"},"content":"     * @return boolean value of whether the answer is correct","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"felfelyuen"},"content":"     * @throws QuizCancelledException if the user wants to cancel the quiz half-way.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"felfelyuen"},"content":"    //@@author felfelyuen","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"felfelyuen"},"content":"    public boolean handleAnswerForFlashcard (Flashcard indexCard, String userAnswer)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"felfelyuen"},"content":"            throws QuizCancelledException {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"felfelyuen"},"content":"        assert (!userAnswer.isEmpty()) : \"userAnswer should not be empty\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"felfelyuen"},"content":"        if(userAnswer.equals(QUIZ_CANCEL)) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"felfelyuen"},"content":"            logger.info(\"Quiz cancelled by user. Exiting quiz:\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"felfelyuen"},"content":"            incorrectIndexes.clear();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"felfelyuen"},"content":"            incorrectFlashcards.clear();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"felfelyuen"},"content":"            incorrectAnswers.clear();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"felfelyuen"},"content":"            throw new QuizCancelledException(QUIZ_CANCEL_MESSAGE);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"felfelyuen"},"content":"        logger.info(\"answer detected:\" + userAnswer);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"felfelyuen"},"content":"        if (userAnswer.equals(indexCard.getAnswer())) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"felfelyuen"},"content":"            logger.info(\"Correct answer detected\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"felfelyuen"},"content":"            Ui.showToUser(QUIZ_CORRECT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"felfelyuen"},"content":"            return true;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"felfelyuen"},"content":"        } else {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"felfelyuen"},"content":"            logger.info(\"Wrong answer detected, should be:\" +","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"felfelyuen"},"content":"                    indexCard.getAnswer());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"felfelyuen"},"content":"            Ui.showToUser(QUIZ_INCORRECT);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"felfelyuen"},"content":"            return false;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"felfelyuen"},"content":"     * Handles showing result upon the completion of a quiz","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"felfelyuen"},"content":"     *","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"felfelyuen"},"content":"     * @return a success message indicating the result has been shown.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"felfelyuen"},"content":"     * @throws  FlashCLIArgumentException if the quiz is not completed or mismatched arrays","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"    //@@author shunyang12","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"    public String showQuizResult() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"        logger.info(\"Trying to generate your quiz result...\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"        if (isQuizCompleted \u003d\u003d false) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"            throw new FlashCLIArgumentException(INCOMPLETED_QUIZ);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"        int incorrectAnswersSize \u003d incorrectAnswers.size();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"        int incorrectIndexesSize \u003d incorrectIndexes.size();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"        int incorrectFlashcardsSize \u003d incorrectFlashcards.size();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"        int totalQuestionsSize \u003d flashcards.size();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"        if (incorrectAnswersSize !\u003d incorrectIndexesSize ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"            | incorrectAnswersSize !\u003d incorrectFlashcardsSize ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"            | incorrectIndexesSize !\u003d incorrectFlashcardsSize) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"            throw new FlashCLIArgumentException(MISMATCHED_ARRAYS);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"        Ui.showToUser(\"You have answered \" + totalQuestionsSize + \" questions in the quiz.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"        if (incorrectAnswersSize \u003d\u003d 0) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"            return QUIZRESULT_FULL_MARKS;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"        Ui.showToUser(\"You got \" + (totalQuestionsSize-incorrectAnswersSize) + \" questions correctly.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"        Ui.showToUser(\"You got \" + incorrectAnswersSize + \" questions incorrectly.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"        Ui.showToUser(\"Review your mistakes: \");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"        showMistakes();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"        return VIEW_QUIZRESULT_SUCCESS;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"     * Handles showing result upon the completion of a quiz","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"     * @throws  FlashCLIArgumentException if the quiz is not completed or mismatched arrays","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"    //@@author shunyang12","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"    public void showMistakes() throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"        int wrongAnswerCount \u003d 0;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"        for (Integer indexIncorrect: incorrectIndexes) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"            if(indexIncorrect \u003c 0 | indexIncorrect \u003e\u003d flashcards.size() ) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"                throw new ArrayIndexOutOfBoundsException(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"            Ui.showToUser(\"FlashCard \" + indexIncorrect + \" question: \" + flashcards.get(indexIncorrect).getQuestion() +","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"                    \" correct answer: \" + flashcards.get(indexIncorrect).getAnswer() + \" Your answer: \" +","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"                    incorrectAnswers.get(wrongAnswerCount));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"            wrongAnswerCount++;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"     * Inserts code snippets to the flashcard","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"     * @param index     index of flashcard to insert code snippet","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"     * @param arguments user inputs containing updated question and answer","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"     * @return the updated flashcard in the format of EDIT_SUCCESS","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"     * @throws ArrayIndexOutOfBoundsException if the index is outside of list size","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"ElonKoh"},"content":"    //@@author ElonKoh","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"ElonKoh"},"content":"    public String insertCodeSnippet(int index, String arguments)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"ElonKoh"},"content":"            throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"ElonKoh"},"content":"            FlashCLIArgumentException {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"ElonKoh"},"content":"        boolean containsAllArguments \u003d arguments.contains(\"/c\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"ElonKoh"},"content":"        if (!containsAllArguments) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"ElonKoh"},"content":"            throw new FlashCLIArgumentException(INSERT_MISSING_FIELD);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"ElonKoh"},"content":"        int codeStart \u003d arguments.indexOf(\"/c\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"ElonKoh"},"content":"        if (index \u003c\u003d 0 || index \u003e flashcards.size()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"ElonKoh"},"content":"            throw new ArrayIndexOutOfBoundsException(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"ElonKoh"},"content":"        String codeSnippet \u003d arguments.substring(codeStart + \"/c\".length()).trim();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"ElonKoh"},"content":"        if (codeSnippet.isEmpty()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"ElonKoh"},"content":"            throw new FlashCLIArgumentException(INSERT_MISSING_CODE);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"ElonKoh"},"content":"        String formattedCodeSnippet \u003d Parser.parseCodeSnippet(codeSnippet);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"ElonKoh"},"content":"        int arrayIndex \u003d index - 1;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"ElonKoh"},"content":"        Flashcard insertFlashcard \u003d flashcards.get(arrayIndex);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"ElonKoh"},"content":"        insertFlashcard.setCodeSnippet(formattedCodeSnippet);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"ElonKoh"},"content":"        return String.format(INSERT_SUCCESS,","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"ElonKoh"},"content":"                insertFlashcard.getQuestion(), insertFlashcard.getAnswer(),","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"ElonKoh"},"content":"                formattedCodeSnippet);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"ElonKoh"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"ElonKoh"},"content":"     * Shuffles the given deck, including only unlearned flashcards.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"ElonKoh"},"content":"     * Filters out learned flashcards before shuffling the remaining ones.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"ElonKoh"},"content":"     *","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"ElonKoh"},"content":"     * @param deck the list of flashcards to be shuffled.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"ElonKoh"},"content":"     * @return a shuffled list containing only unlearned flashcards.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"ElonKoh"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"ElonKoh"},"content":"    private ArrayList\u003cFlashcard\u003e shuffleDeck (ArrayList\u003cFlashcard\u003e deck) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"ElonKoh"},"content":"        //sort into unlearned ones only","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"ElonKoh"},"content":"        ArrayList\u003cFlashcard\u003e queue \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"ElonKoh"},"content":"        for (Flashcard flashcard : deck) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"ElonKoh"},"content":"            if(!flashcard.getIsLearned()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"ElonKoh"},"content":"                queue.add(flashcard);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"ElonKoh"},"content":"            }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"ElonKoh"},"content":"        Collections.shuffle(queue);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"ElonKoh"},"content":"        return queue;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"ElonKoh"},"content":"    /**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"ElonKoh"},"content":"     * changes isLearned of Flashcard","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"ElonKoh"},"content":"     * @param arguments index of flashcard","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"ElonKoh"},"content":"     * @param isLearned new boolean value of isLearned","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"ElonKoh"},"content":"     * @throws NumberFormatException if arguments is not a number","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"ElonKoh"},"content":"     * @throws ArrayIndexOutOfBoundsException if the index is outside of list size.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"ElonKoh"},"content":"     */","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"ElonKoh"},"content":"    public String changeIsLearned (String arguments, boolean isLearned)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"ElonKoh"},"content":"            throws NumberFormatException,","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"ElonKoh"},"content":"            FlashCLIArgumentException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"ElonKoh"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"ElonKoh"},"content":"            logger.warning(\"No input detected.\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"ElonKoh"},"content":"            throw new FlashCLIArgumentException(CHANGE_IS_LEARNED_MISSING_INDEX);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"ElonKoh"},"content":"        int index \u003d Integer.parseInt(arguments.trim());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"ElonKoh"},"content":"        logger.info(\"index received:\" + index);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"ElonKoh"},"content":"        if (index \u003c 0 || index \u003e flashcards.size()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"ElonKoh"},"content":"            logger.warning(\"Index out of bounds\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"ElonKoh"},"content":"            throw new FlashCLIArgumentException(INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"ElonKoh"},"content":"        Flashcard indexCard \u003d flashcards.get(index - 1);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"ElonKoh"},"content":"        indexCard.setIsLearned(isLearned);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"ElonKoh"},"content":"        logger.info(\"indexCard \" + index + \"\u0027s isLearned changed\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"ElonKoh"},"content":"        if (isLearned) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"ElonKoh"},"content":"            return (String.format(CHANGED_ISLEARNED_SUCCESS, index, \"learned\"));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"ElonKoh"},"content":"        } else {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"ElonKoh"},"content":"            return (String.format(CHANGED_ISLEARNED_SUCCESS, index, \"unlearned\"));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"ElonKoh"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"ElonKoh"},"content":"     * helper function to search for flashcards","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"ElonKoh"},"content":"     * @param arguments question and/or answer to be searched","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"ElonKoh"},"content":"     * @return arraylist of flashcards","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"ElonKoh"},"content":"     * @throws FlashCLIArgumentException if no question or answer is provided","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"ElonKoh"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"ManZ9802"},"content":"    //@@author ManZ9802","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"ManZ9802"},"content":"    public ArrayList\u003cFlashcard\u003e searchFlashcardHelper(String arguments) throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"ManZ9802"},"content":"        boolean hasQuestion \u003d arguments.contains(\"/q\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"ManZ9802"},"content":"        boolean hasAnswer \u003d arguments.contains(\"/a\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"ManZ9802"},"content":"        if (!hasQuestion \u0026\u0026 !hasAnswer) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"ManZ9802"},"content":"            throw new FlashCLIArgumentException(SEARCH_MISSING_FIELD);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"ManZ9802"},"content":"        String queryQuestion \u003d \"\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"ManZ9802"},"content":"        String queryAnswer \u003d \"\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"ManZ9802"},"content":"        if (hasQuestion) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"ManZ9802"},"content":"            int qStart \u003d arguments.indexOf(\"/q\") + 2;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"ManZ9802"},"content":"            int aStart \u003d hasAnswer ? arguments.indexOf(\"/a\") : arguments.length();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"ManZ9802"},"content":"            queryQuestion \u003d arguments.substring(qStart, aStart).trim().toLowerCase();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"ManZ9802"},"content":"        if (hasAnswer) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"ManZ9802"},"content":"            int aStart \u003d arguments.indexOf(\"/a\") + 2;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"ManZ9802"},"content":"            queryAnswer \u003d arguments.substring(aStart).trim().toLowerCase();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"ManZ9802"},"content":"        ArrayList\u003cFlashcard\u003e matchedFlashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"ManZ9802"},"content":"        for (Flashcard flashcard : flashcards) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"ManZ9802"},"content":"            String question \u003d flashcard.getQuestion();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"ManZ9802"},"content":"            String answer \u003d flashcard.getAnswer();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"ManZ9802"},"content":"            boolean questionMatches \u003d hasQuestion \u0026\u0026 question.toLowerCase().contains(queryQuestion);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"ManZ9802"},"content":"            boolean answerMatches \u003d hasAnswer \u0026\u0026 answer.toLowerCase().contains(queryAnswer);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"ManZ9802"},"content":"            if ((hasQuestion \u0026\u0026 hasAnswer \u0026\u0026 questionMatches \u0026\u0026 answerMatches)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"ManZ9802"},"content":"                    || (hasQuestion \u0026\u0026 !hasAnswer \u0026\u0026 questionMatches)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"ManZ9802"},"content":"                    || (!hasQuestion \u0026\u0026 hasAnswer \u0026\u0026 answerMatches)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"ManZ9802"},"content":"                matchedFlashcards.add(flashcard);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"ManZ9802"},"content":"        return matchedFlashcards;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"ManZ9802"},"content":"     * wrapper function for searching flashcards","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"ManZ9802"},"content":"     * @param arguments question and/or answer to be searched","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"ManZ9802"},"content":"     * @return string of matching questions and answers","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"ManZ9802"},"content":"     * @throws FlashCLIArgumentException if no question or answer is provided","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"ManZ9802"},"content":"     * @throws EmptyListException if search is not a match / if the deck is empty","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"ManZ9802"},"content":"    public String searchFlashcard(String arguments) throws FlashCLIArgumentException, EmptyListException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"ManZ9802"},"content":"        ArrayList\u003cFlashcard\u003e matchedFlashcards \u003d searchFlashcardHelper(arguments);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"ManZ9802"},"content":"        if (flashcards.isEmpty()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"ManZ9802"},"content":"            throw new EmptyListException(SEARCH_EMPTY_DECK);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"ManZ9802"},"content":"        if (matchedFlashcards.isEmpty()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"ManZ9802"},"content":"            throw new EmptyListException(SEARCH_RESULT_EMPTY);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"ManZ9802"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"ManZ9802"},"content":"        for (Flashcard flashcard : matchedFlashcards) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"ManZ9802"},"content":"            result.append(String.format(\"Question: %s\\nAnswer: %s\\n\\n\",","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"ManZ9802"},"content":"                    flashcard.getQuestion(),","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"ManZ9802"},"content":"                    flashcard.getAnswer()));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"ManZ9802"},"content":"        return String.format(SEARCH_SUCCESS, result.toString().trim());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"ManZ9802":86,"felfelyuen":256,"Betahaxer":146,"lishunyang12":5,"-":62,"ElonKoh":96}},{"path":"src/main/java/deck/DeckManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"//@@author Betahaxer","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"package deck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.DECK_EMPTY_INPUT;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.DECK_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.DUPLICATE_DECK_NAME;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.EMPTY_DECK_NAME;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.INVALID_INDEX_INPUT;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.MISSING_DECK_NAME;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.NO_DECK_TO_SWITCH;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.NO_DECK_TO_UNSELECT;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.NO_DECK_TO_VIEW;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.SEARCH_RESULT_EMPTY;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.UNCHANGED_DECK_NAME;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.UNSELECT_NO_ARGUMENTS_ALLOWED;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.VIEW_DECKS_NO_ARGUMENTS_ALLOWED;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.CREATE_DECK_SUCCESS;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.DELETE_DECK_SUCCESS;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.RENAME_DECK_SUCCESS;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.SEARCH_SUCCESS;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.SELECT_DECK_SUCCESS;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.UNSELECT_DECK_SUCCESS;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.VIEW_DECKS_SUCCESS;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"import java.util.List;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"import java.util.Map;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":" * Manages a collection of Deck objects, allowing operations such as creation,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":" * renaming, viewing, and switching between decks.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":" *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003eThis class maintains a static reference to the current deck and a map of","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":" * all available decks. It provides methods to manage decks and enforce","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":" * constraints like unique deck names.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":" *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003eThrows {@code FlashCLIArgumentException} for invalid input conditions.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"public class DeckManager {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"    public static Deck currentDeck \u003d null;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"    public static LinkedHashMap\u003cString, Deck\u003e decks \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeckManager.class.getName());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"     * Returns the number of decks currently stored.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"     * @return the total count of decks.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"    public static int getDeckSize() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"        return decks.size();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"    public static Deck getDeckByIndex(int index) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":"        List\u003cMap.Entry\u003cString, Deck\u003e\u003e entryList \u003d new ArrayList\u003c\u003e(decks.entrySet());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"        return entryList.get(index).getValue();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"    public static void removeDeckByIndex(int index) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"        List\u003cMap.Entry\u003cString, Deck\u003e\u003e entryList \u003d new ArrayList\u003c\u003e(decks.entrySet());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"        Map.Entry\u003cString, Deck\u003e entryToRemove \u003d entryList.get(index);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"        decks.remove(entryToRemove.getKey());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Betahaxer"},"content":"    public static void updateDeckByIndex(int index, String newKey, Deck newDeck) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Betahaxer"},"content":"        List\u003cMap.Entry\u003cString, Deck\u003e\u003e entryList \u003d new ArrayList\u003c\u003e(decks.entrySet());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Betahaxer"},"content":"        Map.Entry\u003cString, Deck\u003e entry \u003d entryList.get(index);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"        decks.remove(entry.getKey());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"        decks.put(newKey, newDeck);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"     * Creates a new deck with the given name.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the name of the new deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"     * @return a success message indicating the deck was created.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException if the name is empty or already exists.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"    public static String createDeck(String arguments) throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"        logger.info(\"Entering createDeck method with arguments: \" + arguments);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Betahaxer"},"content":"        String newDeckName \u003d arguments.trim();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Betahaxer"},"content":"        if (newDeckName.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Deck name is empty.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(MISSING_DECK_NAME);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Betahaxer"},"content":"        if (decks.containsKey(newDeckName)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Attempt to create duplicate deck: \" + newDeckName);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(DUPLICATE_DECK_NAME);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Betahaxer"},"content":"        decks.put(newDeckName, new Deck(newDeckName));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Betahaxer"},"content":"        logger.info(\"Deck created successfully: \" + newDeckName);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Betahaxer"},"content":"        assert decks.containsKey(newDeckName) : \"Deck was not added successfully!\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Betahaxer"},"content":"        return String.format(CREATE_DECK_SUCCESS, newDeckName, getDeckSize());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Betahaxer"},"content":"     * Renames the current deck to a new name.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the new name for the current deck.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Betahaxer"},"content":"     * @return a success message indicating the deck was renamed.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException if the name is empty or already exists.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Betahaxer"},"content":"    public static String renameDeck(String arguments) throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Betahaxer"},"content":"        logger.info(\"Entering renameDeck method with arguments: \" + arguments);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Betahaxer"},"content":"        String newDeckName \u003d arguments.trim();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Betahaxer"},"content":"        validateNewDeckName(newDeckName);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Betahaxer"},"content":"        String oldDeckName \u003d currentDeck.getName();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Betahaxer"},"content":"        logger.info(\"Renaming deck: \" + oldDeckName + \" -\u003e \" + newDeckName);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Betahaxer"},"content":"        renameDeckInCollection(oldDeckName, newDeckName);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Betahaxer"},"content":"        logger.info(\"Deck renamed successfully: \" + oldDeckName + \" -\u003e \" + newDeckName);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Betahaxer"},"content":"        return String.format(RENAME_DECK_SUCCESS, oldDeckName, currentDeck.getName());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Betahaxer"},"content":"     * Validates the new deck name by ensuring it is not empty, unchanged, or a duplicate.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Betahaxer"},"content":"     * @param newDeckName The new name for the deck.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException If the new deck name is invalid.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Betahaxer"},"content":"    private static void validateNewDeckName(String newDeckName) throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Betahaxer"},"content":"        if (newDeckName.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Deck name is empty.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(EMPTY_DECK_NAME);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Betahaxer"},"content":"        boolean isNewDeckNameSameAsCurrent \u003d currentDeck.getName().equals(newDeckName);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Betahaxer"},"content":"        boolean isDeckNameDuplicate \u003d decks.containsKey(newDeckName);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Betahaxer"},"content":"        if (isNewDeckNameSameAsCurrent) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Deck name is unchanged\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(UNCHANGED_DECK_NAME);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Betahaxer"},"content":"        if (isDeckNameDuplicate) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Attempt to rename deck to an existing deck name: \" + newDeckName);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(DUPLICATE_DECK_NAME);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Betahaxer"},"content":"     * Renames the deck in the collection, updating the deck name and removing the old name.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Betahaxer"},"content":"     * @param oldDeckName The old name of the deck.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Betahaxer"},"content":"     * @param newDeckName The new name of the deck.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Betahaxer"},"content":"    private static void renameDeckInCollection(String oldDeckName, String newDeckName) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Betahaxer"},"content":"        assert currentDeck !\u003d null : \"A deck must be selected before renaming!\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Betahaxer"},"content":"        currentDeck.setName(newDeckName);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Betahaxer"},"content":"        decks.put(newDeckName, currentDeck);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Betahaxer"},"content":"        decks.remove(oldDeckName);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Betahaxer"},"content":"        assert !decks.containsKey(oldDeckName) : \"Old deck name still exists after renaming!\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Betahaxer"},"content":"        assert decks.containsKey(newDeckName) : \"New deck name was not successfully added!\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Betahaxer"},"content":"        assert currentDeck.getName().equals(newDeckName) : \"Current deck name was not updated properly!\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Betahaxer"},"content":"     * Returns a formatted list of all decks.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Betahaxer"},"content":"     * @return a formatted string listing all available decks.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException if there are no decks to view.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Betahaxer"},"content":"    public static String viewDecks(String arguments) throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Betahaxer"},"content":"        logger.info(\"Entering viewDecks method\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Betahaxer"},"content":"        if (decks.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Attempted to view decks, but no decks are available.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(NO_DECK_TO_VIEW);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Betahaxer"},"content":"        if (!arguments.trim().isEmpty()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Unexpected arguments provided to viewDecks: \" + arguments);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(VIEW_DECKS_NO_ARGUMENTS_ALLOWED);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Betahaxer"},"content":"        String deckListString \u003d buildDeckList();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Betahaxer"},"content":"        logger.info(\"Decks viewed successfully. Total decks: \" + decks.size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Betahaxer"},"content":"        return String.format(VIEW_DECKS_SUCCESS, deckListString);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Betahaxer"},"content":"     * Builds a formatted string listing all deck names with their respective index.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Betahaxer"},"content":"     * Decks are separated by newline characters, and an assertion ensures the deck count matches.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Betahaxer"},"content":"     * @return A string of numbered deck names.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Betahaxer"},"content":"    private static String buildDeckList() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Betahaxer"},"content":"        StringBuilder deckList \u003d new StringBuilder();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Betahaxer"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Betahaxer"},"content":"        for (Map.Entry\u003cString, Deck\u003e deck : decks.entrySet()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Betahaxer"},"content":"            deckList.append(listIndex).append(\". \").append(deck.getKey());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Betahaxer"},"content":"            if (listIndex !\u003d decks.size()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Betahaxer"},"content":"                deckList.append(\"\\n\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Betahaxer"},"content":"            listIndex++;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Betahaxer"},"content":"        int expectedDeckCount \u003d decks.size();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Betahaxer"},"content":"        int actualDeckCount \u003d listIndex - 1;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Betahaxer"},"content":"        assert actualDeckCount \u003d\u003d expectedDeckCount :","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Betahaxer"},"content":"                \"Mismatch in deck count! Expected: \" + expectedDeckCount + \", Found: \" + actualDeckCount;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Betahaxer"},"content":"        return deckList.toString();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Betahaxer"},"content":"     * Selects the deck with the index provided","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the index of the deck to switch to.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Betahaxer"},"content":"     * @return a success message indicating the active deck has changed.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException if the deck does not exist or input is invalid.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Betahaxer"},"content":"    public static String selectDeck(String arguments) throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Betahaxer"},"content":"        logger.info(\"Entering selectDeck method with arguments: \" + arguments);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Betahaxer"},"content":"        if (decks.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Attempted to switch decks, but no decks are available.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(NO_DECK_TO_SWITCH);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Betahaxer"},"content":"        int listIndex \u003d checkAndGetListIndex(arguments);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Betahaxer"},"content":"        currentDeck \u003d getDeckByIndex(listIndex);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Betahaxer"},"content":"        assert currentDeck !\u003d null : \"Current deck should not be null after switching!\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Betahaxer"},"content":"        assert decks.containsKey(currentDeck.getName()) : \"Switched deck does not exist in decks!\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Betahaxer"},"content":"        logger.info(\"Switched to deck: \" + currentDeck.getName());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Betahaxer"},"content":"        return String.format(SELECT_DECK_SUCCESS, currentDeck.getName());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Betahaxer"},"content":"     * Validates and converts the input arguments to a valid deck index.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the string input representing the deck index.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Betahaxer"},"content":"     * @return the zero-based index of the deck.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException if the input is empty, not a valid integer, or otherwise invalid.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Betahaxer"},"content":"    public static int checkAndGetListIndex(String arguments) throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Betahaxer"},"content":"        String trimmedArguments \u003d arguments.trim();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Betahaxer"},"content":"        if (trimmedArguments.isEmpty()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(DECK_EMPTY_INPUT);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Betahaxer"},"content":"        int listIndex;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Betahaxer"},"content":"            listIndex \u003d Integer.parseInt(trimmedArguments) - 1;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Betahaxer"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(INVALID_INDEX_INPUT);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Betahaxer"},"content":"        if (listIndex \u003c 0 || listIndex \u003e\u003d decks.size()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(DECK_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Betahaxer"},"content":"        return listIndex;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Betahaxer"},"content":"     * Deletes a deck by its name if the user has confirmed the deletion.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Betahaxer"},"content":"     * Ensures that the deck exists before removal and updates the current deck if necessary.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Betahaxer"},"content":"     * @param listIndex the name of the deck to be deleted.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Betahaxer"},"content":"     * @return a success message indicating that the deck has been deleted.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException if the deck list is empty, the deck name is missing,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Betahaxer"},"content":"     *                                   or the specified deck does not exist.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Betahaxer"},"content":"    public static String deleteDeck(int listIndex) throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Betahaxer"},"content":"        // checks if selected deck is the one that will be deleted","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Betahaxer"},"content":"        Deck deckToDelete \u003d getDeckByIndex(listIndex);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Betahaxer"},"content":"        if (currentDeck \u003d\u003d deckToDelete) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Betahaxer"},"content":"            currentDeck \u003d null;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Betahaxer"},"content":"        removeDeckByIndex(listIndex);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Betahaxer"},"content":"        return String.format(DELETE_DECK_SUCCESS, deckToDelete.getName());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Betahaxer"},"content":"     * Unselects the currently selected deck if one is active.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments should be an empty string; no arguments are expected.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Betahaxer"},"content":"     * @return a success message indicating the deck has been unselected.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException if no deck is currently selected or if unexpected arguments are provided.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Betahaxer"},"content":"    public static String unselectDeck(String arguments) throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Betahaxer"},"content":"        if (currentDeck \u003d\u003d null) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(NO_DECK_TO_UNSELECT);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Betahaxer"},"content":"        if (!arguments.trim().isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Betahaxer"},"content":"            logger.warning(\"Unexpected arguments provided to unselect decks: \" + arguments);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(UNSELECT_NO_ARGUMENTS_ALLOWED);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Betahaxer"},"content":"        String deckName \u003d currentDeck.getName();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Betahaxer"},"content":"        currentDeck \u003d null;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Betahaxer"},"content":"        return String.format(UNSELECT_DECK_SUCCESS, deckName);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Betahaxer"},"content":"     * Searches for flashcards across all decks based on the provided question and/or answer arguments.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the search query in the format \"q/QUESTION a/ANSWER\"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Betahaxer"},"content":"     * @return formatted string of matching flashcards with their respective decks","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException if the search arguments are invalid","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Betahaxer"},"content":"     * @throws EmptyListException        if there are no decks to search in / if there is no matching flashcards","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"ManZ9802"},"content":"    //@@author ManZ9802","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"ManZ9802"},"content":"    public static String globalSearch(String arguments) throws FlashCLIArgumentException, EmptyListException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"ManZ9802"},"content":"        if (decks.isEmpty()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"ManZ9802"},"content":"            throw new EmptyListException(\"No decks available for searching.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"ManZ9802"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"ManZ9802"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"ManZ9802"},"content":"        for (Map.Entry\u003cString, Deck\u003e deckEntry : decks.entrySet()) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"ManZ9802"},"content":"            String deckName \u003d deckEntry.getKey();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"ManZ9802"},"content":"            Deck deck \u003d deckEntry.getValue();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"ManZ9802"},"content":"            for (Flashcard flashcard : deck.searchFlashcardHelper(arguments)) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"ManZ9802"},"content":"                matchCount++;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"ManZ9802"},"content":"                result.append(String.format(\"Deck: %s\\nQuestion: %s\\nAnswer: %s\\n\\n\",","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"ManZ9802"},"content":"                        deckName,","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"ManZ9802"},"content":"                        flashcard.getQuestion(),","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"ManZ9802"},"content":"                        flashcard.getAnswer()));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"ManZ9802"},"content":"        if (matchCount \u003d\u003d 0) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"ManZ9802"},"content":"            throw new EmptyListException(SEARCH_RESULT_EMPTY);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"ManZ9802"},"content":"        return String.format(SEARCH_SUCCESS, result.toString().trim());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"ManZ9802":30,"Betahaxer":322}},{"path":"src/main/java/deck/Flashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package deck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":" * Represents a flashcard with a question and an answer.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"public class Flashcard {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"    protected int index;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"    protected String question;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"    protected String answer;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ElonKoh"},"content":"    protected String codeSnippet;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"felfelyuen"},"content":"    protected boolean isLearned;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"     * Constructs a Flashcard with the specified question and answer.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"     * @param question The question for the flashcard.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"     * @param answer The answer to the flashcard question.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"felfelyuen"},"content":"    public Flashcard(int index, String question, String answer) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"felfelyuen"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"        this.question \u003d question;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"        this.answer \u003d answer;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"        this.isLearned \u003d false;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"felfelyuen"},"content":"     * Returns the index of the flashcard.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"felfelyuen"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"felfelyuen"},"content":"     * @return The flashcard index in the deck","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"felfelyuen"},"content":"    public int getIndex() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"felfelyuen"},"content":"        return index;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"     * Returns the question of the flashcard.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"     * @return The flashcard question.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"    public String getQuestion() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"        return question;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"     * Returns the answer of the flashcard.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"     * @return The flashcard answer.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"    public String getAnswer() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"        return answer;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"     * Returns a string representation of the flashcard.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"     * @return A formatted string containing the question and answer.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"    public String toString() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":"        return String.format(\"Question: %s\\n\" +","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"                \"Answer: %s\", this.question, this.answer);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ElonKoh"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ElonKoh"},"content":"     * Sets the code snippet of the flashcard.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ElonKoh"},"content":"     *","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ElonKoh"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ElonKoh"},"content":"    public void setCodeSnippet(String codeSnippet) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ElonKoh"},"content":"        this.codeSnippet \u003d codeSnippet;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ElonKoh"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ElonKoh"},"content":"     * Returns the code snippet of the flashcard.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ElonKoh"},"content":"     *","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ElonKoh"},"content":"     * @return The flashcard code snippet.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ElonKoh"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ElonKoh"},"content":"    public String getCodeSnippet() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ElonKoh"},"content":"        return (codeSnippet \u003d\u003d null) ? \"\" : codeSnippet;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"felfelyuen"},"content":"     * Returns boolean value of whether flashcard is learned","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"felfelyuen"},"content":"     * @return The boolean value isLearned","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"felfelyuen"},"content":"    public boolean getIsLearned() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"felfelyuen"},"content":"        return isLearned;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"felfelyuen"},"content":"    /**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"felfelyuen"},"content":"     * sets the flashcard to be \"learned\"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"felfelyuen"},"content":"     * @param change in boolean value","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"felfelyuen"},"content":"     */","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"felfelyuen"},"content":"    public void setIsLearned(boolean change) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"felfelyuen"},"content":"        this.isLearned \u003d change;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"felfelyuen":30,"Betahaxer":49,"ElonKoh":18}},{"path":"src/main/java/exceptions/EmptyListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"package exceptions;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"public class EmptyListException extends Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"    public EmptyListException(String message) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"        super(message);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"felfelyuen":7}},{"path":"src/main/java/exceptions/FlashCLIArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package exceptions;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"public class FlashCLIArgumentException extends Exception {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"    public FlashCLIArgumentException(String message) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"        super(message);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Betahaxer":7}},{"path":"src/main/java/exceptions/QuizCancelledException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"felfelyuen"},"content":"package exceptions;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"felfelyuen"},"content":"public class QuizCancelledException extends Exception {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"    public QuizCancelledException(String message) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"felfelyuen"},"content":"        super(message);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"felfelyuen"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"felfelyuen":7}},{"path":"src/main/java/flashcli/FlashCLI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package flashcli;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.EXIT;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import command.Command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"import deck.DeckManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"import logger.LoggingSetup;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import parser.Parser;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"import storage.Loading;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"import storage.Saving;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"import static ui.Ui.getUserCommand;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"import java.io.IOException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"public class FlashCLI {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"     * Main entry-point for the java.flashcli.FlashCLI application.","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"        System.out.println(\"Welcome to FlashCLI!\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"        LoggingSetup.configureGlobalLogging();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"        DeckManager.decks \u003d Loading.loadAllDecks();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"        String fullInputLine \u003d getUserCommand();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"        while (!(fullInputLine.equals(EXIT))) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"            try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"                Command c \u003d Parser.parseInput(fullInputLine);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"                if (c !\u003d null) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"                    c.executeCommand();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"                }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"            } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"                Ui.showError(e.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"            } finally {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"                fullInputLine \u003d getUserCommand();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"            }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ManZ9802"},"content":"            Saving.saveAllDecks(DeckManager.decks);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ManZ9802"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ManZ9802"},"content":"            System.out.println(\"Error saving decks: \" + e.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"        System.out.println(\"Thank you for using FlashCLI!\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"ManZ9802":10,"Betahaxer":29,"-":7}},{"path":"src/main/java/logger/LoggingSetup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package logger;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":" * Configures the global logging level for the entire application.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":" * This ensures that all loggers adhere to a consistent logging level.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"public class LoggingSetup {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"     * Sets up global logging by resetting the log manager, configuring a console handler,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"     * and setting the logging level.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"    public static void configureGlobalLogging() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"        Logger rootLogger \u003d Logger.getLogger(\"\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"        ConsoleHandler handler \u003d new ConsoleHandler();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"        handler.setLevel(Level.SEVERE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"        rootLogger.addHandler(handler);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"        rootLogger.setLevel(Level.SEVERE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"Betahaxer":27}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package parser;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import command.Command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"felfelyuen"},"content":"import command.CommandChangeLearned;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import command.CommandCreateFlashcard;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import command.CommandCreateDeck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import command.CommandDeleteFlashcard;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"import command.CommandDeleteDeck;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import command.CommandEditFlashcard;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ElonKoh"},"content":"import command.CommandInsertCode;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ElonKoh"},"content":"import command.CommandListQuestion;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ElonKoh"},"content":"import command.CommandQuizFlashcards;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"import command.CommandRenameDeck;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"import command.CommandSelectDeck;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"import command.CommandUnselectDeck;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"import command.CommandUserGuide;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"import command.CommandViewAnswer;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"import command.CommandViewDecks;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"felfelyuen"},"content":"import command.CommandViewQuestion;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"import command.CommandSearchFlashcard;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lishunyang12"},"content":"import command.CommandViewQuizResult;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"import ui.Ui;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.ADD_CARD;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.DELETE_CARD;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.REMOVE_DECK;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ElonKoh"},"content":"import static constants.CommandConstants.INSERT_CODE;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"felfelyuen"},"content":"import static constants.CommandConstants.MARK_LEARNED;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"felfelyuen"},"content":"import static constants.CommandConstants.MARK_UNLEARNED;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.NEW_DECK;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ElonKoh"},"content":"import static constants.CommandConstants.QUIZ;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.RENAME_DECK;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.SELECT_DECK;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.UNSELECT_DECK;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"felfelyuen"},"content":"import static constants.CommandConstants.USER_GUIDE;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ManZ9802"},"content":"import static constants.CommandConstants.VIEW_ANS;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.VIEW_DECKS;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ElonKoh"},"content":"import static constants.CommandConstants.VIEW_QN;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.EDIT_CARD;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.LIST_CARDS;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ManZ9802"},"content":"import static constants.CommandConstants.SEARCH_CARD;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"import static constants.ConfirmationMessages.CONFIRM_DELETE_DECK;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lishunyang12"},"content":"import static constants.CommandConstants.VIEW_RES;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"import static constants.ConfirmationMessages.DECK_NOT_DELETED;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.DELETE_EMPTY_DECK_ERROR;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.NO_DECK_ERROR;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.POSSIBLE_COMMANDS;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.checkAndGetListIndex;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.decks;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.getDeckByIndex;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":" * Parses user input and returns the corresponding command.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":" *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":" * \u003cp\u003eSplits the input string into command and arguments,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":" * validates them, and returns the appropriate command object for execution.\u003c/p\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"public class Parser {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"     * Parses the given input string to create a corresponding command.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"     * @param input the user input containing a command and optional arguments.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"     * @return the corresponding Command object based on the parsed input.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException if the input is invalid or required arguments are missing.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Betahaxer"},"content":"    public static Command parseInput(String input) throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"        String[] inputList \u003d input.split(\" \", 2);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"        String command \u003d inputList[0];","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"        String arguments \u003d inputList.length \u003e 1 ? inputList[1] : \"\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"        assert arguments !\u003d null : \"Arguments should not be null\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"        ArrayList\u003cString\u003e commandsWithDeck \u003d","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lishunyang12"},"content":"                new ArrayList\u003c\u003e(List.of(ADD_CARD, VIEW_QN, VIEW_ANS, VIEW_RES, EDIT_CARD, LIST_CARDS, DELETE_CARD,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ManZ9802"},"content":"                        QUIZ, RENAME_DECK, INSERT_CODE));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"        if (currentDeck \u003d\u003d null \u0026\u0026 commandsWithDeck.contains(command)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(NO_DECK_ERROR);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"        return switch (command) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Betahaxer"},"content":"        case ADD_CARD -\u003e new CommandCreateFlashcard(arguments);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"felfelyuen"},"content":"        case VIEW_QN -\u003e new CommandViewQuestion(arguments);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ManZ9802"},"content":"        case VIEW_ANS -\u003e new CommandViewAnswer(arguments);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Betahaxer"},"content":"        case EDIT_CARD -\u003e new CommandEditFlashcard(arguments);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Betahaxer"},"content":"        case LIST_CARDS -\u003e new CommandListQuestion();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Betahaxer"},"content":"        case DELETE_CARD -\u003e new CommandDeleteFlashcard(arguments);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Betahaxer"},"content":"        case INSERT_CODE -\u003e new CommandInsertCode(arguments);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ManZ9802"},"content":"        case SEARCH_CARD -\u003e new CommandSearchFlashcard(arguments);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Betahaxer"},"content":"        case NEW_DECK -\u003e new CommandCreateDeck(arguments);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Betahaxer"},"content":"        case SELECT_DECK -\u003e new CommandSelectDeck(arguments);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Betahaxer"},"content":"        case RENAME_DECK -\u003e new CommandRenameDeck(arguments);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Betahaxer"},"content":"        case VIEW_DECKS -\u003e new CommandViewDecks(arguments);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Betahaxer"},"content":"        case REMOVE_DECK -\u003e validateDeckExistsForDelete(arguments);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Betahaxer"},"content":"        case UNSELECT_DECK -\u003e new CommandUnselectDeck(arguments);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"felfelyuen"},"content":"        case QUIZ -\u003e new CommandQuizFlashcards();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lishunyang12"},"content":"        case VIEW_RES -\u003e new CommandViewQuizResult();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"felfelyuen"},"content":"        case MARK_UNLEARNED -\u003e new CommandChangeLearned(arguments, false);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Betahaxer"},"content":"        case MARK_LEARNED -\u003e new CommandChangeLearned(arguments, true);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"felfelyuen"},"content":"        case USER_GUIDE -\u003e new CommandUserGuide();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Betahaxer"},"content":"        default -\u003e throw new FlashCLIArgumentException(POSSIBLE_COMMANDS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Betahaxer"},"content":"        };","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Betahaxer"},"content":"     * Validates that the deck to be deleted exists and is valid.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Betahaxer"},"content":"     * Throws an exception if the deck list is empty, the name is empty, or the deck does not exist.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Betahaxer"},"content":"     * If validation passes, proceeds to confirmation for deletion.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Betahaxer"},"content":"     * @param arguments the raw user input representing the deck name.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Betahaxer"},"content":"     * @return a {@code CommandDeleteDeck} if deletion is confirmed, or {@code null} if cancelled.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Betahaxer"},"content":"     * @throws FlashCLIArgumentException if validation fails due to missing or invalid deck.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Betahaxer"},"content":"    public static Command validateDeckExistsForDelete(String arguments) throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Betahaxer"},"content":"        if (decks.isEmpty()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Betahaxer"},"content":"            throw new FlashCLIArgumentException(DELETE_EMPTY_DECK_ERROR);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Betahaxer"},"content":"        int listIndex \u003d checkAndGetListIndex(arguments);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Betahaxer"},"content":"        return handleDeleteDeckConfirmation(listIndex);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Betahaxer"},"content":"     * Handles the confirmation process when a user attempts to delete a deck.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Betahaxer"},"content":"     * Prompts the user for confirmation and ensures valid input (\"y\" or \"n\").","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Betahaxer"},"content":"     * If the user confirms (\"y\"), a {@code CommandDeleteDeck} is returned.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Betahaxer"},"content":"     * If the user cancels (\"n\"), {@code null} is returned.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Betahaxer"},"content":"     * @param listIndex the name or identifier of the deck to be deleted.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Betahaxer"},"content":"     * @return a {@code CommandDeleteDeck} if confirmed, or {@code null} if canceled.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Betahaxer"},"content":"    private static Command handleDeleteDeckConfirmation(int listIndex) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Betahaxer"},"content":"        boolean isValidConfirmation;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Betahaxer"},"content":"        String deckName \u003d getDeckByIndex(listIndex).getName();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Betahaxer"},"content":"        String userInput;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Betahaxer"},"content":"        do {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(String.format(CONFIRM_DELETE_DECK, deckName));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Betahaxer"},"content":"            userInput \u003d Ui.getUserCommand().toLowerCase();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Betahaxer"},"content":"            isValidConfirmation \u003d userInput.equals(\"yes\") || userInput.equals(\"no\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Betahaxer"},"content":"        } while (!isValidConfirmation);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Betahaxer"},"content":"        if (userInput.equals(\"no\")) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Betahaxer"},"content":"            Ui.showToUser(String.format(DECK_NOT_DELETED, deckName));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Betahaxer"},"content":"            return null;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Betahaxer"},"content":"        return new CommandDeleteDeck(listIndex);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ElonKoh"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ElonKoh"},"content":"     * Parses a given code snippet to the correct formatting.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ElonKoh"},"content":"     *","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ElonKoh"},"content":"     * @param codeSnippet the code snippet input.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ElonKoh"},"content":"     * @return the formatted code snippet for storage and printing.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ElonKoh"},"content":"     * @throws FlashCLIArgumentException if the input is invalid or required arguments are missing.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ElonKoh"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ElonKoh"},"content":"    public static String parseCodeSnippet(String codeSnippet) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ElonKoh"},"content":"        return codeSnippet;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"ManZ9802":7,"felfelyuen":10,"Betahaxer":129,"lishunyang12":4,"ElonKoh":16}},{"path":"src/main/java/storage/Loading.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"//@@ author ManZ9802","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"package storage;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"import java.io.File;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"import java.io.IOException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"import deck.Deck;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"import deck.Flashcard;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":" * Class to handle loading of pre-existing decks when program is first started up","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"public class Loading {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"     * Method checks through the folder for all .txt files to create the decks","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"     * It will then parse through every .txt file to create the flashcard of the deck","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"     * @return LinkedHashMap","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"    public static LinkedHashMap\u003cString, Deck\u003e loadAllDecks() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"        LinkedHashMap\u003cString, Deck\u003e decks \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"        File folder \u003d new File(\"./data/decks\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"        if (!folder.exists() || !folder.isDirectory()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"            return decks; // Return empty if no folder or not a directory","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"        File[] files \u003d folder.listFiles((dir, name) -\u003e name.endsWith(\".txt\"));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"        if (files \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"            return decks;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ManZ9802"},"content":"        for (File file : files) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ManZ9802"},"content":"            String deckName \u003d file.getName().replace(\".txt\", \"\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ManZ9802"},"content":"            Deck deck \u003d new Deck(deckName);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ManZ9802"},"content":"            try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ManZ9802"},"content":"                String line;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ManZ9802"},"content":"                String question \u003d null;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ManZ9802"},"content":"                String answer \u003d null;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ManZ9802"},"content":"                while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ManZ9802"},"content":"                    if (line.startsWith(\"Q: \")) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ManZ9802"},"content":"                        question \u003d line.substring(3).trim();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ManZ9802"},"content":"                    } else if (line.startsWith(\"A: \")) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ManZ9802"},"content":"                        answer \u003d line.substring(3).trim();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ManZ9802"},"content":"                        if (question !\u003d null \u0026\u0026 !question.isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ManZ9802"},"content":"                            deck.insertFlashcard(new Flashcard(deck.getDeckSize(), question, answer));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ManZ9802"},"content":"                            question \u003d null;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ManZ9802"},"content":"                            answer \u003d null;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ManZ9802"},"content":"                        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ManZ9802"},"content":"                    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ManZ9802"},"content":"                }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ManZ9802"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ManZ9802"},"content":"                System.out.println(\"Error loading deck: \" + deckName);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ManZ9802"},"content":"            decks.put(deckName, deck);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ManZ9802"},"content":"        return decks;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"ManZ9802":65}},{"path":"src/main/java/storage/Saving.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ManZ9802"},"content":"//@@author ManZ9802","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ManZ9802"},"content":"package storage;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ManZ9802"},"content":"import java.io.File;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ManZ9802"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ManZ9802"},"content":"import java.io.IOException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ManZ9802"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ManZ9802"},"content":"import deck.Deck;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ManZ9802"},"content":"import deck.Flashcard;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"/**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":" * Class to handle the saving of all decks created / deleted inside the program.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":" * Each deck will be saved to its own .txt in a specific format","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":" */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ManZ9802"},"content":"public class Saving {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ManZ9802"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ManZ9802"},"content":"     * Saves the list to path ./data/decks/","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"     * Each deck is its own .txt file","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ManZ9802"},"content":"     * Creates this path if it does not exist","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ManZ9802"},"content":"     * @param decks decks to be saved","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"     * @throws IOException if there is issues saving the file","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ManZ9802"},"content":"    public static void saveAllDecks(LinkedHashMap\u003cString, Deck\u003e decks) throws IOException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ManZ9802"},"content":"        File dir \u003d new File(\"./data/decks\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ManZ9802"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"            dir.mkdirs();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ManZ9802"},"content":"        File[] existingFiles \u003d dir.listFiles((d, name) -\u003e name.endsWith(\".txt\"));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ManZ9802"},"content":"        if (existingFiles !\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ManZ9802"},"content":"            for (File file : existingFiles) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ManZ9802"},"content":"                String deckName \u003d file.getName().replace(\".txt\", \"\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ManZ9802"},"content":"                if (!decks.containsKey(deckName)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ManZ9802"},"content":"                    file.delete();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ManZ9802"},"content":"                }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ManZ9802"},"content":"        for (String deckName : decks.keySet()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ManZ9802"},"content":"            Deck deck \u003d decks.get(deckName);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ManZ9802"},"content":"            File file \u003d new File(dir, deckName.toLowerCase() + \".txt\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ManZ9802"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ManZ9802"},"content":"            for (Flashcard flashcard : deck.getFlashcards()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ManZ9802"},"content":"                fw.write(\"Q: \" + flashcard.getQuestion() + \"\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ManZ9802"},"content":"                fw.write(\"A: \" + flashcard.getAnswer() + \"\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ManZ9802"},"content":"                fw.write(\"\\n\"); // Separate flashcards with a blank line","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ManZ9802"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ManZ9802"},"content":"            fw.close();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"ManZ9802":54}},{"path":"src/main/java/timer/Timer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElonKoh"},"content":"package timer;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ElonKoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ElonKoh"},"content":"/**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ElonKoh"},"content":" * Represents a timer that contains the timestamp of creation.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ElonKoh"},"content":" * \u003cp\u003eThis class provides the functionality of keeping track of time elapsed.\u003c/p\u003e","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ElonKoh"},"content":" */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ElonKoh"},"content":"public class Timer {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ElonKoh"},"content":"    private long startTime;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ElonKoh"},"content":"    private final ArrayList\u003cLong\u003e timestamps \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ElonKoh"},"content":"    public Timer(long startTime) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ElonKoh"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ElonKoh"},"content":"    /**","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ElonKoh"},"content":"     * Calculates the difference in time between object creation and method called.","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ElonKoh"},"content":"     *","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ElonKoh"},"content":"     * @return the time duration in seconds","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ElonKoh"},"content":"     */","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ElonKoh"},"content":"    public long getDuration() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ElonKoh"},"content":"        long currentTime \u003d System.nanoTime();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ElonKoh"},"content":"        timestamps.add(currentTime);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ElonKoh"},"content":"        return ((currentTime - startTime)/1000000000);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ElonKoh"},"content":"}","lastModifiedDate":"2025-03-29","isFullCredit":false}],"authorContributionMap":{"ElonKoh":27}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package ui;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static constants.CommandConstants.EXIT;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":" * Handles user interaction by reading input and displaying messages.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"public class Ui {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"     * Reads and returns the next user command from input.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"     * If no input is available, returns a safe default value.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"     * @return The user input as a string, or EXIT if no input is available.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"    public static String getUserCommand() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"        if (in.hasNextLine()) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"            return in.nextLine();","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"        } else {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"            return EXIT;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"     * Displays a message to the user.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"    public static void showToUser(String message) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"    public static void showError(String message) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Betahaxer":42,"ElonKoh":1}},{"path":"src/test/java/deck/DeckManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package deck;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.DECK_EMPTY_INPUT;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.DECK_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.DUPLICATE_DECK_NAME;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.EMPTY_DECK_NAME;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.INVALID_INDEX_INPUT;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.MISSING_DECK_NAME;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.NO_DECK_TO_SWITCH;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.NO_DECK_TO_UNSELECT;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.NO_DECK_TO_VIEW;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ManZ9802"},"content":"import static constants.ErrorMessages.SEARCH_RESULT_EMPTY;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.UNCHANGED_DECK_NAME;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.UNSELECT_NO_ARGUMENTS_ALLOWED;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.VIEW_DECKS_NO_ARGUMENTS_ALLOWED;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.CREATE_DECK_SUCCESS;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.DELETE_DECK_SUCCESS;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.RENAME_DECK_SUCCESS;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ManZ9802"},"content":"import static constants.SuccessMessages.SEARCH_SUCCESS;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.SELECT_DECK_SUCCESS;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.UNSELECT_DECK_SUCCESS;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.VIEW_DECKS_SUCCESS;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.createDeck;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.currentDeck;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.decks;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.deleteDeck;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ManZ9802"},"content":"import static deck.DeckManager.globalSearch;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.renameDeck;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.selectDeck;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.unselectDeck;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.viewDecks;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ManZ9802"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"public class DeckManagerTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"    void setUp() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"        decks.clear();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"    /*","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"     * Tests for create deck command \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"    void createDeck_simpleDeckName_success() throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"        String result \u003d createDeck(\"test1\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(String.format(CREATE_DECK_SUCCESS, \"test1\", 1), result);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":"    void createDeck_emptyDeckName_throwsException() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"            createDeck(\"\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(MISSING_DECK_NAME, exception.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Betahaxer"},"content":"    void createDeck_duplicateDeckName_throwsException() throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"test1\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"            createDeck(\"test1\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(DUPLICATE_DECK_NAME, exception.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"    /*","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"     * Tests for rename deck command \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"    void renameDeck_validNewName_success() throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Coding Quality Concepts\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"        currentDeck \u003d decks.get(\"Coding Quality Concepts\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Betahaxer"},"content":"        String result \u003d renameDeck(\"Code Quality\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(String.format(RENAME_DECK_SUCCESS, \"Coding Quality Concepts\", \"Code Quality\"), result);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Betahaxer"},"content":"    void renameDeck_emptyNewName_throwsException() throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Coding Quality Concepts\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Betahaxer"},"content":"        currentDeck \u003d decks.get(\"Coding Quality Concepts\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Betahaxer"},"content":"            renameDeck(\"\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(EMPTY_DECK_NAME, exception.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Betahaxer"},"content":"    void renameDeck_sameName_noChange() throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Coding Quality Concepts\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Betahaxer"},"content":"        currentDeck \u003d decks.get(\"Coding Quality Concepts\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Betahaxer"},"content":"            renameDeck(\"Coding Quality Concepts\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(UNCHANGED_DECK_NAME, exception.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Betahaxer"},"content":"    void renameDeck_duplicateName_throwsException() throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Coding Quality Concepts\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Abstraction\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Betahaxer"},"content":"        currentDeck \u003d decks.get(\"Abstraction\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Betahaxer"},"content":"            renameDeck(\"Coding Quality Concepts\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(DUPLICATE_DECK_NAME, exception.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Betahaxer"},"content":"    /*","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Betahaxer"},"content":"     * Tests for view decks command \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Betahaxer"},"content":"    void viewDecks_multipleDecks_success() throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Class Diagrams\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Object Diagrams\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Sequence Diagrams\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Betahaxer"},"content":"        String expectedOutput \u003d \"1. Class Diagrams\\n2. Object Diagrams\\n3. Sequence Diagrams\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Betahaxer"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Betahaxer"},"content":"        String result \u003d viewDecks(arguments);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(String.format(VIEW_DECKS_SUCCESS, expectedOutput), result);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Betahaxer"},"content":"    void viewDecks_noDecks_throwsException() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Betahaxer"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Betahaxer"},"content":"                FlashCLIArgumentException.class,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Betahaxer"},"content":"                () -\u003e DeckManager.viewDecks(arguments)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Betahaxer"},"content":"        );","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(NO_DECK_TO_VIEW, exception.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Betahaxer"},"content":"    public void viewDecks_unexpectedArguments_throwsException() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Class Diagrams\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Betahaxer"},"content":"        String invalidArgs \u003d \"some extra text\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Betahaxer"},"content":"                FlashCLIArgumentException.class,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Betahaxer"},"content":"                () -\u003e viewDecks(invalidArgs)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Betahaxer"},"content":"        );","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(VIEW_DECKS_NO_ARGUMENTS_ALLOWED, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Betahaxer"},"content":"    /*","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Betahaxer"},"content":"     * Tests for select decks command \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Betahaxer"},"content":"    void selectDeck_validDeckIndex_success() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Quality Assurance\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Betahaxer"},"content":"        String result \u003d selectDeck(\"1\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(String.format(SELECT_DECK_SUCCESS, \"Quality Assurance\"), result);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Betahaxer"},"content":"    void selectDeck_noDecksAvailable_throwsException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Betahaxer"},"content":"            selectDeck(\"1\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(NO_DECK_TO_SWITCH, exception.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Betahaxer"},"content":"    void selectDeck_emptyInput_throwsException() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Test Coverage\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Betahaxer"},"content":"            selectDeck(\"\");","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(DECK_EMPTY_INPUT, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Betahaxer"},"content":"    void selectDeck_nonExistentDeck_throwsException() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Architecture\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Betahaxer"},"content":"            selectDeck(\"5\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(DECK_INDEX_OUT_OF_BOUNDS, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Betahaxer"},"content":"    void selectDeck_multipleDecks_selectsCorrectDeck() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Deck1\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Deck2\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Deck3\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Last Deck\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Betahaxer"},"content":"        String result \u003d selectDeck(\"3\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(String.format(SELECT_DECK_SUCCESS, \"Deck3\"), result);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Betahaxer"},"content":"    void selectDeck_negativeIndex_throwsException() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Deck1\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Betahaxer"},"content":"            selectDeck(\"-1\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(DECK_INDEX_OUT_OF_BOUNDS, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Betahaxer"},"content":"    void selectDeck_nonNumericInput_throwsException() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Deck1\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Betahaxer"},"content":"            selectDeck(\"abc\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(INVALID_INDEX_INPUT, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Betahaxer"},"content":"    void selectDeck_onlySpacesInput_throwsException() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Betahaxer"},"content":"        createDeck(\"Spaces Input Deck\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Betahaxer"},"content":"            selectDeck(\"   \");  // Spaces input","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(DECK_EMPTY_INPUT, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Betahaxer"},"content":"    /*","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Betahaxer"},"content":"     * Tests for delete decks command \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Betahaxer"},"content":"    void deleteDeck_hasDeck_successMessage() throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Betahaxer"},"content":"        decks.put(\"System Testing\", new Deck(\"System Testing\"));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Betahaxer"},"content":"        String result \u003d deleteDeck(0);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(String.format(DELETE_DECK_SUCCESS, \"System Testing\"), result);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Betahaxer"},"content":"        assertFalse(decks.containsKey(\"System Testing\"));","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Betahaxer"},"content":"    void deleteDeck_selectedDeckIsDeleted_setsCurrentDeckToNull() throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Betahaxer"},"content":"        Deck deck \u003d new Deck(\"Equivalence\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Betahaxer"},"content":"        decks.put(\"Equivalence\", deck);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Betahaxer"},"content":"        currentDeck \u003d deck;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Betahaxer"},"content":"        String result \u003d deleteDeck(0);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(String.format(DELETE_DECK_SUCCESS, \"Equivalence\"), result);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Betahaxer"},"content":"        assertNull(currentDeck, \"Current deck should be set to null after deletion.\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Betahaxer"},"content":"    /*","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Betahaxer"},"content":"     * Tests for unselect decks command \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Betahaxer"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Betahaxer"},"content":"    void unselectDeck_validInput_successMessage() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Betahaxer"},"content":"        currentDeck \u003d new Deck(\"Integration Testing\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Betahaxer"},"content":"        String result \u003d unselectDeck(\"\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(String.format(UNSELECT_DECK_SUCCESS, \"Integration Testing\"), result);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Betahaxer"},"content":"        assertNull(currentDeck, \"Current deck should be null after unselecting.\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Betahaxer"},"content":"    void unselectDeck_whitespaceArguments_successMessage() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Betahaxer"},"content":"        currentDeck \u003d new Deck(\"Regression Testing\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Betahaxer"},"content":"        String result \u003d unselectDeck(\"    \");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(String.format(UNSELECT_DECK_SUCCESS, \"Regression Testing\"), result);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Betahaxer"},"content":"        assertNull(currentDeck, \"Current deck should be null after unselecting.\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Betahaxer"},"content":"    void unselectDeck_noCurrentDeck_throwsException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Betahaxer"},"content":"        currentDeck \u003d null;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Betahaxer"},"content":"            unselectDeck(\"\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(NO_DECK_TO_UNSELECT, exception.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Betahaxer"},"content":"    void unselectDeck_unexpectedArguments_throwsException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Betahaxer"},"content":"        currentDeck \u003d new Deck(\"Boundary Testing\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Betahaxer"},"content":"            unselectDeck(\"unexpected text\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(UNSELECT_NO_ARGUMENTS_ALLOWED, exception.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"ManZ9802"},"content":"    //@@author ManZ9802","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"ManZ9802"},"content":"    /*","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"ManZ9802"},"content":"     * Tests for search decks command \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"ManZ9802"},"content":"     */","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"ManZ9802"},"content":"    void searchGlobal_fullSearch_successMessage() throws FlashCLIArgumentException, EmptyListException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"ManZ9802"},"content":"        Deck deck1 \u003d new Deck(\"Test1\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"ManZ9802"},"content":"        decks.put(\"Test1\", deck1);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"ManZ9802"},"content":"        Deck deck2 \u003d new Deck(\"Test2\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"ManZ9802"},"content":"        decks.put(\"Test2\", deck2);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"ManZ9802"},"content":"        String input \u003d \"/q What is love? /a Baby don\u0027t hurt me\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"ManZ9802"},"content":"        deck1.createFlashcard(input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"ManZ9802"},"content":"        deck2.createFlashcard(input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"ManZ9802"},"content":"        String qna \u003d \"Question: What is love?\\nAnswer: Baby don\u0027t hurt me\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"ManZ9802"},"content":"        String expected \u003d \"Deck: Test1\\n\" + qna + \"\\n\\nDeck: Test2\\n\" + qna;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"ManZ9802"},"content":"        String result1 \u003d globalSearch(\"/q What is love? /a Baby don\u0027t hurt me\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"ManZ9802"},"content":"        assertEquals(String.format(SEARCH_SUCCESS, expected), result1);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"ManZ9802"},"content":"        String result2 \u003d globalSearch(\"/q What /a Baby\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"ManZ9802"},"content":"        assertEquals(String.format(SEARCH_SUCCESS, expected), result2);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"ManZ9802"},"content":"    void searchGlobal_partialSearch_successMessage() throws FlashCLIArgumentException, EmptyListException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"ManZ9802"},"content":"        Deck deck1 \u003d new Deck(\"Test1\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"ManZ9802"},"content":"        decks.put(\"Test1\", deck1);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"ManZ9802"},"content":"        Deck deck2 \u003d new Deck(\"Test2\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"ManZ9802"},"content":"        decks.put(\"Test2\", deck2);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"ManZ9802"},"content":"        String input \u003d \"/q What is love? /a Baby don\u0027t hurt me\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"ManZ9802"},"content":"        deck1.createFlashcard(input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"ManZ9802"},"content":"        deck2.createFlashcard(input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"ManZ9802"},"content":"        String qna \u003d \"Question: What is love?\\nAnswer: Baby don\u0027t hurt me\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"ManZ9802"},"content":"        String expected \u003d \"Deck: Test1\\n\" + qna + \"\\n\\nDeck: Test2\\n\" + qna;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"ManZ9802"},"content":"        String result1 \u003d globalSearch(\"/q What is love?\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"ManZ9802"},"content":"        assertEquals(String.format(SEARCH_SUCCESS, expected), result1);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"ManZ9802"},"content":"        String result2 \u003d globalSearch(\"/q love?\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"ManZ9802"},"content":"        assertEquals(String.format(SEARCH_SUCCESS, expected), result2);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"ManZ9802"},"content":"        String result3 \u003d globalSearch(\"/a Baby don\u0027t hurt me\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"ManZ9802"},"content":"        assertEquals(String.format(SEARCH_SUCCESS, expected), result3);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"ManZ9802"},"content":"        String result4 \u003d globalSearch(\"/a Baby\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"ManZ9802"},"content":"        assertEquals(String.format(SEARCH_SUCCESS, expected), result4);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"ManZ9802"},"content":"    void searchGlobal_emptyDeck_throwsException() throws EmptyListException, FlashCLIArgumentException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"ManZ9802"},"content":"        Deck deck1 \u003d new Deck(\"Test1\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"ManZ9802"},"content":"        decks.put(\"Test1\", deck1);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"ManZ9802"},"content":"        Deck deck2 \u003d new Deck(\"Test2\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"ManZ9802"},"content":"        decks.put(\"Test2\", deck2);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"ManZ9802"},"content":"            globalSearch(\"/q What is love? /a Baby don\u0027t hurt me\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"ManZ9802"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"ManZ9802"},"content":"            assertEquals(SEARCH_RESULT_EMPTY, e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"ManZ9802"},"content":"    void searchGlobal_singleEmptyDeck_successMessage() throws FlashCLIArgumentException, EmptyListException {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"ManZ9802"},"content":"        Deck deck1 \u003d new Deck(\"Test1\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"ManZ9802"},"content":"        decks.put(\"Test1\", deck1);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"ManZ9802"},"content":"        Deck deck2 \u003d new Deck(\"Test2\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"ManZ9802"},"content":"        decks.put(\"Test2\", deck2);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"ManZ9802"},"content":"        String input \u003d \"/q What is love? /a Baby don\u0027t hurt me\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"ManZ9802"},"content":"        deck1.createFlashcard(input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"ManZ9802"},"content":"        String qna \u003d \"Question: What is love?\\nAnswer: Baby don\u0027t hurt me\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"ManZ9802"},"content":"        String expected \u003d \"Deck: Test1\\n\" + qna;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"ManZ9802"},"content":"        String result1 \u003d globalSearch(\"/q What is love? /a Baby don\u0027t hurt me\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"ManZ9802"},"content":"        assertEquals(String.format(SEARCH_SUCCESS, expected), result1);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"ManZ9802"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"ManZ9802":81,"Betahaxer":292}},{"path":"src/test/java/deck/DeckTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package deck;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ManZ9802"},"content":"import static constants.ErrorMessages.CHANGE_IS_LEARNED_MISSING_INDEX;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.CREATE_INVALID_INPUT_ERROR;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ElonKoh"},"content":"import static constants.ErrorMessages.CREATE_INVALID_ORDER;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ElonKoh"},"content":"import static constants.ErrorMessages.CREATE_MISSING_DESCRIPTION;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ElonKoh"},"content":"import static constants.ErrorMessages.CREATE_MISSING_FIELD;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ElonKoh"},"content":"import static constants.ErrorMessages.EMPTY_LIST;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ElonKoh"},"content":"import static constants.ErrorMessages.INSERT_MISSING_CODE;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ElonKoh"},"content":"import static constants.ErrorMessages.INSERT_MISSING_FIELD;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"felfelyuen"},"content":"import static constants.ErrorMessages.INVALID_INDEX_INPUT;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ManZ9802"},"content":"import static constants.ErrorMessages.SEARCH_EMPTY_DECK;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ManZ9802"},"content":"import static constants.ErrorMessages.SEARCH_MISSING_FIELD;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ManZ9802"},"content":"import static constants.ErrorMessages.SEARCH_RESULT_EMPTY;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_CANCEL;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"felfelyuen"},"content":"import static constants.QuizMessages.QUIZ_CANCEL_MESSAGE;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"felfelyuen"},"content":"import static constants.SuccessMessages.CHANGED_ISLEARNED_SUCCESS;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"import static constants.SuccessMessages.CREATE_SUCCESS;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ElonKoh"},"content":"import static constants.SuccessMessages.EDIT_SUCCESS;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"felfelyuen"},"content":"import static constants.SuccessMessages.LIST_SUCCESS;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ManZ9802"},"content":"import static constants.SuccessMessages.SEARCH_SUCCESS;","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"felfelyuen"},"content":"import static constants.SuccessMessages.VIEW_ANSWER_SUCCESS;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"felfelyuen"},"content":"import static constants.SuccessMessages.VIEW_QUESTION_SUCCESS;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"felfelyuen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"felfelyuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"felfelyuen"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ElonKoh"},"content":"import command.Command;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"import command.CommandCreateFlashcard;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"import command.CommandDeleteFlashcard;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"import command.CommandEditFlashcard;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ElonKoh"},"content":"import command.CommandInsertCode;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ElonKoh"},"content":"import command.CommandViewQuestion;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"felfelyuen"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"felfelyuen"},"content":"import exceptions.QuizCancelledException;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"felfelyuen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"public class DeckTest {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"    private Deck deck;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"    void setUp() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"        deck \u003d new Deck(\"test1\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"        DeckManager.currentDeck \u003d deck;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"    void createFlashcard_validInputs_success() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"        String input \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"            String output \u003d deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":"            Flashcard createdFlashcard \u003d deck.getFlashcards().get(0);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(\"What is Java?\", createdFlashcard.getQuestion());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(\"A programming language.\", createdFlashcard.getAnswer());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(String.format(CREATE_SUCCESS,","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"                \"What is Java?\", \"A programming language.\", 1), output);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Unexpected FlashCLI_IllegalArgumentException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"    void createFlashcard_invalidQuestionField_flashCLIArgumentExceptionThrown() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"/q /a A programming language.\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_MISSING_DESCRIPTION, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"/a A programming language.\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_MISSING_FIELD, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"/q       /a A programming language.\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_MISSING_DESCRIPTION, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Betahaxer"},"content":"    void createFlashcard_invalidAnswerField_illegalArgumentExceptionThrown() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"/q What is Java? \";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_MISSING_FIELD, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"/q What is Java? /a\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_MISSING_DESCRIPTION, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"/q What is Java? /a     \";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_MISSING_DESCRIPTION, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Betahaxer"},"content":"    void createFlashcard_invalidQuestionAndAnswerField_illegalArgumentExceptionThrown() {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"  \";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_MISSING_FIELD, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"/q /a\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_MISSING_DESCRIPTION, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"/q\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_MISSING_FIELD, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"/a\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_MISSING_FIELD, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"/a A programming language. /q What is Java?\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_INVALID_ORDER, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Betahaxer"},"content":"        try {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Betahaxer"},"content":"            String input \u003d \"/a /q\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Betahaxer"},"content":"            deck.createFlashcard(input);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(CREATE_INVALID_ORDER, e.getMessage());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Betahaxer"},"content":"    public void createFlashcard_multipleQTags_questionCreatedSuccessfully() throws FlashCLIArgumentException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Betahaxer"},"content":"        String input \u003d \"/q What is Java? /q Extra question /a A programming language.\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Betahaxer"},"content":"        deck.createFlashcard(input);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Betahaxer"},"content":"        Flashcard createdFlashcard \u003d deck.getFlashcards().get(0);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(\" What is Java? /q Extra question \".trim(), createdFlashcard.getQuestion());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(\" A programming language.\".trim(), createdFlashcard.getAnswer());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Betahaxer"},"content":"    public void createFlashcard_hasTextBeforeQ_throwsException() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Betahaxer"},"content":"        String input \u003d \"afljafja/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Betahaxer"},"content":"                FlashCLIArgumentException.class, () -\u003e deck.createFlashcard(input));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(CREATE_INVALID_INPUT_ERROR, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"felfelyuen"},"content":"    void viewFlashcardQuestion_validInputs_success() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"felfelyuen"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Betahaxer"},"content":"            String viewOutput \u003d deck.viewFlashcardQuestion(1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ElonKoh"},"content":"            assertEquals(String.format(VIEW_QUESTION_SUCCESS, 1, \"What is Java?\", \"\"), viewOutput);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"felfelyuen"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Unexpected ArrayIndexOutOfBoundsException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"felfelyuen"},"content":"    void viewFlashcardQuestion_invalidIndex_arrayIndexOutOfBoundsExceptionThrown() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"felfelyuen"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"felfelyuen"},"content":"            deck.viewFlashcardQuestion(3);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"felfelyuen"},"content":"            fail(\"no exception was thrown\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"felfelyuen"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(INDEX_OUT_OF_BOUNDS, e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"felfelyuen"},"content":"    void viewFlashcardQuestion_indexNotANumber_numberFormatExceptionThrown() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"felfelyuen"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"felfelyuen"},"content":"            int index \u003d Integer.parseInt(\"sjd\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"felfelyuen"},"content":"            deck.viewFlashcardQuestion(index);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"felfelyuen"},"content":"            fail(\"no exception was thrown\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"felfelyuen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(\"For input string: \\\"sjd\\\"\", e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ManZ9802"},"content":"    void viewFlashcardAnswer_validInputs_success() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ManZ9802"},"content":"        String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Betahaxer"},"content":"        Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ManZ9802"},"content":"        createTest.executeCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Betahaxer"},"content":"        String viewOutput \u003d deck.viewFlashcardAnswer(1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ManZ9802"},"content":"        assertEquals(String.format(VIEW_ANSWER_SUCCESS, 1, \"A programming language.\"), viewOutput);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ManZ9802"},"content":"    void viewFlashcardAnswer_indexNotANumber_numberFormatExceptionThrown() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ManZ9802"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ManZ9802"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ManZ9802"},"content":"            new CommandViewQuestion(\"sjd\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ManZ9802"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(INVALID_INDEX_INPUT, e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ManZ9802"},"content":"    void viewFlashcardAnswer_invalidIndex_arrayIndexOutOfBoundsExceptionThrown() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ManZ9802"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ManZ9802"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ManZ9802"},"content":"            new CommandViewQuestion(\"72\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ManZ9802"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(INDEX_OUT_OF_BOUNDS, e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ElonKoh"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ElonKoh"},"content":"    void editFlashcard_validInputs_success() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"ElonKoh"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"ElonKoh"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"ElonKoh"},"content":"            String editInput \u003d \"1 /q What is Python? /a A different programming language.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Betahaxer"},"content":"            String editOutput \u003d deck.editFlashcard(1, editInput);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Betahaxer"},"content":"            Flashcard editedFlashcard \u003d deck.getFlashcards().get(0);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"ElonKoh"},"content":"            assertEquals(\"What is Python?\", editedFlashcard.getQuestion());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"ElonKoh"},"content":"            assertEquals(\"A different programming language.\", editedFlashcard.getAnswer());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"ElonKoh"},"content":"            assertEquals(String.format(EDIT_SUCCESS,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"ElonKoh"},"content":"                    \"What is Java?\", \"What is Python?\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"ElonKoh"},"content":"                    \"A programming language.\", \"A different programming language.\"), editOutput);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Betahaxer"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Unexpected FlashCLI_IllegalArgumentException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"ElonKoh"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"ElonKoh"},"content":"    void editFlashcard_indexNotANumber_numberFormatExceptionThrown() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"ElonKoh"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"ElonKoh"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"ElonKoh"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Betahaxer"},"content":"            new CommandEditFlashcard(\"sjd /q What is Python? /a A different programming language.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"ElonKoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(INVALID_INDEX_INPUT, e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"ElonKoh"},"content":"    @Test","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"ElonKoh"},"content":"    void editFlashcard_invalidIndex_arrayIndexOutOfBoundsExceptionThrown() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"ElonKoh"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"ElonKoh"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"ElonKoh"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Betahaxer"},"content":"            new CommandEditFlashcard(\"4 /q What is Python? /a A different programming language.\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"ElonKoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(INDEX_OUT_OF_BOUNDS, e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"felfelyuen"},"content":"    void listFlashcards_validInputs_success() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"felfelyuen"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Betahaxer"},"content":"            String listOutput \u003d deck.listFlashcards();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(3, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(String.format(LIST_SUCCESS,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"felfelyuen"},"content":"                    \"1. What is Java?\\n2. What is Java?\\n3. What is Java?\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"felfelyuen"},"content":"                    listOutput);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"felfelyuen"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Unexpected EmptyListException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"felfelyuen"},"content":"    void listFlashcards_emptyList_emptyListExceptionThrown() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Betahaxer"},"content":"            String listOutput \u003d deck.listFlashcards();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(String.format(LIST_SUCCESS,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"felfelyuen"},"content":"                            \"1. What is Java?\\n2. What is Java?\\n3. What is Java?\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"felfelyuen"},"content":"                    listOutput);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"felfelyuen"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(EMPTY_LIST, e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"ManZ9802"},"content":"    void deleteFlashcard_validInputs_success() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"ManZ9802"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"ManZ9802"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"ManZ9802"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Betahaxer"},"content":"            String listOutput \u003d deck.listFlashcards();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(2, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"ManZ9802"},"content":"            assertEquals(String.format(LIST_SUCCESS, \"1. What is Java?\\n2. What is Java?\"), listOutput);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Betahaxer"},"content":"            Command deleteTest \u003d new CommandDeleteFlashcard(\"1\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"ManZ9802"},"content":"            deleteTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Betahaxer"},"content":"            String listAfterDeleteOutput \u003d deck.listFlashcards();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"ManZ9802"},"content":"            assertEquals(String.format(LIST_SUCCESS, \"1. What is Java?\"), listAfterDeleteOutput);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"ManZ9802"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"ManZ9802"},"content":"            fail(\"Unexpected EmptyListException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"ManZ9802"},"content":"    void deleteFlashcard_indexNotANumber_numberFormatExceptionThrown() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"ManZ9802"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"ManZ9802"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"ManZ9802"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Betahaxer"},"content":"            String listOutput \u003d deck.listFlashcards();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(2, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"ManZ9802"},"content":"            assertEquals(String.format(LIST_SUCCESS, \"1. What is Java?\\n2. What is Java?\"), listOutput);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Betahaxer"},"content":"            Command deleteTest \u003d new CommandDeleteFlashcard(\"sdsd\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"ManZ9802"},"content":"            deleteTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"ManZ9802"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"ManZ9802"},"content":"            fail(\"Unexpected EmptyListException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"ManZ9802"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(INVALID_INDEX_INPUT, e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"ManZ9802"},"content":"    void deleteFlashcard_invalidIndex_arrayIndexOutOfBoundsExceptionThrown() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"ManZ9802"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"ManZ9802"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"ManZ9802"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Betahaxer"},"content":"            String listOutput \u003d deck.listFlashcards();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Betahaxer"},"content":"            assertEquals(2, deck.getFlashcards().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"ManZ9802"},"content":"            assertEquals(String.format(LIST_SUCCESS, \"1. What is Java?\\n2. What is Java?\"), listOutput);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Betahaxer"},"content":"            Command deleteTest \u003d new CommandDeleteFlashcard(\"72\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"ManZ9802"},"content":"            deleteTest.executeCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"ManZ9802"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"ManZ9802"},"content":"            fail(\"Unexpected EmptyListException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"ManZ9802"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(INDEX_OUT_OF_BOUNDS, e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"felfelyuen"},"content":"    void quizFlashcards_correctAnswer_success() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"felfelyuen"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"felfelyuen"},"content":"            ArrayList\u003cFlashcard\u003e flashcards \u003d deck.getFlashcards();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"felfelyuen"},"content":"            String userAnswer \u003d \"A programming language.\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"felfelyuen"},"content":"            boolean testSuccess \u003d deck.handleAnswerForFlashcard(flashcards.get(0), userAnswer);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"felfelyuen"},"content":"            assertTrue(testSuccess);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"felfelyuen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Unexpected Exception was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"felfelyuen"},"content":"    void quizFlashcards_wrongAnswer_success() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"felfelyuen"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"felfelyuen"},"content":"            ArrayList\u003cFlashcard\u003e flashcards \u003d deck.getFlashcards();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"felfelyuen"},"content":"            String userAnswer \u003d \"dummy response\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"felfelyuen"},"content":"            boolean testSuccess \u003d deck.handleAnswerForFlashcard(flashcards.get(0), userAnswer);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"felfelyuen"},"content":"            assertFalse(testSuccess);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"felfelyuen"},"content":"        } catch (QuizCancelledException e) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Unexpected Exception was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"felfelyuen"},"content":"    void quizFlashcards_emptyList_emptyListExceptionThrown() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"felfelyuen"},"content":"            boolean quizSuccess \u003d deck.quizFlashcards();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"felfelyuen"},"content":"            assertTrue(quizSuccess);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"felfelyuen"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(EMPTY_LIST,e.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"felfelyuen"},"content":"        } catch (QuizCancelledException e) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Unexpected QuizCancelledException was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"felfelyuen"},"content":"    void quizFlashcards_cancelQuiz_quizCancelledExceptionThrown() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"felfelyuen"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"felfelyuen"},"content":"            ArrayList\u003cFlashcard\u003e flashcards \u003d deck.getFlashcards();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"felfelyuen"},"content":"            String userAnswer \u003d \"dummy response\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"felfelyuen"},"content":"            boolean testSuccess \u003d deck.handleAnswerForFlashcard(flashcards.get(0), userAnswer);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"felfelyuen"},"content":"            assertFalse(testSuccess);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"felfelyuen"},"content":"            boolean exitQuizSuccess \u003d deck.handleAnswerForFlashcard(flashcards.get(1), QUIZ_CANCEL);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"felfelyuen"},"content":"            assertFalse(exitQuizSuccess);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"felfelyuen"},"content":"        } catch (QuizCancelledException e) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(QUIZ_CANCEL_MESSAGE,e.getMessage());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"ElonKoh"},"content":"    @Test","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"ElonKoh"},"content":"    void insertCodeSnippet_validInputs_success() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"ElonKoh"},"content":"        String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"Betahaxer"},"content":"        Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"ElonKoh"},"content":"        createTest.executeCommand();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"ElonKoh"},"content":"        String insertCodeSnippet \u003d \"1 /c Class Java { void method() {...} }\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"ElonKoh"},"content":"        Command insertTest \u003d new CommandInsertCode(insertCodeSnippet);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"ElonKoh"},"content":"        insertTest.executeCommand();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"ElonKoh"},"content":"        String viewOutput \u003d deck.viewFlashcardQuestion(1);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"ElonKoh"},"content":"        assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"ElonKoh"},"content":"        assertEquals(String.format(VIEW_QUESTION_SUCCESS, 1, \"What is Java?\",","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"ElonKoh"},"content":"                \"Class Java { void method() {...} }\"), viewOutput);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"ElonKoh"},"content":"    @Test","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"ElonKoh"},"content":"    void insertCodeSnippet_invalidCodeSnippetField_illegalArgumentExceptionThrown() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"ElonKoh"},"content":"        try {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"ElonKoh"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"ElonKoh"},"content":"            deck.createFlashcard(createInput);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"ElonKoh"},"content":"            String insertCodeSnippet \u003d \" \";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"ElonKoh"},"content":"            deck.insertCodeSnippet(1, insertCodeSnippet);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"ElonKoh"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"ElonKoh"},"content":"            assertEquals(INSERT_MISSING_FIELD, e.getMessage());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"ElonKoh"},"content":"        try {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"ElonKoh"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"ElonKoh"},"content":"            deck.createFlashcard(createInput);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"ElonKoh"},"content":"            String insertCodeSnippet \u003d \"/c \";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"ElonKoh"},"content":"            deck.insertCodeSnippet(1, insertCodeSnippet);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"ElonKoh"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"ElonKoh"},"content":"            assertEquals(INSERT_MISSING_CODE, e.getMessage());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"ElonKoh"},"content":"    @Test","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"ElonKoh"},"content":"    void insertCodeSnippet_invalidIndex_arrayIndexOutOfBoundsExceptionThrown() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"ElonKoh"},"content":"        try {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"ElonKoh"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"ElonKoh"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"ElonKoh"},"content":"            assertEquals(1, deck.getFlashcards().size());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"ElonKoh"},"content":"            new CommandInsertCode(\"72 /c somecode\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"ElonKoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(INDEX_OUT_OF_BOUNDS, e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"ElonKoh"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"ElonKoh"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"ElonKoh"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"felfelyuen"},"content":"    void markIsLearned_validInputs_success() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"felfelyuen"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(2, deck.getFlashcards().size());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"felfelyuen"},"content":"            String isLearnedOutput \u003d deck.changeIsLearned(\"1\", true);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"felfelyuen"},"content":"            assertTrue(deck.getFlashcards().get(0).getIsLearned());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(String.format(CHANGED_ISLEARNED_SUCCESS, 1, \"learned\"), isLearnedOutput);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"felfelyuen"},"content":"            String isUnLearnedOutput \u003d deck.changeIsLearned(\"1\", false);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"felfelyuen"},"content":"            assertFalse(deck.getFlashcards().get(0).getIsLearned());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(String.format(CHANGED_ISLEARNED_SUCCESS, 1, \"unlearned\"), isUnLearnedOutput);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"felfelyuen"},"content":"            String nextLearnedOutput \u003d deck.changeIsLearned(\"2\", true);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"felfelyuen"},"content":"            assertTrue(deck.getFlashcards().get(1).getIsLearned());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(String.format(CHANGED_ISLEARNED_SUCCESS, 2, \"learned\"), nextLearnedOutput);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"felfelyuen"},"content":"        } catch (FlashCLIArgumentException | NumberFormatException e) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Unexpected Exception was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"felfelyuen"},"content":"    void markIsLearned_invalidIndex_numberFormatExceptionThrown() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"felfelyuen"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(2, deck.getFlashcards().size());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"felfelyuen"},"content":"            deck.changeIsLearned(\"a\", true);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Did not detect invalid input: Input not a number\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"felfelyuen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(\"For input string: \\\"a\\\"\", e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"felfelyuen"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Unexpected Exception was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"felfelyuen"},"content":"    void markIsLearned_emptyInputs_illegalArgumentExceptionThrown() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"felfelyuen"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(2, deck.getFlashcards().size());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"felfelyuen"},"content":"            deck.changeIsLearned(\"\", true);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Did not detect invalid input: Input empty\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"felfelyuen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Unexpected Exception was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"felfelyuen"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"ManZ9802"},"content":"            assertEquals(CHANGE_IS_LEARNED_MISSING_INDEX, e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"felfelyuen"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"felfelyuen"},"content":"    void markIsLearned_inputOutOfBounds_illegalArgumentExceptionThrown() {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"felfelyuen"},"content":"        try {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"felfelyuen"},"content":"            String createInput \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"Betahaxer"},"content":"            Command createTest \u003d new CommandCreateFlashcard(createInput);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"felfelyuen"},"content":"            createTest.executeCommand();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(2, deck.getFlashcards().size());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"felfelyuen"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"felfelyuen"},"content":"            deck.changeIsLearned(\"5\", true);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Did not detect invalid input: Input out of bounds\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"felfelyuen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"felfelyuen"},"content":"            fail(\"Unexpected Exception was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"felfelyuen"},"content":"        } catch (FlashCLIArgumentException e) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"felfelyuen"},"content":"            assertEquals(INDEX_OUT_OF_BOUNDS, e.getMessage());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"felfelyuen"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"felfelyuen"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"ManZ9802"},"content":"    void searchDeck_fullSearch_success() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"ManZ9802"},"content":"        String input \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"Betahaxer"},"content":"        Command createTest \u003d new CommandCreateFlashcard(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"ManZ9802"},"content":"        createTest.executeCommand();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"ManZ9802"},"content":"            String expected \u003d \"Question: What is Java?\\nAnswer: A programming language.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"ManZ9802"},"content":"            String result \u003d deck.searchFlashcard(input);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"ManZ9802"},"content":"            assertEquals(String.format(SEARCH_SUCCESS, expected),","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"ManZ9802"},"content":"                    result);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"ManZ9802"},"content":"        } catch (FlashCLIArgumentException | EmptyListException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"ManZ9802"},"content":"            fail(\"Unexpected Exception was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"ManZ9802"},"content":"    void searchDeck_partialSearch_success() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"ManZ9802"},"content":"        String input \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"Betahaxer"},"content":"        Command createTest \u003d new CommandCreateFlashcard(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"ManZ9802"},"content":"        createTest.executeCommand();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"ManZ9802"},"content":"            String expected \u003d \"Question: What is Java?\\nAnswer: A programming language.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"ManZ9802"},"content":"            String result \u003d deck.searchFlashcard(\"/q W /a p\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"ManZ9802"},"content":"            assertEquals(String.format(SEARCH_SUCCESS, expected),","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"ManZ9802"},"content":"                    result);","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"ManZ9802"},"content":"        } catch (FlashCLIArgumentException | EmptyListException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"ManZ9802"},"content":"            fail(\"Unexpected Exception was thrown: \" + e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"ManZ9802"},"content":"    void searchDeck_emptySearch_flashCLIArgumentExceptionThrown() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"ManZ9802"},"content":"        String input \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"Betahaxer"},"content":"        Command createTest \u003d new CommandCreateFlashcard(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"ManZ9802"},"content":"        createTest.executeCommand();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"ManZ9802"},"content":"            String result \u003d deck.searchFlashcard(\"\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"ManZ9802"},"content":"        } catch (FlashCLIArgumentException | EmptyListException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"ManZ9802"},"content":"            assertEquals(SEARCH_MISSING_FIELD, e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"ManZ9802"},"content":"    void searchDeck_emptyResult_emptyListExceptionThrown() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"ManZ9802"},"content":"        String input \u003d \"/q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"Betahaxer"},"content":"        Command createTest \u003d new CommandCreateFlashcard(input);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"ManZ9802"},"content":"        createTest.executeCommand();","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"ManZ9802"},"content":"            deck.searchFlashcard(\"/q v /a v\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"ManZ9802"},"content":"        } catch (FlashCLIArgumentException | EmptyListException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"ManZ9802"},"content":"            assertEquals(SEARCH_RESULT_EMPTY, e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"ManZ9802"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"ManZ9802"},"content":"    @Test","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"ManZ9802"},"content":"    void searchDeck_emptyDeck_emptyListExceptionThrown() {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"ManZ9802"},"content":"        try {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"ManZ9802"},"content":"            deck.searchFlashcard(\"/q v /a v\");","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"ManZ9802"},"content":"        } catch (FlashCLIArgumentException | EmptyListException e) {","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"ManZ9802"},"content":"            assertEquals(SEARCH_EMPTY_DECK, e.getMessage());","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"ManZ9802"},"content":"        }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"ManZ9802"},"content":"    }","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"ManZ9802":134,"felfelyuen":223,"Betahaxer":207,"ElonKoh":86}},{"path":"src/test/java/flashcli/FlashCLITest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package flashcli;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"class FlashCLITest {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"Betahaxer":2,"-":10}},{"path":"src/test/java/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Betahaxer"},"content":"package parser;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.DECK_EMPTY_INPUT;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.DECK_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.DELETE_EMPTY_DECK_ERROR;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Betahaxer"},"content":"import static constants.ErrorMessages.INVALID_INDEX_INPUT;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Betahaxer"},"content":"import static deck.DeckManager.decks;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Betahaxer"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Betahaxer"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Betahaxer"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Betahaxer"},"content":"import static parser.Parser.validateDeckExistsForDelete;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Betahaxer"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Betahaxer"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Betahaxer"},"content":"import org.junit.jupiter.api.TestInfo;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Betahaxer"},"content":"import command.Command;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Betahaxer"},"content":"import command.CommandCreateFlashcard;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Betahaxer"},"content":"import deck.Deck;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Betahaxer"},"content":"import deck.DeckManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Betahaxer"},"content":"import exceptions.FlashCLIArgumentException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Betahaxer"},"content":"public class ParserTest {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Betahaxer"},"content":"    private Deck deck;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Betahaxer"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Betahaxer"},"content":"    void setUp(TestInfo testInfo) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Betahaxer"},"content":"        decks.clear();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Betahaxer"},"content":"        if (testInfo.getDisplayName().startsWith(\"parseInput\")) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Betahaxer"},"content":"            deck \u003d new Deck(\"test1\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Betahaxer"},"content":"            DeckManager.currentDeck \u003d deck;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Betahaxer"},"content":"    void parseInput_addFlashcard_success() throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Betahaxer"},"content":"        String input \u003d \"add /q What is Java? /a A programming language.\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Betahaxer"},"content":"        parseAndAssertCommandType(input, CommandCreateFlashcard.class);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Betahaxer"},"content":"    void parseInput_invalidCommands_flashCLIArgumentExceptionThrown() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Betahaxer"},"content":"        String input \u003d \"bunnyhop\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Betahaxer"},"content":"        assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Betahaxer"},"content":"            Parser.parseInput(input);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Betahaxer"},"content":"    private \u003cT extends Command\u003e void parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Betahaxer"},"content":"            throws FlashCLIArgumentException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Betahaxer"},"content":"        final Command result \u003d Parser.parseInput(input);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Betahaxer"},"content":"        assertTrue(expectedCommandClass.isInstance(result),","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Betahaxer"},"content":"                \"Expected command of type \" + expectedCommandClass.getSimpleName()","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Betahaxer"},"content":"                        + \" but got \" + result.getClass().getSimpleName());","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Betahaxer"},"content":"        if (!expectedCommandClass.isInstance(result)) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Betahaxer"},"content":"            throw new IllegalArgumentException(\"Unexpected command type.\");","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Betahaxer"},"content":"        }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Betahaxer"},"content":"    void validateDeckExistsForDelete_nonIntegerInput_throwsException() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Betahaxer"},"content":"        decks.put(\"Test Deck\", new Deck(\"Test Deck\"));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Betahaxer"},"content":"            validateDeckExistsForDelete(\"abc\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(INVALID_INDEX_INPUT, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Betahaxer"},"content":"    void validateDeckExistsForDelete_negativeIndex_throwsException() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Betahaxer"},"content":"        decks.put(\"Test Deck\", new Deck(\"Test Deck\"));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Betahaxer"},"content":"            validateDeckExistsForDelete(\"-1\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(DECK_INDEX_OUT_OF_BOUNDS, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Betahaxer"},"content":"    void validateDeckExistsForDelete_emptyDeckList_throwsException() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Betahaxer"},"content":"            validateDeckExistsForDelete(\"1\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(DELETE_EMPTY_DECK_ERROR, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Betahaxer"},"content":"    void validateDeckExistsForDelete_nonExistentDeck_throwsException() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Betahaxer"},"content":"        decks.put(\"Unit Testing\", new Deck(\"Unit Testing\"));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Betahaxer"},"content":"            validateDeckExistsForDelete(\"5\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(DECK_INDEX_OUT_OF_BOUNDS, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Betahaxer"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Betahaxer"},"content":"    void validateDeckExistsForDelete_emptyDeckName_throwsException() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Betahaxer"},"content":"        decks.put(\"System Testing\", new Deck(\"System Testing\"));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Betahaxer"},"content":"        FlashCLIArgumentException exception \u003d assertThrows(FlashCLIArgumentException.class, () -\u003e {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Betahaxer"},"content":"            validateDeckExistsForDelete(\" \");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Betahaxer"},"content":"        });","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Betahaxer"},"content":"        assertEquals(DECK_EMPTY_INPUT, exception.getMessage());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Betahaxer"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Betahaxer"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Betahaxer"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"Betahaxer":107}}]
