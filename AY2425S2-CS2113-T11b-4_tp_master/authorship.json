[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"# ClinicEase","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 17 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 17 in a previous Intellij project.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the setup**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"-":65,"chwenyee":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    mainClass.set(\"ClinicEase\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"    archiveBaseName.set(\"ClinicEase\")","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":44,"chwenyee":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"| Display                                                                                                                                                                                                                                                                                                                          |        Name         |                                                                                                                                                            Github Profile                                                                                                                                                             |            Portfolio             |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------:|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|:--------------------------------:|","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)                                                                                                                                                                                                                                                                              | Basudeb Chakraborty |                                                                                                                                               [Github](https://github.com/Basudeb2005)                                                                                                                                                | [Portfolio](team/Basudeb2005.md) |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"| ![](https://www.google.com/url?sa\u003di\u0026url\u003dhttps%3A%2F%2Fwww.detik.com%2Fedu%2Fedutainment%2Fd-6761377%2Fblak-blakan-judha-siswa-sma-pradita-dirgantara-yang-diterima-11-kampus-luar-negeri\u0026psig\u003dAOvVaw1BQ3wU1pFhYGxi0EuDmLOq\u0026ust\u003d1741317092826000\u0026source\u003dimages\u0026cd\u003dvfe\u0026opi\u003d89978449\u0026ved\u003d0CBQQjRxqFwoTCLiFj-m99IsDFQAAAAAdAAAAABAE) | Judha Hoka Wishika  | [GitHub](https://www.google.com/url?sa\u003di\u0026url\u003dhttps%3A%2F%2Fwww.detik.com%2Fedu%2Fedutainment%2Fd-6761377%2Fblak-blakan-judha-siswa-sma-pradita-dirgantara-yang-diterima-11-kampus-luar-negeri\u0026psig\u003dAOvVaw1BQ3wU1pFhYGxi0EuDmLOq\u0026ust\u003d1741317092826000\u0026source\u003dimages\u0026cd\u003dvfe\u0026opi\u003d89978449\u0026ved\u003d0CBQQjRxqFwoTCLiFj-m99IsDFQAAAAAdAAAAABAE) |   [Portfolio](team/judhoka.md)   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)                                                                                                                                                                                                                                                                              |       Yukuan        |                                                                                                                                                 [Github](https://github.com/jyukuan)                                                                                                                                                  |   [Portfolio](team/jyukuan.md)   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)                                                                                                                                                                                                                                                                              |     Dylan Chua      |                                                                                                                                               [Github](https://github.com/dylancmznus)                                                                                                                                                | [Portfolio](team/dylancmznus.md) |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)                                                                                                                                                                                                                                                                              |    Chan Wen Yee     |                                                                                                                                                 [Github](https://github.com/chwenyee)                                                                                                                                                 |  [Portfolio](team/chwenyee.md)   |","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"-":2,"chwenyee":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"- [Acknowledgement](#acknowledgements)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"- [Design](#design-)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"    - [Architecture](#architecture)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"    - [Command Component](#command-component)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"    - [Ui Component](#ui-component)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"    - [Main Component](#main-component)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"    - [Parser Component](#parser-component)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"    - [Manager Component](#manager-component)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"    - [Objects Component](#objects-component)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"    - [Storage Component](#storage-component)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"    - [View Patient Feature](#view-patient-feature)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    - [Add Patient Feature](#add-patient-feature)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"    - [Delete Patient Feature](#delete-patient-feature)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    - [Add/Delete Appointment Feature](#adddelete-appointment-feature)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    - [Storing Medical History Feature](#storing-medical-history-feature)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"    - [Presciption Management Feature](#prescription-management-feature)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"- [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"  - [Product Scope](#product-scope)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"  - [User Stories](#user-stories)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"  - [Use Cases](#use-cases)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"  - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"  - [Glossary](#glossary)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"- [Appendix: Instructions for Manual Testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"### Acknowledgements","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"We would like to acknowledge the following for their support and inspiration during the development of ClinicEase:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"- The teaching team of [CS2113] for providing guidance, sample code, and foundational project architecture.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"- Open-source libraries and tools from the Java SDK.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"- Online documentation and tutorials that supported implementation and testing efforts.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"All code was developed by the team unless otherwise specified.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"## Design ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"### Architecture","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"![Architecture Diagram](diagrams/ArchitectureDiagram.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"The **Architecture Diagram** given above explains the high-level design of the ClinicEase application. The diagram shows the components of the system organized by packages and how they interact with each other.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"Given below is a quick overview of each component and how they interact with each other:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"### Main components of the architecture","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"The application consists of the following components:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"* **Miscellaneous**: Contains the user interface and parser components.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"  * **UI**: Handles user interaction, displays information to the user, and reads commands from the console.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"  * **Parser**: Processes user input strings and converts them into appropriate Command objects.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"* **Main**: The entry point of the application and acts as the orchestrator that connects all other components","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"* **Command**: Follows the Command pattern to implement various operations.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"  * **Command (Main)**: An abstract class that all specific commands extend.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"  * **Various Commands**: Specific command classes (AddPatientCommand, DeletePatientCommand, etc.) that implement different operations.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"* **Manager**: The central coordinator that manages collections of entities and implements business logic.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"* **Object**: Patient, Appointment, and Prescription classes that represent domain objects.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"* **Storage**: Saves and loads data to/from specific data files.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"### How the architecture components interact with each other","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"The **Sequence Diagram** below shows how the components interact for the scenario where the user executes a `delete-patient` command:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"![Sequence Diagram](diagrams/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"The typical flow of execution in the system is as follows:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"1. User enters a command through the UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"2. UI passes the command string to the Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"3. Parser analyzes the command and creates the appropriate Command object","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"4. Command object executes the operation, interacting with the ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"5. ManagementSystem updates its internal state and may request the Storage to save changes","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"6. Results are displayed to the user through the UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"This architecture follows several design principles:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Basudeb2005"},"content":"1. **Single Responsibility Principle**: Each component has a specific responsibility","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Basudeb2005"},"content":"2. **Separation of Concerns**: UI logic is separated from business logic which is separated from data persistence logic","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Basudeb2005"},"content":"3. **Command Pattern**: Commands encapsulate actions and provide a uniform interface for execution","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Basudeb2005"},"content":"4. **Entity-Control Separation**: Entity classes (Patient, Appointment, Prescription) are separate from the controlling ManagementSystem that operates on them","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jyukuan"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jyukuan"},"content":"## Command Component","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JudHoka"},"content":"**API** : [Command classes](https://github.com/AY2425S2-CS2113-T11b-4/tp/tree/master/src/main/java/command)  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jyukuan"},"content":"![Command Component](diagrams/Command.png)  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jyukuan"},"content":"### Overview","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jyukuan"},"content":"The `Command` component is responsible for **handling and executing user commands** in ClinicEase. It defines a common interface (`Command`) for all commands and organizes the various command classes (e.g., `AddAppointmentCommand`, `DeletePatientCommand`) that operate on the `ManagementSystem` and interact with the `Ui` to provide application functionality.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jyukuan"},"content":"### Responsibilities","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jyukuan"},"content":"1. **Encapsulate Command Logic**: Each command class holds the data or parameters needed to carry out a specific user request (e.g., adding a new appointment, deleting a patient).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jyukuan"},"content":"2. **Execute on System**: Using a uniform `execute()` interface, commands interact with the `ManagementSystem` to perform the requested action.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jyukuan"},"content":"3. **Provide Exit Control**: Certain commands can signal the application to terminate (e.g., `ExitCommand`), by overriding `isExit()` to return `true`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jyukuan"},"content":"### Key Features","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jyukuan"},"content":"- **Abstract Base Class**  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jyukuan"},"content":"  `Command` is declared as an abstract class, defining two key methods:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jyukuan"},"content":"    - `execute(manager: ManagementSystem, ui: Ui) : void` – where the command’s logic is implemented.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jyukuan"},"content":"    - `isExit() : boolean` – indicates if the command should terminate the main program loop.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jyukuan"},"content":"- **Multiple Subclasses**  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jyukuan"},"content":"  Each subclass, such as `AddPatientCommand` or `FindAppointmentCommand`, implements the `execute()` method to fulfill a specific function (adding a patient, finding an appointment, etc.).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jyukuan"},"content":"- **Command Pattern**  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jyukuan"},"content":"  This design follows a simplified [Command Pattern](https://en.wikipedia.org/wiki/Command_pattern), enabling a clear separation of concerns between **input parsing**, **system logic**, and **UI presentation**.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jyukuan"},"content":"### Structure","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jyukuan"},"content":"1. **Single Abstract Class**  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jyukuan"},"content":"   `Command` resides at the top of the hierarchy.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jyukuan"},"content":"2. **Subclasses**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jyukuan"},"content":"    - **AddAppointmentCommand** — adds a new appointment to the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jyukuan"},"content":"    - **DeletePatientCommand** — removes a patient by NRIC.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jyukuan"},"content":"    - **SortAppointmentCommand** — sorts appointments by date or ID.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jyukuan"},"content":"    - *(... other commands like `EditPatientCommand`, `ViewPrescriptionCommand`, etc.)*","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jyukuan"},"content":"3. **Uniform Execution**  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jyukuan"},"content":"   All command classes share the same `execute()` signature but implement distinct behaviors.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jyukuan"},"content":"### Dependencies","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jyukuan"},"content":"- **`ManagementSystem`**: Each command calls methods from `ManagementSystem` to manipulate the core data (patients, appointments, prescriptions).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jyukuan"},"content":"- **`Ui`**: Commands display success/failure messages and prompt user outputs via the `Ui` component.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jyukuan"},"content":"- **`Parser`**: Typically, commands themselves do not parse raw input strings. Instead, the `Parser` constructs a command object with the necessary parameters before execution.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jyukuan"},"content":"- **`Storage`**: Some commands (e.g., `AddPatientCommand`) indirectly trigger save operations, relying on `ManagementSystem` which delegates to `Storage` to persist changes.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jyukuan"},"content":"### Design Considerations","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jyukuan"},"content":"- **Extensibility**  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jyukuan"},"content":"  Adding a new user action only requires creating a new `Command` subclass and updating `Parser` to recognize the new keyword(s).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jyukuan"},"content":"- **Error Handling**  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jyukuan"},"content":"  Commands may throw or handle exceptions such as `PatientNotFoundException` or `UnloadedStorageException`, ensuring robust operation even if data is invalid or storage is unavailable.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jyukuan"},"content":"- **Single Responsibility**  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jyukuan"},"content":"  Each command focuses on exactly one task (e.g., marking an appointment). This keeps classes small, cohesive, and easier to test or maintain.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jyukuan"},"content":"### Remarks","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jyukuan"},"content":"- Commands are **stateless** aside from storing the **parameters** needed for execution (e.g., an appointment ID to be deleted).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jyukuan"},"content":"- The **flow** is typically:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jyukuan"},"content":"    1. `Parser` reads user input and creates an appropriate `Command` instance.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jyukuan"},"content":"    2. The main loop calls `command.execute(manager, ui)`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jyukuan"},"content":"    3. If `command.isExit()` is `true`, the application terminates.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jyukuan"},"content":"- This approach **decouples** user input parsing from application logic, making the system easier to extend without modifying existing commands.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jyukuan"},"content":"\u003e **Note:** The `Command` classes rely on the `Parser` to supply valid parameters. If parsing fails, `Parser` throws appropriate exceptions before the `Command` is even constructed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jyukuan"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JudHoka"},"content":"## UI Component","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JudHoka"},"content":"**API**: [`Ui.java`](https://github.com/AY2425S2-CS2113-T11b-4/tp/blob/master/src/main/java/miscellaneous/Ui.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JudHoka"},"content":"![UI Component](diagrams/uiComponent.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JudHoka"},"content":"### Overview","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JudHoka"},"content":"The `Ui` component manages **all user-facing interactions** in ClinicEase. It is responsible for reading raw user input, printing messages, displaying command results, and showing relevant errors or validations. By centralising all communication with the user, it ensures a consistent and clean user experience.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JudHoka"},"content":"### Responsibilities","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JudHoka"},"content":"1. **User Communication**: Display outputs from commands, such as lists of patients, appointment confirmations, and system messages (welcome, exit, help, etc.).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JudHoka"},"content":"2. **Input Handling**: Use `Scanner` to accept input from the command line and return it to the main program loop.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JudHoka"},"content":"3. **Error Presentation**: Show descriptive error and validation messages to guide user actions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JudHoka"},"content":"### Key Features","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JudHoka"},"content":"- **Central Input Reader**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JudHoka"},"content":"    - Uses a single `Scanner` to read commands from standard input (`System.in`).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JudHoka"},"content":"    - Exposes a `readCommand()` method to fetch raw user input.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JudHoka"},"content":"- **Output Formatter**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JudHoka"},"content":"  Provides structured, readable messages for:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JudHoka"},"content":"    - Patient operations (add, delete, view, list).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JudHoka"},"content":"    - Appointment operations (add, mark, unmark, list).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JudHoka"},"content":"    - System messages like welcome, goodbye, and help.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JudHoka"},"content":"- **Error Display**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JudHoka"},"content":"  Handles invalid input gracefully via methods like:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JudHoka"},"content":"    - `showError(String message)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JudHoka"},"content":"    - `showInvalidCommand(String command)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"JudHoka"},"content":"    - `showIndexOutOfBoundsError(...)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"JudHoka"},"content":"- **Consistent User Interface**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"JudHoka"},"content":"  All outputs use standard formatting (icons, line dividers, spacing) to maintain visual consistency and improve usability.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"JudHoka"},"content":"### Structure","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JudHoka"},"content":"1. **Input**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JudHoka"},"content":"    - `readCommand()` — prompts and captures user input via CLI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"JudHoka"},"content":"2. **General System Messages**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"JudHoka"},"content":"    - `showWelcome()`, `showGoodbye()`, `showHelp()`, `showDivider()`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"JudHoka"},"content":"3. **Patient Display**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"JudHoka"},"content":"    - `showPatientAdded(Patient)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"JudHoka"},"content":"    - `showPatientDeleted(Patient)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"JudHoka"},"content":"    - `showPatientList(List\u003cPatient\u003e)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"JudHoka"},"content":"    - `showPatientDetails(Patient)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"JudHoka"},"content":"4. **Appointment Display**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"JudHoka"},"content":"    - `showAppointmentAdded(Appointment)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"JudHoka"},"content":"    - `showAppointmentMarked(Appointment)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"JudHoka"},"content":"    - `showAppointmentUnmarked(Appointment)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"JudHoka"},"content":"    - `showAppointmentList(List\u003cAppointment\u003e)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"JudHoka"},"content":"5. **Error and Validation**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"JudHoka"},"content":"    - `showError(String)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"JudHoka"},"content":"    - `showInvalidCommand(String)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"JudHoka"},"content":"    - `showInvalidInputFormat(String)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"JudHoka"},"content":"    - `showIndexOutOfBoundsError(String, int, int)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"JudHoka"},"content":"### Dependencies","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"JudHoka"},"content":"- **`Patient` and `Appointment` Classes**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"JudHoka"},"content":"  Used to format and display relevant model information in a human-readable format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"JudHoka"},"content":"- **`Command` Classes**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"JudHoka"},"content":"  Call various UI methods to output results of command execution.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"JudHoka"},"content":"- **`Main` Loop / Driver Class**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"JudHoka"},"content":"  Calls `readCommand()` to get user input and dispatch commands.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"JudHoka"},"content":"### Design Considerations","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"JudHoka"},"content":"- **Separation of Concerns**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"JudHoka"},"content":"  UI strictly handles display and input, not business logic. This modularity improves maintainability and makes the system testable.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"JudHoka"},"content":"- **Consistency and Usability**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"JudHoka"},"content":"  Formatting styles (e.g., emojis/icons, dividers) improve user experience by clearly delineating different types of output.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"JudHoka"},"content":"- **Scalability**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"JudHoka"},"content":"  Designed to easily add new output functions (`showX`) when new features or commands are introduced.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"JudHoka"},"content":"- **Extensibility**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"JudHoka"},"content":"  Could be abstracted into an interface (`IUi`) to allow swapping between CLI, GUI (e.g. JavaFX), or web UI in future iterations.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"JudHoka"},"content":"### Remarks","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"JudHoka"},"content":"- The UI component is **stateless**, meaning it does not store application data — it only serves as a medium to **interact** with users.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"JudHoka"},"content":"- It ensures a **clear communication loop**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"JudHoka"},"content":"    1. `Parser` processes input →","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"JudHoka"},"content":"    2. `Command` executes logic →","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"JudHoka"},"content":"    3. `Ui` formats and displays the result.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"JudHoka"},"content":"- Centralising all UI output ensures messages are consistent across commands and improves the professionalism and polish of the CLI application.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"JudHoka"},"content":"- Future improvements could include:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"JudHoka"},"content":"    - Theming/styling for different output types","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"JudHoka"},"content":"    - Logging system output to a file via a `Logger`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"JudHoka"},"content":"    - Extending to support localisation/internationalisation","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"JudHoka"},"content":"### Main component","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"JudHoka"},"content":"**API**: [`ClinicEase.java`](https://github.com/AY2425S2-CS2113-T11b-4/tp/blob/master/src/main/java/ClinicEase.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"JudHoka"},"content":"![Main Component](diagrams/mainComponent.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"JudHoka"},"content":"The `Main` component is the **entry point** of the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"JudHoka"},"content":"#### Responsibilities","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"JudHoka"},"content":"- Initializes core components: `Ui`, `Storage`, and `ManagementSystem`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"JudHoka"},"content":"- Loads previously saved patient, appointment, and prescription data using `Storage`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"JudHoka"},"content":"- Runs the main input loop by:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"JudHoka"},"content":"    - Reading commands via `Ui`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"JudHoka"},"content":"    - Parsing them into `Command` objects via `Parser`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"JudHoka"},"content":"    - Executing commands with access to `ManagementSystem` and `Ui`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"JudHoka"},"content":"- Handles exceptions gracefully and displays errors to the user when needed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"JudHoka"},"content":"\u003e While not a logic-heavy component itself, `Main` serves as the **coordinator** that ties together UI, command parsing, logic execution, and data storage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"chwenyee"},"content":"### Parser Component","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"chwenyee"},"content":"**API** : [`Parser.java`](https://github.com/AY2425S2-CS2113-T11b-4/tp/blob/master/src/main/java/miscellaneous/Parser.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"chwenyee"},"content":"#### Overview of the `Parser` Component","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"chwenyee"},"content":"![parser-class-diagram](diagrams/parserClassDiagram.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"chwenyee"},"content":"- **Parser:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"chwenyee"},"content":"  - **Public API:** `parse(input)` ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"chwenyee"},"content":"  - **Helper Methods:** `parseAddPatient()`, `parseAddAppointment()`, etc.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"chwenyee"},"content":"    - These methods extract and validate input (using extractValue()), then return domain objects (Patient, Appointment, etc.).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"chwenyee"},"content":"  - **Utility Method:** `extractValue()` (reusable parameter extractor).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"chwenyee"},"content":"- **Command:** ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"chwenyee"},"content":"  - **Abstract Superclass:** Defines `execute()` and `isExit()` for all commands.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"chwenyee"},"content":"  - **Subclasses:** `AddPatientCommand`, `DeleteAppointmentCommand`, etc.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"chwenyee"},"content":"  - Each accepts specific data (e.g., `AddAppointmentCommand` takes an `Appointment`).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"chwenyee"},"content":"The sequence diagram below illustrates the interactions within the `Parser` component, taking parse(`add-appointment ic/S1234567D dt/2025-04-05 t/1400 dsc/Consultation`)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"chwenyee"},"content":"as example:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"chwenyee"},"content":"![parser-sequence-diagram](diagrams/parserSequence.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"chwenyee"},"content":"\u003e This sequence diagram only focus on the interactions within the `Parser` component, the other components ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"chwenyee"},"content":"\u003e such as `Ui`, `ManagementSystem` and `Storage` are omitted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"chwenyee"},"content":"How the `Parser` component works:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"chwenyee"},"content":"1. When `Parser` is called upon to parse a user command, `Parser` splits the input to identify the command type (e.g. `add-appointment`).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"chwenyee"},"content":"   A `switch-case` delegates to the appropriate helper method:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"chwenyee"},"content":"````","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"chwenyee"},"content":"public static Command parse(String userInput) throws InvalidInputFormatException, UnknownCommandException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"chwenyee"},"content":"    //...  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"chwenyee"},"content":"    String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"chwenyee"},"content":"    String commandWord \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"chwenyee"},"content":"    switch (commandWord) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"chwenyee"},"content":"    //...","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"chwenyee"},"content":"    case \"add-appointment\":","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"chwenyee"},"content":"        return new AddAppointmentCommand(parseAddAppointment(userInput));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"chwenyee"},"content":"    //...","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"chwenyee"},"content":"````","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"chwenyee"},"content":"2. The helper method (e.g., `parseAddAppointment()`) uses `extractValue()` to:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"chwenyee"},"content":"    - Extract parameters (`ic/`, `dt/`, `t/`, `dsc/`) from the raw user input","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"chwenyee"},"content":"    - Validate formats (e.g., NRIC format, date parsing)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"chwenyee"},"content":"3. The `Appointment` object will be constructed using extracted data. Then, `AddAppointmentCommand` ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"chwenyee"},"content":"    object is created, it will be returned to `ClinicEase` for further operations.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"chwenyee"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"dylancmznus"},"content":"### Manager Component","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"dylancmznus"},"content":"**API**: [`ManagementSystem.java`](https://github.com/AY2425S2-CS2113-T11b-4/tp/blob/master/src/main/java/manager/ManagementSystem.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"dylancmznus"},"content":"![Manager Component](diagrams/managerComponent.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"dylancmznus"},"content":"The `ManagementSystem` class in manager component acts as the central coordinator, responsible for managing features for **Patient**, **Appointment**, and **Prescription** entities. It provides methods to add, remove, and retrieve these objects, ensuring business logic is applied and maintaining the integrity of the system’s data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"dylancmznus"},"content":"#### Responsibilities","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"dylancmznus"},"content":"- Manages instances of **Patient**, **Appointment**, and **Prescription** objects.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"dylancmznus"},"content":"- Provides centralized methods for adding, removing, and retrieving from **Patients**, **Appointments**, and **Prescriptions**.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"dylancmznus"},"content":"- Links **Appointments** and **Prescriptions** to their respective **Patients**.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"dylancmznus"},"content":"- Ensures consistency of data, validating changes before committing them to the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"dylancmznus"},"content":"- Handles business logic related to managing patients, their appointments, and prescriptions.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"dylancmznus"},"content":"#### Key Features","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"dylancmznus"},"content":"- Provides **methods** for managing **Patients**, **Appointments**, and **Prescriptions**.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"dylancmznus"},"content":"- Ensures relationships between **Patients**, **Appointments**, and **Prescriptions** are properly maintained.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"dylancmznus"},"content":"- Handles validation logic to ensure that the data is accurate and consistent (e.g., cannot add duplicate appointments or prescriptions).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"dylancmznus"},"content":"- Can interact with **Storage** to persist changes made to patients, appointments, and prescriptions.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"dylancmznus"},"content":"#### Structure","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"dylancmznus"},"content":"- The core functionality is provided through a **single class** (ManagementSystem), where all methods for interacting with the system’s data are defined.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"dylancmznus"},"content":"- Utilizes **arraylists** to store and manage **Patient**, **Appointment**, and **Prescription** objects.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"dylancmznus"},"content":"- The **ManagementSystem** class contains methods like `addPatient()`, `removePatient()`, `getPatient()`, etc., and primarily serve to manage the logic behind those operations.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"dylancmznus"},"content":"### Objects Component","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"dylancmznus"},"content":"![Object Component](diagrams/objectComponent.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"dylancmznus"},"content":"The **Objects** component defines the objects used by the **Manager** component, which are **Patient**, **Appointment**, and **Prescription**. These objects encompass the data and behavior specific to their respective classes.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"dylancmznus"},"content":"#### Patient Class","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"dylancmznus"},"content":"**API**: [`Patient.java`](https://github.com/AY2425S2-CS2113-T11b-4/tp/blob/master/src/main/java/manager/Patient.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"dylancmznus"},"content":"The `Patient` class represents a patient, including personal details, appointments, and prescriptions.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"dylancmznus"},"content":"##### Responsibilities","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"dylancmznus"},"content":"- Encapsulates the **patient’s personal data** (e.g., name, contact information).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"dylancmznus"},"content":"- Manages associated **appointments** and **prescriptions** for the patient.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"dylancmznus"},"content":"##### Key Features","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"dylancmznus"},"content":"- Stores **personal details** like name, gender, and contact information.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"dylancmznus"},"content":"- Can hold **appointments** and **prescriptions** for the patient.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"dylancmznus"},"content":"- Provides methods for managing appointments and prescriptions directly tied to the patient.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"dylancmznus"},"content":"#### Appointment Class","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"dylancmznus"},"content":"**API**: [`Appointment.java`](https://github.com/AY2425S2-CS2113-T11b-4/tp/blob/master/src/main/java/manager/Appointment.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"dylancmznus"},"content":"The `Appointment` class represents an appointment, typically linked to a patient and a date and time. It contains details such as the appointment time, description and status.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"dylancmznus"},"content":"##### Responsibilities","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"dylancmznus"},"content":"- Represents an **appointment** between a **patient** and a **doctor**.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"dylancmznus"},"content":"- Stores information about the **date**, **time**, and **status** of the appointment.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"dylancmznus"},"content":"- Allows updating the **status** of the appointment as completed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"dylancmznus"},"content":"##### Key Features","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"dylancmznus"},"content":"- Holds **appointment-related data**, including date, time, and status.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"dylancmznus"},"content":"- Links to a **Patient** and optionally to a **Doctor**.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"dylancmznus"},"content":"- Provides functionality to mark it as done.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"dylancmznus"},"content":"##### Dependencies","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"dylancmznus"},"content":"- **Model**: Dependent on the **Patient** class for representing relationships with appointments.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"dylancmznus"},"content":"- **ManagementSystem**: The **ManagementSystem** interacts with this class to manage appointments for patients.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"dylancmznus"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"dylancmznus"},"content":"#### Prescription Class","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"dylancmznus"},"content":"**API**: [`Prescription.java`](https://github.com/AY2425S2-CS2113-T11b-4/tp/blob/master/src/main/java/manager/Prescription.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"dylancmznus"},"content":"The `Prescription` class represents a prescription, typically linked to a patient and a doctor. It contains the prescribed medications and dosage instructions.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"dylancmznus"},"content":"##### Responsibilities","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"dylancmznus"},"content":"- Represents a **prescription** issued by a **doctor** for a **patient**.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"dylancmznus"},"content":"- Stores information about **medicines**, **dosage**, and **doctor notes**.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"dylancmznus"},"content":"- Allows updates to the **dosage** or addition of new medications.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"dylancmznus"},"content":"##### Key Features","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"dylancmznus"},"content":"- Holds **prescription-related data**, including medicine names, dosage, and additional instructions.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"dylancmznus"},"content":"- Links to a **Patient** to ensure the prescription is tied to the correct patient.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"dylancmznus"},"content":"- Provides methods to update the **dosage** or add new medicines.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"dylancmznus"},"content":"##### Dependencies","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"dylancmznus"},"content":"- **Model**: Dependent on the **Patient** class to represent which patient the prescription is associated with.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"dylancmznus"},"content":"- **ManagementSystem**: The **ManagementSystem** interacts with this class to manage prescriptions and ensure they are associated with the correct patient.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"JudHoka"},"content":"## Storage Component","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"JudHoka"},"content":"**API**: [`Storage.java`](https://github.com/AY2425S2-CS2113-T11b-4/tp/blob/master/src/main/java/storage/Storage.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"JudHoka"},"content":"![Storage Component](diagrams/storageComponent.png)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"JudHoka"},"content":"### Overview","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"JudHoka"},"content":"The `Storage` component is responsible for reading from and writing to the file system to ensure **data persistence** in ClinicEase. It handles loading and saving of patients, appointments, and prescriptions, and also generates HTML representations of prescription data when required.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"JudHoka"},"content":"### Responsibilities","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"JudHoka"},"content":"- Save and load **patients** from `patient_data.txt`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"JudHoka"},"content":"- Save and load **appointments** from `appointment_data.txt`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"JudHoka"},"content":"- Save and load **prescriptions** from `prescription_data.txt`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"JudHoka"},"content":"- Generate HTML files for prescriptions into a `/prescriptions/` directory.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"JudHoka"},"content":"- Ensure data is correctly formatted and persists across application runs.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"JudHoka"},"content":"### Key Features","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"JudHoka"},"content":"- **Separate Files for Each Data Type**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"JudHoka"},"content":"  Each model object is saved in a different file for modularity and easier debugging.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"JudHoka"},"content":"- **Static Utility Methods**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"JudHoka"},"content":"  Methods like `savePatients()`, `loadAppointments()`, and `savePrescriptions()` are static and utility-based, allowing them to be called globally.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"JudHoka"},"content":"- **Data Linking**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"JudHoka"},"content":"  When appointments are loaded, they are automatically linked to their respective patients using methods from `ManagementSystem`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"JudHoka"},"content":"- **HTML Generation**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"JudHoka"},"content":"  Prescription objects are exported into readable HTML files, supporting offline viewing or printing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"JudHoka"},"content":"- **Path Initialization**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"JudHoka"},"content":"  The `Storage` constructor accepts a directory path and configures the correct file paths. It must be called before any static operations.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"JudHoka"},"content":"### Structure","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"JudHoka"},"content":"- The `Storage` class contains:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"JudHoka"},"content":"    - A constructor `Storage(String directory)` to initialize the storage directory and file paths.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"JudHoka"},"content":"    - Static methods:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"JudHoka"},"content":"        - `savePatients(List\u003cPatient\u003e)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"JudHoka"},"content":"        - `loadPatients()`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"JudHoka"},"content":"        - `saveAppointments(List\u003cAppointment\u003e)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"JudHoka"},"content":"        - `loadAppointments(ManagementSystem)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"JudHoka"},"content":"        - `savePrescriptions(List\u003cPrescription\u003e)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"JudHoka"},"content":"        - `loadPrescriptions()`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"JudHoka"},"content":"        - `exportPrescriptionToHtml(Prescription)`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"JudHoka"},"content":"### Dependencies","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"JudHoka"},"content":"- **Model Classes**:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"JudHoka"},"content":"    - `Patient`: For reading/writing patient data.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"JudHoka"},"content":"    - `Appointment`: For loading and linking to patients.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"JudHoka"},"content":"    - `Prescription`: For saving and generating HTML files.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"JudHoka"},"content":"- **ManagementSystem**:  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"JudHoka"},"content":"  Required to correctly link appointments to existing patients upon loading.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"JudHoka"},"content":"- **Parser**:  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"JudHoka"},"content":"  Parses raw text from files and reconstructs `Patient`, `Appointment`, and `Prescription` objects.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"JudHoka"},"content":"- **Commons / Utils**:  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"JudHoka"},"content":"  May use constants or helper functions for formatting or file handling.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"JudHoka"},"content":"### Design Considerations","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"JudHoka"},"content":"- **Separation of Concerns**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"JudHoka"},"content":"  The `Storage` class is solely responsible for persistence. It does not contain any business logic related to how data is used.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"JudHoka"},"content":"- **Safety Checks**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"JudHoka"},"content":"  Throws `UnloadedStorageException` if static methods are called before proper initialisation via the constructor.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"JudHoka"},"content":"- **Portability**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"JudHoka"},"content":"  Allows flexible directory configuration via constructor, making it easy to adapt file locations for testing or deployment.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"JudHoka"},"content":"- **Extensibility**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"JudHoka"},"content":"  New file-based data (e.g., billing records) can be added without affecting the current architecture — simply add new load/save methods.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"JudHoka"},"content":"### Remarks","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"JudHoka"},"content":"- `Storage` should be **initialized once** using its constructor before any read/write operations are performed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"JudHoka"},"content":"- Data is stored in a human-readable plain text format to support debugging and versioning.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"JudHoka"},"content":"- HTML generation for prescriptions can be enhanced in future with CSS templates or PDF export support.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"JudHoka"},"content":"- File structure and save formats are intentionally kept simple for ease of testing and transparency.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"chwenyee"},"content":"## Implementation","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"dylancmznus"},"content":"### View patient feature","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"dylancmznus"},"content":"The \u0027view-patient\u0027 feature allows the user to retrieve and view the personal details of a specified patient.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"dylancmznus"},"content":"**Step 1.** The user launches the application for the first time.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"dylancmznus"},"content":"- The `ClinicEase` will be initialized and load stored patient data.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"Basudeb2005"},"content":"- The patient\u0027s details are now ready to view.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"dylancmznus"},"content":"**Step 2.** The user executes `view-patient ic/S1234567D` command to view the patient\u0027s details.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"dylancmznus"},"content":"- This command lets `ClinicEase` read the user input through the `UI` and pass it to `Parser`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"dylancmznus"},"content":"- The `Parser` class determines that the command is `view-patient` and creates a `ViewPatientCommand` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"chwenyee"},"content":"\u003e **Note:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"dylancmznus"},"content":"\u003e If the input does not match the expected format, an `InvalidInputFormatException` is thrown. Hence, the patient\u0027s details will not be retrieved.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"dylancmznus"},"content":"**Step 3.** The system calls `execute()` method in `ViewPatientCommand`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"dylancmznus"},"content":"- This class calls for the patient list in `ManagementSystem`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"dylancmznus"},"content":"- The system checks if the patient exists in the list:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"Basudeb2005"},"content":"    - If the NRIC exists, the system retrieves the patient\u0027s details.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"dylancmznus"},"content":"**Step 4.** If the patient is found, the system calls `showPatientViewed()` from `UI`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"dylancmznus"},"content":"- The patient\u0027s details are displayed to the user.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"dylancmznus"},"content":"The sequence diagram below illustrates how the operation for \u0027view-patient\u0027 would be executed in the system.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"dylancmznus"},"content":"![viewPatientSequence.png](diagrams/viewPatientSequence.png)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"chwenyee"},"content":"### Add patient feature","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"chwenyee"},"content":"The `add-patient` feature allows users to register new patients by providing their personal information.  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"chwenyee"},"content":"The system ensures that the **input is valid** and that the **patient does not already exist** before adding them to the patient list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"chwenyee"},"content":"**Step 1.**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"chwenyee"},"content":"The user launches the application for the first time. `ClinicEase` will be initialized with the saved data (if any).  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"chwenyee"},"content":"The system loads the stored list of patients and appointments. The user is now ready to register a new patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"chwenyee"},"content":"**Step 2.**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"chwenyee"},"content":"The user executes the following command to add a new patient:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"chwenyee"},"content":"`add-patient n/John Doe ic/S1234567A dob/1990-01-01 g/M p/98765432 a/123 Main St h/Diabetes, Hypertension`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"chwenyee"},"content":"This command is read by the `ClinicEase` class and passed to the `Parser`.  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"chwenyee"},"content":"The `Parser` class identifies the command as `add-patient` and parses the fields. A `Patient` object is then constructed from the parsed data.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"chwenyee"},"content":"\u003e **Note**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"chwenyee"},"content":"\u003e If any required field (such as name, NRIC, or address) is missing, the parser will return `null`, and the system will display an appropriate error message.  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"chwenyee"},"content":"\u003e The patient will not be added in this case.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"chwenyee"},"content":"**Step 3.**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"chwenyee"},"content":"The `ManagementSystem.addPatient()` method is called with the parsed input.  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"chwenyee"},"content":"The method first checks if a patient with the same NRIC already exists in the system.  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"chwenyee"},"content":"If the NRIC is unique and all details are present, a new `Patient` object is added to the patient list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"chwenyee"},"content":"\u003e **Note**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"chwenyee"},"content":"\u003e If the NRIC already exists, a message is shown to inform the user that the patient has already been registered.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"chwenyee"},"content":"**Step 4.**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"chwenyee"},"content":"After successful registration, `Storage.savePatients()` is called to update the saved patient list on disk.  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"chwenyee"},"content":"If saving fails, `ClinicEase` catches an `UnloadedStorageException` and alerts the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"chwenyee"},"content":"The following sequence diagram shows how an `add-patient` operation flows through the system:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"chwenyee"},"content":"![add-patient](./diagrams/addPatientSequence.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"chwenyee"},"content":"### Delete patient feature","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"chwenyee"},"content":"The `delete-patient` feature allows users to **remove a patient** from the system using their **NRIC**.  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"chwenyee"},"content":"When a patient is deleted, all their associated **appointments** are also removed to maintain data consistency.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"chwenyee"},"content":"### Step 1.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"chwenyee"},"content":"The user launches the application. `ClinicEase` loads any saved data, including the patient list and appointments.  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"chwenyee"},"content":"The user is now ready to delete a patient from the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"chwenyee"},"content":"### Step 2.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"chwenyee"},"content":"The user executes the following command:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"chwenyee"},"content":"`delete-patient S1234567A`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"chwenyee"},"content":"This command is passed to the `Parser` class.  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"chwenyee"},"content":"The `Parser` identifies the command as `delete-patient`, extracts the NRIC `S1234567A`, and passes it to a new `DeletePatientCommand`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"chwenyee"},"content":"\u003e **Note**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"chwenyee"},"content":"\u003e If the input format is incorrect (e.g., `delete-patient` with no NRIC), the parser throws an `InvalidInputFormatException` and displays an error message to the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"chwenyee"},"content":"### Step 3.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"chwenyee"},"content":"The `DeletePatientCommand.execute()` method calls `ManagementSystem.deletePatient(nric)`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"chwenyee"},"content":"The method first **searches for the patient** with the provided NRIC in the patient list.  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"chwenyee"},"content":"If found:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"chwenyee"},"content":"- The patient is removed from the list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"chwenyee"},"content":"- All of the patient’s appointments are also removed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"chwenyee"},"content":"- Both `patients` and `appointments` are saved using `Storage.savePatients()` and `Storage.saveAppointments()`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"chwenyee"},"content":"\u003e **Note**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"chwenyee"},"content":"\u003e If the NRIC is not found, the method returns `null` and an appropriate message is displayed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"chwenyee"},"content":"### Step 4.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"chwenyee"},"content":"Once the patient is successfully deleted, a confirmation message is shown to the user.  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"chwenyee"},"content":"If saving to disk fails, an `UnloadedStorageException` is thrown and handled by the system to alert the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"chwenyee"},"content":"The following sequence diagram shows how a `delete-patient` operation flows through the system:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"chwenyee"},"content":"![delete-patient](./diagrams/deletePatientSequence.png)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"chwenyee"},"content":"### Add/delete appointment feature","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"chwenyee"},"content":"The `add-appointment` and `delete-appointment` features allow users to manage appointments for registered patients.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"chwenyee"},"content":"The system ensures that the **patient exists** before adding the appointment and that the **appointment exists** before deleting it.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"chwenyee"},"content":"All changes are stored persistently.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"chwenyee"},"content":"#### Add Appointment","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"chwenyee"},"content":"The add-appointment feature lets users schedule appointments for patients who are already registered in the system.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"chwenyee"},"content":"**Example usage scenario** and how the `add appointment` mechanism behaves at each step:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"chwenyee"},"content":"Step 1. The user launches the application for the first time. The `ClinicEase` is initialized with the stored list of","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"chwenyee"},"content":"patients and appointments. The user is now ready to add a new appointment.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"chwenyee"},"content":"Step 2. The user executes the command: `add-appointment ic/S1234567D ...` to add the appointment to the appointment list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"chwenyee"},"content":"This command let `ClinicEase` class reads the user input and passes it to the `Parser`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"chwenyee"},"content":"The `Parser` class determines that the command is `add-appointment` and creates an `AddAppointmentCommand` object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"chwenyee"},"content":"````","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"chwenyee"},"content":"public static Command parse(String userInput) throws InvalidInputFormatException, UnknownCommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"chwenyee"},"content":"    //...","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"chwenyee"},"content":"    case \"add-appointment\":","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"chwenyee"},"content":"        return new AddAppointmentCommand(parseAddAppointment(userInput));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"chwenyee"},"content":"    //...","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"chwenyee"},"content":"````","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"chwenyee"},"content":"\u003e **Note:** \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"chwenyee"},"content":"\u003e If the input does not match the expected format, an InvalidInputFormatException is thrown. Hence, the appointment will","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"chwenyee"},"content":"\u003e not be successfully added and stored.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"chwenyee"},"content":"Step 3. The system calls `execute()` method in `AddAppointmentCommand`. Then, this class calls `ManagementSystem.addAppointment()`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"chwenyee"},"content":"to add the appointment to the system. `ManagementSystem` checks if the patient exists using `findPatientByNRIC()`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"chwenyee"},"content":"- If the patient is found, the system creates an `Appointment` object and adds it to the appointment list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"chwenyee"},"content":"- Conditions the appointment fail to be added and stored:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"Basudeb2005"},"content":"    - If the patient\u0027s NRIC does not exist (a `PatientNotFoundException` is thrown).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"chwenyee"},"content":"    - If the appointment clashes with another scheduled within 1 hour (an `AppointmentClashException` is thrown).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"chwenyee"},"content":"Step 4. After the appointment is successfully added, `Storage.saveAppointments()` is called to update the stored appointment list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"chwenyee"},"content":"If saving fails, `ClinicEase` catches an `UnloadedStorageException` and informs the user.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"chwenyee"},"content":"The following sequence diagram shows how an `add-appointment` operation goes through the system:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"chwenyee"},"content":"![add-appointment](./diagrams/addAppointmentSequence.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"chwenyee"},"content":"Note: Ui component is omitted (only represented by \"Display message\" here) for simplicity reason.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"chwenyee"},"content":"To clarify how is extractValue() called to extract each parameter:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"chwenyee"},"content":"````","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"chwenyee"},"content":"public static Appointment parseAddAppointment(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"chwenyee"},"content":"    //...","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"chwenyee"},"content":"    String nric \u003d extractValue(temp, \"ic/\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"chwenyee"},"content":"    String date \u003d extractValue(temp, \"dt/\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"chwenyee"},"content":"    String time \u003d extractValue(temp, \"t/\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"chwenyee"},"content":"    String desc \u003d extractValue(temp, \"dsc/\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"chwenyee"},"content":"    //...","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"chwenyee"},"content":"````","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"chwenyee"},"content":"#### Delete Appointment","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"chwenyee"},"content":"The `delete-appointment` feature allows users to remove an appointment that is no longer required.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"chwenyee"},"content":"**Example usage scenario** and how the `delete appointment` mechanism behaves at each step:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"chwenyee"},"content":"Step 1. Suppose the user has already added one or more appointments and wishes to delete one. The appointment must","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"chwenyee"},"content":"exist in the current appointment list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"chwenyee"},"content":"Step 2. The user needs to know the appointment ID of the appointment to be deleted. If unsure, he/she may execute the","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"chwenyee"},"content":"`list-appointment` command to view all existing appointments.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"chwenyee"},"content":"Step 3. The user executes the command `delete-appointment A100`. Similar to `add appointment`, The `ClinicEase` class","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"chwenyee"},"content":"reads the user input and passes it to the `Parser`, which creates a `DeleteAppointmentCommand` object using the provided","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"chwenyee"},"content":"`APPOINTMENT_ID`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"chwenyee"},"content":"````","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"chwenyee"},"content":"public static Command parse(String userInput) throws InvalidInputFormatException, UnknownCommandException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"chwenyee"},"content":"    //...","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"chwenyee"},"content":"    case \"delete-appointment\":","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"chwenyee"},"content":"            return new DeleteAppointmentCommand(parseDeleteAppointment(userInput));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"chwenyee"},"content":"    //...","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"chwenyee"},"content":"````","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"chwenyee"},"content":"Step 4. The system calls `execute()` method in `DeleteAppointmentCommand`. Then, it calls `ManagementSystem.deleteAppointment()`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"chwenyee"},"content":"which removes the corresponding `Appointment` object from the list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"chwenyee"},"content":"- The system searches for the appointment with the specified `APPOINTMENT_ID`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"chwenyee"},"content":"- If found, it removes the appointment from the list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"chwenyee"},"content":"- It also retrieves the corresponding patient using findPatientByNric() and updates the patient\u0027s internal appointment list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"chwenyee"},"content":"\u003e **Note:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"chwenyee"},"content":"\u003e - If the `APPOINTMENT_ID` is invalid, an error message will be displayed and the deletion will not proceed.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"chwenyee"},"content":"\u003e - When a **specified patient** is **deleted**, all **appointment records associated** with that patient will be **removed** too.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"chwenyee"},"content":"Step 5. After successful deletion, the system updates the stored list using `Storage.saveAppointments()`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"chwenyee"},"content":"The following sequence diagram shows how an `delete-appointment` operation goes through the system **(positive case,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"chwenyee"},"content":"where the appointment exists and is successfully deleted):**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"chwenyee"},"content":"![delete-appointment](./diagrams/deleteAppointmentSequence.png)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"chwenyee"},"content":"### Why they are implemented this way","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"chwenyee"},"content":"The current design separates command parsing (`Parser`), command execution (`Command` subclasses), and core logic (`ManagementSystem`).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"chwenyee"},"content":"This structure helps improve modularity, testability, and clarity in our codebase.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"chwenyee"},"content":"- By using distinct `Command` classes (`AddAppointmentCommand`, `DeleteAppointmentCommand)`, each operation is encapsulated with its own logic, making it easier to maintain and extend.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"chwenyee"},"content":"- Centralizing the data logic in ManagementSystem so that it is easier to maintain and test appointment-related operations.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"chwenyee"},"content":"- Validating `NRIC` and `APPOINTMENT_ID` before performing operations could prevent invalid data from entering the system and improves user experience by providing clear error feedback.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"chwenyee"},"content":"This design also aligns with the **Separation of Concerns** principle, allowing changes in one component (e.g., how appointments are stored)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"chwenyee"},"content":"without affecting others (e.g., how commands are parsed or executed).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"chwenyee"},"content":"### Design considerations:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"chwenyee"},"content":"#### Aspect: Where to store appointment data","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"chwenyee"},"content":"1. **Alternative 1 (current choice)**: Maintain a centralized appointment list in `ManagementSystem` and update each patient\u0027s internal appointment list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"chwenyee"},"content":"    - **Pros:** Enables efficient listing, searching, and clash detection.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"chwenyee"},"content":"    - **Cons:** Requires synchronization between the central list and per-patient records (slight redundancy).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"chwenyee"},"content":"2. **Alternative 2:** Allowing appointment creation without verifying patient existence \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"chwenyee"},"content":"    - **Pros:** Simplifies implementation as patient verification is not needed.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"chwenyee"},"content":"    - **Cons:** Compromises data integrity, as appointments could become orphaned (unlinked to valid patients).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"chwenyee"},"content":"3. **Alternative 3:** Store appointments exclusively in `Patient` objects \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"chwenyee"},"content":"    - **Pros:** Keeps appointment data stored within each patient and reduces need for cross-references.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"chwenyee"},"content":"    - **Cons:** Aggregating all appointments becomes inefficient (require","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"chwenyee"},"content":"      iterating through every patient); harder to search across patients and detect conflicts.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"jyukuan"},"content":"### Storing Medical History Feature","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"jyukuan"},"content":"The `store-history` feature allows users to **add new medical history entries** for a specific patient in the system.  ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"jyukuan"},"content":"The system verifies that the **patient exists** before adding the entries, then the updated data is saved persistently.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"jyukuan"},"content":"Below is a usage scenario illustrating how the `store-history` mechanism behaves step by step.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"jyukuan"},"content":"**Step 1.** The user executes a command such as:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"jyukuan"},"content":"store-history n/John Doe ic/S1234567A h/Diabetes,High Cholesterol","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"jyukuan"},"content":"- **ClinicEase** reads this command and passes the input string to **Parser**.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"jyukuan"},"content":"- **Parser** identifies the command as `store-history` (based on the command word) and extracts the relevant parameters (`name`, `nric`, `h/` tokens).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"jyukuan"},"content":"- If the input is invalid (missing or malformed parameters), an `InvalidInputFormatException` is thrown, aborting the process.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"jyukuan"},"content":"**Step 2.** **Parser** creates a `StoreMedHistoryCommand` object with the extracted details:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"jyukuan"},"content":"- `StoreMedHistoryCommand` holds the `name` (\"John Doe\"), `nric` (\"S1234567A\"), and `medHistory` string (\"Diabetes,High Cholesterol\").","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"jyukuan"},"content":"**Step 3.** `ClinicEase` invokes `StoreMedHistoryCommand#execute(...)`, which calls:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"jyukuan"},"content":"1. `ManagementSystem.storeMedicalHistory(name, nric, medHistory)`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"jyukuan"},"content":"2. `ManagementSystem` checks if the patient exists using `findPatientByNric(nric)`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"jyukuan"},"content":"    - If **not found**, it prints an error, and **no** changes are made to storage.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"jyukuan"},"content":"    - If **found**, it splits `\"Diabetes,High Cholesterol\"` into an array of entries:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"jyukuan"},"content":"        - `\"Diabetes\"`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"jyukuan"},"content":"        - `\"High Cholesterol\"`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"Basudeb2005"},"content":"    - Then, it appends these entries to the patient\u0027s existing `medicalHistory` list (skipping duplicates).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"jyukuan"},"content":"**Step 4.** `ManagementSystem` calls `Storage.savePatients(...)` to persist any changes to the patient data on disk:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"jyukuan"},"content":"- If saving fails, `UnloadedStorageException` is thrown, and `ClinicEase` displays an error to the user.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"jyukuan"},"content":"Below is a detailed **PlantUML** sequence diagram showing how a `store-history` operation moves through the system and includes the check for a valid patient:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"jyukuan"},"content":"![add-appointment](./diagrams/storeMedicalHistorySequence.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"Basudeb2005"},"content":"### Prescription Management Feature","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"Basudeb2005"},"content":"The `add-prescription`, `view-prescription`, and `view-all-prescriptions` features allow doctors and medical staff to create and track medication prescriptions for patients within the clinic system. The system ensures that the **patient exists** before adding a prescription and handles the generation of unique prescription IDs and HTML documents for printing.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"Basudeb2005"},"content":"#### Adding a Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"Basudeb2005"},"content":"The add-prescription feature allows users to create detailed prescriptions with symptoms, medicines, and optional notes for registered patients.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"Basudeb2005"},"content":"**Example usage scenario** and how the `add-prescription` mechanism behaves at each step:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"Basudeb2005"},"content":"Step 1. The user launches the application. The `ClinicEase` is initialized with stored patient, appointment, and prescription data. The user is now ready to add a new prescription.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"Basudeb2005"},"content":"Step 2. The user executes the command: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"Basudeb2005"},"content":"```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"Basudeb2005"},"content":"add-prescription ic/S1234567A s/Fever,Cough m/Paracetamol,Cough syrup nt/Take after meals","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"Basudeb2005"},"content":"```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"Basudeb2005"},"content":"This command lets `ClinicEase` read the user input and pass it to the `Parser`. The `Parser` determines that the command is `add-prescription` and creates an `AddPrescriptionCommand` object with a new `Prescription` object.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"Basudeb2005"},"content":"```java","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"Basudeb2005"},"content":"public static Command parse(String userInput) throws InvalidInputFormatException, UnknownCommandException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"Basudeb2005"},"content":"    //...","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"Basudeb2005"},"content":"    case \"add-prescription\":","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"Basudeb2005"},"content":"        return new AddPrescriptionCommand(parseAddPrescription(userInput));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"Basudeb2005"},"content":"    //...","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"Basudeb2005"},"content":"```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"Basudeb2005"},"content":"\u003e [!NOTE]:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"Basudeb2005"},"content":"\u003e If the input does not match the expected format, an `InvalidInputFormatException` is thrown. Hence, the prescription will not be successfully added and stored.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"Basudeb2005"},"content":"Step 3. The system calls `execute()` method in `AddPrescriptionCommand`. This class calls `ManagementSystem.addPrescription(prescription)` to add the prescription to the system. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"Basudeb2005"},"content":"The `ManagementSystem` verifies the patient exists using `findPatientByNric()`:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"Basudeb2005"},"content":"- If the patient is found, the system generates a proper prescription ID and creates a new `Prescription` object.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"Basudeb2005"},"content":"- If the patient\u0027s NRIC does not exist, an `IllegalArgumentException` is thrown.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"Basudeb2005"},"content":"Step 4. After the prescription is successfully added, `Storage.savePrescriptions()` is called to update the stored prescriptions list. If saving fails, an `UnloadedStorageException` is thrown and ClinicEase informs the user.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"Basudeb2005"},"content":"The following sequence diagram shows how an `add-prescription` operation flows through the system:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"Basudeb2005"},"content":"![add-prescription](./diagrams/prescriptionManagementSequence.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"Basudeb2005"},"content":"#### Viewing Prescriptions","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"Basudeb2005"},"content":"The system provides two commands for viewing prescriptions:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"Basudeb2005"},"content":"1. **`view-all-prescriptions PATIENT_ID`** - Shows all prescriptions for a specific patient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"Basudeb2005"},"content":"2. **`view-prescription PRESCRIPTION_ID`** - Shows details of a specific prescription and generates an HTML version.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"Basudeb2005"},"content":"**Example usage scenario** for `view-prescription`:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"Basudeb2005"},"content":"Step 1. The user needs to view a specific prescription and generate its printable HTML version. If the user knows the prescription ID, they can directly proceed to step 2. Otherwise, they may need to first use `view-all-prescriptions` to find the required ID.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"Basudeb2005"},"content":"Step 2. The user executes the command `view-prescription S1234567A-1`. The `Parser` extracts the prescription ID and creates a `ViewPrescriptionCommand` object.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"Basudeb2005"},"content":"Step 3. The system calls `execute()` in `ViewPrescriptionCommand`. The system fetches:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"Basudeb2005"},"content":"   - The prescription using `ManagementSystem.getPrescriptionById()`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"Basudeb2005"},"content":"   - The patient information using `ManagementSystem.viewPatient()`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"Basudeb2005"},"content":"Step 4. If the prescription is found, the system:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"Basudeb2005"},"content":"   - Displays the prescription details to the user","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"Basudeb2005"},"content":"   - Generates an HTML file with `Storage.savePrescriptionHtml()`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"Basudeb2005"},"content":"   - Shows the file location to the user","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"chwenyee"},"content":"\u003e **Note:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"Basudeb2005"},"content":"\u003e If the prescription ID is invalid, an error message will be displayed and no HTML will be generated.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"Basudeb2005"},"content":"#### HTML Prescription Generation","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"Basudeb2005"},"content":"An important feature of the prescription management system is the generation of printable HTML documents. This functionality is embedded within the `Prescription` class:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"Basudeb2005"},"content":"```java","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"Basudeb2005"},"content":"public String generateHtml(Patient patient) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"Basudeb2005"},"content":"    StringBuilder html \u003d new StringBuilder();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"Basudeb2005"},"content":"    // Generate structured HTML with prescription details","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"Basudeb2005"},"content":"    // Include patient information when available","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"Basudeb2005"},"content":"    // Add print button and styling","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"Basudeb2005"},"content":"    return html.toString();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"Basudeb2005"},"content":"```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"Basudeb2005"},"content":"The generated HTML provides:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"Basudeb2005"},"content":"- A professional format for printing","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"Basudeb2005"},"content":"- All prescription details (ID, timestamp, symptoms, medicines)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"Basudeb2005"},"content":"- Patient information when available","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"Basudeb2005"},"content":"- A print button for easy printing from any browser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"Basudeb2005"},"content":"#### Why It\u0027s Implemented This Way","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"Basudeb2005"},"content":"The current design separates command parsing (`Parser`), command execution (command classes like `AddPrescriptionCommand`), and core logic (`ManagementSystem` and `Prescription`). This structure allows:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"Basudeb2005"},"content":"- Better modularity by separating different aspects of functionality","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"Basudeb2005"},"content":"- Improved testability with clear interfaces between components","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"Basudeb2005"},"content":"- Consistent approach with other features in the system","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"Basudeb2005"},"content":"- Easy extension for future prescription-related features","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"Basudeb2005"},"content":"The HTML generation approach was chosen as it provides a printable output without requiring additional libraries, while maintaining visual quality needed for medical documentation.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"Basudeb2005"},"content":"#### Class Structure","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"Basudeb2005"},"content":"The implementation follows these key classes:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"Basudeb2005"},"content":"1. **Prescription** - Core class representing a prescription with all its attributes and conversion methods.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"Basudeb2005"},"content":"2. **Command Classes:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"Basudeb2005"},"content":"   - **AddPrescriptionCommand** - Creates new prescriptions","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"Basudeb2005"},"content":"   - **ViewPrescriptionCommand** - Displays a prescription and generates HTML","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"Basudeb2005"},"content":"   - **ViewAllPrescriptionsCommand** - Lists all prescriptions for a patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"Basudeb2005"},"content":"3. **ManagementSystem** - Maintains the list of prescriptions and provides methods to add and retrieve them","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"Basudeb2005"},"content":"4. **Storage** - Handles saving and loading prescriptions from disk","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"Basudeb2005"},"content":"The class diagram below shows the relationships between these classes:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"Basudeb2005"},"content":"![prescription-classes](./diagrams/prescriptionClassDiagram.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"Basudeb2005"},"content":"#### Design Considerations","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"Basudeb2005"},"content":"##### Aspect: Prescription Identification","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"Basudeb2005"},"content":"* **Alternative 1 (current choice):** Patient ID plus sequence number (e.g., \"S1234567A-1\").","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"Basudeb2005"},"content":"  * Pros: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"Basudeb2005"},"content":"    * Clear association between patients and their prescriptions","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"Basudeb2005"},"content":"    * Easy for staff to understand and reference verbally","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"Basudeb2005"},"content":"    * Intuitive sequential numbering for prescriptions","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"Basudeb2005"},"content":"  * Cons: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"Basudeb2005"},"content":"    * Requires tracking the last used number for each patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"Basudeb2005"},"content":"* **Alternative 2:** Generate UUIDs for prescriptions.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"Basudeb2005"},"content":"  * Pros: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"Basudeb2005"},"content":"    * Guaranteed global uniqueness","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"Basudeb2005"},"content":"    * No need for sequence management","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"Basudeb2005"},"content":"  * Cons: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"Basudeb2005"},"content":"    * Not human-friendly for verbal reference","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"Basudeb2005"},"content":"    * No visual connection to the patient ID","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"Basudeb2005"},"content":"##### Aspect: Prescription Output Format","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"Basudeb2005"},"content":"* **Alternative 1 (current choice):** HTML documents for prescriptions.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"Basudeb2005"},"content":"  * Pros:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"Basudeb2005"},"content":"    * Universal browser support for viewing and printing","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"Basudeb2005"},"content":"    * No external dependencies required","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"Basudeb2005"},"content":"    * Responsive design across devices","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"Basudeb2005"},"content":"  * Cons:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":991,"author":{"gitId":"Basudeb2005"},"content":"    * Not a standardized medical document format","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":992,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":993,"author":{"gitId":"Basudeb2005"},"content":"* **Alternative 2:** PDF documents.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":994,"author":{"gitId":"Basudeb2005"},"content":"  * Pros:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":995,"author":{"gitId":"Basudeb2005"},"content":"    * Industry standard format for medical documents","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":996,"author":{"gitId":"Basudeb2005"},"content":"    * Better control over print layouts","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":997,"author":{"gitId":"Basudeb2005"},"content":"  * Cons:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":998,"author":{"gitId":"Basudeb2005"},"content":"    * Requires external PDF library dependencies","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":999,"author":{"gitId":"Basudeb2005"},"content":"    * Increases complexity and dependencies","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1000,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1001,"author":{"gitId":"Basudeb2005"},"content":"##### Aspect: Storage Format","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1002,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1003,"author":{"gitId":"Basudeb2005"},"content":"* **Alternative 1 (current choice):** Simple pipe-delimited text storage.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1004,"author":{"gitId":"Basudeb2005"},"content":"  * Pros:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1005,"author":{"gitId":"Basudeb2005"},"content":"    * Consistency with other system data formats","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1006,"author":{"gitId":"Basudeb2005"},"content":"    * Easy to parse and maintain","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1007,"author":{"gitId":"Basudeb2005"},"content":"    * Human-readable in storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1008,"author":{"gitId":"Basudeb2005"},"content":"  * Cons:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1009,"author":{"gitId":"Basudeb2005"},"content":"    * Limited handling of special characters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1010,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1011,"author":{"gitId":"Basudeb2005"},"content":"* **Alternative 2:** JSON format.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1012,"author":{"gitId":"Basudeb2005"},"content":"  * Pros:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1013,"author":{"gitId":"Basudeb2005"},"content":"    * Better handling of complex data structures","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1014,"author":{"gitId":"Basudeb2005"},"content":"    * Standard data interchange format","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1015,"author":{"gitId":"Basudeb2005"},"content":"  * Cons:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1016,"author":{"gitId":"Basudeb2005"},"content":"    * Requires additional parsing libraries","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1017,"author":{"gitId":"Basudeb2005"},"content":"    * Inconsistent with the system\u0027s other storage formats","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1018,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1019,"author":{"gitId":"Basudeb2005"},"content":"---","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1020,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1021,"author":{"gitId":"chwenyee"},"content":"## Appendix: Requirements","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1022,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1023,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1024,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1025,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1026,"author":{"gitId":"JudHoka"},"content":"The target users are clinic staff, such as receptionists, assistants, or solo practitioners, who need a lightweight, no-frills system to manage patient records and appointment schedules. These users are assumed to be comfortable with basic command-line interfaces but may not have advanced technical expertise.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1027,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1028,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1029,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1030,"author":{"gitId":"JudHoka"},"content":"This CLI-based Clinic Management System offers a simple yet effective solution for managing patient data and appointments without the need for complex software installations or internet access. It helps clinics save time, stay organized, and reduce manual errors by streamlining common administrative tasks like adding patients, scheduling appointments, and retrieving records, all from the command line.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":1031,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1032,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":1033,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":1034,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1035,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1036,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ... | So that I can ... |","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1037,"author":{"gitId":"Basudeb2005"},"content":"|---------|----------|---------------|-------------------|","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1038,"author":{"gitId":"Basudeb2005"},"content":"| v1.0    | doctor   | add my patients\u0027 personal details | I can add them into the system |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1039,"author":{"gitId":"Basudeb2005"},"content":"| v1.0    | doctor   | delete my patients\u0027 personal details | I can remove them from the system |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1040,"author":{"gitId":"Basudeb2005"},"content":"| v1.0    | doctor   | view my certain patient\u0027s personal details | I can view them in the system |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1041,"author":{"gitId":"Basudeb2005"},"content":"| v1.0    | doctor   | add appointments into my schedule | I can add appointments plan from a patient needed to be tracked |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1042,"author":{"gitId":"Basudeb2005"},"content":"| v1.0    | doctor   | delete appointments from my schedule | I can get rid of appointments no longer needed to track |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1043,"author":{"gitId":"Basudeb2005"},"content":"| v1.0    | doctor   | list my upcoming appointments | I can manage my time effectively without manual scheduling |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1044,"author":{"gitId":"Basudeb2005"},"content":"| v1.0    | doctor   | store patients\u0027 medical history | I can understand the patient\u0027s situation better |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1045,"author":{"gitId":"Basudeb2005"},"content":"| v1.0    | doctor   | check all medical histories for one certain patient | I can know what happened before the patient come |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1046,"author":{"gitId":"Basudeb2005"},"content":"| v2.0    | doctor   | add a new prescription for a patient | record the prescribed medications and instructions |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1047,"author":{"gitId":"Basudeb2005"},"content":"| v2.0    | doctor   | view all prescriptions for a patient | track the patient\u0027s medication history |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1048,"author":{"gitId":"Basudeb2005"},"content":"| v2.0    | doctor   | add symptoms to a prescription | document the patient\u0027s condition |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1049,"author":{"gitId":"Basudeb2005"},"content":"| v2.0    | doctor   | add special notes to prescriptions | provide additional instructions to patients |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1050,"author":{"gitId":"Basudeb2005"},"content":"| v2.0    | doctor   | generate a printable prescription | provide a professional document to the patient |","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1051,"author":{"gitId":"chwenyee"},"content":"| v2.0    | doctor   | edit my patients\u0027 personal details                 | update them if there is any updates |","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":1052,"author":{"gitId":"chwenyee"},"content":"| v2.0    | doctor   | sort appointments by date                          | check which appointements are coming first |","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":1053,"author":{"gitId":"chwenyee"},"content":"| v2.0    | doctor   | mark/unmark appointments                   | track my appointments more easily |","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":1054,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":1055,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":1056,"author":{"gitId":"dylancmznus"},"content":"## Use Cases","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1057,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1058,"author":{"gitId":"dylancmznus"},"content":"### Use Case: Add a Patient","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1059,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1060,"author":{"gitId":"dylancmznus"},"content":"#### MSS","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1061,"author":{"gitId":"dylancmznus"},"content":"User requests to add a patient, adding the personal details.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1062,"author":{"gitId":"dylancmznus"},"content":"ClinicEase adds the patient to the system.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1063,"author":{"gitId":"dylancmznus"},"content":"ClinicEase confirms the patient has been added successfully.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1064,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1065,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1066,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1067,"author":{"gitId":"dylancmznus"},"content":"#### Extensions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1068,"author":{"gitId":"dylancmznus"},"content":"1a. Required details are missing or incorrectly formatted.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1069,"author":{"gitId":"dylancmznus"},"content":"1a1. ClinicEase displays an error message.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1070,"author":{"gitId":"dylancmznus"},"content":"Use case resumes at step 1.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1071,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1072,"author":{"gitId":"dylancmznus"},"content":"1b. A patient with the same NRIC already exists.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1073,"author":{"gitId":"dylancmznus"},"content":"1b1. ClinicEase displays an error message.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1074,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1075,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1076,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1077,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1078,"author":{"gitId":"dylancmznus"},"content":"### Use Case: Delete a Patient","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1079,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1080,"author":{"gitId":"dylancmznus"},"content":"#### MSS","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1081,"author":{"gitId":"dylancmznus"},"content":"User requests to list patients.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1082,"author":{"gitId":"dylancmznus"},"content":"ClinicEase displays a list of patients.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1083,"author":{"gitId":"dylancmznus"},"content":"User requests to delete a specific patient from the list.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1084,"author":{"gitId":"dylancmznus"},"content":"ClinicEase deletes the patient.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1085,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1086,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1087,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1088,"author":{"gitId":"dylancmznus"},"content":"#### Extensions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1089,"author":{"gitId":"dylancmznus"},"content":"2a. The patient list is empty.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1090,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1091,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1092,"author":{"gitId":"dylancmznus"},"content":"3a. The given NRIC is invalid.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1093,"author":{"gitId":"dylancmznus"},"content":"3a1. ClinicEase displays an error message.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1094,"author":{"gitId":"dylancmznus"},"content":"Use case resumes at step 2.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1095,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1096,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1097,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1098,"author":{"gitId":"dylancmznus"},"content":"### Use Case: Add an Appointment","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1099,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1100,"author":{"gitId":"dylancmznus"},"content":"#### MSS","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1101,"author":{"gitId":"dylancmznus"},"content":"User requests to add appointment, specifying the patient NRIC, date, time, and description.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1102,"author":{"gitId":"dylancmznus"},"content":"ClinicEase verifies that the patient exists.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1103,"author":{"gitId":"dylancmznus"},"content":"ClinicEase adds the appointment to the system.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1104,"author":{"gitId":"dylancmznus"},"content":"ClinicEase confirms that the appointment has been added successfully.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1105,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1106,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1107,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1108,"author":{"gitId":"dylancmznus"},"content":"#### Extensions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1109,"author":{"gitId":"dylancmznus"},"content":"2a. The patient does not exist in the system.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1110,"author":{"gitId":"dylancmznus"},"content":"2a1. ClinicEase displays an error message.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1111,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1112,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1113,"author":{"gitId":"dylancmznus"},"content":"1a. Required details are missing or incorrectly formatted.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1114,"author":{"gitId":"dylancmznus"},"content":"1a1. ClinicEase displays an error message.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1115,"author":{"gitId":"dylancmznus"},"content":"Use case resumes at step 1.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1116,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1117,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1118,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1119,"author":{"gitId":"dylancmznus"},"content":"### Use Case: Delete an Appointment","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1120,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1121,"author":{"gitId":"dylancmznus"},"content":"#### MSS","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1122,"author":{"gitId":"dylancmznus"},"content":"User requests to list appointments.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1123,"author":{"gitId":"dylancmznus"},"content":"ClinicEase displays a list of appointments.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1124,"author":{"gitId":"dylancmznus"},"content":"User requests to delete a specific appointment.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1125,"author":{"gitId":"dylancmznus"},"content":"ClinicEase deletes the appointment.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1126,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1127,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1128,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1129,"author":{"gitId":"dylancmznus"},"content":"#### Extensions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1130,"author":{"gitId":"dylancmznus"},"content":"2a. The appointment list is empty.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1131,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1132,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1133,"author":{"gitId":"dylancmznus"},"content":"3a. The given appointment ID is invalid.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1134,"author":{"gitId":"dylancmznus"},"content":"3a1. ClinicEase displays an error message.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1135,"author":{"gitId":"dylancmznus"},"content":"Use case resumes at step 2.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1136,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1137,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1138,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1139,"author":{"gitId":"Basudeb2005"},"content":"### Use Case: View a Patient\u0027s Medical History","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1140,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1141,"author":{"gitId":"dylancmznus"},"content":"#### MSS","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1142,"author":{"gitId":"Basudeb2005"},"content":"User requests to view patient\u0027s medical history using the patient\u0027s NRIC.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1143,"author":{"gitId":"dylancmznus"},"content":"ClinicEase retrieves and displays the medical history of the patient.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1144,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1145,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1146,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1147,"author":{"gitId":"dylancmznus"},"content":"#### Extensions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1148,"author":{"gitId":"dylancmznus"},"content":"1a. The given NRIC is invalid or does not exist.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1149,"author":{"gitId":"dylancmznus"},"content":"1a1. ClinicEase displays an error message.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1150,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1151,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1152,"author":{"gitId":"dylancmznus"},"content":"2a. The patient has no recorded medical history.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1153,"author":{"gitId":"dylancmznus"},"content":"2a1. ClinicEase informs the user that no history is available.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1154,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1155,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1156,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1157,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1158,"author":{"gitId":"Basudeb2005"},"content":"### Use Case: Edit a Patient\u0027s Details","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1159,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1160,"author":{"gitId":"dylancmznus"},"content":"#### MSS","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1161,"author":{"gitId":"Basudeb2005"},"content":"User requests to edit a patient\u0027s details using the patient\u0027s NRIC and the new details.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1162,"author":{"gitId":"dylancmznus"},"content":"ClinicEase verifies that the patient exists.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1163,"author":{"gitId":"Basudeb2005"},"content":"ClinicEase updates patient\u0027s details.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1164,"author":{"gitId":"dylancmznus"},"content":"ClinicEase confirms the update was successful.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1165,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1166,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1167,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1168,"author":{"gitId":"dylancmznus"},"content":"#### Extensions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1169,"author":{"gitId":"dylancmznus"},"content":"2a. The patient does not exist in the system.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1170,"author":{"gitId":"dylancmznus"},"content":"2a1. ClinicEase displays an error message.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1171,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1172,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1173,"author":{"gitId":"dylancmznus"},"content":"1a. The provided new details are invalid or missing.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1174,"author":{"gitId":"dylancmznus"},"content":"1a1. ClinicEase displays an error message.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1175,"author":{"gitId":"dylancmznus"},"content":"Use case resumes at step 1.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1176,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1177,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1178,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1179,"author":{"gitId":"dylancmznus"},"content":"### Use Case: Sort Appointments","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1180,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1181,"author":{"gitId":"dylancmznus"},"content":"#### MSS","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1182,"author":{"gitId":"dylancmznus"},"content":"User requests to sort appointments by date or by appointment ID.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1183,"author":{"gitId":"dylancmznus"},"content":"ClinicEase sorts the appointments accordingly.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1184,"author":{"gitId":"dylancmznus"},"content":"ClinicEase displays the sorted list.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1185,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1186,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1187,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1188,"author":{"gitId":"dylancmznus"},"content":"#### Extensions","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1189,"author":{"gitId":"dylancmznus"},"content":"1a. The appointment list is empty.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1190,"author":{"gitId":"dylancmznus"},"content":"1a1. ClinicEase displays a message indicating there are no appointments to sort.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1191,"author":{"gitId":"dylancmznus"},"content":"Use case ends.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1192,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1193,"author":{"gitId":"dylancmznus"},"content":"1b. The sorting parameter is invalid.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1194,"author":{"gitId":"dylancmznus"},"content":"1b1. ClinicEase displays an error message.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1195,"author":{"gitId":"dylancmznus"},"content":"Use case resumes at step 1.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1196,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1197,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1198,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1199,"author":{"gitId":"Basudeb2005"},"content":"### Use case: Add a new prescription","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1200,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1201,"author":{"gitId":"Basudeb2005"},"content":"**MSS**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1202,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1203,"author":{"gitId":"Basudeb2005"},"content":"1. Doctor requests to add a new prescription","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1204,"author":{"gitId":"Basudeb2005"},"content":"2. System prompts for prescription details (patient ID, symptoms, medicines, optional notes)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1205,"author":{"gitId":"Basudeb2005"},"content":"3. Doctor enters the required information","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1206,"author":{"gitId":"Basudeb2005"},"content":"4. System validates the patient ID exists","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1207,"author":{"gitId":"Basudeb2005"},"content":"5. System generates a unique prescription ID","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1208,"author":{"gitId":"Basudeb2005"},"content":"6. System saves the prescription","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1209,"author":{"gitId":"Basudeb2005"},"content":"7. System displays success message with the prescription details","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1210,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1211,"author":{"gitId":"Basudeb2005"},"content":"    Use case ends.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1212,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1213,"author":{"gitId":"Basudeb2005"},"content":"**Extensions**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1214,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1215,"author":{"gitId":"Basudeb2005"},"content":"* 4a. Patient ID does not exist","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1216,"author":{"gitId":"Basudeb2005"},"content":"    * 4a1. System shows an error message","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1217,"author":{"gitId":"Basudeb2005"},"content":"    * 4a2. Use case resumes at step 2","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1218,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1219,"author":{"gitId":"Basudeb2005"},"content":"* 3a. Required fields are missing","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1220,"author":{"gitId":"Basudeb2005"},"content":"    * 3a1. System shows error message with correct format","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1221,"author":{"gitId":"Basudeb2005"},"content":"    * 3a2. Use case resumes at step 2","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1222,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1223,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1224,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1225,"author":{"gitId":"Basudeb2005"},"content":"### Use case: View all prescriptions for a patient","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1226,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1227,"author":{"gitId":"Basudeb2005"},"content":"**MSS**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1228,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1229,"author":{"gitId":"Basudeb2005"},"content":"1. Doctor requests to view all prescriptions for a patient","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1230,"author":{"gitId":"Basudeb2005"},"content":"2. Doctor enters patient ID","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1231,"author":{"gitId":"Basudeb2005"},"content":"3. System validates patient exists","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1232,"author":{"gitId":"Basudeb2005"},"content":"4. System retrieves and displays all prescriptions for the patient","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1233,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1234,"author":{"gitId":"Basudeb2005"},"content":"    Use case ends.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1235,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1236,"author":{"gitId":"Basudeb2005"},"content":"**Extensions**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1237,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1238,"author":{"gitId":"Basudeb2005"},"content":"* 3a. Patient ID does not exist","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1239,"author":{"gitId":"Basudeb2005"},"content":"    * 3a1. System shows an error message","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1240,"author":{"gitId":"Basudeb2005"},"content":"    * 3a2. Use case ends","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1241,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1242,"author":{"gitId":"Basudeb2005"},"content":"* 4a. No prescriptions found","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1243,"author":{"gitId":"Basudeb2005"},"content":"    * 4a1. System shows \"No prescriptions found\" message","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1244,"author":{"gitId":"Basudeb2005"},"content":"    * 4a2. Use case ends","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1245,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1246,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1247,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1248,"author":{"gitId":"Basudeb2005"},"content":"### Use case: View and generate HTML prescription","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1249,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1250,"author":{"gitId":"Basudeb2005"},"content":"**MSS**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1251,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1252,"author":{"gitId":"Basudeb2005"},"content":"1. Doctor requests to view a specific prescription","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1253,"author":{"gitId":"Basudeb2005"},"content":"2. Doctor enters prescription ID","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1254,"author":{"gitId":"Basudeb2005"},"content":"3. System validates prescription exists","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1255,"author":{"gitId":"Basudeb2005"},"content":"4. System displays prescription details","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1256,"author":{"gitId":"Basudeb2005"},"content":"5. System generates HTML version","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1257,"author":{"gitId":"Basudeb2005"},"content":"6. System shows location of generated file","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1258,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1259,"author":{"gitId":"Basudeb2005"},"content":"    Use case ends.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1260,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1261,"author":{"gitId":"Basudeb2005"},"content":"**Extensions**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1262,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1263,"author":{"gitId":"Basudeb2005"},"content":"* 3a. Prescription ID does not exist","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1264,"author":{"gitId":"Basudeb2005"},"content":"    * 3a1. System shows an error message","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1265,"author":{"gitId":"Basudeb2005"},"content":"    * 3a2. Use case ends","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1266,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1267,"author":{"gitId":"Basudeb2005"},"content":"* 5a. HTML generation fails","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1268,"author":{"gitId":"Basudeb2005"},"content":"    * 5a1. System shows error message","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1269,"author":{"gitId":"Basudeb2005"},"content":"    * 5a2. Use case ends","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1270,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":1271,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":1272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":1273,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1274,"author":{"gitId":"chwenyee"},"content":"1. Should work on any mainstream OS as long as it has Java `17` or above installed.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1275,"author":{"gitId":"chwenyee"},"content":"2. The system should efficiently manage up to 1000 patients or appointments without any noticeable performance lag during typical usage.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1276,"author":{"gitId":"chwenyee"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks within 30 seconds using CLI commands.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1277,"author":{"gitId":"chwenyee"},"content":"4. All error messages should clearly indicate how to correct the invalid input.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1278,"author":{"gitId":"chwenyee"},"content":"5. Data files should be compatible across different OS platforms.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1279,"author":{"gitId":"chwenyee"},"content":"6. All functionality should be accessible via keyboard-only commands.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1281,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1283,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1284,"author":{"gitId":"chwenyee"},"content":"* *Mainstream OS* - Windows, Linux, Unix, macOS","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1285,"author":{"gitId":"Basudeb2005"},"content":"* *Performance Lag* – A noticeable delay or slowdown in the system\u0027s response to user actions.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1286,"author":{"gitId":"chwenyee"},"content":"* *Error Messages* – System-generated messages that inform users of incorrect input and provide guidance on how to fix it.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1287,"author":{"gitId":"chwenyee"},"content":"* *OS Platform Compatibility* – The ability for data files and system functionality to work consistently across different operating systems.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1289,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":1290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":1291,"author":{"gitId":"chwenyee"},"content":"## Appendix: Instructions for Manual Testing","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1292,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1293,"author":{"gitId":"jyukuan"},"content":"Below is a suggested guide for **manual testing** of the ClinicEase application in a Command Line Interface (CLI) environment. ","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1294,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1295,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1296,"author":{"gitId":"jyukuan"},"content":"## 1. Getting Started","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1297,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1298,"author":{"gitId":"jyukuan"},"content":"1. **Compilation**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1299,"author":{"gitId":"Basudeb2005"},"content":"   - Navigate to the project\u0027s root folder (where the `ClinicEase.java` and other `.java` files reside).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1300,"author":{"gitId":"jyukuan"},"content":"   - Compile the source files. For example:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1301,"author":{"gitId":"jyukuan"},"content":"     ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1302,"author":{"gitId":"jyukuan"},"content":"     javac *.java","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1303,"author":{"gitId":"jyukuan"},"content":"     ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1304,"author":{"gitId":"Basudeb2005"},"content":"   - Alternatively, use your favorite IDE\u0027s build tool.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1305,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1306,"author":{"gitId":"jyukuan"},"content":"2. **Launching the Application**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1307,"author":{"gitId":"jyukuan"},"content":"   - Run the compiled main class:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1308,"author":{"gitId":"jyukuan"},"content":"     ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1309,"author":{"gitId":"jyukuan"},"content":"     java ClinicEase","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1310,"author":{"gitId":"JudHoka"},"content":"     ```","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1311,"author":{"gitId":"JudHoka"},"content":"     You should see a welcome message that looks like this:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":1312,"author":{"gitId":"jyukuan"},"content":"     ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1313,"author":{"gitId":"jyukuan"},"content":"     --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1314,"author":{"gitId":"jyukuan"},"content":"     Welcome to ClinicEase!","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1315,"author":{"gitId":"jyukuan"},"content":"     Type a command, or \u0027bye\u0027 to exit.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1316,"author":{"gitId":"jyukuan"},"content":"     --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1317,"author":{"gitId":"jyukuan"},"content":"     \u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1318,"author":{"gitId":"jyukuan"},"content":"     ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1319,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1320,"author":{"gitId":"jyukuan"},"content":"3. **Exiting the Application**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1321,"author":{"gitId":"jyukuan"},"content":"   - To exit, type:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1322,"author":{"gitId":"jyukuan"},"content":"     ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1323,"author":{"gitId":"jyukuan"},"content":"     bye","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1324,"author":{"gitId":"jyukuan"},"content":"     ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1325,"author":{"gitId":"jyukuan"},"content":"   - Expected output:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1326,"author":{"gitId":"jyukuan"},"content":"     ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1327,"author":{"gitId":"jyukuan"},"content":"     --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1328,"author":{"gitId":"jyukuan"},"content":"     Goodbye!","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1329,"author":{"gitId":"jyukuan"},"content":"     --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1330,"author":{"gitId":"jyukuan"},"content":"     ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1331,"author":{"gitId":"jyukuan"},"content":"   - The program will then terminate.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1332,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1333,"author":{"gitId":"jyukuan"},"content":"---","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1334,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1335,"author":{"gitId":"jyukuan"},"content":"## 2. Testing Patient Management Features","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1336,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1337,"author":{"gitId":"jyukuan"},"content":"### 2.1 Add a New Patient","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1338,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1339,"author":{"gitId":"jyukuan"},"content":"**Command Format**: `add-patient n/NAME ic/NRIC dob/BIRTHDATE g/GENDER p/PHONE a/ADDRESS [h/MEDICAL_HISTORY]`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1340,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1341,"author":{"gitId":"jyukuan"},"content":"- `[h/MEDICAL_HISTORY]` is optional and can be multiple entries separated by commas.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1342,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1343,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1344,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1345,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1346,"author":{"gitId":"jyukuan"},"content":"   add-patient n/Alice Tan ic/S1234567A dob/1990-01-01 g/F p/91234567 a/123 Bedok Road h/High blood pressure","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1347,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1348,"author":{"gitId":"jyukuan"},"content":"2. Expected output:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1349,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1350,"author":{"gitId":"jyukuan"},"content":"   --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1351,"author":{"gitId":"jyukuan"},"content":"   Patient added successfully: Alice Tan","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1352,"author":{"gitId":"jyukuan"},"content":"   --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1353,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1354,"author":{"gitId":"jyukuan"},"content":"3. The system should store the new patient data (written to `patient_data.txt`).","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1355,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1356,"author":{"gitId":"jyukuan"},"content":"**Additional Test Cases**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1357,"author":{"gitId":"jyukuan"},"content":"- **Missing required fields** (e.g., no `a/ADDRESS`) should produce an `InvalidInputFormatException` message.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1358,"author":{"gitId":"jyukuan"},"content":"- **Duplicate NRIC** should produce a `DuplicatePatientIDException`.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1359,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1360,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1361,"author":{"gitId":"jyukuan"},"content":"### 2.2 List All Patients","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1362,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1363,"author":{"gitId":"jyukuan"},"content":"**Command Format**: `list-patient`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1364,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1365,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1366,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1367,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1368,"author":{"gitId":"jyukuan"},"content":"   list-patient","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1369,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1370,"author":{"gitId":"jyukuan"},"content":"2. If you have existing patients, the system displays each patient in a list format:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1371,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1372,"author":{"gitId":"jyukuan"},"content":"   ------------------------------------------Patient Details------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1373,"author":{"gitId":"jyukuan"},"content":"   Patient NRIC: S1234567A Name: Alice Tan ...","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1374,"author":{"gitId":"jyukuan"},"content":"   --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1375,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1376,"author":{"gitId":"jyukuan"},"content":"3. If no patients exist, the system prints:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1377,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1378,"author":{"gitId":"jyukuan"},"content":"   --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1379,"author":{"gitId":"jyukuan"},"content":"   No patients have been added.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1380,"author":{"gitId":"jyukuan"},"content":"   --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1381,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1382,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1383,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1384,"author":{"gitId":"jyukuan"},"content":"### 2.3 View a Patient by NRIC","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1385,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1386,"author":{"gitId":"jyukuan"},"content":"**Command Format**: `view-patient NRIC`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1387,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1388,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1389,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1390,"author":{"gitId":"jyukuan"},"content":"   ``` ","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1391,"author":{"gitId":"jyukuan"},"content":"   view-patient S1234567A","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1392,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1393,"author":{"gitId":"jyukuan"},"content":"2. If the patient is found, detailed information is displayed. Otherwise, the system notifies you that no matching patient was found.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1394,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1395,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1396,"author":{"gitId":"jyukuan"},"content":"### 2.4 Delete a Patient","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1397,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1398,"author":{"gitId":"jyukuan"},"content":"**Command Format**: `delete-patient NRIC`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1399,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1400,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1401,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1402,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1403,"author":{"gitId":"jyukuan"},"content":"   ``` ","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1404,"author":{"gitId":"jyukuan"},"content":"   delete-patient S1234567A","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1405,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1406,"author":{"gitId":"jyukuan"},"content":"2. If the patient exists, the system confirms deletion:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1407,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1408,"author":{"gitId":"jyukuan"},"content":"   --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1409,"author":{"gitId":"jyukuan"},"content":"   No patients have been added.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1410,"author":{"gitId":"jyukuan"},"content":"   --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1411,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1412,"author":{"gitId":"Basudeb2005"},"content":"3. If the patient doesn\u0027t exist, it notifies you accordingly.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1413,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1414,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1415,"author":{"gitId":"jyukuan"},"content":"### 2.5 Edit Patient Information","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1416,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1417,"author":{"gitId":"jyukuan"},"content":"**Command Format** `edit-patient ic/NRIC [n/NAME] [dob/BIRTHDATE] [g/GENDER] [a/ADDRESS] [p/PHONE]`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1418,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1419,"author":{"gitId":"jyukuan"},"content":"- `ic/NRIC` is required to locate the patient.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1420,"author":{"gitId":"jyukuan"},"content":"- The remaining fields are optional; include only those you want to edit.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1421,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1422,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1423,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1424,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1425,"author":{"gitId":"jyukuan"},"content":"   edit-patient ic/S1234567A n/Alice Tan g/F a/321 Jurong Avenue","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1426,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1427,"author":{"gitId":"jyukuan"},"content":"2. Expected output upon success:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1428,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1429,"author":{"gitId":"jyukuan"},"content":"   --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1430,"author":{"gitId":"jyukuan"},"content":"   Patient with NRIC S1234567A updated successfully.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1431,"author":{"gitId":"jyukuan"},"content":"   Edit-patient command executed.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1432,"author":{"gitId":"jyukuan"},"content":"   --------------------------------------------------------------------------------","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1433,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1434,"author":{"gitId":"jyukuan"},"content":"3. Use `view-patient S1234567A` to confirm the updated details.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1435,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1436,"author":{"gitId":"jyukuan"},"content":"---","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1437,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1438,"author":{"gitId":"jyukuan"},"content":"## 3. Testing Medical History Features","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1439,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1440,"author":{"gitId":"jyukuan"},"content":"### 3.1 Store Medical History","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1441,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1442,"author":{"gitId":"jyukuan"},"content":"**Command Format**: `store-history n/NAME ic/NRIC h/HISTORY`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1443,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1444,"author":{"gitId":"jyukuan"},"content":"- `h/HISTORY` can contain multiple entries separated by commas.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1445,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1446,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1447,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1448,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1449,"author":{"gitId":"jyukuan"},"content":"   store-history n/Bob Lee ic/S7654321B h/Diabetes,High cholesterol","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1450,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1451,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1452,"author":{"gitId":"Basudeb2005"},"content":"2. If the patient doesn\u0027t exist, the system creates a new one and prints a confirmation message. If the patient exists, it simply adds new history entries.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1453,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1454,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1455,"author":{"gitId":"jyukuan"},"content":"### 3.2 View Medical History","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1456,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1457,"author":{"gitId":"jyukuan"},"content":"**Command Format**:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1458,"author":{"gitId":"jyukuan"},"content":"1. By NRIC: `view-history ic/NRIC`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1459,"author":{"gitId":"jyukuan"},"content":"2. By Name: `view-history NAME`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1460,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1461,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1462,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1463,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1464,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1465,"author":{"gitId":"jyukuan"},"content":"   view-history ic/S7654321B","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1466,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1467,"author":{"gitId":"Basudeb2005"},"content":"2. Displays the patient\u0027s history if found. Otherwise, notifies you that it cannot find the patient.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1468,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1469,"author":{"gitId":"jyukuan"},"content":"---","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1470,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1471,"author":{"gitId":"jyukuan"},"content":"### 3.3 Edit Medical History","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1472,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1473,"author":{"gitId":"jyukuan"},"content":"**Command Format**: `edit-history ic/NRIC old/OLD_TEXT new/NEW_TEXT`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1474,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1475,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1476,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1477,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1478,"author":{"gitId":"jyukuan"},"content":"   edit-history ic/S7654321B old/Diabetes new/Type 2 Diabetes","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1479,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1480,"author":{"gitId":"jyukuan"},"content":"2. If `old/Diabetes` matches an existing record, the system replaces it with `Type 2 Diabetes` and prints a confirmation message.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1481,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1482,"author":{"gitId":"jyukuan"},"content":"---","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1483,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1484,"author":{"gitId":"jyukuan"},"content":"## 4. Testing Appointment Features","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1485,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1486,"author":{"gitId":"jyukuan"},"content":"### 4.1 Add an Appointment","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1487,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1488,"author":{"gitId":"jyukuan"},"content":"**Command Format**: `add-appointment ic/NRIC dt/DATE t/TIME dsc/DESCRIPTION`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1489,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1490,"author":{"gitId":"jyukuan"},"content":"- Date: `yyyy-MM-dd`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1491,"author":{"gitId":"jyukuan"},"content":"- Time: `HHmm` (24-hour format)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1492,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1493,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1494,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1495,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1496,"author":{"gitId":"jyukuan"},"content":"   add-appointment ic/S1234567A dt/2025-12-01 t/0930 dsc/Dental Checkup","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1497,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1498,"author":{"gitId":"Basudeb2005"},"content":"2. If the patient is found, the system adds the appointment and shows a success message. If the patient doesn\u0027t exist, it prints an error.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1499,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1500,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1501,"author":{"gitId":"jyukuan"},"content":"### 4.2 List Appointments","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1502,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1503,"author":{"gitId":"jyukuan"},"content":"**Command Format**: `list-appointment`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1504,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1505,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1506,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1507,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1508,"author":{"gitId":"jyukuan"},"content":"   list-appointment","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1509,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1510,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1511,"author":{"gitId":"Basudeb2005"},"content":"2. Shows all appointments if any exist. Otherwise, prints a \"No appointments found\" message.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1512,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1513,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1514,"author":{"gitId":"jyukuan"},"content":"### 4.3 Sort Appointments","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1515,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1516,"author":{"gitId":"jyukuan"},"content":"**Command Format**:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1517,"author":{"gitId":"jyukuan"},"content":"1. by date:`sort-appointment byDate`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1518,"author":{"gitId":"jyukuan"},"content":"2. by appointment id: `sort-appointment byId`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1519,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1520,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1521,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1522,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1523,"author":{"gitId":"jyukuan"},"content":"   sort-appointment byDate","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1524,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1525,"author":{"gitId":"jyukuan"},"content":"- Appointments should be sorted chronologically.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1526,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1527,"author":{"gitId":"jyukuan"},"content":"2. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1528,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1529,"author":{"gitId":"jyukuan"},"content":"   sort-appointment byId","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1530,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1531,"author":{"gitId":"jyukuan"},"content":"- Appointments should be sorted by their `Axxx` IDs.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1532,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1533,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1534,"author":{"gitId":"jyukuan"},"content":"### 4.4 Mark and Unmark an Appointment","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1535,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1536,"author":{"gitId":"jyukuan"},"content":"**Command Format**: `mark-appointment APPOINTMENT_ID unmark-appointment APPOINTMENT_ID`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1537,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1538,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1539,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1540,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1541,"author":{"gitId":"jyukuan"},"content":"   mark-appointment A100","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1542,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1543,"author":{"gitId":"jyukuan"},"content":"- The system marks the appointment as done (`[X]`).","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1544,"author":{"gitId":"jyukuan"},"content":"2. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1545,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1546,"author":{"gitId":"jyukuan"},"content":"   unmark-appointment A100","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1547,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1548,"author":{"gitId":"jyukuan"},"content":"- The system reverts the appointment to undone (`[ ]`).","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1549,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1550,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1551,"author":{"gitId":"jyukuan"},"content":"### 4.5 Find an Appointment by NRIC","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1552,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1553,"author":{"gitId":"jyukuan"},"content":"**Command Format**: `find-appointment NRIC`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1554,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1555,"author":{"gitId":"jyukuan"},"content":"**Steps to Test**","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1556,"author":{"gitId":"jyukuan"},"content":"1. Input:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1557,"author":{"gitId":"jyukuan"},"content":"   ``` ","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1558,"author":{"gitId":"jyukuan"},"content":"   find-appointment S1234567A","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1559,"author":{"gitId":"jyukuan"},"content":"   ```","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1560,"author":{"gitId":"Basudeb2005"},"content":"2. If any matching appointment is found, it prints the details. Otherwise, it prints \"No appointment found.\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1561,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1562,"author":{"gitId":"jyukuan"},"content":"---","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1563,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1564,"author":{"gitId":"Basudeb2005"},"content":"## 5. Testing Prescription Management Features","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1565,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":1566,"author":{"gitId":"Basudeb2005"},"content":"### 5.1 Adding a New Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1567,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1568,"author":{"gitId":"Basudeb2005"},"content":"**Command Format**: `add-prescription ic/PATIENT_ID s/SYMPTOMS m/MEDICINES [nt/NOTES]`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1569,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1570,"author":{"gitId":"Basudeb2005"},"content":"- `[nt/NOTES]` is optional and can include special instructions.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1571,"author":{"gitId":"Basudeb2005"},"content":"- Multiple symptoms and medicines can be separated by commas.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1572,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1573,"author":{"gitId":"Basudeb2005"},"content":"**Steps to Test**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1574,"author":{"gitId":"Basudeb2005"},"content":"1. Prerequisites: Patient with ID \"S9876543B\" exists in the system.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1575,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1576,"author":{"gitId":"Basudeb2005"},"content":"2. Input:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1577,"author":{"gitId":"Basudeb2005"},"content":"   ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1578,"author":{"gitId":"Basudeb2005"},"content":"   add-prescription ic/S9876543B s/Fever, Cough m/Paracetamol, Cough syrup nt/Take after meals","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1579,"author":{"gitId":"Basudeb2005"},"content":"   ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1580,"author":{"gitId":"Basudeb2005"},"content":"   * Expected output: Prescription is added. Details of the new prescription shown.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1581,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1582,"author":{"gitId":"Basudeb2005"},"content":"**Additional Test Cases**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1583,"author":{"gitId":"Basudeb2005"},"content":"- **Missing medicines field**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1584,"author":{"gitId":"Basudeb2005"},"content":"  ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1585,"author":{"gitId":"Basudeb2005"},"content":"  add-prescription ic/S9876543B s/Fever m/","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1586,"author":{"gitId":"Basudeb2005"},"content":"  ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1587,"author":{"gitId":"Basudeb2005"},"content":"  * Expected output: Error shown. Missing medicines field.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1588,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1589,"author":{"gitId":"Basudeb2005"},"content":"- **Non-existent patient**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1590,"author":{"gitId":"Basudeb2005"},"content":"  ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1591,"author":{"gitId":"Basudeb2005"},"content":"  add-prescription ic/X1234567Y s/Fever m/Paracetamol","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1592,"author":{"gitId":"Basudeb2005"},"content":"  ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1593,"author":{"gitId":"Basudeb2005"},"content":"  * Expected output: Error shown. Patient ID does not exist.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1594,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1595,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1596,"author":{"gitId":"Basudeb2005"},"content":"### 5.2 Viewing Prescriptions","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1597,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1598,"author":{"gitId":"Basudeb2005"},"content":"**Command Format**: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1599,"author":{"gitId":"Basudeb2005"},"content":"1. View all for a patient: `view-all-prescriptions PATIENT_ID`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1600,"author":{"gitId":"Basudeb2005"},"content":"2. View specific prescription: `view-prescription PRESCRIPTION_ID` ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1601,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1602,"author":{"gitId":"Basudeb2005"},"content":"**Steps to Test**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1603,"author":{"gitId":"Basudeb2005"},"content":"1. Prerequisites: At least one prescription exists for patient \"S9876543B\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1604,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1605,"author":{"gitId":"Basudeb2005"},"content":"2. Input:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1606,"author":{"gitId":"Basudeb2005"},"content":"   ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1607,"author":{"gitId":"Basudeb2005"},"content":"   view-all-prescriptions S9876543B","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1608,"author":{"gitId":"Basudeb2005"},"content":"   ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1609,"author":{"gitId":"Basudeb2005"},"content":"   * Expected output: List of all prescriptions for the patient shown.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1610,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1611,"author":{"gitId":"Basudeb2005"},"content":"3. Input:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1612,"author":{"gitId":"Basudeb2005"},"content":"   ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1613,"author":{"gitId":"Basudeb2005"},"content":"   view-prescription S9876543B-1","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1614,"author":{"gitId":"Basudeb2005"},"content":"   ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1615,"author":{"gitId":"Basudeb2005"},"content":"   * Expected output: Details of the specific prescription shown. HTML file generated.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1616,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1617,"author":{"gitId":"Basudeb2005"},"content":"**Additional Test Cases**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1618,"author":{"gitId":"Basudeb2005"},"content":"- **Invalid prescription ID**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1619,"author":{"gitId":"Basudeb2005"},"content":"  ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1620,"author":{"gitId":"Basudeb2005"},"content":"  view-prescription INVALID-ID","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1621,"author":{"gitId":"Basudeb2005"},"content":"  ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1622,"author":{"gitId":"Basudeb2005"},"content":"  * Expected output: Error shown. Invalid prescription ID.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1623,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1624,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1625,"author":{"gitId":"Basudeb2005"},"content":"### 5.3 Generating HTML Prescriptions","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1626,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1627,"author":{"gitId":"Basudeb2005"},"content":"**Command Format**: `view-prescription PRESCRIPTION_ID`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1628,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1629,"author":{"gitId":"Basudeb2005"},"content":"**Steps to Test**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1630,"author":{"gitId":"Basudeb2005"},"content":"1. Prerequisites: Valid prescription exists with ID \"S9876543B-1\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1631,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1632,"author":{"gitId":"Basudeb2005"},"content":"2. Input:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1633,"author":{"gitId":"Basudeb2005"},"content":"   ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1634,"author":{"gitId":"Basudeb2005"},"content":"   view-prescription S9876543B-1","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1635,"author":{"gitId":"Basudeb2005"},"content":"   ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1636,"author":{"gitId":"Basudeb2005"},"content":"   * Expected output: HTML file generated in data/prescriptions folder.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1637,"author":{"gitId":"Basudeb2005"},"content":"   * Verification: Open the generated HTML file in a browser. Check that all prescription details are correctly displayed.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1638,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1639,"author":{"gitId":"Basudeb2005"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":1640,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1641,"author":{"gitId":"Basudeb2005"},"content":"## 6. Error Handling Scenarios","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1642,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1643,"author":{"gitId":"Basudeb2005"},"content":"- **Unknown Commands**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1644,"author":{"gitId":"Basudeb2005"},"content":"- If you type something invalid like `randomCommand`, the system should respond:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1645,"author":{"gitId":"Basudeb2005"},"content":" ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1646,"author":{"gitId":"Basudeb2005"},"content":" Unknown command. Please try again.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1647,"author":{"gitId":"Basudeb2005"},"content":" ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1648,"author":{"gitId":"Basudeb2005"},"content":"- **Missing or Invalid Parameters**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1649,"author":{"gitId":"Basudeb2005"},"content":"- For instance, `add-appointment` missing the `dt/DATE` should trigger an error message (`InvalidInputFormatException`).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1650,"author":{"gitId":"Basudeb2005"},"content":"- **Storage Failures**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1651,"author":{"gitId":"Basudeb2005"},"content":"- If there\u0027s an I/O error with reading or writing to `patient_data.txt`, you might see `UnloadedStorageException`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1652,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1653,"author":{"gitId":"Basudeb2005"},"content":"---","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1654,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1655,"author":{"gitId":"Basudeb2005"},"content":"## 7. Comprehensive Test Workflow","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1657,"author":{"gitId":"Basudeb2005"},"content":"1. **Add multiple patients** and confirm they appear correctly with `list-patient`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1658,"author":{"gitId":"Basudeb2005"},"content":"2. **Add detailed medical histories** with `store-history`; verify them using `view-history`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1659,"author":{"gitId":"Basudeb2005"},"content":"3. **Add appointments** to different patients and use `list-appointment`, `sort-appointment`, `mark-appointment`, etc. to test appointment functionality.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1660,"author":{"gitId":"Basudeb2005"},"content":"4. **Add prescriptions** to patients and test the prescription view and HTML generation features.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1661,"author":{"gitId":"Basudeb2005"},"content":"5. **Delete a patient** and confirm the removal.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1662,"author":{"gitId":"Basudeb2005"},"content":"6. **Exit** the program with `bye`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1664,"author":{"gitId":"Basudeb2005"},"content":"---","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":1665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"dylancmznus":254,"JudHoka":278,"-":32,"chwenyee":320,"Basudeb2005":408,"jyukuan":373}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"# ClinicEase","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"-":7,"chwenyee":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylancmznus"},"content":"ClinicEase is an application designed to assist doctors in managing patient records and appointments efficiently. It allows the user to add, edit, view, and delete patient information and medical history, as well as schedule and track appointments with ease. With its intuitive command-based interface, ClinicEase ensures smooth and reliable clinic operations.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"## Table of Contents","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"- [Features](#features-)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"    - [Viewing help: `help`](#viewing-help-help)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"    - Managing Patients","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"        - [Adding a new patient: `add-patient`](#adding-a-new-patient--add-patient)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"        - [Deleting a patient: `delete-patient`](#deleting-a-patient--delete-patient)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"        - [Viewing patient details: `view-patient`](#viewing-patient-details-view-patient)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"        - [Listing all patients: `list-patient`](#listing-all-patients-list-patient)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"        - [Editing a specified patient: `edit-patient`](#editing-a-specified-patient-edit-patient)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"    - Managing Appointments","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"        - [Adding an appointment: `add-appointment`](#adding-an-appointment-add-appointment)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"        - [Deleting an appointment: `delete-appointment`](#deleting-an-appointment-delete-appointment)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"        - [Sorting appointments: `sort-appointment`](#sorting-appointments-sort-appointment)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"        - [Marking an appointment as done: `mark-appointment`](#marking-an-appointment-as-done-mark-appointment)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"        - [Unmarking a completed appointment: `unmark-appointment`](#unmarking-a-completed-appointment-unmark-appointment)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"        - [Finding a patient\u0027s appointments: `find-appointment`](#finding-a-patients-appointments-find-appointment)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"    - Managing Prescriptions","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"        - [Adding a prescription: `add-prescription`](#adding-a-prescription-add-prescription)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"        - [Viewing all prescriptions: `view-all-prescriptions`](#viewing-all-prescriptions-view-all-prescriptions)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"        - [Viewing specific prescription: `view-prescription`](#viewing-specific-prescription-view-prescription)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"    - Updating Medical History","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"        - [Adding medical history: `store-history`](#adding-medical-history-store-history)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"        - [Viewing medical history: `view-history`](#viewing-medical-history-view-history)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"        - [Editing medical history: `edit-history`](#editing-medical-history-edit-history)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"    - [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"- [FAQ](#faq)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"- [Known Issues](#known-issues)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"1. Ensure that you have Java 17 or above installed. \u003cbr\u003e ","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed ","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"   [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"2. Download the latest version of `ClinicEase` [here](https://github.com/AY2425S2-CS2113-T11b-4/tp/releases).   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"3. Copy the file to the folder you want to use as the home folder for ClinicEase.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the ","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"   `java -jar ClinicEase.jar` command to run the application.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"5. Type the command in the command box and press Enter to execute it. \u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"   Some example commands you can try:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"   - `add-patient n/John ic/S1234567D dob/2003-04-06 g/M p/91218188 a/123 Main St`: \u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"     Adds a patient named `John` to the patient list.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"   - `delete-patient S1234567D`: Deletes the patient with NRIC `S1234567D` in the patient list. ","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"   - `bye`: Exits the app.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"6. Refer to the Features below for details of each command.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"Here are some feature that the product provides:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"\u003e [!NOTE]","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"\u003e - Words in `UPPER_CASE` represent parameters that must be provided by the user. \u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"    e.g. in `view-patient NRIC`, `NRIC` is a parameter which can be used as `view-patient S1234567D`.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"\u003e - Items in square brackets are optional. \u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"    e.g. `ic/NRIC [n/NAME] [dob/BIRTHDATE]` can be used as `ic/S1234567D n/John` or as `ic/S1234567D dob/2002-06-07`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"\u003e - Every parameter must be supplied by the user. \u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"    e.g. if the command specifies `add-appointment ic/NRIC dt/DATE t/TIME dsc/DESCRIPTION`, the user","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"    must fill in all parameters for the input to be valid.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"\u003e - Parameters could be entered in any order. \u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"    e.g. if the command recommends `ic/NRIC dt/DATE t/TIME dsc/DESCRIPTION`, the user","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"    can also not follow this exact sequence for the input to be valid.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"\u003e - Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will be ignored. \u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"    e.g. if the command specifies `list-patient 12345`, it will be interpreted as `list-patient`.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"\u003e - Command words are **case-insensitive**. \u003cbr\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"    e.g. `liST-paTIEnt` will be interpreted as `list-patient`.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"### Viewing help: `help`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"Shows all available commands of the application.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"Format \u0026 Example of Usage: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"`help`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JudHoka"},"content":"These are the available commands:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"Patient: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"- add-patient n/NAME ic/NRIC dob/BIRTHDATE g/GENDER p/PHONE a/ADDRESS","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JudHoka"},"content":"- delete-patient NRIC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JudHoka"},"content":"- edit-patient ic/NRIC [n/NAME] [dob/BIRTHDATE] [g/GENDER] [a/ADDRESS] [p/PHONE]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JudHoka"},"content":"- list-patient","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"- view-patient NRIC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JudHoka"},"content":"- store-history n/NAME ic/NRIC h/MEDICAL_HISTORY","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JudHoka"},"content":"- view-history NRIC or view-history NAME","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"- edit-history ic/NRIC old/OLD_TEXT new/NEW_TEXT","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JudHoka"},"content":"Appointment: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JudHoka"},"content":"- add-appointment ic/NRIC dt/DATE t/TIME dsc/DESCRIPTION","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JudHoka"},"content":"- delete-appointment APPOINTMENT_ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JudHoka"},"content":"- list-appointment","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JudHoka"},"content":"- mark-appointment APPOINTMENT_ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JudHoka"},"content":"- unmark-appointment APPOINTMENT_ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JudHoka"},"content":"- sort-appointment byDate or sort-appointment byId","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JudHoka"},"content":"- find-appointment PATIENT_NRIC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JudHoka"},"content":"Prescription: ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JudHoka"},"content":"- add-prescription ic/PATIENT_ID s/SYMPTOMS m/MEDICINES [nt/NOTES]","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JudHoka"},"content":"- view-all-prescriptions PATIENT_ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JudHoka"},"content":"- view-prescription PRESCRIPTION_ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JudHoka"},"content":"### Adding a new patient : `add-patient`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JudHoka"},"content":"Adds a new patient to the system with their credentials.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JudHoka"},"content":"Format: `add-patient n/NAME ic/NRIC dob/BIRTHDATE g/GENDER p/PHONE a/ADDRESS h/MEDICAL_HISTORY`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"* The `NRIC` must be unique to the existing ones in the system.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JudHoka"},"content":"* All inputs doesn\u0027t handle every ASCII characters, only alphabets and numbers.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JudHoka"},"content":"* `h/MEDICAL_HISTORY` is optional, so users can use add-patient without it.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JudHoka"},"content":"* `p/PHONE` \u0026 `a/ADDRESS` can be duplicate, since some patient may be represented by the same phone number and/or address.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JudHoka"},"content":"Example of usage: ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JudHoka"},"content":"`add-patient n/John Doe ic/S1234567D dob/1999-12-12 g/M p/98765432 a/123 Main Street h/Diabetes, Hypertension`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e---------------------------------------------------------------------------------------------------- ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JudHoka"},"content":"Patient added successfully: John Doe ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JudHoka"},"content":"---------------------------------------------------------------------------------------------------- \u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JudHoka"},"content":"### Deleting a patient : `delete-patient`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JudHoka"},"content":"Deletes an existing patient in the system.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JudHoka"},"content":"Format: `delete-patient NRIC`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JudHoka"},"content":"* The `NRIC` must be of a patient existing in the system.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JudHoka"},"content":"Example of usage:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JudHoka"},"content":"`delete-patient S1234567D`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e---------------------------------------------------------------------------------------------------- ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JudHoka"},"content":"Patient deleted successfully: John Doe","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JudHoka"},"content":"---------------------------------------------------------------------------------------------------- \u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dylancmznus"},"content":"### Viewing patient details: `view-patient`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dylancmznus"},"content":"Displays the details of a specific patient.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dylancmznus"},"content":"Format: `view-patient NRIC`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dylancmznus"},"content":"* The `NRIC` must be of a patient existing in the system.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dylancmznus"},"content":"Example of usage:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dylancmznus"},"content":"`view-patient S1234567D`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JudHoka"},"content":"Expected Output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e------------------------------------------Patient Details------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JudHoka"},"content":"Patient NRIC: S1234567D","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JudHoka"},"content":"Name: John Doe","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JudHoka"},"content":"Date of Birth: 1999-12-12","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JudHoka"},"content":"Gender: M","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JudHoka"},"content":"Address: 123 Main Street","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JudHoka"},"content":"Contact: 98765432","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JudHoka"},"content":"Medical History: Diabetes, Hypertension","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JudHoka"},"content":"Appointments: None","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dylancmznus"},"content":"### Listing all patients: `list-patient`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dylancmznus"},"content":"Displays a list of all registered patients in the system with details provided.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"dylancmznus"},"content":"Format: `list-patient`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"dylancmznus"},"content":"Example of usage:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"dylancmznus"},"content":"`list-patient`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JudHoka"},"content":"Expected Output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e------------------------------------------Patient Details------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JudHoka"},"content":"1. Patient NRIC: S1234567D","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JudHoka"},"content":"   Name: John Doe","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JudHoka"},"content":"   Date of Birth: 1999-12-12","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JudHoka"},"content":"   Gender: M","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JudHoka"},"content":"   Address: 123 Main Street","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JudHoka"},"content":"   Contact: 98765432","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JudHoka"},"content":"   Medical History:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JudHoka"},"content":"   - Diabetes","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JudHoka"},"content":"   - Hypertension","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JudHoka"},"content":"   Appointments: None","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JudHoka"},"content":"2. Patient NRIC: S8765432F","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JudHoka"},"content":"   Name: Jane Donna","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JudHoka"},"content":"   Date of Birth: 2000-05-19","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JudHoka"},"content":"   Gender: F","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JudHoka"},"content":"   Address: 546 Main Street","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JudHoka"},"content":"   Contact: 91209310","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JudHoka"},"content":"   Medical History:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JudHoka"},"content":"   - Cough","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JudHoka"},"content":"   Appointments: None","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"chwenyee"},"content":"### Editing a specified patient: `edit-patient`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JudHoka"},"content":"Edits a specific patient credentials by NRIC.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"JudHoka"},"content":"Format: `edit-patient ic/NRIC ATTRIBUTE`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"chwenyee"},"content":"* The `NRIC` must be of a patient existing in the system.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"JudHoka"},"content":"* The `ATTRIBUTE` can possibly be between `n/NAME`, `dob/BIRTHDATE`, `g/GENDER`, `a/ADDRESS`, or `p/PHONE` ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"chwenyee"},"content":"Example of usage:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JudHoka"},"content":"`edit-patient ic/S1234567D p/91238989` or `edit-patient ic/S1234567D dob/1945-08-17`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003ePatient with NRIC S1234567D updated successfully. ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"JudHoka"},"content":"Edit-patient command executed.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"JudHoka"},"content":"---------------------------------------------------------------------------------------------------- \u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"chwenyee"},"content":"### Adding an appointment: `add-appointment`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"chwenyee"},"content":"Adds a new appointment to the list of appointment.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"chwenyee"},"content":"Format: `add-appointment ic/NRIC dt/DATE t/TIME dsc/DESCRIPTION`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"chwenyee"},"content":"* The patient with the specified `NRIC` **must** exist in the system.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"chwenyee"},"content":"* `DATE` format: `yyyy-MM-dd`, where `yyyy` is year, `MM` is month,","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"chwenyee"},"content":"  `dd` is day (e.g., `2025-03-31`).  ","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"chwenyee"},"content":"* `TIME` format: `HHmm` in 24-hour format (e.g., `1430` for 2:30 PM).","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"chwenyee"},"content":"* `DATE` and `TIME` **must not** be **before current date/time**.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"chwenyee"},"content":"* The new appointment will only be added if it does not clash with the others.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"chwenyee"},"content":"`add-appointment ic/S1234567D dt/2025-03-31 t/1200 dsc/Annual checkup`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"JudHoka"},"content":"Appointment added for NRIC: S1234567D on 2025-03-31 at 12:00 PM.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"JudHoka"},"content":"Now you have 1 appointment(s) in the list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"chwenyee"},"content":"### Deleting an appointment: `delete-appointment`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"chwenyee"},"content":"Deletes a specified appointment from the appointment list.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"chwenyee"},"content":"Format: `delete-appointment APPOINTMENT_ID`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"chwenyee"},"content":"* The `APPOINTMENT_ID` refers to the unique identifier assigned by the program (e.g., \"A1XX\") to an appointment.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"chwenyee"},"content":"* The `APPOINTMENT_ID` can be found in the displayed appointment list when using the list-appointment command.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"chwenyee"},"content":"`delete-appointment A100`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"JudHoka"},"content":"Appointment A100 is deleted successfully.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"JudHoka"},"content":"Now you have 0 appointment(s) in the list.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"chwenyee"},"content":"### Sorting appointments: `sort-appointment`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"chwenyee"},"content":"Sorts the appointments in the appointment list.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"chwenyee"},"content":"Format: `sort-appointment byDate` or `sort-appointment byId`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"chwenyee"},"content":"* The `sort-appointment byDate` sorts the appointments by date and time in **ascending order**. ","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"chwenyee"},"content":"* The `sort-appointment byId` sorts the appointments by `APPOINTMENT_ID` in **ascending order**.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"chwenyee"},"content":"Example of usage:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"chwenyee"},"content":"* `sort-appointment byDate`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"chwenyee"},"content":"* `sort-appointment byId`","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"chwenyee"},"content":"Expected output of `sort-appointment byDate`: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e-------------------------------------------Appointments---------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"JudHoka"},"content":"1. [A101][ ] - S1234567D - 2025-03-31 12:00 PM - Annual checkup","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"JudHoka"},"content":"2. [A102][ ] - S1234567D - 2025-04-30 2:00 PM - Annual checkup","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"dylancmznus"},"content":"### Marking an appointment as done: `mark-appointment`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"dylancmznus"},"content":"Marks a specified appointment as done.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"dylancmznus"},"content":"Format: `mark-appointment APPOINTMENT_ID`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"dylancmznus"},"content":"* The `APPOINTMENT_ID` refers to the unique identifier assigned by the system to an appointment.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"dylancmznus"},"content":"* A completed appointment will be marked accordingly in the system.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"dylancmznus"},"content":"Example of usage:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"dylancmznus"},"content":"`mark-appointment A100`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"JudHoka"},"content":"Appointment A101 is marked successfully.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"dylancmznus"},"content":"### Unmarking a completed appointment: `unmark-appointment`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"dylancmznus"},"content":"Unmarks a completed appointment, setting it back to pending.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"dylancmznus"},"content":"Format: `unmark-appointment APPOINTMENT_ID`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"dylancmznus"},"content":"* The `APPOINTMENT_ID` must belong to an appointment that has been marked as completed.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"dylancmznus"},"content":"Example of usage:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"dylancmznus"},"content":"`unmark-appointment A100`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"JudHoka"},"content":"Appointment A101 is unmarked successfully.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"dylancmznus"},"content":"### Finding a patient\u0027s appointments: `find-appointment`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"dylancmznus"},"content":"Searches for appointments based on the patient\u0027s NRIC.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"dylancmznus"},"content":"Format: `find-appointment NRIC`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"dylancmznus"},"content":"* The `NRIC` must match a registered patient’s NRIC in the system.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"dylancmznus"},"content":"* All appointments associated with the specified NRIC will be displayed.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"dylancmznus"},"content":"Example of usage:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"chwenyee"},"content":"`find-appointment S1234567D`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"JudHoka"},"content":" Appointments found for NRIC: S1234567D","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"JudHoka"},"content":" - [A101][ ] - S1234567D - 2025-03-31 12:00 PM - Annual checkup","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"JudHoka"},"content":" - [A102][ ] - S1234567D - 2025-04-30 2:00 PM - Annual checkup","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"JudHoka"},"content":"### Adding a prescription: `add-prescription`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Basudeb2005"},"content":"Adds a new prescription for a patient.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Basudeb2005"},"content":"Format: `add-prescription ic/PATIENT_ID s/SYMPTOMS m/MEDICINES [nt/NOTES]`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Basudeb2005"},"content":"* `PATIENT_ID` must be a valid patient ID in the system","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Basudeb2005"},"content":"* `SYMPTOMS` is a comma-separated list of symptoms","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Basudeb2005"},"content":"* `MEDICINES` is a comma-separated list of prescribed medications","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Basudeb2005"},"content":"* `NOTES` is optional and can contain special instructions","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"JudHoka"},"content":"Example of usage:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"JudHoka"},"content":"`add-prescription ic/S9876543B s/Fever, Cough m/Paracetamol, Cough syrup nt/Take after meals`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"JudHoka"},"content":"Successfully added prescription:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"JudHoka"},"content":"Prescription [S1234567D-1] (2025-04-05 18:52)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"JudHoka"},"content":"Patient ID: S1234567D","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"JudHoka"},"content":"Symptoms: ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"JudHoka"},"content":"- Fever","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"JudHoka"},"content":"- Cough","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"JudHoka"},"content":"Medicines: ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"JudHoka"},"content":"- Paracetamol","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"JudHoka"},"content":"- Cough syrup","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"JudHoka"},"content":"Notes: Take after meals","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"JudHoka"},"content":"Prescription has been generated.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"JudHoka"},"content":"View the prescription for the patient with ID: S1234567D","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"JudHoka"},"content":"and prescription ID: S1234567D-1","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"JudHoka"},"content":"### Viewing all prescriptions: `view-all-prescriptions`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Basudeb2005"},"content":"Shows all prescriptions for a specific patient.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"JudHoka"},"content":"Format: `view-all-prescriptions NRIC`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"JudHoka"},"content":"`NRIC` must be an existing patient in the system","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"JudHoka"},"content":"Example of Usage:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"JudHoka"},"content":"`view-all-prescriptions S9876543B`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"JudHoka"},"content":"Prescriptions for patient John Doe (S1234567D):","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"JudHoka"},"content":"Prescription ID: S1234567D-1","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"JudHoka"},"content":"Date: 2025-04-05 18:52","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"JudHoka"},"content":"Symptoms:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"JudHoka"},"content":"- Fever","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"JudHoka"},"content":"- Cough","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"JudHoka"},"content":"Medicines:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"JudHoka"},"content":"- Paracetamol","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"JudHoka"},"content":"- Cough syrup","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"JudHoka"},"content":"Notes: Take after meals","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"JudHoka"},"content":"Prescription ID: S1234567D-2","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"JudHoka"},"content":"Date: 2025-04-05 19:08","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"JudHoka"},"content":"Symptoms:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"JudHoka"},"content":"- Sore throat","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"JudHoka"},"content":"Medicines:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"JudHoka"},"content":"- Cough pills","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"JudHoka"},"content":"Notes: Take 3 times a day","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"JudHoka"},"content":"Total prescriptions: 2","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"JudHoka"},"content":"Use \u0027view-prescription PRESCRIPTION_ID\u0027 to view details and generate HTML.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"JudHoka"},"content":"### Viewing specific prescription: `view-prescription`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"Basudeb2005"},"content":"Views details of a specific prescription and generates a printable HTML version.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"Basudeb2005"},"content":"Format: `view-prescription PRESCRIPTION_ID`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"JudHoka"},"content":"* `PRESCRIPTION_ID` must be existent in the system","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"Basudeb2005"},"content":"* The HTML file will be generated in the data/prescriptions folder","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"Basudeb2005"},"content":"* Open the HTML file in a web browser to view and print","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"JudHoka"},"content":"Example of usage:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"JudHoka"},"content":"`view-prescription S9876543B-1`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"JudHoka"},"content":"Prescription details:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"JudHoka"},"content":"Prescription [S1234567D-1] (2025-04-05 18:52)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"JudHoka"},"content":"Patient ID: S1234567D","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"JudHoka"},"content":"Symptoms: ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"JudHoka"},"content":"- Fever","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"JudHoka"},"content":"- Cough","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"JudHoka"},"content":"Medicines: ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"JudHoka"},"content":"- Paracetamol","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"JudHoka"},"content":"- Cough syrup","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"JudHoka"},"content":"Notes: Take after meals","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"JudHoka"},"content":"Prescription HTML file generated at: C:\\Users\\Judha Hoka Wishika\\Downloads\\tp_personal\\data\\prescriptions\\prescription_S1234567D_1.html","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"JudHoka"},"content":"Open this file in a web browser to view and print the prescription.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"jyukuan"},"content":"### Adding Medical History: `store-history`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"jyukuan"},"content":"Adds one or more entries to a patient\u0027s medical history.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"JudHoka"},"content":"Format: `store-history n/NAME ic/NRIC h/HISTORY_ENTRY1, HISTORY_ENTRY2, ...`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"JudHoka"},"content":"* The `NRIC` must be of a patient existing in the system.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"JudHoka"},"content":"* Use commas to separate multiple history entries.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"JudHoka"},"content":"Examples of usage:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"JudHoka"},"content":"`store-history n/Alex Tan ic/S1234567A h/Coughing, Swelling on left leg`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"JudHoka"},"content":"Medical history added for John Doe (NRIC: S1234567D).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"jyukuan"},"content":"### Viewing Medical History: `view-history`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"jyukuan"},"content":"Displays medical history of a patient by NRIC or name.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"jyukuan"},"content":"**Format:**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"jyukuan"},"content":"`view-history NRIC` or","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"jyukuan"},"content":"`view-history NAME`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"jyukuan"},"content":"**Examples:**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"jyukuan"},"content":"- `view-history S1234567A`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"chwenyee"},"content":"- `view-history Alex Tan`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"JudHoka"},"content":"Medical History for John Doe (NRIC: S1234567D):","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"JudHoka"},"content":"- Diabetes","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"JudHoka"},"content":"- Hypertension`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"JudHoka"},"content":"- Coughing","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"JudHoka"},"content":"- Swelling on left leg","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"jyukuan"},"content":"### Editing Medical History: `edit-history`","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"jyukuan"},"content":"Modifies a specific entry in a patient’s medical history.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"JudHoka"},"content":"Format: `edit-history ic/NRIC old/OLD_HISTORY_ENTRY new/NEW_HISTORY_ENTRY`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"jyukuan"},"content":"- NRIC must match an existing patient record.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"jyukuan"},"content":"- All history entries are stored as simple strings.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"jyukuan"},"content":"- Viewing by name will display all patients with the given name.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"jyukuan"},"content":"- Editing only replaces the **first matched** old entry.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"JudHoka"},"content":"Example of usage:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"chwenyee"},"content":"`edit-history ic/S1234567A old/Diabetes new/Type 2 Diabetes`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"JudHoka"},"content":"Expected output:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"JudHoka"},"content":"\u003cpre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"JudHoka"},"content":"Replaced old history \"Diabetes\" with \"Type 2 Diabetes\".","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"JudHoka"},"content":"Edit-history command executed.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"JudHoka"},"content":"----------------------------------------------------------------------------------------------------\u003c/pre\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"chwenyee"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"chwenyee"},"content":"Exits the program.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"JudHoka"},"content":"Format: `bye`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"JudHoka"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"chwenyee"},"content":"**Q**: How do I save my data?","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"chwenyee"},"content":"**A**: ClinicEase\u0027s data, i.e. patients, appointments and prescriptions, are saved in the hard disk automatically after any command that changes the data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"chwenyee"},"content":"There is no need to save manually.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"chwenyee"},"content":"**Q**: Can I edit the data file e.g. `patient_data.txt`?","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"chwenyee"},"content":"**A**: ClinicEase\u0027s data are saved automatically as a text file at [your current directory in Command Prompt]/data/[patient_data/appointment_data/prescription_data].txt. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"chwenyee"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"chwenyee"},"content":"**A**: You can copy the \u0027data\u0027 folder and paste it in the directory that you save your jar file in another computer. ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"chwenyee"},"content":"\u003e **CAUTION:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"chwenyee"},"content":"\u003e - If your changes to the data file makes its format invalid, ClinicEase will skip that row.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"chwenyee"},"content":"\u003e - Consequently, that row of data will not be loaded.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"chwenyee"},"content":"\u003e - Therefore, only edit the data file if you are confident in making the correct updates.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"chwenyee"},"content":"--- ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"chwenyee"},"content":"## Known Issues","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"chwenyee"},"content":"1. **Command-Parameter Parsing Issue**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"chwenyee"},"content":"   When users input commands without a space between the command word and parameters (e.g., `add-appointmentic/` instead of `add-appointment ic/`), ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"chwenyee"},"content":"   the system incorrectly treats this as an unknown command rather than identifying it as a valid command with incorrect formatting. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"chwenyee"},"content":"   - **Cause:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"chwenyee"},"content":"   This behavior is due to from the current parser implementation\u0027s strict space-delimited tokenization logic in the initial input splitting phase.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"chwenyee"},"content":"   - **Impact:** The system cannot recognize the intended valid command, provide appropriate format-suggestion error messages.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"chwenyee"},"content":"   - **Current Resolution:** This is an intended design trade-off to maintain parsing consistency, though it may be revisited in future versions.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"chwenyee"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"chwenyee"},"content":"| Action                     | Format, Examples                                                                                                                                                                               |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"chwenyee"},"content":"|----------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"chwenyee"},"content":"| Add patient                | `add-patient n/NAME ic/NRIC dob/BIRTHDATE g/GENDER p/PHONE a/ADDRESS`\u003cbr/\u003e e.g. `add-patient n/John Doe ic/S1234567D dob/1999-12-12 g/M p/98765432 a/123 Main Street h/Diabetes, Hypertension` |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"chwenyee"},"content":"| Delete patient             | `delete-patient NRIC`\u003cbr/\u003e e.g. `delete-patient S1234567D`                                                                                                                                     |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"chwenyee"},"content":"| Edit patient               | `edit-patient ic/NRIC [n/NAME] [dob/BIRTHDATE] [g/GENDER] [a/ADDRESS] [p/PHONE]`\u003cbr/\u003e e.g. `edit-patient ic/S1234567D n/Billy Joe dob/1999-12-21`                                              |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"chwenyee"},"content":"| List patient               | `list-patient`                                                                                                                                                                                 |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"chwenyee"},"content":"| View patient               | `view-patient NRIC`\u003cbr/\u003e e.g. `view-patient S1234567D`                                                                                                                                         |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"chwenyee"},"content":"| Store medical history      | `store-history n/NAME ic/NRIC h/MEDICAL_HISTORY`\u003cbr/\u003e e.g. `store-history n/John Doe ic/S1234567D h/Depression`                                                                                |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"chwenyee"},"content":"| View medical history       | `view-history NRIC` or `view-history NAME`\u003cbr/\u003e e.g. `view-history S1234567D` or `view-history John Doe`                                                                                       |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"chwenyee"},"content":"| Edit medical history       | `edit-history ic/NRIC old/OLD_TEXT new/NEW_TEXT`\u003cbr/\u003e e.g. `edit-history ic/S1234567D old/Depression new/Obesity`                                                                              |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"chwenyee"},"content":"| Add appointment            | `add-appointment ic/NRIC dt/DATE t/TIME dsc/DESCRIPTION`\u003cbr/\u003e e.g. `add-appointment ic/S1234567D dt/2025-06-15 t/1400 dsc/Annual Checkup`                                                      |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"chwenyee"},"content":"| Delete appointment         | `delete-appointment APPOINTMENT_ID`\u003cbr/\u003e e.g. `delete-appointment A123`                                                                                                                        |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"chwenyee"},"content":"| List appointment           | `list-appointment`                                                                                                                                                                             |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"chwenyee"},"content":"| Mark appointment           | `mark-appointment APPOINTMENT_ID`\u003cbr/\u003e e.g. `mark-appointment A101`                                                                                                                            |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"chwenyee"},"content":"| Unmark appointment         | `unmark-appointment APPOINTMENT_ID`\u003cbr/\u003e e.g. `unmark-appointment A101`                                                                                                                        |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"chwenyee"},"content":"| Sort appointment           | `sort-appointment byDate` or `sort-appointment byId`                                                                                                                                           |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"chwenyee"},"content":"| Find appointment           | `find-appointment PATIENT_NRIC`\u003cbr/\u003e e.g. `find-appointment S1234567D`                                                                                                                         |","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"chwenyee"},"content":"| Add prescription           | `add-prescription ic/PATIENT_ID s/SYMPTOMS m/MEDICINES [nt/NOTES]`                                                                                                                             |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"chwenyee"},"content":"| View all prescriptions     | `view-all-prescriptions PATIENT_ID`                                                                                                                                                            |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"chwenyee"},"content":"| View specific prescription | `view-prescription PRESCRIPTION_ID`                                                                                                                                                            |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"dylancmznus":51,"JudHoka":284,"-":35,"chwenyee":163,"Basudeb2005":29,"jyukuan":28}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"@startuml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"actor User","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"package \"ClinicEase\"{","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"component UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"component Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"component Command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"component Manager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"component Object","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"component Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"component Main","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"database FileSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"User --\u003e UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"UI ..\u003e Object","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"Main --\u003e UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"Main ..\u003eCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"Main --\u003e Manager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"Main --\u003e Storage","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"Main ..\u003e Object","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"Parser ..\u003e Command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"Parser ..\u003e Object","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"Command --\u003e Object","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"Command ..\u003e UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"Command ..\u003e Manager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"Command ..\u003e Storage","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"Manager --\u003e Object","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"Manager \u003c..\u003e Storage","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"Storage ..\u003e Object","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"Storage ..\u003e Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"Storage --\u003e FileSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"@enduml","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"JudHoka":20,"Basudeb2005":15}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"@startuml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"actor User","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"participant \":UI\" as UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"participant \":DeletePatientCommand\" as Command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"participant \":ManagementSystem\" as Management","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"User -\u003e UI : \"delete-patient S1234567A\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"activate UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"UI -\u003e Parser : parse(\"delete-patient S1234567A\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"activate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"Parser -\u003e Parser : parseDeletePatient(userInput)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"Parser --\u003e UI : new DeletePatientCommand(\"S1234567A\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"deactivate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"UI -\u003e Command : execute(manager, ui)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"activate Command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"Command -\u003e Management : deletePatient(\"S1234567A\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"activate Management","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"Management -\u003e Storage : savePatients(patients)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"activate Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"Storage --\u003e Management","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"deactivate Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"Management --\u003e Command : removedPatient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"deactivate Management","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"Command -\u003e UI : showPatientDeleted(removedPatient, \"S1234567A\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"activate UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"UI --\u003e Command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"deactivate UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"Command --\u003e UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"deactivate Command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"UI --\u003e User","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"deactivate UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"@enduml ","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":44}},{"path":"docs/diagrams/Command.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jyukuan"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jyukuan"},"content":"skinparam componentStyle rectangle","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jyukuan"},"content":"hide circle","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jyukuan"},"content":"left to right direction","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jyukuan"},"content":"skinparam ranksep 30","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jyukuan"},"content":"skinparam nodesep 20","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jyukuan"},"content":"package \"Commands\" {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jyukuan"},"content":"  abstract class Command {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jyukuan"},"content":"  class AddAppointmentCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jyukuan"},"content":"    - appointment : Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jyukuan"},"content":"    +AddAppointmentCommand(appointment : Appointment)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jyukuan"},"content":"  class AddPatientCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jyukuan"},"content":"    - patient : Patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jyukuan"},"content":"    +AddPatientCommand(patient : Patient)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jyukuan"},"content":"  class AddPrescriptionCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jyukuan"},"content":"    - prescription : Prescription","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jyukuan"},"content":"    +AddPrescriptionCommand(prescription : Prescription)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jyukuan"},"content":"  class DeleteAppointmentCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jyukuan"},"content":"    - apptId : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jyukuan"},"content":"    +DeleteAppointmentCommand(apptId : String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jyukuan"},"content":"  class DeletePatientCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jyukuan"},"content":"    - nric : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jyukuan"},"content":"    +DeletePatientCommand(nric : String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jyukuan"},"content":"  class EditPatientCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jyukuan"},"content":"    - details : String[]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jyukuan"},"content":"    +EditPatientCommand(details : String[])","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jyukuan"},"content":"  class EditPatientHistoryCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jyukuan"},"content":"    - details : String[]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jyukuan"},"content":"    +EditPatientHistoryCommand(details : String[])","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jyukuan"},"content":"  class ExitCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jyukuan"},"content":"    +ExitCommand()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jyukuan"},"content":"  class FindAppointmentCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jyukuan"},"content":"    - nric : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jyukuan"},"content":"    +FindAppointmentCommand(nric : String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jyukuan"},"content":"  class HelpCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jyukuan"},"content":"    +HelpCommand()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jyukuan"},"content":"  class ListAppointmentCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jyukuan"},"content":"    +ListAppointmentCommand()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jyukuan"},"content":"  class ListPatientCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jyukuan"},"content":"    +ListPatientCommand()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jyukuan"},"content":"  class MarkApppointmentCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jyukuan"},"content":"    - apptId : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jyukuan"},"content":"    +MarkApppointmentCommand(apptId : String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jyukuan"},"content":"  class SortAppointmentCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jyukuan"},"content":"    - type : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jyukuan"},"content":"    +SortAppointmentCommand(type : String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jyukuan"},"content":"  class StoreMedHistoryCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jyukuan"},"content":"    - nric : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jyukuan"},"content":"    - medHistory : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jyukuan"},"content":"    +StoreMedHistoryCommand(details : String[])","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jyukuan"},"content":"  class UnmarkAppointmentCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jyukuan"},"content":"    - apptId : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jyukuan"},"content":"    +UnmarkAppointmentCommand(apptId : String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jyukuan"},"content":"  class ViewAllPrescriptionsCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jyukuan"},"content":"    - patientId : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jyukuan"},"content":"    +ViewAllPrescriptionsCommand(patientId : String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jyukuan"},"content":"  class ViewMedHistoryCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jyukuan"},"content":"    - type : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jyukuan"},"content":"    - nameOrIc : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jyukuan"},"content":"    +ViewMedHistoryCommand(details : String[])","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jyukuan"},"content":"  class ViewPatientCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jyukuan"},"content":"    - nric : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jyukuan"},"content":"    +ViewPatientCommand(nric : String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jyukuan"},"content":"  class ViewPrescriptionCommand {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jyukuan"},"content":"    - prescriptionId : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jyukuan"},"content":"    +ViewPrescriptionCommand(prescriptionId : String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jyukuan"},"content":"    +execute(manager: ManagementSystem, ui: Ui) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jyukuan"},"content":"    +isExit() : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jyukuan"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- AddAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- AddPatientCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- AddPrescriptionCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- DeleteAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- DeletePatientCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- EditPatientCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- EditPatientHistoryCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- ExitCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- FindAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- HelpCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- ListAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- ListPatientCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- MarkApppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- SortAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- StoreMedHistoryCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- UnmarkAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- ViewAllPrescriptionsCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- ViewMedHistoryCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- ViewPatientCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jyukuan"},"content":"  Command \u003c|-- ViewPrescriptionCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jyukuan"},"content":"  AddAppointmentCommand -[hidden]-\u003e FindAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jyukuan"},"content":"  AddPatientCommand -[hidden]-\u003e HelpCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jyukuan"},"content":"  AddPrescriptionCommand -[hidden]-\u003e ListAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jyukuan"},"content":"  DeleteAppointmentCommand -[hidden]-\u003e ListPatientCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jyukuan"},"content":"  DeletePatientCommand -[hidden]-\u003e MarkApppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jyukuan"},"content":"  EditPatientCommand -[hidden]-\u003e SortAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jyukuan"},"content":"  EditPatientHistoryCommand -[hidden]-\u003e StoreMedHistoryCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jyukuan"},"content":"  ExitCommand -[hidden]-\u003e UnmarkAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jyukuan"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jyukuan"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"jyukuan":184}},{"path":"docs/diagrams/addAppointmentSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"hide footbox","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"actor User","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"participant \":ClinicEase\" as ClinicEase","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"participant \":Appointment\" as Appointment","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"participant \":AddAppointmentCommand\" as AddAppointmentCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"participant \":ManagementSystem\" as ManagementSystem","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"User -\u003e ClinicEase : enter input","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"activate ClinicEase","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"ClinicEase -\u003e Parser : parse(input)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"activate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"Parser -\u003e Parser : parseAddAppointment(userInput)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"activate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"Parser -\u003e Parser : extractValue(userInput)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"activate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"note right of Parser:  extractValue is called separately \\n (not in a loop) to parse input and extract each parameter \\n: NRIC, date, time, and description","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"Parser --\u003e Parser : :String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"deactivate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"create Appointment","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"Parser -\u003e Appointment : new Appointment()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"activate Appointment","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"Appointment --\u003e Parser : appt :Appointment","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"deactivate Appointment","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"Parser --\u003e Parser : appt :Appointment","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"deactivate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"create AddAppointmentCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"Parser -\u003e AddAppointmentCommand : new AddAppointmentCommand(appt)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"AddAppointmentCommand --\u003e Parser : :AddAppointmentCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"Parser --\u003e ClinicEase : :AddAppointmentCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"deactivate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"ClinicEase -\u003e AddAppointmentCommand : execute()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"AddAppointmentCommand -\u003e ManagementSystem : addAppointment(appointment)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"activate ManagementSystem","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"ManagementSystem -\u003e ManagementSystem : findPatientByNRIC()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"activate ManagementSystem","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"ManagementSystem -\u003e Appointment : getNric()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"activate Appointment","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"Appointment --\u003e ManagementSystem : nric :String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"deactivate Appointment","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"ManagementSystem --\u003e ManagementSystem : nric :String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"deactivate ManagementSystem","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"ManagementSystem -\u003e Storage : saveAppointments()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"activate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"Storage --\u003e ManagementSystem :","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"deactivate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"ManagementSystem --\u003e AddAppointmentCommand :","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"deactivate ManagementSystem","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"AddAppointmentCommand --\u003e ClinicEase :","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"ClinicEase --\u003e User : display message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"deactivate ClinicEase","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"chwenyee":71}},{"path":"docs/diagrams/addPatientSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"hide footbox","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"participant \":ClinicEase\" as ClinicEase","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"participant \":AddPatientCommand\" as AddPatientCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"participant \":ManagementSystem\" as ManagementSystem","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"participant \":Patient\" as Patient","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"ClinicEase -\u003e Parser : parse(input)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"activate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"Parser -\u003e Parser : parseAddPatient(userInput)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"activate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"Parser -\u003e Parser : extractValue(userInput)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"activate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"note right of Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"  extractValue is called multiple times\\n","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"  to get name, nric, dob, gender,\\n","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"  address, and phone","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"end note","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"Parser --\u003e Parser : :String[]","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"deactivate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"create AddPatientCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"Parser -\u003e AddPatientCommand : new AddPatientCommand(String[])","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"activate AddPatientCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"AddPatientCommand --\u003e Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"deactivate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"Parser --\u003e ClinicEase : :AddPatientCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"deactivate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"ClinicEase -\u003e AddPatientCommand : execute()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"activate AddPatientCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"AddPatientCommand -\u003e ManagementSystem : addPatient(details)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"activate ManagementSystem","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"ManagementSystem -\u003e ManagementSystem : check if NRIC exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"alt NRIC already exists","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"    ManagementSystem --\u003e AddPatientCommand : Error message","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"else Else","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"    create Patient","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"    ManagementSystem -\u003e Patient : new Patient(...)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"    activate Patient","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"    Patient --\u003e ManagementSystem :","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"    deactivate Patient","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"    ManagementSystem -\u003e ManagementSystem : add patient to HashMap","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"    ManagementSystem -\u003e Storage : savePatients(patients)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"    activate Storage","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"    Storage --\u003e ManagementSystem :","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"    deactivate Storage","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"    ManagementSystem --\u003e AddPatientCommand :","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"    deactivate AddPatientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"    deactivate ManagementSystem","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"end","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"AddPatientCommand --\u003e ClinicEase :","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"deactivate AddPatientCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"JudHoka":60}},{"path":"docs/diagrams/deleteAppointmentSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"@startuml","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"hide footbox","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"actor User","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"participant \":ClinicEase\" as ClinicEase","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"participant \":DeleteAppointmentCommand\" as DeleteAppointmentCommand","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"participant \":ManagementSystem\" as ManagementSystem","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"participant \":Appointment\" as Appointment","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"User -\u003e ClinicEase : enter input","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"activate ClinicEase","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"ClinicEase -\u003e Parser : parse(input)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"activate Parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"Parser -\u003e Parser : parseDeleteAppointment(userInput)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"activate Parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"Parser --\u003e Parser : apptId :String","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"deactivate Parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"create DeleteAppointmentCommand","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"Parser -\u003e DeleteAppointmentCommand : new DeleteAppointmentCommand(apptId)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"activate DeleteAppointmentCommand","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"DeleteAppointmentCommand --\u003e Parser : :DeleteAppointmentCommand","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"deactivate DeleteAppointmentCommand","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"Parser --\u003e ClinicEase : :DeleteAppointmentCommand","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"deactivate Parser","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"ClinicEase -\u003e DeleteAppointmentCommand : execute()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"activate DeleteAppointmentCommand","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"DeleteAppointmentCommand -\u003e ManagementSystem : deleteAppointment(apptId)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"activate ManagementSystem","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"ManagementSystem -\u003e ManagementSystem : findPatientByNRIC()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"activate ManagementSystem","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"ManagementSystem -\u003e Appointment : getNric()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"activate Appointment","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"Appointment --\u003e ManagementSystem : nric :String","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"deactivate Appointment","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"ManagementSystem --\u003e ManagementSystem : nric :String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"deactivate ManagementSystem","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"ManagementSystem -\u003e Storage : saveAppointments()","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"activate Storage","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"Storage --\u003e ManagementSystem :","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"deactivate Storage","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"ManagementSystem --\u003e DeleteAppointmentCommand :","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"deactivate ManagementSystem","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"deactivate ManagementSystem","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"DeleteAppointmentCommand --\u003e ClinicEase :","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"deactivate DeleteAppointmentCommand","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"ClinicEase --\u003e User : display message","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"deactivate ClinicEase","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"@enduml","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":59}},{"path":"docs/diagrams/deletePatientSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"@startuml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"hide footbox","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"participant \":ClinicEase\" as ClinicEase","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"participant \":DeletePatientCommand\" as DeletePatientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"participant \":ManagementSystem\" as ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"ClinicEase -\u003e Parser : parse(input)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"activate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"Parser -\u003e Parser : parseDeletePatient(userInput)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"activate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"Parser --\u003e Parser : :String (nric)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"deactivate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"create DeletePatientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"Parser -\u003e DeletePatientCommand : new DeletePatientCommand(String)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"activate DeletePatientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"DeletePatientCommand --\u003e Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"Parser --\u003e ClinicEase : :DeletePatientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"deactivate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"ClinicEase -\u003e DeletePatientCommand : execute()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"activate DeletePatientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"DeletePatientCommand -\u003e ManagementSystem : deletePatient(nric)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"activate ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"ManagementSystem -\u003e ManagementSystem : find matching NRIC in list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"alt Patient found","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"    ManagementSystem -\u003e ManagementSystem : remove patient from list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"    ManagementSystem -\u003e ManagementSystem : remove patient’s appointments","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"    ManagementSystem -\u003e Storage : savePatients(patients)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"    activate Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"    Storage --\u003e ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"    deactivate Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"    ManagementSystem -\u003e Storage : saveAppointments(appointments)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"    activate Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"    Storage --\u003e ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"    deactivate Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"    ManagementSystem --\u003e DeletePatientCommand : deleted Patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"else Patient not found","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"    ManagementSystem --\u003e DeletePatientCommand : null","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"    deactivate ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"     deactivate DeletePatientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"end","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"DeletePatientCommand --\u003e ClinicEase : Result (success/failure message)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"deactivate DeletePatientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"@enduml","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"JudHoka":53}},{"path":"docs/diagrams/mainComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"package \"Main Component\"{","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"class ClinicEase {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"    - ManagementSystem manager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"    - Ui ui","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"    - Storage storage","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"    + ClinicEase(filePath: String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"    + run(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"    + main(args: String[]): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"ClinicEase --\u003e UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"ClinicEase --\u003e Storage","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"ClinicEase --\u003e ManagementSystem","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"ClinicEase ..\u003e Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"hide circle","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"JudHoka":22}},{"path":"docs/diagrams/managerComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dylancmznus"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylancmznus"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylancmznus"},"content":"package \"Manager Component\"{","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylancmznus"},"content":"class ManagementSystem {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylancmznus"},"content":"    - appointments : List\u003cAppointment\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylancmznus"},"content":"    - patients : List\u003cPatient\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylancmznus"},"content":"    - prescriptions : List\u003cPrescription\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylancmznus"},"content":"    + ManagementSystem(List\u003cPatient\u003e, List\u003cAppointment\u003e)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylancmznus"},"content":"    + ManagementSystem(List\u003cPatient\u003e, List\u003cAppointment\u003e, List\u003cPrescription\u003e)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylancmznus"},"content":"    + getPatients() : List\u003cPatient\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylancmznus"},"content":"    + setAppointments(List\u003cAppointment\u003e) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylancmznus"},"content":"    + getAppointments() : List\u003cAppointment\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylancmznus"},"content":"    + addPatient(Patient) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylancmznus"},"content":"    + deletePatient(String) : Patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylancmznus"},"content":"    + viewPatient(String) : Patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylancmznus"},"content":"    + editPatient(String, String, String, String, String, String) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylancmznus"},"content":"    + storeMedicalHistory(String, String) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylancmznus"},"content":"    + viewMedicalHistoryByNric(String) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylancmznus"},"content":"    + viewMedicalHistoryByName(String) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylancmznus"},"content":"    + editPatientHistory(String, String, String) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylancmznus"},"content":"    + findPatientByNric(String) : Patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylancmznus"},"content":"    + addAppointment(Appointment) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylancmznus"},"content":"    + deleteAppointment(String) : Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylancmznus"},"content":"    + sortAppointmentsByDateTime(List\u003cAppointment\u003e) : List\u003cAppointment\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylancmznus"},"content":"    + sortAppointmentsById(List\u003cAppointment\u003e) : List\u003cAppointment\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylancmznus"},"content":"    + markAppointment(String) : Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylancmznus"},"content":"    + unmarkAppointment(String) : Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylancmznus"},"content":"    + findAppointmentsByNric(String) : List\u003cAppointment\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylancmznus"},"content":"    + getPrescriptions() : List\u003cPrescription\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylancmznus"},"content":"    + addPrescription(Prescription) : Prescription","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylancmznus"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylancmznus"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylancmznus"},"content":"ClinicEase --\u003e ManagementSystem","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylancmznus"},"content":"ManagementSystem --\u003e Patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylancmznus"},"content":"ManagementSystem --\u003e Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylancmznus"},"content":"ManagementSystem --\u003e Prescription","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylancmznus"},"content":"hide circle","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylancmznus"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"dylancmznus":44}},{"path":"docs/diagrams/objectComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dylancmznus"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylancmznus"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylancmznus"},"content":"package \"Object Component\" {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylancmznus"},"content":"class Patient {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylancmznus"},"content":"    - id: String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylancmznus"},"content":"    - name: String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylancmznus"},"content":"    - dob: LocalDate","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylancmznus"},"content":"    - contactInfo: String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylancmznus"},"content":"    - gender: String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylancmznus"},"content":"    - address: String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylancmznus"},"content":"    - medicalHistory: List\u003cString\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylancmznus"},"content":"    - appointments: List\u003cAppointment\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylancmznus"},"content":"    + Patient(id, name, dobStr, gender, address, contactInfo, medicalHistory)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylancmznus"},"content":"    + getId(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylancmznus"},"content":"    + getName(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylancmznus"},"content":"    + getDob(): LocalDate","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylancmznus"},"content":"    + getGender(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylancmznus"},"content":"    + getAddress(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylancmznus"},"content":"    + getContactInfo(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylancmznus"},"content":"    + getMedicalHistory(): List\u003cString\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylancmznus"},"content":"    + setName(name: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylancmznus"},"content":"    + setDob(dob: LocalDate): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylancmznus"},"content":"    + setContactInfo(info: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylancmznus"},"content":"    + setGender(gender: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylancmznus"},"content":"    + setAddress(address: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylancmznus"},"content":"    + getAppointments(): List\u003cAppointment\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylancmznus"},"content":"    + addAppointment(appointment: Appointment): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylancmznus"},"content":"    + deleteAppointment(apptId: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylancmznus"},"content":"    + toString(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylancmznus"},"content":"    + toStringForListView(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylancmznus"},"content":"    + toFileFormat(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylancmznus"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylancmznus"},"content":"class Appointment {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylancmznus"},"content":"    - id : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylancmznus"},"content":"    - nric : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylancmznus"},"content":"    - dateTime : LocalDateTime","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylancmznus"},"content":"    - description : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylancmznus"},"content":"    - isDone : boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylancmznus"},"content":"    + Appointment(nric: String, dateTime: LocalDateTime, description: String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylancmznus"},"content":"    + Appointment(id: String, nric: String, dateTime: LocalDateTime, description: String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylancmznus"},"content":"    + getId(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylancmznus"},"content":"    + setRunningId(newId: int): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylancmznus"},"content":"    + getNric(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylancmznus"},"content":"    + getDate(): LocalDate","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylancmznus"},"content":"    + getTime(): LocalTime","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylancmznus"},"content":"    + getDateTime(): LocalDateTime","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylancmznus"},"content":"    + getRunningId(): int","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylancmznus"},"content":"    + getDescription(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylancmznus"},"content":"    + isDone(): boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylancmznus"},"content":"    + markAsDone(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylancmznus"},"content":"    + unmarkAsDone(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylancmznus"},"content":"    + setIsDone(mark: boolean): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylancmznus"},"content":"    + getStatusIcon(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylancmznus"},"content":"    + toString(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylancmznus"},"content":"    + toFileFormat(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylancmznus"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylancmznus"},"content":"class Prescription {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylancmznus"},"content":"    - patientId : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylancmznus"},"content":"    - timestamp : LocalDateTime","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylancmznus"},"content":"    - prescriptionId : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylancmznus"},"content":"    - symptoms : List\u003cString\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylancmznus"},"content":"    - medicines : List\u003cString\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylancmznus"},"content":"    - notes : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylancmznus"},"content":"    + getPatientId(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylancmznus"},"content":"    + getPrescriptionId(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylancmznus"},"content":"    + getTimestamp(): LocalDateTime","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylancmznus"},"content":"    + getSymptoms(): List\u003cString\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylancmznus"},"content":"    + getMedicines(): List\u003cString\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylancmznus"},"content":"    + getNotes(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylancmznus"},"content":"    + toString(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylancmznus"},"content":"    + toFileFormat(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dylancmznus"},"content":"    + static fromFileFormat(String): Prescription","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylancmznus"},"content":"    + generateHtml(Patient): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dylancmznus"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dylancmznus"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylancmznus"},"content":"ManagementSystem --\u003e Patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylancmznus"},"content":"ManagementSystem --\u003e Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylancmznus"},"content":"ManagementSystem --\u003e Prescription","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylancmznus"},"content":"hide circle","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylancmznus"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"dylancmznus":89}},{"path":"docs/diagrams/parserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"hide circle","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"abstract class Command {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"  + {abstract} execute(manager: ManagementSystem, ui: Ui): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"  + {abstract} isExit(): boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"class Parser {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"  + {static} parse(input: String): Command","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"  - {static} parseAddPatient(input: String): Patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"  - {static} parseDeletePatient(input: String): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"  - {static} parseViewPatient(input: String): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"  + {static} parseViewHistory(input: String): String[]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"  + {static} parseStoreHistory(input: String): String[]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"  - {static} parseAddAppointment(input: String): Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"  - {static} parseDeleteAppointment(input: String): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"  - {static} parseSortAppointment(input: String): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"  - {static} parseMarkAppointment(input: String): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"  - {static} parseUnmarkAppointment(input: String): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"  - {static} parseFindAppointment(input: String): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"  - {static} parseEditPatient(input: String): String[]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"  - {static} parseEditHistory(input: String): String[]","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"  + {static} parseLoadPatient(line: String): Patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"  + {static} parseLoadAppointment(line: String): Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"  + {static} parseAddPrescription(input: String): Prescription","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"  + {static} parseViewAllPrescriptions(input: String): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"  + {static} parseViewPrescription(input: String): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"  - {static} extractValue(input: String, prefix: String): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"class XYZCommand extends Command {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"  # commandData: SubData","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"  + execute(manager: ManagementSystem, ui: Ui): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"  + isExit(): boolean","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"class SubData {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"  - field1: Type","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"  - field2: Type","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"Parser --\u003e \"1\" XYZCommand : creates \u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"Parser --\u003e  SubData : creates \u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"XYZCommand --\u003e SubData : uses \u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"note top of Parser : Parses input into executable commands","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"note bottom of XYZCommand: - XYZcommand \u003d AddPatientCommand, AddAppointmentCommand, etc...  \\n- execute and isExit are overridden \\n- Constructor: XYZCommand(SubData data)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"note right of SubData : - Subdata \u003d Patient, Appointment and Prescription \\n- field1 and field2 represent the variables extracted using Parser.extractValue()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"chwenyee":52}},{"path":"docs/diagrams/parserSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"hide footbox","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"participant \":ClinicEase\" as ClinicEase","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"box \"Interactions happened in Parser\" #F0F0F0","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"participant \":Appointment\" as Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"participant \":AddAppointmentCommand\" as AddAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"end box","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"ClinicEase -\u003e Parser : parse(\"add-appointment ic/...\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"activate ClinicEase","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"activate Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"Parser -\u003e Parser : parseAddAppointment(userInput)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"activate Parser #lightblue","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"Parser -\u003e Parser : extractValue(userInput)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"activate Parser #lightgreen","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"note right of Parser:  extractValue is called separately \\n (not in a loop) to parse input and extract each parameter \\n: NRIC, date, time, and description","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"Parser --\u003e Parser : :String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"deactivate Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"create Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"Parser -\u003e Appointment : new Appointment()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"activate Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"Appointment --\u003e Parser : appt :Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"deactivate Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"Parser --\u003e Parser : appt :Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"deactivate Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"create AddAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"Parser -\u003e AddAppointmentCommand : new AddAppointmentCommand(appt)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"AddAppointmentCommand --\u003e Parser : :AddAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"Parser --\u003e ClinicEase : :AddAppointmentCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"deactivate Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"deactivate ClinicEase","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"chwenyee":45}},{"path":"docs/diagrams/prescriptionClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"@startuml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"hide circle","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"class Prescription {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"  - patientId: String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"  - prescriptionId: String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"  - timestamp: LocalDateTime","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"  - symptoms: List\u003cString\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"  - medicines: List\u003cString\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"  - notes: String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"  + Prescription(patientId: String, symptoms: List\u003cString\u003e, medicines: List\u003cString\u003e, notes: String)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"  + Prescription(patientId: String, prescriptionId: String, timestamp: LocalDateTime, symptoms: List\u003cString\u003e, medicines: List\u003cString\u003e, notes: String)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"  + getPatientId(): String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"  + getPrescriptionId(): String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"  + getTimestamp(): LocalDateTime","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"  + getSymptoms(): List\u003cString\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"  + getMedicines(): List\u003cString\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"  + getNotes(): String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"  + toString(): String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"  + toFileFormat(): String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"  + {static} fromFileFormat(fileEntry: String): Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"  + generateHtml(patient: Patient): String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"class AddPrescriptionCommand extends Command {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"  - prescription: Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"  + AddPrescriptionCommand(prescription: Prescription)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"  + execute(manager: ManagementSystem, ui: Ui): void","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"  + isExit(): boolean","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"class ViewPrescriptionCommand extends Command {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"  - prescriptionId: String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"  + ViewPrescriptionCommand(prescriptionId: String)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"  + execute(manager: ManagementSystem, ui: Ui): void","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"  + isExit(): boolean","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"class ViewAllPrescriptionsCommand extends Command {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"  - patientId: String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"  + ViewAllPrescriptionsCommand(patientId: String)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"  + execute(manager: ManagementSystem, ui: Ui): void","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"  + isExit(): boolean","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"class ManagementSystem {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"  - prescriptions: List\u003cPrescription\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"  + getPrescriptions(): List\u003cPrescription\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"  + addPrescription(prescription: Prescription): Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"  + getPrescriptionsForPatient(patientId: String): List\u003cPrescription\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"  + getPrescriptionById(prescriptionId: String): Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"class Parser {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"  + {static} parseAddPrescription(input: String): Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"  + {static} parseViewAllPrescriptions(input: String): String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"  + {static} parseViewPrescription(input: String): String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"class Storage {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"  + {static} savePrescriptions(prescriptions: List\u003cPrescription\u003e): void","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"  + {static} loadPrescriptions(): List\u003cPrescription\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"  + {static} savePrescriptionHtml(prescription: Prescription, patient: Patient): void","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"abstract class Command {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"  + {abstract} execute(manager: ManagementSystem, ui: Ui): void","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"  + {abstract} isExit(): boolean","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"Patient \"1\" -- \"0..*\" Prescription: has \u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"ManagementSystem \"1\" --o \"0..*\" Prescription: manages \u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"AddPrescriptionCommand \"1\" --o \"1\" Prescription: creates \u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"ViewPrescriptionCommand .. ManagementSystem: retrieves prescription from \u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"ViewAllPrescriptionsCommand .. ManagementSystem: retrieves prescriptions from \u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Basudeb2005"},"content":"Parser ..\u003e AddPrescriptionCommand: creates \u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"Parser ..\u003e ViewPrescriptionCommand: creates \u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"Parser ..\u003e ViewAllPrescriptionsCommand: creates \u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"Storage ..\u003e Prescription: saves/loads \u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"@enduml ","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":86}},{"path":"docs/diagrams/prescriptionManagementSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"@startuml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"hide footbox","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"actor User","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"participant \":ClinicEase\" as ClinicEase","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"participant \":AddPrescriptionCommand\" as AddPrescriptionCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"participant \":ManagementSystem\" as ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"participant \":Prescription\" as Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"User -\u003e ClinicEase : enter input","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"activate ClinicEase","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"ClinicEase -\u003e Parser : parse(input)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"activate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"Parser -\u003e Parser : parseAddPrescription(userInput)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"activate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"Parser -\u003e Parser : extractValue(userInput)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"activate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"note right of Parser: extractValue is called multiple times\\n to parse patient ID, symptoms, medicines, and notes","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"Parser --\u003e Parser : :String","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"deactivate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"create Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"Parser -\u003e Prescription : new Prescription(patientId, symptomsList, medicinesList, notes)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"activate Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"Prescription --\u003e Parser : prescription : Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"deactivate Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"deactivate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"create AddPrescriptionCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"Parser -\u003e AddPrescriptionCommand : new AddPrescriptionCommand(prescription)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"activate AddPrescriptionCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"AddPrescriptionCommand --\u003e Parser : :AddPrescriptionCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"deactivate AddPrescriptionCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"Parser --\u003e ClinicEase : :AddPrescriptionCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"deactivate Parser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"ClinicEase -\u003e AddPrescriptionCommand : execute()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"activate AddPrescriptionCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"AddPrescriptionCommand -\u003e ManagementSystem : addPrescription(prescription)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"activate ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"ManagementSystem -\u003e ManagementSystem : findPatientByNric()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"activate ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"ManagementSystem --\u003e ManagementSystem : patient : Patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"deactivate ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"alt Patient not found","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"    ManagementSystem --\u003e AddPrescriptionCommand : throw IllegalArgumentException","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"else Patient found","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"    ManagementSystem -\u003e ManagementSystem : Generate prescription ID","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"    ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"    create Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"    ManagementSystem -\u003e Prescription : new Prescription(patientId, prescriptionId, timestamp, symptoms, medicines, notes)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"    activate Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"    Prescription --\u003e ManagementSystem : newPrescription : Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"    deactivate Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"    ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"    ManagementSystem -\u003e Storage : savePrescriptions(prescriptions)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"    activate Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"    Storage --\u003e ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"    deactivate Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"    ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"    ManagementSystem --\u003e AddPrescriptionCommand : newPrescription : Prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"end","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"deactivate ManagementSystem","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"AddPrescriptionCommand -\u003e AddPrescriptionCommand : Display prescription details","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"AddPrescriptionCommand --\u003e ClinicEase","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"deactivate AddPrescriptionCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"ClinicEase --\u003e User : display message","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"deactivate ClinicEase","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"@enduml ","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":76}},{"path":"docs/diagrams/storageComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"skinparam componentStyle rectangle","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"hide circle","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"package \"Storage Component\" {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"  class Storage {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"    - directoryPath : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"    - patientFilePath : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"    - appointmentFilePath : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"    - prescriptionFilePath : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"    - prescriptionDirPath : String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"    - patients : Patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"    + Storage(directory : String)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"    + savePatients(patientList : List\u003cPatient\u003e) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"    + loadPatients() : List\u003cPatient\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"    + saveAppointments(appointmentList : List\u003cAppointment\u003e) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"    + loadAppointments(system : ManagementSystem) : List\u003cAppointment\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"    + savePrescriptions(prescriptionList : List\u003cPrescription\u003e) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"    + loadPrescriptions() : List\u003cPrescription\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"    + savePrescriptionHtml(prescription : Prescription, patient : Patient) : void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"  package \"Objects\" {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"    class Patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"    class Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"    class Prescription","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"  package \"Utils\" {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"    class Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"    class ManagementSystem","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"  }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"  Storage ..\u003e Patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"  Storage ..\u003e Appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"  Storage ..\u003e Prescription","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"  Storage ..\u003e Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"  Storage \u003c..\u003e ManagementSystem","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"JudHoka":44}},{"path":"docs/diagrams/storeMedicalHistorySequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jyukuan"},"content":"@startuml","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jyukuan"},"content":"hide footbox","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jyukuan"},"content":"participant \":ClinicEase\" as ClinicEase","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jyukuan"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jyukuan"},"content":"participant \":StoreMedHistoryCommand\" as StoreMedHistoryCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jyukuan"},"content":"participant \":ManagementSystem\" as ManagementSystem","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jyukuan"},"content":"participant \":Patient\" as Patient","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jyukuan"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jyukuan"},"content":"ClinicEase -\u003e Parser : parse(input)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jyukuan"},"content":"activate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jyukuan"},"content":"Parser -\u003e Parser : parseStoreHistory(userInput)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jyukuan"},"content":"activate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jyukuan"},"content":"Parser -\u003e Parser : extractValue(userInput)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jyukuan"},"content":"activate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jyukuan"},"content":"note right of Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jyukuan"},"content":"  extractValue is called multiple times","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jyukuan"},"content":"  to parse input and extract parameters","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jyukuan"},"content":"end note","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jyukuan"},"content":"Parser --\u003e Parser : :String","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jyukuan"},"content":"deactivate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jyukuan"},"content":"create StoreMedHistoryCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jyukuan"},"content":"Parser -\u003e StoreMedHistoryCommand : new StoreMedHistoryCommand(String[])","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jyukuan"},"content":"activate StoreMedHistoryCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jyukuan"},"content":"StoreMedHistoryCommand --\u003e Parser : :StoreMedHistoryCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jyukuan"},"content":"deactivate StoreMedHistoryCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jyukuan"},"content":"Parser --\u003e ClinicEase : :StoreMedHistoryCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jyukuan"},"content":"deactivate Parser","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jyukuan"},"content":"ClinicEase -\u003e StoreMedHistoryCommand : execute()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jyukuan"},"content":"activate StoreMedHistoryCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jyukuan"},"content":"StoreMedHistoryCommand -\u003e ManagementSystem : storeMedicalHistory(name, nric, medHistory)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jyukuan"},"content":"activate ManagementSystem","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jyukuan"},"content":"ManagementSystem -\u003e ManagementSystem : findPatientByNric(nric)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jyukuan"},"content":"activate ManagementSystem","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jyukuan"},"content":"ManagementSystem -\u003e Patient : getMedicalHistory()","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jyukuan"},"content":"activate Patient","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jyukuan"},"content":"Patient --\u003e ManagementSystem : returns List\u003cString\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jyukuan"},"content":"deactivate Patient","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jyukuan"},"content":"deactivate ManagementSystem","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jyukuan"},"content":"ManagementSystem -\u003e Storage : savePatients(patients)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jyukuan"},"content":"activate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jyukuan"},"content":"Storage --\u003e ManagementSystem :","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jyukuan"},"content":"deactivate Storage","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jyukuan"},"content":"ManagementSystem --\u003e StoreMedHistoryCommand :","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jyukuan"},"content":"deactivate ManagementSystem","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jyukuan"},"content":"StoreMedHistoryCommand -\u003e ClinicEase :","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jyukuan"},"content":"deactivate StoreMedHistoryCommand","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jyukuan"},"content":"@enduml","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"jyukuan":54}},{"path":"docs/diagrams/uiComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"package \"UI Component\" {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"    class UI {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"        - Scanner sc","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"        + Ui()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"        + showWelcome(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"        + showBye(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"        + showLine(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"        + readCommand(): String","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"        + showError(message: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"        + showHelp(): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"        + showPatientAdded(patients: List\u003cPatient\u003e): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"        + showPatientDeleted(removedPatient: Patient, nric: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"        + showPatientViewed(matchedPatient: Patient, nric: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"        + showPatientList(patients: List\u003cPatient\u003e): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"        + showPatientHistory(patient: Patient): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"        + showAppointmentAdded(appointments: List\u003cAppointment\u003e): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"        + showAppointmentDeleted(appointments: List\u003cAppointment\u003e, removedAppointment: Appointment, apptId: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"        + showAppointmentMarked(appointments: List\u003cAppointment\u003e, markedAppointment: Appointment, apptId: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"        + showAppointmentUnmarked(appointments: List\u003cAppointment\u003e, markedAppointment: Appointment, apptId: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"        + showAppointmentList(appointments: List\u003cAppointment\u003e): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"        + showAppointmentsFound(appointments: List\u003cAppointment\u003e, nric: String): void","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"UI ..\u003e Object","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"Main --\u003e UI","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"hide circle","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"JudHoka":33}},{"path":"docs/diagrams/viewPatientSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dylancmznus"},"content":"@startuml","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylancmznus"},"content":"hide footbox","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylancmznus"},"content":"actor User","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylancmznus"},"content":"participant \":ClinicEase\" as ClinicEase","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylancmznus"},"content":"participant \":UI\" as UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylancmznus"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylancmznus"},"content":"participant \":ViewPatientCommand\" as ViewPatientCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylancmznus"},"content":"participant \":ManagementSystem\" as ManagementSystem","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylancmznus"},"content":"participant \":Patient\" as Patient","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylancmznus"},"content":"User -\u003e ClinicEase : enter input","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylancmznus"},"content":"activate ClinicEase","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylancmznus"},"content":"ClinicEase -\u003e UI : readCommand()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylancmznus"},"content":"activate UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylancmznus"},"content":"UI --\u003e ClinicEase : input","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylancmznus"},"content":"deactivate UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylancmznus"},"content":"ClinicEase -\u003e Parser : parse(input)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylancmznus"},"content":"activate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylancmznus"},"content":"Parser -\u003e Parser : parseViewPatient(userInput)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylancmznus"},"content":"activate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylancmznus"},"content":"Parser -\u003e Parser : extractValue(userInput)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylancmznus"},"content":"activate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylancmznus"},"content":"deactivate Parser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylancmznus"},"content":"Parser --\u003e Parser : nric :String","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylancmznus"},"content":"deactivate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylancmznus"},"content":"Parser --\u003e ClinicEase : ViewPatientCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylancmznus"},"content":"deactivate Parser","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylancmznus"},"content":"ClinicEase -\u003e ViewPatientCommand : execute()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylancmznus"},"content":"activate ViewPatientCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylancmznus"},"content":"ViewPatientCommand -\u003e ManagementSystem : viewPatient(nric)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylancmznus"},"content":"activate ManagementSystem","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylancmznus"},"content":"ManagementSystem -\u003e Patient : getPatient(nric)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylancmznus"},"content":"activate Patient","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylancmznus"},"content":"Patient --\u003e ManagementSystem : matchedPatient","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylancmznus"},"content":"deactivate Patient","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylancmznus"},"content":"ManagementSystem --\u003e ViewPatientCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylancmznus"},"content":"deactivate ManagementSystem","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylancmznus"},"content":"ViewPatientCommand -\u003e UI : showPatientViewed(matchedPatient)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylancmznus"},"content":"deactivate ViewPatientCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylancmznus"},"content":"activate UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylancmznus"},"content":"UI --\u003e ClinicEase","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylancmznus"},"content":"deactivate UI","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylancmznus"},"content":"ClinicEase --\u003e User","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylancmznus"},"content":"deactivate ClinicEase","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylancmznus"},"content":"@enduml","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"dylancmznus":60}},{"path":"docs/team/basudeb2005.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"# Basudeb Chakraborty - Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"## Overview","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"ClinicEase is a desktop app with a command-line interface for doctors to manage patients, appointments, and prescriptions. It allows tracking medical histories, scheduling, and exporting detailed prescriptions in HTML format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"## Summary of Contributions","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"### Code contributed","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"[RepoSense Code Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dBasudeb2005\u0026tabRepo\u003dAY2425S2-CS2113-T11b-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"Full URL: [https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dBasudeb2005\u0026tabRepo\u003dAY2425S2-CS2113-T11b-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dBasudeb2005\u0026tabRepo\u003dAY2425S2-CS2113-T11b-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"### Enhancements implemented","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"#### 1. Core Application Structure","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"I designed and implemented the foundational structure of the application, including:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"- Initial UI class setup with welcome/goodbye messages and command reading functionality","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"- Parser framework for processing user commands","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"- Basic application workflow in ClinicEase main class","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"#### 2. Appointment Management System","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"I implemented key appointment features:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"- Appointment class design with unique IDs and status tracking","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"- Add appointment command to schedule patient appointments","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"- Delete appointment functionality to remove unnecessary appointments","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"- Appointment display functionality in UI with proper formatting","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"#### 3. Prescription Management System","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"I implemented the complete Prescription Management System, a key feature that enables doctors to create and manage patient prescriptions in the ClinicEase application:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"- **Prescription Class Design**: Designed and implemented the `Prescription` class with essential attributes and functionality:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"    - Storage of patient details, symptoms, medicines, and notes","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"    - Automatic generation of unique prescription IDs","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"    - Timestamp recording for each prescription","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"- **Prescription Commands**: Implemented three main commands for managing prescriptions:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"    - `add-prescription`: Allows doctors to create new prescriptions with patient ID, symptoms, medicines, and optional notes","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"    - `view-all-prescriptions`: Shows all prescriptions for a specific patient","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"    - `view-prescription`: Displays details of a specific prescription by ID","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"- **HTML Generation**: Created a feature that generates HTML prescription documents for printing:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"    - Professional layout with CSS styling","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"    - Organized sections for patient information, symptoms, medicines, and special instructions","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"    - Print functionality via a button in the HTML document","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"- **Storage and Persistence**: Implemented storage functionality to save and retrieve prescriptions from the file system with a custom serialization format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"- **Comprehensive Testing**: Created an extensive test suite for the prescription subsystem: Unit tests for all prescription-related classes, Integration tests for prescription management functionality, End-to-end testing of the prescription workflow.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"### Contributions to the User Guide","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"- Added the \"Managing Prescriptions\" section, documenting:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"    - Command format and examples for adding prescriptions","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"    - Instructions for viewing all prescriptions for a patient","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"    - Instructions for viewing specific prescriptions and generating HTML reports","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"    - Command summary section for all prescription-related commands","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"- Added documentation for the core application structure","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"- Added documentation for the prescription management features, including Use cases for adding, viewing, and generating prescriptions, Manual testing instructions for prescription management, and User stories related to prescription functionality.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"- Set up the initial application architecture that the team built upon","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"- Integrated the prescription management subsystem with the existing patient management system  and ensured compatibility of prescription commands with the overall parsing structure","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"### Features I\u0027m proud of","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"1. **HTML Prescription Generation**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"   - The ability to generate professional-looking prescriptions that doctors can print was a feature I\u0027m particularly proud of implementing. This bridges the gap between digital management and the physical documents patients need.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"2. **Comprehensive Prescription Workflow**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"   - Creating a complete end-to-end solution that handles everything from prescription creation to storage to retrieval to presentation was a significant achievement.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"3. **Robust Testing Framework**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"   - The extensive test suite I developed ensures the reliability of the prescription system, with test coverage for all major components and operations.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"4. **Technical Documentation**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"   - The detailed sequence and class diagrams help future developers understand the architecture and implementation of the prescription management feature.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"5. **Architecture Documentation Blueprint**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"   - Created initial architecture diagram","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"   - Created the sequence diagrams  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"   - Collaborated with the team to refine and evolve the architecture diagram ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"### Issues Resolved","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"1. **Better User Experience**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Basudeb2005"},"content":"   - Fixed vague error messages for prescription commands  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Basudeb2005"},"content":"   - Provided clearer, more intuitive feedback  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Basudeb2005"},"content":"2. **Prescription Storage Bug Fixed**  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Basudeb2005"},"content":"   - Resolved \"Index out of bounds\" error when loading over 5 prescriptions  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Basudeb2005"},"content":"   - Enabled support for unlimited entries and prevented data loss  ","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":94}},{"path":"docs/team/chwenyee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"# Wen Yee\u0027s Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"## Project: ClinicEase","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"**ClinicEase** is a CLI-based clinic management program that helps doctors - our target users - to efficiently manage patient records, ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"medical histories, and appointments. The system enables user to view and update patient details, ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"manage appointments, maintain medical history records, and manage prescriptions.  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"This project aims to simplify clinic administrative tasks with a user-friendly interface.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"## Summary of Contributions","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"Code Dashboard Link: [Wen Yee\u0027s Code Dashboard](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003dchwenyee\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2025-02-21\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":" ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"### Enhancement Implemented","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"1. Reformat the UI output to ensure a consistent and aligned display format across the program.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"2. Introduced custom exceptions e.g. `DuplicatePatientIDException`, `UnknownCommandException` and `InvalidInputFormatException` ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"in v1.0 to enable more graceful error handling.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"3. Improved the logic of `Parser.extractValue()` to correctly extract user input parameters, especially when both `dt/` and `t/`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"are present.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"4. Restructured the code in `ClinicEase.java` and `Parser.java`, and created a `command` package to make the codebase more OOP after v1.0.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"5. Linked `Appointment` Class to `Patient` Class to ensure appointments stored in a `Patient` object are kept in sync ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"with the appointment list in `ManagementSystem`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"6. Changed the data type of `dateTime` variable in `Appointment` to be `LocalDateTime` for better input validation of ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"`dt/` and `t/`, and to simplify the implementation of the `sort-appointment` feature.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"7. Added comprehensive validation for: NRIC format compliance, appointment scheduling conflicts (throws `AppointmentClashException`) ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"and future-dated appointments (prevents past-date/time entries)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"8. Implemented cleanup of associated appointment records when the patient is deleted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"#### Features Implemented","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"1. **add-appointment**: Adds a new appointment to the list of appointment.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"2. **delete-appointment**: Deletes a specified appointment from the appointment list.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"3. **sort-appointment**: Sorts the appointments in the appointment list and display the sorted list to the user. Sorting","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"   can be performed by either `byDate` or `byId`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"4. **help**: Simple command that outputs all available command inputs of the application. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"#### Contributions to the UG:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"**Sections:** ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"- **Table of Content**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"- **Quick Start**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"- **Features:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"   - NOTE: Explains how to interpret command syntax, parameters, optional fields, input order, and case sensitivity.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"   - `help`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"   - `add-appointments`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"   - `delete-appointments`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"   - `sort-appointments`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"   - `bye`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"   I wrote the description, command input formats, and examples of usage for these features, providing the important things to note for ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"parameters such as `NRIC`, `DATE`, `TIME`, and `APPOINTMENT_ID`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"- **FAQ**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"- **Known Issues**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"- **Command Summary**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"#### Contributions to the DG:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"**Sections:**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"- **Design: Parser component**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"  - Documented the `Parser` class and its interaction with `Command` subclasses","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"  - Created:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"    - Class diagram `parserClassDiagram.png`, showing the structure","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"    - Sequence diagram `parserSequence.png`, showing the parsing flow","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"  - Explained the parsing workflow in `Parser` ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"- **Add and Delete Appointment feature:**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"  - Documented the implementation details of the `add-appointment` and `delete-appointment` features, ","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"    including step-by-step usage scenarios to clarify system behavior.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"  - Created sequence diagrams to visualize how the command interacts with the `Parser`, `ManagementSystem`, and `Storage` components.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chwenyee"},"content":"    - `addAppointmentSequence.png` for `add-appointment`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chwenyee"},"content":"    - `deleteAppointmentSequence.png` for `delete-appointment`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chwenyee"},"content":"  - Explained the reason they are implemented this way","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chwenyee"},"content":"  - Explained the alternatives considered and justified their rejection","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chwenyee"},"content":"- Non-functional requirements","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chwenyee"},"content":"- Glossary ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chwenyee"},"content":"#### Contributions to team-based tasks:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chwenyee"},"content":"- Setting up the Github team repo","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chwenyee"},"content":"- Maintaining the issue tracker e.g. issue and milestones","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chwenyee"},"content":"- Release management e.g. wrapping up milestones, saving DG and UG as PDFs","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chwenyee"},"content":"#### Review/mentoring contributions:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chwenyee"},"content":"- Helped teammates resolve Git merge conflicts and guided them on pull request practices.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chwenyee"},"content":"- Reminding teammates of important deadlines.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chwenyee"},"content":"- Helped to test out the newly-implemented features to ensure the feature works as desired.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chwenyee"},"content":"- Discussed with teammates on what to include for Design and Implementation section in Developer Guide.","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"chwenyee":102}},{"path":"docs/team/dylancmznus.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dylancmznus"},"content":"# Dylan\u0027s Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylancmznus"},"content":"## Project: ClinicEase","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylancmznus"},"content":"**ClinicEase** is a CLI-based clinic management application that allows users to efficiently manage patient records, medical histories, and appointments. The system provides commands for viewing and updating patient details, managing appointments, and maintaining medical history records. This project aims to simplify clinic administrative tasks with a user-friendly interface.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylancmznus"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylancmznus"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylancmznus"},"content":"### New Feature:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylancmznus"},"content":"**`view-patient`**:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylancmznus"},"content":"- Allows users to view a patient\u0027s personal details via their NRIC (e.g., `view-patient ic/S1234567A`).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylancmznus"},"content":"- Displays the patient\u0027s full name, contact details, and other personal information.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylancmznus"},"content":"- Ensures that the provided NRIC matches an existing patient before retrieving the data.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylancmznus"},"content":"### New Feature:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylancmznus"},"content":"**`find-appointment`**:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylancmznus"},"content":"- Finds and lists all appointments for a patient using their NRIC (e.g., `find-appointment ic/S1234567A`).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylancmznus"},"content":"- Retrieves a list of appointments with the specified patient.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylancmznus"},"content":"### New Feature:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylancmznus"},"content":"**`mark-appointment`**:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylancmznus"},"content":"- Allows users to mark an appointment as completed for a specific patient using their NRIC and the appointment ID (e.g., `mark-appointment ic/S1234567A id/001`).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylancmznus"},"content":"- Verifies that the patient exists and that the appointment ID corresponds to an existing appointment before updating the status.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylancmznus"},"content":"### New Feature:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylancmznus"},"content":"**`unmark-appointment`**:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylancmznus"},"content":"- Unmarks a completed appointment, changing its status as uncompleted (e.g., `unmark-appointment ic/S1234567A id/001`).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylancmznus"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylancmznus"},"content":"### Code Contributed:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylancmznus"},"content":"**Code Dashboard Link**: [Click here](\u003chttps://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21T00%3A00%3A00\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003ddylancmznus\u0026tabRepo\u003dAY2425S2-CS2113-T11b-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse\u003e)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylancmznus"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylancmznus"},"content":"### Enhancements Implemented:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylancmznus"},"content":"**Parser Integration**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylancmznus"},"content":"    - Implemented some parsing logic (`parseViewPatient`, `parseMarkAppointment`, `parseUnmarkAppointment`, `parseFindAppointment`) to handle new command formats.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylancmznus"},"content":"    - Ensured error messages provide clarity for invalid commands or incorrect command parameters (e.g., `InvalidInputFormatException`).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylancmznus"},"content":"**Persistence and Data Integrity**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylancmznus"},"content":"    - Enhanced the `ManagementSystem` to:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylancmznus"},"content":"        - Verify the existence of the patient and appointments before marking or unmarking.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylancmznus"},"content":"        - Ensure that changes to appointment statuses are reflected persistently in the system.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylancmznus"},"content":"**Exception Handling**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylancmznus"},"content":"    - Improved user feedback for invalid commands or missing parameters, particularly for appointment management.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylancmznus"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylancmznus"},"content":"### User Guide (UG)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylancmznus"},"content":"- **Sections**:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylancmznus"},"content":"    - [Viewing Patient Information: `view-patient`](#)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylancmznus"},"content":"    - [Marking Appointments: `mark-appointment`](#)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylancmznus"},"content":"    - [Unmarking Appointments: `unmark-appointment`](#)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylancmznus"},"content":"    - [Finding Appointments: `find-appointment`](#)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylancmznus"},"content":"  I authored the instructions, formats, and examples for these commands, providing clarification on valid NRIC formats and how to use appointment IDs for marking and unmarking.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylancmznus"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylancmznus"},"content":"### Developer Guide (DG)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylancmznus"},"content":"1. **Use Cases for Essential and Additional Features**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylancmznus"},"content":"    - Authored the use cases for essential commands like:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylancmznus"},"content":"        - `add-patient`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylancmznus"},"content":"        - `delete-patient`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylancmznus"},"content":"        - `add-appointment`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylancmznus"},"content":"        - `edit-patient`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylancmznus"},"content":"        - `sort-appointment`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylancmznus"},"content":"    - Provided detailed step-by-step scenarios for users to understand how these features should be used to interact with the system.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylancmznus"},"content":"2. **Implementation and UML Diagrams**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dylancmznus"},"content":"    - Created **Sequence Diagrams** for the `view-patient` feature, demonstrating how the command interacts with the `Parser`, `ManagementSystem`, and `Storage` components.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dylancmznus"},"content":"    - Updated UML diagrams to reflect the data flow and validation steps involved in retrieving patient information using NRIC.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dylancmznus"},"content":"3. **Components and Class Diagrams**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylancmznus"},"content":"    - Created **Class Diagrams** for the Manager Component and Object Component.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylancmznus"},"content":"    - Provided details about these components in the Architecture Diagram,.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylancmznus"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylancmznus"},"content":"### Community Involvement","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dylancmznus"},"content":"- Conducted code reviews for pull requests affecting appointment management, particularly focusing on ensuring that appointments are validated correctly and updates are persisted in storage.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dylancmznus"},"content":"- Assisted teammates in resolving command parsing issues and clarified how appointments are managed and retrieved in the system.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dylancmznus"},"content":"- Ensured adherence to Java coding conventions across the codebase, especially in method naming and parameter validation.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dylancmznus"},"content":"- Suggested improvements for better user experience, such as providing clearer feedback on appointment status updates.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylancmznus"},"content":"- Contributed ideas for expanding the appointment feature, such as introducing appointment reminders or notifications.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylancmznus"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"dylancmznus":97}},{"path":"docs/team/judhoka.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"# Judha\u0027s Project Portfolio Page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"## Project: ClinicEase","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"**ClinicEase** is a CLI-based clinic management system that allows users to manage patient records, appointments, and prescriptions efficiently. The application streamlines administrative workflows in clinics by offering reliable, user-friendly, and persistent command-line interactions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"My main contribution in features was to design and implement patient related features (`add-patient`, `delete-patient`, etc...) to ensure that users can store patient data properly with their respective credentials. I also mainly contributed in creating the storage system for the entire system to ensure that data is properly kept and saved.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"## Code Contributed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"**Code Dashboard Link**: [Click here to see my code contribution](https://nus-cs2113-ay2425s2.github.io/tp-dashboard/?search\u003djudhoka\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"## Features Implemented","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"### [`add-patient`](../UserGuide.md/#adding-a-new-patient--add-patient)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"- Allows users to register a new patient by specifying fields such as name, NRIC, date of birth, gender, phone number, and address.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"- Includes validation to prevent duplicate NRIC entries, ensuring each patient is uniquely identified.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"- Example:  ","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"  `add-patient n/John Doe ic/S1234567A dob/1990-01-01 g/M p/98765432 a/123 Main St #diabetic #followup`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"### [`delete-patient`](../UserGuide.md/#deleting-a-patient--delete-patient)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"- Enables the removal of a patient using their NRIC.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"- Validates whether the NRIC exists in the system before attempting deletion, and provides informative error messages if not found.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"- Upon successful deletion, confirms the action and removes any associated appointments and prescription references.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"### [`list-patient`](../UserGuide.md/#listing-all-patients-list-patient)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"- Displays all patients currently stored in the system in a numbered and neatly formatted list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"- Includes name, NRIC, and other key attributes in a concise format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"- Improves usability with consistent dividers and spacing for readability.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"- Helpful in providing an overview of all registered patients before performing operations like `delete-patient` or `view-patient`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"### [`view-patient`](../UserGuide.md/#viewing-patient-details-view-patient)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"- Shows full details of a selected patient, including:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"  - Name, NRIC, date of birth, gender, phone number, and address.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"  - Optionally, linked appointments and prescriptions (if supported by system design).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"- Supports lookup by NRIC (e.g., `view-patient ic/S1234567A`), with input validation and out-of-bounds handling.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"- Designed to be clear and informative, acting as a one-stop overview of a patient\u0027s data.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"## Parser Integration","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"- Developed parser logic for all implemented commands and storage system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"- Handled command recognition, parameter extraction, and error messaging.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"- Validated argument formats and threw custom exceptions like `InvalidInputFormatException`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"## Storage System","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"- Designed and implemented the file-based persistent `Storage` class.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"- Saved and loaded:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"  - Patient data from `patient_data.txt`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"  - Appointment data from `appointment_data.txt`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"  - Prescription data from `prescription_data.txt`","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"- Linked appointments to patients during data load.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"- Generated HTML versions of prescriptions for viewing and printing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JudHoka"},"content":"- Ensured initialization safety via `UnloadedStorageException`.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JudHoka"},"content":"## Exception Handling","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"- Designed exception handling framework with custom messages.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"- Threw descriptive exceptions when:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"  - File paths were missing.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"  - Data parsing failed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JudHoka"},"content":"  - Commands were malformed or incomplete.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JudHoka"},"content":"- Used try-catch in the main loop to ensure graceful error handling.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JudHoka"},"content":"## Testing","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JudHoka"},"content":"- Wrote JUnit test cases for parser logic, patient model, and storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"- Threw various types of exceptions (e.g, `UnloadedStorageException`) if data writing fails, allowing the system to safely abort the operation.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"- Manually tested combinations of valid and invalid inputs.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"## User Guide (UG)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JudHoka"},"content":"- Contributed to documentation for all implemented commands.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"- Provided consistent format, expected outputs, and usage examples.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"- Documented edge cases and failure scenarios for better UX.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"## Developer Guide (DG)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JudHoka"},"content":"- Authored complete component sections:","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"  - Architecture","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JudHoka"},"content":"  - `UI` component","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JudHoka"},"content":"  - `Storage` component","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JudHoka"},"content":"  - `Main` component","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JudHoka"},"content":"- Explained design considerations, structure, and responsibilities.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JudHoka"},"content":"- Created and updated UML diagrams (Architecture, Class, and Sequence).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JudHoka"},"content":"- Maintained consistency in formatting, phrasing, and layout across the DG.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JudHoka"},"content":"## Community Involvement","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JudHoka"},"content":"- Reviewed teammate pull requests, particularly those related to parser, patient, appointment and storage system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JudHoka"},"content":"- Proposed improvements for error messaging and user experience.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JudHoka"},"content":"- Ensured coding style consistency (naming, spacing, error format).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JudHoka"},"content":"- Participated in team sync-ups to align features, naming conventions, and architecture decisions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JudHoka"},"content":"---","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"JudHoka":113}},{"path":"docs/team/jyukuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jyukuan"},"content":"# Project Portfolio Page (PPP)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jyukuan"},"content":"## Overview","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jyukuan"},"content":"**ClinicEase** is a CLI-based clinic management application that enables users to handle patient records, medical","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jyukuan"},"content":"histories, and appointments quickly and effectively. It provides commands for adding, editing, and viewing patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jyukuan"},"content":"details, as well as storing and updating their medical histories. This project streamlines a clinic’s administrative","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jyukuan"},"content":"tasks in a single, user-friendly CLI system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jyukuan"},"content":"I have been primarily involved in designing and implementing the **patient’s history** functionality to ensure users can","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jyukuan"},"content":"store, view, and edit patients’ medical histories with robust validation and persistence.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jyukuan"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jyukuan"},"content":"## Summary of Contributions","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jyukuan"},"content":"### 1. Code Contributed","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jyukuan"},"content":"- **Code Dashboard Link","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jyukuan"},"content":"  **: [Click here to see my code contribution](\u003ciframe src\u003d\"https://nus-cs2113-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djyukuan\u0026tabRepo\u003dAY2425S2-CS2113-T11b-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse\u0026chartGroupIndex\u003d20\u0026chartIndex\u003d3\" frameBorder\u003d\"0\" width\u003d\"800px\" height\u003d\"142px\"\u003e\u003c/iframe\u003e)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jyukuan"},"content":"### 2. Enhancements Implemented","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jyukuan"},"content":"1. **Medical History Commands**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jyukuan"},"content":"    - **`store-history`**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jyukuan"},"content":"        - Allows users to add new medical history entries to an existing patient’s record.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jyukuan"},"content":"        - Accepts multiple comma-separated entries for one command (e.g., `h/Diabetes, Hypertension`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jyukuan"},"content":"        - Performs checks to ensure the patient exists, preventing invalid input from updating records.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jyukuan"},"content":"    - **`view-history`**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jyukuan"},"content":"        - Supports viewing a patient’s medical history by either NRIC (e.g., `view-history ic/S1234567A`) or by name (","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jyukuan"},"content":"          e.g., `view-history John Doe`).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jyukuan"},"content":"        - Displays all stored entries for the patient(s) found.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jyukuan"},"content":"    - **`edit-history`**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jyukuan"},"content":"        - Enables replacing the first occurrence of a specified old history entry with a new one.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jyukuan"},"content":"        - Uses `equalsIgnoreCase()` matching, providing leniency in text formatting.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jyukuan"},"content":"2. **Parser Integration**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jyukuan"},"content":"    - Implemented specialized parsing logic (`parseStoreHistory`, `parseViewHistory`, `parseEditHistory`) to handle the","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jyukuan"},"content":"      format for new commands.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jyukuan"},"content":"    - Ensured error messages (e.g., `InvalidInputFormatException`) provide clarity when commands are malformed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jyukuan"},"content":"3. **Exception Handling**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jyukuan"},"content":"    - Enhanced user feedback for invalid commands or missing parameters.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jyukuan"},"content":"    - Threw `UnloadedStorageException` if data writing fails, allowing the system to safely abort the operation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jyukuan"},"content":"4. **Java Doc**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jyukuan"},"content":"    - Provided code reviews on pull requests that impacted the data structures for storing patient details and medical","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jyukuan"},"content":"      histories.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jyukuan"},"content":"    - Authored detailed JavaDoc for classes and methods dealing with patient history (`store-history`, `view-history`,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jyukuan"},"content":"      `edit-history` commands, and related `ManagementSystem` methods). This documentation highlights parameters, return","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jyukuan"},"content":"      values, and exceptions, making the code easier to read and maintain.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jyukuan"},"content":"    - Helped maintain consistent Java coding conventions (e.g., method naming, usage of final variables) throughout the","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jyukuan"},"content":"      codebase.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jyukuan"},"content":"5. **Review / Mentoring Contributions**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jyukuan"},"content":"    - Provided code reviews on pull requests that impacted the data structures storing patient details.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jyukuan"},"content":"    - Helped maintain consistent Java coding conventions (e.g., method naming, usage of final variables) throughout the","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jyukuan"},"content":"      codebase.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jyukuan"},"content":"### 3. Contributions to the User Guide  (UG)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jyukuan"},"content":"- **Sections**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jyukuan"},"content":"    - [Adding Medical History: `store-history`](#)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jyukuan"},"content":"    - [Viewing Medical History: `view-history`](#)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jyukuan"},"content":"    - [Editing Medical History: `edit-history`](#)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jyukuan"},"content":"  I wrote the instructions, formats, and examples for these commands. I also included **tips** about commas for multiple","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jyukuan"},"content":"  entries and clarifications on the usage of NRIC vs. name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jyukuan"},"content":"### 4. Contributions to the Developer Guide (DG)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jyukuan"},"content":"1. **Testing Patient Management Features**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jyukuan"},"content":"    - Authored the guidelines and scenarios on how to manually test and validate patient-related operations.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jyukuan"},"content":"    - Added use cases and step-by-step instructions to ensure testers can verify correctness for storing, viewing, and","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jyukuan"},"content":"      editing patient history.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jyukuan"},"content":"2. **Storing Medical History Feature**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jyukuan"},"content":"    - Wrote the detailed explanation of how `store-history`, `view-history`, and `edit-history` commands work","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jyukuan"},"content":"      internally.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jyukuan"},"content":"    - Added or updated sequence diagrams in PlantUML to illustrate the flow of data and command execution for medical","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jyukuan"},"content":"      history.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jyukuan"},"content":"3. **UML Diagrams**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jyukuan"},"content":"    - Created the **Sequence Diagrams** for the `store-history` feature, demonstrating how the command interacts with","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jyukuan"},"content":"      `Parser`, `ManagementSystem`, and `Storage`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jyukuan"},"content":"    - Ensured diagrams accurately reflect the final implementation (parameter extraction, validation steps, and","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jyukuan"},"content":"      file-saving routines).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jyukuan"},"content":"    - Created the **Class Diagrams** for Command Component.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jyukuan"},"content":"    - Ensured diagrams accurately reflect the final implementation.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jyukuan"},"content":"### 5. Contributions to Team-Based Tasks","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jyukuan"},"content":"- Participated in **team discussions** to decide on command naming patterns (`store-history` vs. `add-history`) and the approach to handle multiple comma-separated entries.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jyukuan"},"content":"- Ensured consistent **exception messages** across the project for invalid data entries.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jyukuan"},"content":"- Reviewed and tested merges from teammates, particularly those that affected `ManagementSystem` or `Parser`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jyukuan"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"jyukuan":99}},{"path":"src/main/java/ClinicEase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"import command.Command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"import exception.AppointmentClashException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import exception.DuplicatePatientIDException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import exception.PatientNotFoundException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import exception.UnknownCommandException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylancmznus"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"import manager.Patient;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"import manager.Prescription;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"import miscellaneous.Parser;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"import java.util.List;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":" * Main class of the ClinicEase application, responsible for initializing","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":" * components and driving the command execution loop.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":" * ClinicEase is a desktop application designed for clinic management,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":" * providing a command-line interface for managing patients, appointments,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":" * and prescriptions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"public class ClinicEase {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"    private ManagementSystem manager;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"     * Constructs a new ClinicEase application with a specified storage location.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"     * Initializes the UI, storage, and management system components.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"     * Attempts to load existing data from storage files if available.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"     * @param filePath The directory path where data files will be stored","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"    public ClinicEase(String filePath) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"        assert filePath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"            List\u003cPatient\u003e patients \u003d Storage.loadPatients();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cPrescription\u003e prescriptions \u003d Storage.loadPrescriptions();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"            this.manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e(), prescriptions);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"            List\u003cAppointment\u003e appointments \u003d Storage.loadAppointments(manager);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"            manager.setAppointments(appointments);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"        } catch (UnloadedStorageException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"            ui.showError(\"Could not load data: \" + e.getMessage());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"            this.manager \u003d new ManagementSystem(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"     * Starts the application\u0027s main execution loop.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"     * Displays welcome message, continuously reads user commands,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"     * executes them until an exit command is received.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"     * Handles exceptions by displaying appropriate error messages.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"    public void run() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"        boolean running \u003d true;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"        while (running) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"            try {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"                if (input.isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"                    continue;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"                }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"                command.execute(manager, ui);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"                running \u003d !command.isExit();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"            } catch (InvalidInputFormatException | UnknownCommandException | DuplicatePatientIDException |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"                     UnloadedStorageException | PatientNotFoundException | AppointmentClashException e) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"     * The entry point of the application.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"     * Creates a new ClinicEase instance with storage in the \"data\" directory","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"     * and starts the application.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"     * @param args Command line arguments (not used)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chwenyee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JudHoka"},"content":"        new ClinicEase(\"data\").run();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"dylancmznus":1,"JudHoka":29,"chwenyee":26,"Basudeb2005":37}},{"path":"src/main/java/command/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import exception.AppointmentClashException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import exception.PatientNotFoundException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":" * Represents a command to add a new appointment to the management system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    protected Appointment appointment;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     * Constructs an AddAppointmentCommand with the specified appointment.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"     * @param appointment The appointment to be added to the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     * Gets the appointment associated with this command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"     * @return The appointment to be added.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    public Appointment getAppointment() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"        return appointment;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"     * Executes the command to add the appointment to the appointment list in management system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"     * @param manager The management system that stores the appointment.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"     * @throws UnloadedStorageException  If the storage component is not properly loaded.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"     * @throws PatientNotFoundException  If the patient associated with the appointment is not found.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"     * @throws AppointmentClashException If the appointment time conflicts with an existing appointment.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws UnloadedStorageException, PatientNotFoundException,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"            AppointmentClashException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointment);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"        ui.showAppointmentAdded(manager.getAppointments());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"JudHoka":1,"chwenyee":50}},{"path":"src/main/java/command/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import exception.DuplicatePatientIDException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import manager.Patient;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":" * Represents a command to add a patient to the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"public class AddPatientCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"    protected Patient patient;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"     * Constructs an AddPatientCommand with the specified patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"     * @param patient The patient to be added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    public AddPatientCommand(Patient patient) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"     * Executes the add patient command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"     * Adds the patient to the management system and shows confirmation via UI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"     * @param manager The management system to update.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"     * @param ui      The user interface to interact with the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"     * @throws DuplicatePatientIDException If a patient with the same ID already exists.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"     * @throws UnloadedStorageException    If the storage is not properly initialized.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"    public void execute(ManagementSystem manager, Ui ui)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"            throws DuplicatePatientIDException, UnloadedStorageException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        manager.addPatient(patient);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"        ui.showPatientAdded(manager.getPatients());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"JudHoka":20,"chwenyee":20}},{"path":"src/main/java/command/AddPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"package command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"import manager.Prescription;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":" * Command to add a new prescription to the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":" * Handles the creation of a new prescription and displays","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":" * feedback about the operation to the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"//@@author Basudeb2005","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"public class AddPrescriptionCommand extends Command {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"    private final Prescription prescription;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"     * Constructs an AddPrescriptionCommand with the specified prescription.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"     * @param prescription The prescription to be added to the system","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"    public AddPrescriptionCommand(Prescription prescription) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"        this.prescription \u003d prescription;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"     * Executes the add prescription command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"     * Adds the prescription to the management system and displays confirmation.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"     * Shows error message if the patient ID doesn\u0027t exist.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"     * @param manager The management system that handles the data","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"     * @param ui      The user interface to display results","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If there was an error saving to storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws UnloadedStorageException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"            Prescription addedPrescription \u003d manager.addPrescription(prescription);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"            ui.showLine();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"Successfully added prescription:\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(addedPrescription.toString());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"Prescription has been generated.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"View the prescription for the patient with ID: \" + addedPrescription.getPatientId());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"and prescription ID: \" + addedPrescription.getPrescriptionId());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"            ui.showLine();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"            ui.showError(\"Failed to add prescription: \" + e.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"     * Returns whether this command should exit the application.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"     * @return false (this command does not exit the application)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"        return false;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"} ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":62}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.PatientNotFoundException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import exception.AppointmentClashException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import exception.DuplicatePatientIDException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":" * Abstract class representing a command in the clinic management system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":" * All commands must extend this class and implement the execute method.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":" * Follows the Command pattern to encapsulate requests as objects.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"public abstract class Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"     * Executes the command with the given management system and UI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"     * Each subclass must implement this method with its specific behavior.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"     * @param manager The management system that provides operations on data","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"     * @param ui      The user interface to display results","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"     * @throws DuplicatePatientIDException If a patient with the same ID already exists","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException    If there was an error with storage operations","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"     * @throws PatientNotFoundException    If a requested patient was not found","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"     * @throws AppointmentClashException   If an appointment conflicts with existing ones","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"     * @throws InvalidInputFormatException If the input format is invalid","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"    public abstract void execute(ManagementSystem manager, Ui ui)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"            throws DuplicatePatientIDException, UnloadedStorageException, PatientNotFoundException,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"            AppointmentClashException, InvalidInputFormatException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"     * Returns whether this command should exit the application.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"     * Default implementation returns false.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"     * Can be overridden by commands that should exit the application.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"     * @return true if the command should cause the application to exit, false otherwise","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"        return false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"JudHoka":7,"chwenyee":13,"Basudeb2005":24}},{"path":"src/main/java/command/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":" * Represents a command to delete an existing appointment from the management system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"    protected String apptId;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"     * Constructs a DeleteAppointmentCommand with the specified appointment ID.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     * @param apptId The unique identifier of the appointment to be deleted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"    public DeleteAppointmentCommand(String apptId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"        this.apptId \u003d apptId;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     * Gets the appointment ID associated with this command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     * @return The ID of the appointment to be deleted.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"    public String getApptId() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"        return apptId;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"     * Executes the command to delete the appointment from the management system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"     * @param manager The management system that contains the appointment.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"     * @throws UnloadedStorageException If the storage component is not properly loaded.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws UnloadedStorageException {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"        Appointment removedAppointment \u003d manager.deleteAppointment(apptId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"        ui.showAppointmentDeleted(manager.getAppointments(), removedAppointment, apptId);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"JudHoka":2,"chwenyee":43}},{"path":"src/main/java/command/DeletePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import manager.Patient;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":" * Represents a command to delete a patient from the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"public class DeletePatientCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"    protected String nric;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"     * Constructs a DeletePatientCommand with the given NRIC.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"     * @param nric The NRIC of the patient to delete.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"    public DeletePatientCommand(String nric) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"     * Executes the delete patient command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"     * Removes the patient with the specified NRIC from the system and shows confirmation via UI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"     * @param manager The management system to update.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"     * @param ui      The user interface to interact with the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"     * @throws UnloadedStorageException If storage is not properly initialized.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws UnloadedStorageException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"        Patient removedPatient \u003d manager.deletePatient(nric);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"        ui.showPatientDeleted(removedPatient, nric);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"JudHoka":18,"chwenyee":18}},{"path":"src/main/java/command/EditPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jyukuan"},"content":"package command;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import exception.PatientNotFoundException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jyukuan"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jyukuan"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jyukuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jyukuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jyukuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jyukuan"},"content":"public class EditPatientCommand extends Command {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jyukuan"},"content":"    // details: [0]\u003dnric, [1]\u003dname, [2]\u003ddob, [3]\u003dgender, [4]\u003daddress, [5]\u003dphone","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jyukuan"},"content":"    private final String[] details;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jyukuan"},"content":"    public EditPatientCommand(String[] details) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jyukuan"},"content":"        this.details \u003d details;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jyukuan"},"content":"     * Executes the edit-patient command by validating the new date of birth (if present),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jyukuan"},"content":"     * and then delegating to {@code manager.editPatient(...)} with the appropriate parameters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jyukuan"},"content":"     * @param manager The ManagementSystem that manages patient data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jyukuan"},"content":"     * @param ui      The UI used to show error or success messages.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jyukuan"},"content":"     * @throws UnloadedStorageException    If editing the patient data fails when saving to storage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jyukuan"},"content":"     * @throws PatientNotFoundException    If no patient with the specified NRIC is found.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jyukuan"},"content":"     * @throws InvalidInputFormatException If the provided date is invalid or if newDob is after the current date.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jyukuan"},"content":"    @Override","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws UnloadedStorageException,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"            PatientNotFoundException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jyukuan"},"content":"        String nric \u003d details[0];","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jyukuan"},"content":"        String name \u003d details[1];","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jyukuan"},"content":"        String dob \u003d details[2];","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jyukuan"},"content":"        String gender \u003d details[3];","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jyukuan"},"content":"        String addr \u003d details[4];","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jyukuan"},"content":"        String phone \u003d details[5];","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jyukuan"},"content":"        // If dob is specified, we parse it here to confirm validity before calling editPatient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jyukuan"},"content":"        if (dob !\u003d null \u0026\u0026 !dob.isBlank()) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jyukuan"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jyukuan"},"content":"            try {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jyukuan"},"content":"                LocalDate.parse(dob, formatter);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jyukuan"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jyukuan"},"content":"                ui.showError(\"Invalid date format for Date of Birth! Please use yyyy-MM-dd (e.g., 1990-05-12).\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jyukuan"},"content":"                return;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jyukuan"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jyukuan"},"content":"        manager.editPatient(nric, name, dob, gender, addr, phone);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jyukuan"},"content":"        Ui.showLine();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jyukuan"},"content":"        System.out.println(\"Edit-patient command executed.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jyukuan"},"content":"        Ui.showLine();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jyukuan"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"JudHoka":4,"chwenyee":1,"jyukuan":53}},{"path":"src/main/java/command/EditPatientHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jyukuan"},"content":"package command;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jyukuan"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jyukuan"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jyukuan"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jyukuan"},"content":" * Represents a command to edit existing medical history entries for a patient.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jyukuan"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jyukuan"},"content":"public class EditPatientHistoryCommand extends Command {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jyukuan"},"content":"     * String array containing:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jyukuan"},"content":"     * [0] \u003d Patient NRIC","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jyukuan"},"content":"     * [1] \u003d Old history text to be replaced","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jyukuan"},"content":"     * [2] \u003d New history text to replace with","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jyukuan"},"content":"    private final String[] details;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jyukuan"},"content":"     * Constructs an EditPatientHistoryCommand with the specified details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jyukuan"},"content":"     * @param details Contains patient NRIC, old history entry, and new history entry.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jyukuan"},"content":"    public EditPatientHistoryCommand(String[] details) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jyukuan"},"content":"        this.details \u003d details;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jyukuan"},"content":"     * Executes the command to edit the medical history of a specified patient.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jyukuan"},"content":"     * @param manager The ManagementSystem managing patient data and operations.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jyukuan"},"content":"     * @param ui      The Ui used to display output to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jyukuan"},"content":"     * @throws UnloadedStorageException if saving changes to storage fails.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jyukuan"},"content":"    @Override","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws UnloadedStorageException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jyukuan"},"content":"        String nric \u003d details[0];","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jyukuan"},"content":"        String oldHistory \u003d details[1];","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jyukuan"},"content":"        String newHistory \u003d details[2];","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jyukuan"},"content":"        manager.editPatientHistory(nric, oldHistory, newHistory);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jyukuan"},"content":"        Ui.showLine();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jyukuan"},"content":"        System.out.println(\"Edit-history command executed.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jyukuan"},"content":"        Ui.showLine();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jyukuan"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"JudHoka":2,"jyukuan":46}},{"path":"src/main/java/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":" * This command terminates the program after displaying a goodbye message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"     * Executes the exit command by displaying the goodbye message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"     * @param manager The management system (unused in this command).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface used to display the goodbye message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"    public void execute(ManagementSystem manager, Ui ui) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"        ui.showBye();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"     * Indicates that this command should terminate the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     * @return Returns true to exit the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"        return true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"chwenyee":32}},{"path":"src/main/java/command/FindAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylancmznus"},"content":"package command;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylancmznus"},"content":"import java.util.List;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylancmznus"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylancmznus"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylancmznus"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylancmznus"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylancmznus"},"content":" * Command to find appointments for a patient by their NRIC.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylancmznus"},"content":" * Interacts with the {@link ManagementSystem} to retrieve","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylancmznus"},"content":" * all appointments associated with a specific NRIC and displays them through the {@link Ui}.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylancmznus"},"content":" *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylancmznus"},"content":" * \u003cp\u003e This command follows the Command pattern, which encapsulates the appointment search","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylancmznus"},"content":" * functionality to allow for consistent execution without directly manipulating the system\u0027s components.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylancmznus"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylancmznus"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylancmznus"},"content":"public class FindAppointmentCommand extends Command {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylancmznus"},"content":"    protected String nric;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylancmznus"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylancmznus"},"content":"     * Constructs FindAppointmentCommand with the specified NRIC.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylancmznus"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylancmznus"},"content":"     * @param nric the NRIC of the patient whose appointments are to be found","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylancmznus"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylancmznus"},"content":"    public FindAppointmentCommand(String nric) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylancmznus"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylancmznus"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylancmznus"},"content":"     * Executes the command to find appointments for a patient with the given NRIC.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylancmznus"},"content":"     * It retrieves the list of appointments from ManagementSystem","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylancmznus"},"content":"     * and displays the results using Ui.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylancmznus"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylancmznus"},"content":"     * @param manager ManagementSystem responsible for handling appointment data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylancmznus"},"content":"     * @param ui      Ui responsible for displaying the list of appointments","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylancmznus"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylancmznus"},"content":"    @Override","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylancmznus"},"content":"    public void execute(ManagementSystem manager, Ui ui) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylancmznus"},"content":"        List\u003cAppointment\u003e foundAppointments \u003d manager.findAppointmentsByNric(nric);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylancmznus"},"content":"        ui.showAppointmentsFound(foundAppointments, nric);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylancmznus"},"content":"}","lastModifiedDate":"2025-03-29","isFullCredit":false}],"authorContributionMap":{"dylancmznus":42,"JudHoka":1}},{"path":"src/main/java/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":" * Represents a command to display all available commands and their usage formats.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"     * Executes the help command by displaying the help message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"     * @param manager The management system (unused in this command).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface used to display all available commands of the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    public void execute(ManagementSystem manager, Ui ui) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"        ui.showHelp();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":20}},{"path":"src/main/java/command/ListAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":" * Represents a command to list all appointments in the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":" * This command displays all current appointments in the appointment list of the management system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"public class ListAppointmentCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"     * Executes the list appointments command by displaying all appointments.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     * @param manager The management system containing the appointment list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying the appointment list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    public void execute(ManagementSystem manager, Ui ui) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"        ui.showAppointmentList(manager.getAppointments());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"chwenyee":21}},{"path":"src/main/java/command/ListPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":" * Represents a command to list all patients in the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"public class ListPatientCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"     * Executes the list patient command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"     * Displays all patients stored in the management system using the UI.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"     * @param manager The management system containing the patients.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"     * @param ui      The user interface to interact with the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"    public void execute(ManagementSystem manager, Ui ui) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"        ui.showPatientList(manager.getPatients());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"JudHoka":11,"chwenyee":11}},{"path":"src/main/java/command/MarkApppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylancmznus"},"content":"package command;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylancmznus"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylancmznus"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylancmznus"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylancmznus"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylancmznus"},"content":" * Represents a command to mark an appointment as done using its unique appointment ID.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylancmznus"},"content":" * This command interacts with the ManagementSystem to update the appointment status","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylancmznus"},"content":" * and utilizes the Ui to provide feedback to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylancmznus"},"content":" *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylancmznus"},"content":" * \u003cp\u003eThis class is part of the Command pattern implementation in the system,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylancmznus"},"content":" * using the mark operation for appointments in a reusable and modular way.\u003c/p\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylancmznus"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylancmznus"},"content":"public class MarkApppointmentCommand extends Command {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylancmznus"},"content":"    protected String apptId;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylancmznus"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylancmznus"},"content":"     * Constructs a MarkApppointmentCommand with the specified appointment ID.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylancmznus"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylancmznus"},"content":"     * @param apptId the ID of the appointment to be marked as completed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylancmznus"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylancmznus"},"content":"    public MarkApppointmentCommand(String apptId) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylancmznus"},"content":"        this.apptId \u003d apptId;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylancmznus"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylancmznus"},"content":"     * Executes the command to mark the appointment with the given ID as completed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylancmznus"},"content":"     * It updates the appointment\u0027s status through the ManagementSystem and","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylancmznus"},"content":"     * displays the updated appointment list and confirmation via the Ui.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylancmznus"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylancmznus"},"content":"     * @param manager the ManagementSystem responsible for managing appointments","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylancmznus"},"content":"     * @param ui      the Ui responsible for displaying results to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylancmznus"},"content":"     * @throws UnloadedStorageException if the storage system was not initialized when the command was executed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylancmznus"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylancmznus"},"content":"    @Override","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws UnloadedStorageException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylancmznus"},"content":"        Appointment appointment \u003d manager.markAppointment(apptId);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylancmznus"},"content":"        ui.showAppointmentMarked(manager.getAppointments(), appointment, apptId);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylancmznus"},"content":"}","lastModifiedDate":"2025-03-29","isFullCredit":false}],"authorContributionMap":{"dylancmznus":40,"JudHoka":2}},{"path":"src/main/java/command/SortAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import exception.DuplicatePatientIDException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":" * Represents a command to sort appointments in the management system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"public class SortAppointmentCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    protected String type;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"     * Constructs a SortAppointmentCommand with the specified sorting type.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"     * @param type The type of sorting to perform (\"date\" or other supported types).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"    public SortAppointmentCommand(String type) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     * Executes the command to sort appointments in the management system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"     * @param manager The management system containing the appointments.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     * @param ui      The user interface for displaying the sorted appointments.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"     * @throws DuplicatePatientIDException If duplicate patient IDs are encountered.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"     * @throws UnloadedStorageException    If the storage component is not properly loaded.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws DuplicatePatientIDException,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"            UnloadedStorageException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        if (type.equals(\"date\")) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"            List\u003cAppointment\u003e sortedApptByDateTime \u003d manager.sortAppointmentsByDateTime(manager.getAppointments());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"            ui.showAppointmentList(sortedApptByDateTime);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"        } else {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"            List\u003cAppointment\u003e sortedApptById \u003d manager.sortAppointmentsById(manager.getAppointments());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"            ui.showAppointmentList(sortedApptById);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"chwenyee":45}},{"path":"src/main/java/command/StoreMedHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import exception.PatientNotFoundException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jyukuan"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jyukuan"},"content":" * Represents a command to store medical history for a specified patient.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jyukuan"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jyukuan"},"content":"//@@author jyukuan","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jyukuan"},"content":"public class StoreMedHistoryCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jyukuan"},"content":"     * Patient\u0027s NRIC to which the medical history belongs.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jyukuan"},"content":"    private String nric;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jyukuan"},"content":"     * The medical history (or histories) to store, typically in comma-separated format.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jyukuan"},"content":"    private String medHistory;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jyukuan"},"content":"     * Constructs a StoreMedHistoryCommand with the necessary details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jyukuan"},"content":"     * The first element in the array is the patient\u0027s NRIC, the second is the medical history text.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jyukuan"},"content":"     * @param details String array containing [0] \u003d NRIC, [1] \u003d Medical history text.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jyukuan"},"content":"    public StoreMedHistoryCommand(String[] details) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jyukuan"},"content":"        this.nric \u003d details[0];","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jyukuan"},"content":"        this.medHistory \u003d details[1];","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jyukuan"},"content":"     * Executes the command to store the given medical history for the specified patient.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jyukuan"},"content":"     * @param manager The ManagementSystem that manages patient and appointment data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jyukuan"},"content":"     * @param ui      The Ui used to display success or error messages.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jyukuan"},"content":"     * @throws UnloadedStorageException if saving to storage fails due to uninitialized storage.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jyukuan"},"content":"     * @throws PatientNotFoundException if the patient with the given NRIC is not found.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jyukuan"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jyukuan"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws UnloadedStorageException, PatientNotFoundException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jyukuan"},"content":"        manager.storeMedicalHistory(nric, medHistory);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jyukuan"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"JudHoka":1,"chwenyee":6,"jyukuan":40}},{"path":"src/main/java/command/UnmarkAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylancmznus"},"content":"package command;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylancmznus"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylancmznus"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylancmznus"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylancmznus"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylancmznus"},"content":" * Represents a command to unmark an appointment, indicating it is no longer completed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylancmznus"},"content":" * This command interacts with the ManagementSystem to revert the appointment status","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylancmznus"},"content":" * and utilizes the Ui to provide feedback to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylancmznus"},"content":" *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylancmznus"},"content":" * \u003cp\u003eIt is part of the Command pattern implementation, encapsulating the logic","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylancmznus"},"content":" * for unmarking appointments in a modular and reusable way.\u003c/p\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylancmznus"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylancmznus"},"content":"public class UnmarkAppointmentCommand extends Command {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylancmznus"},"content":"    protected String apptId;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylancmznus"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylancmznus"},"content":"     * Constructs an UnmarkAppointmentCommand with the specified appointment ID.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylancmznus"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylancmznus"},"content":"     * @param apptId the ID of the appointment to be unmarked","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylancmznus"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylancmznus"},"content":"    public UnmarkAppointmentCommand(String apptId) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylancmznus"},"content":"        this.apptId \u003d apptId;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylancmznus"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylancmznus"},"content":"     * Executes command to unmark the appointment with the given ID.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylancmznus"},"content":"     * It updates appointment\u0027s status through the ManagementSystem and","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylancmznus"},"content":"     * displays the updated list and confirmation via the Ui.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylancmznus"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylancmznus"},"content":"     * @param manager the ManagementSystem responsible for managing appointments","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylancmznus"},"content":"     * @param ui      the Ui responsible for displaying results to the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylancmznus"},"content":"     * @throws UnloadedStorageException if the storage system was not initialized when the command was executed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylancmznus"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylancmznus"},"content":"    @Override","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws UnloadedStorageException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylancmznus"},"content":"        Appointment appointment \u003d manager.unmarkAppointment(apptId);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylancmznus"},"content":"        ui.showAppointmentUnmarked(manager.getAppointments(), appointment, apptId);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylancmznus"},"content":"}","lastModifiedDate":"2025-03-29","isFullCredit":false}],"authorContributionMap":{"dylancmznus":40,"JudHoka":2}},{"path":"src/main/java/command/ViewAllPrescriptionsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"package command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"import manager.Patient;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"import manager.Prescription;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"import java.util.List;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":" * Command to view all prescriptions for a specific patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":" * Lists all prescriptions with their basic details for the given patient ID.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"//@@author Basudeb2005","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"public class ViewAllPrescriptionsCommand extends Command {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"    private final String patientId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"     * Constructs a ViewAllPrescriptionsCommand with the specified patient ID.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"     * @param patientId The ID of the patient whose prescriptions will be displayed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"    public ViewAllPrescriptionsCommand(String patientId) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"     * Executes the view all prescriptions command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"     * Retrieves and displays all prescriptions associated with the specified patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"     * Shows an appropriate message if no prescriptions exist or if the patient is not found.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"     * @param manager The management system that handles the data","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"     * @param ui      The user interface to display results","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If there was an error with storage operations","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws UnloadedStorageException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"        Patient patient \u003d manager.viewPatient(patientId);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"        if (patient \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"            ui.showError(\"Patient with ID \" + patientId + \" not found.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"            return;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cPrescription\u003e prescriptions \u003d manager.getPrescriptionsForPatient(patientId);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"        ui.showLine();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"        if (prescriptions.isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"No prescriptions found for patient \" + patient.getName() + \" (\" + patientId + \").\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"        } else {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"Prescriptions for patient \" + patient.getName() + \" (\" + patientId + \"):\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"            for (Prescription prescription : prescriptions) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"                System.out.println(\"Prescription ID: \" + prescription.getPrescriptionId());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"                System.out.println(\"Date: \" + prescription.getTimestamp().format(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"                        java.time.format.DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"                System.out.println(\"Symptoms:\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"                for (String symptom : prescription.getSymptoms()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"                    System.out.println(\"- \" + symptom);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"                }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"                System.out.println(\"Medicines:\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"                for (String medicine : prescription.getMedicines()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"                    System.out.println(\"- \" + medicine);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"                }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"                System.out.println(\"Notes: \" + prescription.getNotes());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"                System.out.println(\"\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"Total prescriptions: \" + prescriptions.size());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"Use \u0027view-prescription PRESCRIPTION_ID\u0027 to view details and generate HTML.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"        ui.showLine();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Basudeb2005"},"content":"     * Returns whether this command should exit the application.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"     * @return false (this command does not exit the application)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"        return false;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"} ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":89}},{"path":"src/main/java/command/ViewMedHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import exception.PatientNotFoundException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jyukuan"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jyukuan"},"content":" * Represents a command to view medical history for a patient,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jyukuan"},"content":" * either by NRIC or by name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jyukuan"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"public class ViewMedHistoryCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"    protected String type;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"    protected String nameOrIc;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jyukuan"},"content":"     * Constructs a ViewMedHistoryCommand with the necessary details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jyukuan"},"content":"     * details[0] \u003d \"ic\" or \"n\" (search type), details[1] \u003d the actual NRIC or name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jyukuan"},"content":"     * @param details String array indicating search type and the patient\u0027s NRIC or name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"    public ViewMedHistoryCommand(String[] details) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"        this.type \u003d details[0];","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"        this.nameOrIc \u003d details[1];","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jyukuan"},"content":"     * Executes the command to view a patient\u0027s medical history.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jyukuan"},"content":"     * If type \u003d\u003d \"ic\", it searches by NRIC; otherwise, it searches by name.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jyukuan"},"content":"     * @param manager The ManagementSystem that manages patient data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jyukuan"},"content":"     * @param ui      The Ui used to display output to the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jyukuan"},"content":"     * @throws PatientNotFoundException if no matching patient is found when searching by NRIC.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws PatientNotFoundException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        if (type.equals(\"ic\")) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"            manager.viewMedicalHistoryByNric(nameOrIc);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"        } else {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"            manager.viewMedicalHistoryByName(nameOrIc);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"chwenyee":24,"jyukuan":19}},{"path":"src/main/java/command/ViewPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import manager.Patient;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylancmznus"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylancmznus"},"content":" * Command to view a patient in the system by their NRIC.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylancmznus"},"content":" * This command interacts with the {@link ManagementSystem} to retrieve","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylancmznus"},"content":" * a patient and displays their details through the {@link Ui}.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylancmznus"},"content":" *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylancmznus"},"content":" * \u003cp\u003e This command is part of the Command pattern used to encapsulate","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylancmznus"},"content":" * the viewing functionality of a patient, allowing easy execution","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylancmznus"},"content":" * without directly manipulating system objects.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylancmznus"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylancmznus"},"content":" *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylancmznus"},"content":" * @author dylancmznus","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylancmznus"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"public class ViewPatientCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"    protected String nric;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylancmznus"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylancmznus"},"content":"     * Constructs ViewPatientCommand with the specified NRIC.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylancmznus"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylancmznus"},"content":"     * @param nric the NRIC of the patient to be viewed","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylancmznus"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"    public ViewPatientCommand(String nric) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylancmznus"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylancmznus"},"content":"     * Executes the command to view a patient with the given NRIC.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylancmznus"},"content":"     * Retrieves the patient from ManagementSystem and","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylancmznus"},"content":"     * displays the details using Ui.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylancmznus"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylancmznus"},"content":"     * @param manager the {@link ManagementSystem} responsible for handling patient data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylancmznus"},"content":"     * @param ui      the {@link Ui} responsible for displaying the patient information","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylancmznus"},"content":"     * @throws AssertionError if the manager or ui instances are null","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylancmznus"},"content":"     * @throws AssertionError if no patient is found for the given NRIC","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylancmznus"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"    public void execute(ManagementSystem manager, Ui ui) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylancmznus"},"content":"        assert manager !\u003d null : \"ManagementSystem instance can\u0027t be empty\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylancmznus"},"content":"        assert ui !\u003d null : \"Ui instance can\u0027t be empty\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"        Patient matchedPatient \u003d manager.viewPatient(nric);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylancmznus"},"content":"        assert matchedPatient !\u003d null : \"No patient found for NRIC: \" + nric;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"        ui.showPatientViewed(matchedPatient, nric);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"dylancmznus":32,"chwenyee":19}},{"path":"src/main/java/command/ViewPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"package command;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"import manager.Patient;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"import manager.Prescription;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"import java.io.File;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":" * Command to view a specific prescription and generate its HTML document.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":" * Displays detailed prescription information and creates a printable","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":" * HTML version of the prescription.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"//@@author Basudeb2005","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"public class ViewPrescriptionCommand extends Command {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"    private final String prescriptionId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"     * Constructs a ViewPrescriptionCommand with the specified prescription ID.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"     * @param prescriptionId The ID of the prescription to view","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"    public ViewPrescriptionCommand(String prescriptionId) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"        this.prescriptionId \u003d prescriptionId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"     * Executes the view prescription command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"     * Retrieves the prescription with the specified ID and displays its details.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"     * Also generates an HTML file for printing the prescription.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"     * @param manager The management system that handles the data","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"     * @param ui      The user interface to display results","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If there was an error with storage operations","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"    public void execute(ManagementSystem manager, Ui ui) throws UnloadedStorageException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d manager.getPrescriptionById(prescriptionId);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"        if (prescription \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"            ui.showError(\"Prescription with ID \" + prescriptionId + \" not found.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"            return;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"        Patient patient \u003d manager.viewPatient(prescription.getPatientId());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"        ui.showLine();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"        System.out.println(\"Prescription details:\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"        System.out.println(prescription.toString());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"        System.out.println(\"\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"        // Generate HTML file","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"        Storage.savePrescriptionHtml(prescription, patient);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"        String fileName \u003d \"prescription_\" + prescription.getPatientId() + \"_\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"                + prescription.getPrescriptionId().split(\"-\")[1] + \".html\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"        String filePath \u003d new File(\"\").getAbsolutePath()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"                + File.separator + \"data\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"                + File.separator + \"prescriptions\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"                + File.separator + fileName;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"        System.out.println(\"Prescription HTML file generated at: \" + filePath);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"        System.out.println(\"Open this file in a web browser to view and print the prescription.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"        ui.showLine();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"     * Returns whether this command should exit the application.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"     * @return false (this command does not exit the application)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"        return false;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"} ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":79}},{"path":"src/main/java/exception/AppointmentClashException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package exception;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":" * Represents an exception specific to appointment clash.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":" * This exception is thrown when attempting to schedule an appointment that conflicts with","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":" * an existing appointment in the system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"public class AppointmentClashException extends Exception {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"     * Constructs an AppointmentClashException with the specified detail message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"     * @param message The detail message explaining the appointment conflict","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    public AppointmentClashException(String message) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"        super(message);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-04-05","isFullCredit":false}],"authorContributionMap":{"chwenyee":18}},{"path":"src/main/java/exception/DuplicatePatientIDException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package exception;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":" * Represents an exception specific to duplicate patient IDs.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":" * This exception is thrown when attempting to add a patient with an ID that already","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":" * exists in the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"public class DuplicatePatientIDException extends Exception {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"     * Constructs a DuplicatePatientIDException with the specified detail message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"     * @param message The detail message explaining the duplicate ID issue","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    public DuplicatePatientIDException(String message) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"        super(message);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"chwenyee":7,"Basudeb2005":11}},{"path":"src/main/java/exception/InvalidInputFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package exception;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":" * Represents an exception specific to the invalid user input format.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":" * This exception is thrown when the user input does not match the expected format","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":" * for a command or parameter.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"public class InvalidInputFormatException extends Exception {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"     * Constructs an InvalidInputFormatException with the specified detail message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"     * @param message The detail message explaining the correct input format","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    public InvalidInputFormatException(String message) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"        super(message);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"chwenyee":18}},{"path":"src/main/java/exception/PatientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package exception;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":" * Exception thrown when a patient with the specified identifier is not found in the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"public class PatientNotFoundException extends Exception {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"     * Constructs a new PatientNotFoundException with the specified detail message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"     * @param message The detail message explaining the reason for the exception.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"    public PatientNotFoundException(String message) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"        super(message);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"JudHoka":9,"chwenyee":7}},{"path":"src/main/java/exception/UnknownCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package exception;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":" * Represents an exception specific to the unknown user command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":" * This exception is thrown when the user enters a command that is not recognized","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":" * by the application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"     * Constructs an UnknownCommandException with the specified message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"     * @param message The message indicating the command is invalid/unknown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"        super(message);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"chwenyee":19}},{"path":"src/main/java/exception/UnloadedStorageException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package exception;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":" * Represents an exception specific to storage access failure.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":" * This exception is thrown when the system fails to load or save data to/from storage,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":" * typically due to file system issues or corrupt data.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"public class UnloadedStorageException extends Exception {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"     * Constructs an UnloadedStorageException with the specified detail message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"     * @param message The detail message explaining the storage failure","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"    public UnloadedStorageException(String message) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"        super(message);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"JudHoka":8,"Basudeb2005":11}},{"path":"src/main/java/manager/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package manager;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":" * Represents an appointment in the clinic management system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":" * Contains information about the patient (NRIC), appointment date/time,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":" * description, and completion status.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"public class Appointment {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"    public static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"    public static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd h:mm a\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"    private static int runningId \u003d 100;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"    private final String id;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"    private final String nric;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"    private final String description;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylancmznus"},"content":"    private boolean isDone;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"     * Constructs a new Appointment with auto-generated ID.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"     * @param nric        The NRIC of the patient for this appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"     * @param dateTime    The date and time of the appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"     * @param description The description of the appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    public Appointment(String nric, LocalDateTime dateTime, String description) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"        assert nric !\u003d null \u0026\u0026 !nric.isBlank() : \"NRIC cannot be null or blank\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"        assert dateTime !\u003d null : \"DateTime cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Description cannot be null or blank\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"        this.id \u003d \"A\" + runningId++;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylancmznus"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"     * Constructs an Appointment with a specific ID (used for loading from storage).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"     * @param id          The predefined ID for the appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"     * @param nric        The NRIC of the patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"     * @param dateTime    The date and time of the appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"     * @param description The description of the appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"    public Appointment(String id, String nric, LocalDateTime dateTime, String description) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"    public String getId() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"        return id;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"     * Sets the running ID counter for new appointments.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"     * @param newId The new starting value for ID generation","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"    public static void setRunningId(int newId) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"        runningId \u003d newId;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"    public String getNric() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"        return nric;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"        return dateTime.toLocalDate();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chwenyee"},"content":"        return dateTime.toLocalTime();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chwenyee"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chwenyee"},"content":"        return dateTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"    public static int getRunningId() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"        return runningId;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Basudeb2005"},"content":"    public String getDescription() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Basudeb2005"},"content":"        return description;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chwenyee"},"content":"     * Checks the completion status of the appointment.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chwenyee"},"content":"     * @return true if the appointment is completed, false otherwise","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dylancmznus"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dylancmznus"},"content":"        return isDone;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dylancmznus"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dylancmznus"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dylancmznus"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylancmznus"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"chwenyee"},"content":"     * Sets the completion status of the appointment.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"chwenyee"},"content":"     * @param mark true to mark as done, false to mark as not done","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"    public void setIsDone(boolean mark) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JudHoka"},"content":"        this.isDone \u003d mark;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"chwenyee"},"content":"     * Gets the status icon of the appointment for display purposes.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"chwenyee"},"content":"     * @return \"X\" if done, \" \" (space) if not done","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"chwenyee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"chwenyee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"chwenyee"},"content":"     * Returns the formatted string representation of the appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chwenyee"},"content":"     * @return A formatted string showing appointment ID, status, NRIC, date/time and description","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Basudeb2005"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Basudeb2005"},"content":"    public String toString() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"chwenyee"},"content":"        return \"[\" + id + \"]\" + \"[\" + this.getStatusIcon() + \"]\" + \" - \"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"chwenyee"},"content":"                + nric + \" - \" + dateTime.format(OUTPUT_FORMAT) + \" - \" + description;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"chwenyee"},"content":"     * Returns the string representation of the appointment in a file-friendly format (for storage).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"chwenyee"},"content":"     * @return Pipe-delimited string containing all appointment\u0027s information","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JudHoka"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JudHoka"},"content":"        return id.substring(1) + \"|\" + this.isDone + \"|\" + this.nric + \"|\" +","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JudHoka"},"content":"                dateTime.format(OUTPUT_FORMAT) + \"|\" + this.description;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"dylancmznus":14,"JudHoka":26,"chwenyee":76,"Basudeb2005":35}},{"path":"src/main/java/manager/ManagementSystem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylancmznus"},"content":"package manager;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.PatientNotFoundException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import exception.AppointmentClashException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import exception.DuplicatePatientIDException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"import java.time.Duration;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"import java.util.List;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":" * The ManagementSystem class handles all business logic for the clinic management system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":" * It manages patients, appointments, and prescriptions, and coordinates with the storage system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":" * This class serves as the central component that maintains the state of the application","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":" * and provides operations to access and modify that state.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"public class ManagementSystem {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"    private final List\u003cAppointment\u003e appointments;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"    private final List\u003cPatient\u003e patients;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"    private final List\u003cPrescription\u003e prescriptions;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"     * Constructs a ManagementSystem with patients and appointments but no prescriptions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"     * @param loadedPatients     The list of patients to initialize with","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"     * @param loadedAppointments The list of appointments to initialize with","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"    public ManagementSystem(List\u003cPatient\u003e loadedPatients, List\u003cAppointment\u003e loadedAppointments) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"        assert loadedPatients !\u003d null : \"Patient list cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"        assert loadedAppointments !\u003d null : \"Appointment list cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"        appointments \u003d loadedAppointments;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"        patients \u003d loadedPatients;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"        prescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"     * Constructs a ManagementSystem with patients, appointments, and prescriptions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"     * @param loadedPatients      The list of patients to initialize with","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"     * @param loadedAppointments  The list of appointments to initialize with","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"     * @param loadedPrescriptions The list of prescriptions to initialize with","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"    public ManagementSystem(List\u003cPatient\u003e loadedPatients, List\u003cAppointment\u003e loadedAppointments,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"                            List\u003cPrescription\u003e loadedPrescriptions) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"        assert loadedPatients !\u003d null : \"Patient list cannot be null\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"        assert loadedAppointments !\u003d null : \"Appointment list cannot be null\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"        assert loadedPrescriptions !\u003d null : \"Prescription list cannot be null\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"        appointments \u003d loadedAppointments;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"        patients \u003d loadedPatients;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"        prescriptions \u003d loadedPrescriptions;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"     * Gets the list of all patients in the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"     * @return List of all Patient objects","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"    public List\u003cPatient\u003e getPatients() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"        return patients;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"     * Updates the list of appointments in the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"     * Replaces the entire appointment list with the provided one.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"     * @param appointments The new list of appointments to set","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JudHoka"},"content":"        this.appointments.clear();","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JudHoka"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"     * Gets the list of all appointments in the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"     * @return List of all Appointment objects","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chwenyee"},"content":"    public List\u003cAppointment\u003e getAppointments() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chwenyee"},"content":"        return appointments;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Basudeb2005"},"content":"     * Adds a new patient to the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Basudeb2005"},"content":"     * Checks for duplicate NRICs before adding the patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Basudeb2005"},"content":"     * Saves the updated patient list to storage after successful addition.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Basudeb2005"},"content":"     * @param patient The patient to add","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Basudeb2005"},"content":"     * @throws DuplicatePatientIDException If a patient with the same NRIC already exists","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException    If there was an error saving to storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JudHoka"},"content":"    public void addPatient(Patient patient) throws DuplicatePatientIDException, UnloadedStorageException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Basudeb2005"},"content":"        assert patient !\u003d null : \"Patient cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Basudeb2005"},"content":"        assert patients !\u003d null : \"Patient list cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chwenyee"},"content":"        for (Patient existingPatient : patients) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Basudeb2005"},"content":"            assert existingPatient !\u003d null : \"Existing patient in list cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"chwenyee"},"content":"            if (existingPatient.getId().equals(patient.getId())) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"chwenyee"},"content":"                throw new DuplicatePatientIDException(\"Patient ID already exists!\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chwenyee"},"content":"        patients.add(patient);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JudHoka"},"content":"        Storage.savePatients(patients);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Basudeb2005"},"content":"     * Deletes a patient from the system by NRIC.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Basudeb2005"},"content":"     * Also removes all appointments associated with the deleted patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Basudeb2005"},"content":"     * Saves the updated patient and appointment lists to storage after successful deletion.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Basudeb2005"},"content":"     * @param nric The NRIC of the patient to delete","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Basudeb2005"},"content":"     * @return The deleted Patient object, or null if no patient was found with the given NRIC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If there was an error saving to storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JudHoka"},"content":"    public Patient deletePatient(String nric) throws UnloadedStorageException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JudHoka"},"content":"        assert nric !\u003d null \u0026\u0026 !nric.isBlank() : \"NRIC must not be null or blank\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Basudeb2005"},"content":"        assert patients !\u003d null : \"Patient list cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"chwenyee"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"chwenyee"},"content":"            if (patient.getId().equals(nric)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"chwenyee"},"content":"                patients.remove(patient);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"chwenyee"},"content":"                // delete all appointments associated with a patient to be deleted","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"chwenyee"},"content":"                appointments.removeIf(appointment -\u003e appointment.getNric().equals(nric));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JudHoka"},"content":"                Storage.savePatients(patients);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"chwenyee"},"content":"                Storage.saveAppointments(appointments);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"chwenyee"},"content":"                return patient;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"chwenyee"},"content":"        return null;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dylancmznus"},"content":"    //@@author dylancmznus","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dylancmznus"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dylancmznus"},"content":"     * Retrieves the patient object that matches the specified NRIC.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dylancmznus"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dylancmznus"},"content":"     * \u003cp\u003eThe method iterates through the list of existing patients to find a match","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dylancmznus"},"content":"     * based on the NRIC. If a match is found, the corresponding Patient object is returned;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dylancmznus"},"content":"     * otherwise, it returns null.\u003c/p\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dylancmznus"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dylancmznus"},"content":"     * @param nric The NRIC of the patient to be retrieved.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dylancmznus"},"content":"     * @return The Patient object matching the given NRIC, or null if no match is found.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dylancmznus"},"content":"     * @throws AssertionError if the input NRIC is null or blank.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dylancmznus"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dylancmznus"},"content":"    public Patient viewPatient(String nric) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dylancmznus"},"content":"        assert nric !\u003d null \u0026\u0026 !nric.isBlank() : \"NRIC must not be null or blank\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dylancmznus"},"content":"        Patient matchedPatient \u003d null;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dylancmznus"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dylancmznus"},"content":"            if (patient.getId().equals(nric)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dylancmznus"},"content":"                matchedPatient \u003d patient;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dylancmznus"},"content":"                break;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dylancmznus"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dylancmznus"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dylancmznus"},"content":"        return matchedPatient;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"dylancmznus"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"dylancmznus"},"content":"     * Edits an existing patient\u0027s information.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"dylancmznus"},"content":"     * Updates only the fields that are provided (non-null).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"dylancmznus"},"content":"     * Saves changes to storage after successful update.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"dylancmznus"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"dylancmznus"},"content":"     * @param nric       The NRIC of the patient to edit (cannot be changed)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"dylancmznus"},"content":"     * @param newName    New name for the patient, or null to keep unchanged","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"dylancmznus"},"content":"     * @param newDob     New date of birth, or null to keep unchanged","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"dylancmznus"},"content":"     * @param newGender  New gender, or null to keep unchanged","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"dylancmznus"},"content":"     * @param newAddress New address, or null to keep unchanged","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"dylancmznus"},"content":"     * @param newPhone   New phone number, or null to keep unchanged","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"dylancmznus"},"content":"     * @throws UnloadedStorageException If there was an error saving to storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dylancmznus"},"content":"     * @throws PatientNotFoundException If no patient with the given NRIC exists","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dylancmznus"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jyukuan"},"content":"    //@@author jyukuan","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jyukuan"},"content":"    public void editPatient(String nric, String newName, String newDob, String newGender, String newAddress,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jyukuan"},"content":"                            String newPhone) throws UnloadedStorageException, PatientNotFoundException,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jyukuan"},"content":"            InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jyukuan"},"content":"        assert nric !\u003d null \u0026\u0026 !nric.isBlank() : \"NRIC must not be null or blank\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jyukuan"},"content":"        assert patients !\u003d null : \"Patient list cannot be null\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jyukuan"},"content":"        Patient patient \u003d findPatientByNric(nric);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jyukuan"},"content":"        if (patient \u003d\u003d null) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jyukuan"},"content":"            throw new PatientNotFoundException(\"Patient with NRIC \" + nric + \" not found.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jyukuan"},"content":"        if (newName !\u003d null \u0026\u0026 !newName.isBlank()) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jyukuan"},"content":"            patient.setName(newName);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jyukuan"},"content":"        if (newDob !\u003d null \u0026\u0026 !newDob.isBlank()) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jyukuan"},"content":"            try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jyukuan"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jyukuan"},"content":"                LocalDate parsedDob \u003d LocalDate.parse(newDob, formatter);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jyukuan"},"content":"                if (parsedDob.isAfter(LocalDate.now())) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jyukuan"},"content":"                    throw new InvalidInputFormatException(\"Date of birth must be before today.\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jyukuan"},"content":"                }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jyukuan"},"content":"                patient.setDob(parsedDob);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jyukuan"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jyukuan"},"content":"                throw new InvalidInputFormatException(\"Invalid date format. Use yyyy-MM-dd.\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jyukuan"},"content":"            }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jyukuan"},"content":"        if (newGender !\u003d null \u0026\u0026 !newGender.isBlank()) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jyukuan"},"content":"            patient.setGender(newGender);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jyukuan"},"content":"        if (newAddress !\u003d null \u0026\u0026 !newAddress.isBlank()) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jyukuan"},"content":"            patient.setAddress(newAddress);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jyukuan"},"content":"        if (newPhone !\u003d null \u0026\u0026 !newPhone.isBlank()) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jyukuan"},"content":"            patient.setContactInfo(newPhone);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jyukuan"},"content":"        Storage.savePatients(patients);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jyukuan"},"content":"        System.out.println(\"Patient with NRIC \" + nric + \" updated successfully.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jyukuan"},"content":"     * Stores new medical history entries for a patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"jyukuan"},"content":"     * If an entry already exists in the patient\u0027s history, it will not be duplicated.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jyukuan"},"content":"     * Saves the updated patient list to storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"jyukuan"},"content":"     * @param nric       The NRIC of the patient","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"jyukuan"},"content":"     * @param medHistory Comma-separated medical history entries to add","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"jyukuan"},"content":"     * @throws PatientNotFoundException If no patient with the given NRIC exists","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"jyukuan"},"content":"     * @throws UnloadedStorageException If there was an error saving to storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"jyukuan"},"content":"    public void storeMedicalHistory(String nric, String medHistory) throws PatientNotFoundException,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"jyukuan"},"content":"            UnloadedStorageException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"jyukuan"},"content":"        Patient existingPatient \u003d findPatientByNric(nric);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"jyukuan"},"content":"        assert nric !\u003d null \u0026\u0026 !nric.isBlank() : \"NRIC must not be null or blank\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"jyukuan"},"content":"        assert medHistory !\u003d null \u0026\u0026 !medHistory.isBlank() : \"Medical history must not be null or blank\";","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"jyukuan"},"content":"        if (existingPatient \u003d\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"jyukuan"},"content":"            throw new PatientNotFoundException(\"Patient with NRIC not found. Patient\u0027s history can not be added\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"jyukuan"},"content":"        } else {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"jyukuan"},"content":"            Ui.showLine();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"jyukuan"},"content":"        String[] historyEntries \u003d medHistory.split(\",\\\\s*\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"jyukuan"},"content":"        for (String entry : historyEntries) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"jyukuan"},"content":"            if (!existingPatient.getMedicalHistory().contains(entry.trim())) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jyukuan"},"content":"                existingPatient.getMedicalHistory().add(entry.trim());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"jyukuan"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"jyukuan"},"content":"        Storage.savePatients(patients);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jyukuan"},"content":"        System.out.println(\"Medical history added for patient with NRIC: \" + nric + \".\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"jyukuan"},"content":"        Ui.showLine();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"jyukuan"},"content":"     * Views the medical history for a single patient identified by NRIC,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"jyukuan"},"content":"     * and displays it to the user via the Ui component.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"jyukuan"},"content":"     * @param nric The NRIC of the patient whose medical history should be displayed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"jyukuan"},"content":"     * @throws PatientNotFoundException if no patient with the specified NRIC is found.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"jyukuan"},"content":"    public void viewMedicalHistoryByNric(String nric) throws PatientNotFoundException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"jyukuan"},"content":"        Patient foundPatients \u003d findPatientByNric(nric.trim());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"jyukuan"},"content":"        if (foundPatients \u003d\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"jyukuan"},"content":"            throw new PatientNotFoundException(\"No patient/patients found with NRIC \" + nric + \".\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"jyukuan"},"content":"        } else {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"jyukuan"},"content":"            Ui.showLine();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"jyukuan"},"content":"            Ui.showPatientHistory(foundPatients);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"jyukuan"},"content":"     * Finds one or more patients by name, then displays each patient\u0027s medical history.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"jyukuan"},"content":"     * If multiple patients share the same name, all their histories are shown.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"jyukuan"},"content":"     * @param name The name of the patient(s) whose medical history should be displayed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"jyukuan"},"content":"    public void viewMedicalHistoryByName(String name) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"jyukuan"},"content":"        List\u003cPatient\u003e foundPatients \u003d findPatientsByName(name.trim());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"jyukuan"},"content":"        Ui.showLine();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"jyukuan"},"content":"        if (foundPatients.isEmpty()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"jyukuan"},"content":"            System.out.println(\"No patients found with name \u0027\" + name + \"\u0027.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"jyukuan"},"content":"            Ui.showLine();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"jyukuan"},"content":"        } else {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"jyukuan"},"content":"            System.out.println(\"Found \" + foundPatients.size() + \" patient(s) with name \u0027\" + name + \"\u0027\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"jyukuan"},"content":"            for (Patient p : foundPatients) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"jyukuan"},"content":"                Ui.showPatientHistory(p);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"jyukuan"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"jyukuan"},"content":"     * Edits a specific medical history entry for a patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"jyukuan"},"content":"     * Replaces the old history text with new text if the old text is found.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"jyukuan"},"content":"     * @param nric       The patient\u0027s unique identifier","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"jyukuan"},"content":"     * @param oldHistory The existing history text to be replaced","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"jyukuan"},"content":"     * @param newHistory The new history text to replace it with","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"jyukuan"},"content":"     * @throws UnloadedStorageException If there was an error saving to storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"jyukuan"},"content":"    public void editPatientHistory(String nric, String oldHistory, String newHistory) throws UnloadedStorageException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"jyukuan"},"content":"        assert nric !\u003d null \u0026\u0026 !nric.isBlank() : \"NRIC must not be null or blank\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"jyukuan"},"content":"        assert oldHistory !\u003d null \u0026\u0026 !oldHistory.isBlank() : \"Old history must not be blank\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"jyukuan"},"content":"        assert newHistory !\u003d null \u0026\u0026 !newHistory.isBlank() : \"New history must not be blank\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"jyukuan"},"content":"        Patient patient \u003d findPatientByNric(nric);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"jyukuan"},"content":"        if (patient \u003d\u003d null) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"jyukuan"},"content":"            System.out.println(\"Patient with NRIC \" + nric + \" not found.\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"jyukuan"},"content":"            return;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"jyukuan"},"content":"        List\u003cString\u003e histories \u003d patient.getMedicalHistory();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"jyukuan"},"content":"        boolean foundOld \u003d false;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"jyukuan"},"content":"        for (int i \u003d 0; i \u003c histories.size(); i++) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"jyukuan"},"content":"            if (histories.get(i).equalsIgnoreCase(oldHistory.trim())) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"jyukuan"},"content":"                histories.set(i, newHistory.trim());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"jyukuan"},"content":"                foundOld \u003d true;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"jyukuan"},"content":"                System.out.println(\"Replaced old history \\\"\" + oldHistory + \"\\\" with \\\"\" + newHistory + \"\\\".\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"jyukuan"},"content":"                break;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"jyukuan"},"content":"            }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"jyukuan"},"content":"        Storage.savePatients(patients);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"jyukuan"},"content":"        if (!foundOld) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"jyukuan"},"content":"            System.out.println(\"Old history \\\"\" + oldHistory + \"\\\" not found for patient \" + patient.getName());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"jyukuan"},"content":"     * Finds a patient by their NRIC, ignoring case.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"jyukuan"},"content":"     * @param nric The NRIC string to search for.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"jyukuan"},"content":"     * @return The Patient object if found, or null if no matching patient is found.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"jyukuan"},"content":"    public Patient findPatientByNric(String nric) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"jyukuan"},"content":"        String object \u003d nric.trim().toUpperCase();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"jyukuan"},"content":"        for (Patient p : patients) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"jyukuan"},"content":"            String patientId \u003d p.getId().trim().toUpperCase();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"jyukuan"},"content":"            if (patientId.equals(object)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"jyukuan"},"content":"                return p;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"jyukuan"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"jyukuan"},"content":"        return null;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"jyukuan"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"jyukuan"},"content":"     * Finds a list of patients who have a matching name (case-insensitive).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"jyukuan"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"jyukuan"},"content":"     * @param name The name string to search for.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"jyukuan"},"content":"     * @return A List of Patient objects that match the given name (could be empty if none found).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"jyukuan"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"jyukuan"},"content":"    private List\u003cPatient\u003e findPatientsByName(String name) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"jyukuan"},"content":"        List\u003cPatient\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"jyukuan"},"content":"        for (Patient p : patients) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"jyukuan"},"content":"            if (p.getName().trim().equalsIgnoreCase(name)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"jyukuan"},"content":"                result.add(p);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"jyukuan"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"jyukuan"},"content":"        return result;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"chwenyee"},"content":"    //@@author chwenyee","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"chwenyee"},"content":"     * Adds a new appointment to the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"chwenyee"},"content":"     * Checks for appointment clashes (within 1 hour) and verifies the patient exists.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"chwenyee"},"content":"     * Saves the updated appointment list to storage after successful addition.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"chwenyee"},"content":"     * @param appointment The appointment to add","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"chwenyee"},"content":"     * @throws UnloadedStorageException  If there was an error saving to storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"chwenyee"},"content":"     * @throws PatientNotFoundException  If the patient associated with the appointment doesn\u0027t exist","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"chwenyee"},"content":"     * @throws AppointmentClashException If the appointment clashes with an existing appointment","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"chwenyee"},"content":"    public void addAppointment(Appointment appointment) throws UnloadedStorageException, PatientNotFoundException,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"chwenyee"},"content":"            AppointmentClashException {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"chwenyee"},"content":"        assert appointment !\u003d null : \"Appointment cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"chwenyee"},"content":"        assert patients !\u003d null : \"Patient list cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"chwenyee"},"content":"        // Check if there is any scheduled appointment in the list clashing with this newly-added one","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"chwenyee"},"content":"        for (Appointment appointmentInList : appointments) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"chwenyee"},"content":"            long timeDiff \u003d Math.abs(Duration.between(appointmentInList.getDateTime(),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"chwenyee"},"content":"                    appointment.getDateTime()).toMinutes());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"chwenyee"},"content":"            if (timeDiff \u003c 60) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"chwenyee"},"content":"                throw new AppointmentClashException(\"This appointment clashes with another scheduled within 1 hour.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"chwenyee"},"content":"        Patient patient \u003d findPatientByNric(appointment.getNric());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"chwenyee"},"content":"        if (patient \u003d\u003d null) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"chwenyee"},"content":"            throw new PatientNotFoundException(\"Patient with NRIC: \" + appointment.getNric() + \" not found\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"chwenyee"},"content":"        appointments.add(appointment);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"chwenyee"},"content":"        patient.addAppointment(appointment);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"chwenyee"},"content":"        Storage.saveAppointments(appointments);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"chwenyee"},"content":"     * Deletes an appointment from the system by appointment ID.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"chwenyee"},"content":"     * Also removes the appointment from the patient\u0027s appointment list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"chwenyee"},"content":"     * Saves the updated appointment list to storage after successful deletion.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"chwenyee"},"content":"     * @param apptId The ID of the appointment to delete","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"chwenyee"},"content":"     * @return The deleted Appointment object, or null if no appointment was found with the given ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"chwenyee"},"content":"     * @throws UnloadedStorageException If there was an error saving to storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"chwenyee"},"content":"    public Appointment deleteAppointment(String apptId) throws UnloadedStorageException {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"chwenyee"},"content":"        assert apptId !\u003d null \u0026\u0026 !apptId.isBlank() : \"Appointment ID cannot be null or blank\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"chwenyee"},"content":"        assert appointments !\u003d null : \"Appointment list cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"chwenyee"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"chwenyee"},"content":"            if (appointment.getId().equalsIgnoreCase(apptId)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"chwenyee"},"content":"                appointments.remove(appointment);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"chwenyee"},"content":"                Patient patient \u003d findPatientByNric(appointment.getNric());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"chwenyee"},"content":"                if (patient !\u003d null) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"chwenyee"},"content":"                    patient.deleteAppointment(apptId);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"chwenyee"},"content":"                    Storage.saveAppointments(appointments);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"chwenyee"},"content":"                }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"chwenyee"},"content":"                return appointment;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"chwenyee"},"content":"        return null;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"chwenyee"},"content":"     * Sorts a list of appointments by date and time.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"chwenyee"},"content":"     * Orders appointments chronologically from earliest to latest.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"chwenyee"},"content":"     * @param appointments The list of appointments to sort","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"chwenyee"},"content":"     * @return The sorted list of appointments","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"chwenyee"},"content":"    public List\u003cAppointment\u003e sortAppointmentsByDateTime(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"chwenyee"},"content":"        appointments.sort(Comparator.comparing(Appointment::getDateTime));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"chwenyee"},"content":"        return appointments;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"chwenyee"},"content":"     * Sorts a list of appointments by their ID.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"chwenyee"},"content":"     * Orders appointments alphanumerically based on their appointment ID.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"chwenyee"},"content":"     * @param appointments The list of appointments to sort","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"chwenyee"},"content":"     * @return The sorted list of appointments","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"chwenyee"},"content":"    public List\u003cAppointment\u003e sortAppointmentsById(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"chwenyee"},"content":"        appointments.sort(Comparator.comparing(Appointment::getId));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"chwenyee"},"content":"        return appointments;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"chwenyee"},"content":"     * Marks an appointment as completed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"chwenyee"},"content":"     * Updates the appointment status and saves changes to storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"chwenyee"},"content":"     * @param apptId The ID of the appointment to mark as done","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"chwenyee"},"content":"     * @return The updated appointment, or null if no appointment with the given ID was found","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"chwenyee"},"content":"     * @throws UnloadedStorageException If there was an error saving to storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"chwenyee"},"content":"    public Appointment markAppointment(String apptId) throws UnloadedStorageException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"chwenyee"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"chwenyee"},"content":"            if (appointment.getId().equalsIgnoreCase(apptId)) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"chwenyee"},"content":"                appointment.markAsDone();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"chwenyee"},"content":"                Storage.saveAppointments(appointments);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"chwenyee"},"content":"                return appointment;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"chwenyee"},"content":"        return null;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"chwenyee"},"content":"     * Unmarks a previously completed appointment.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"chwenyee"},"content":"     * Updates the appointment status and saves changes to storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"chwenyee"},"content":"     * @param apptId The ID of the appointment to unmark","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"chwenyee"},"content":"     * @return The updated appointment, or null if no appointment with the given ID was found","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"chwenyee"},"content":"     * @throws UnloadedStorageException If there was an error saving to storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"chwenyee"},"content":"    public Appointment unmarkAppointment(String apptId) throws UnloadedStorageException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"chwenyee"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"chwenyee"},"content":"            if (appointment.getId().equalsIgnoreCase(apptId)) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"chwenyee"},"content":"                appointment.unmarkAsDone();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"chwenyee"},"content":"                Storage.saveAppointments(appointments);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"chwenyee"},"content":"                return appointment;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"chwenyee"},"content":"        return null;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"chwenyee"},"content":"     * Finds all appointments associated with the specified NRIC.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"chwenyee"},"content":"     * \u003cp\u003eThis method searches through the list of stored appointments and collects","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"chwenyee"},"content":"     * all appointments that match the given NRIC exactly.\u003c/p\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"chwenyee"},"content":"     * @param nric The NRIC used to search for matching appointments.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"chwenyee"},"content":"     * @return A list of appointments that are associated with the provided NRIC.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"chwenyee"},"content":"    public List\u003cAppointment\u003e findAppointmentsByNric(String nric) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"chwenyee"},"content":"        List\u003cAppointment\u003e matchingAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"chwenyee"},"content":"        for (Appointment appt : appointments) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"chwenyee"},"content":"            if (appt.getNric().equals(nric)) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"chwenyee"},"content":"                matchingAppointments.add(appt);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"chwenyee"},"content":"        return matchingAppointments;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"Basudeb2005"},"content":"    //@@author Basudeb2005","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"Basudeb2005"},"content":"     * Gets all prescriptions stored in the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"Basudeb2005"},"content":"     * @return A list of all prescription records","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"Basudeb2005"},"content":"    public List\u003cPrescription\u003e getPrescriptions() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"Basudeb2005"},"content":"        return prescriptions;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"Basudeb2005"},"content":"    //@@author Basudeb2005","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"Basudeb2005"},"content":"     * Adds a new prescription to the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"Basudeb2005"},"content":"     * Verifies the patient exists before adding the prescription.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"Basudeb2005"},"content":"     * Generates a unique prescription ID based on patient ID and prescription count.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"Basudeb2005"},"content":"     * Saves the updated prescription list to storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"Basudeb2005"},"content":"     * @param prescription The prescription to add (without final ID)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"Basudeb2005"},"content":"     * @return The newly created prescription with final ID","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"Basudeb2005"},"content":"     * @throws IllegalArgumentException If the patient doesn\u0027t exist or maximum prescriptions reached","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If there was an error saving to storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"Basudeb2005"},"content":"    public Prescription addPrescription(Prescription prescription)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"Basudeb2005"},"content":"            throws IllegalArgumentException, UnloadedStorageException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"Basudeb2005"},"content":"        assert prescription !\u003d null : \"Prescription cannot be null\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"Basudeb2005"},"content":"        assert patients !\u003d null : \"Patient list cannot be null\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"Basudeb2005"},"content":"        Patient patient \u003d findPatientByNric(prescription.getPatientId());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"Basudeb2005"},"content":"        if (patient \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"Basudeb2005"},"content":"            throw new IllegalArgumentException(\"Patient with NRIC: \" + prescription.getPatientId() + \" not found\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"Basudeb2005"},"content":"        // Generate prescription ID with counter","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"Basudeb2005"},"content":"        int prescriptionCount \u003d 1;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"Basudeb2005"},"content":"        for (Prescription p : prescriptions) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"Basudeb2005"},"content":"            if (p.getPatientId().equals(prescription.getPatientId())) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"Basudeb2005"},"content":"                prescriptionCount++;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"Basudeb2005"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"Basudeb2005"},"content":"        // Check for maximum prescription limit","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"Basudeb2005"},"content":"        final int MAX_PRESCRIPTIONS_PER_PATIENT \u003d 100; // Reasonable upper limit","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"Basudeb2005"},"content":"        if (prescriptionCount \u003e MAX_PRESCRIPTIONS_PER_PATIENT) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"Basudeb2005"},"content":"            throw new IllegalArgumentException(\"Maximum number of prescriptions (\" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"Basudeb2005"},"content":"                    MAX_PRESCRIPTIONS_PER_PATIENT +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"Basudeb2005"},"content":"                    \") reached for patient: \" + prescription.getPatientId());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"Basudeb2005"},"content":"        String prescriptionId \u003d prescription.getPatientId() + \"-\" + prescriptionCount;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"Basudeb2005"},"content":"        // Create a new prescription with updated ID","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"Basudeb2005"},"content":"        Prescription newPrescription \u003d new Prescription(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"Basudeb2005"},"content":"                prescription.getPatientId(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"Basudeb2005"},"content":"                prescriptionId,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"Basudeb2005"},"content":"                prescription.getTimestamp(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"Basudeb2005"},"content":"                prescription.getSymptoms(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"Basudeb2005"},"content":"                prescription.getMedicines(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"Basudeb2005"},"content":"                prescription.getNotes()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"Basudeb2005"},"content":"        );","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"Basudeb2005"},"content":"        prescriptions.add(newPrescription);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"Basudeb2005"},"content":"            Storage.savePrescriptions(prescriptions);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"Basudeb2005"},"content":"        } catch (UnloadedStorageException e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"Basudeb2005"},"content":"            // Roll back the addition if saving fails","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"Basudeb2005"},"content":"            prescriptions.remove(newPrescription);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"Basudeb2005"},"content":"            throw e; // Re-throw to notify the caller","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"Basudeb2005"},"content":"        return newPrescription;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"Basudeb2005"},"content":"    //@@author Basudeb2005","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"Basudeb2005"},"content":"     * Retrieves all prescriptions for a specific patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"Basudeb2005"},"content":"     * Filters the complete prescription list to find those matching the provided patient ID.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"Basudeb2005"},"content":"     * @param patientId The unique identifier of the patient","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"Basudeb2005"},"content":"     * @return A list of prescriptions for the specified patient (may be empty if none found)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"Basudeb2005"},"content":"    public List\u003cPrescription\u003e getPrescriptionsForPatient(String patientId) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cPrescription\u003e patientPrescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"Basudeb2005"},"content":"        for (Prescription prescription : prescriptions) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"Basudeb2005"},"content":"            if (prescription.getPatientId().equals(patientId)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"Basudeb2005"},"content":"                patientPrescriptions.add(prescription);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"Basudeb2005"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"Basudeb2005"},"content":"        return patientPrescriptions;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"Basudeb2005"},"content":"    //@@author Basudeb2005","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"Basudeb2005"},"content":"     * Finds a specific prescription by its unique identifier.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"Basudeb2005"},"content":"     * @param prescriptionId The unique ID of the prescription to find","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"Basudeb2005"},"content":"     * @return The prescription if found, or null if no matching prescription exists","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"Basudeb2005"},"content":"    public Prescription getPrescriptionById(String prescriptionId) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"Basudeb2005"},"content":"        for (Prescription prescription : prescriptions) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"Basudeb2005"},"content":"            if (prescription.getPrescriptionId().equals(prescriptionId)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"Basudeb2005"},"content":"                return prescription;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"Basudeb2005"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"Basudeb2005"},"content":"        return null;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"dylancmznus":41,"JudHoka":43,"chwenyee":169,"Basudeb2005":182,"jyukuan":187}},{"path":"src/main/java/manager/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylancmznus"},"content":"package manager;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"import java.util.List;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":" * Represents a patient in the clinic management system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":" * Stores patient details such as NRIC, name, date of birth, contact info, gender,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":" * address, medical history, and appointments.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"public class Patient {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jyukuan"},"content":"    private String id;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jyukuan"},"content":"    private String name;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"    private LocalDate dob;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jyukuan"},"content":"    private String contactInfo;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jyukuan"},"content":"    private String gender;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jyukuan"},"content":"    private String address;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"    private final List\u003cString\u003e medicalHistory;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"    private final List\u003cAppointment\u003e appointments;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"     * Constructs a new Patient object with the given details.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"     * @param id             The NRIC of the patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"     * @param name           The name of the patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"     * @param dobStr         The date of birth in yyyy-MM-dd format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"     * @param gender         The gender (M or F).","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"     * @param address        The address.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"     * @param contactInfo    The 8-digit contact number.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"     * @param medicalHistory A list of past medical history.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"     * @throws InvalidInputFormatException if any input format is invalid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"    public Patient(String id, String name, String dobStr, String gender, String address,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"                   String contactInfo, List\u003cString\u003e medicalHistory) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"        assert id !\u003d null \u0026\u0026 !id.isBlank() : \"Patient ID cannot be null or blank\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"        assert name !\u003d null \u0026\u0026 !name.isBlank() : \"Patient name cannot be null or blank\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"        assert dobStr !\u003d null : \"Date of birth cannot be null\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"        assert gender !\u003d null : \"Gender cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"        assert address !\u003d null : \"Address cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"        assert contactInfo !\u003d null : \"Contact info cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"        assert medicalHistory !\u003d null : \"Medical history list cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"        this.id \u003d parseValidIC(id);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"        this.dob \u003d parseAndValidateDob(dobStr);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"        this.gender \u003d checkGender(gender);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"        this.address \u003d address;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"        this.contactInfo \u003d parseContactInfo(contactInfo);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"        this.medicalHistory \u003d new ArrayList\u003c\u003e(medicalHistory);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"        this.appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JudHoka"},"content":"     * Parses a pipe-delimited line into a Patient object.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"     * Accepts either 6 tokens (if medical history is empty) or 7 tokens.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JudHoka"},"content":"     * @param line The line to parse.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JudHoka"},"content":"     * @return A Patient object or null if the format is invalid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"     * @throws InvalidInputFormatException if any of the fields are invalid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"    public static Patient parseLoadPatient(String line) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"        String[] tokens \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"        if (tokens.length \u003c 6 || tokens.length \u003e 7) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JudHoka"},"content":"            return null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JudHoka"},"content":"        String id \u003d tokens[0];","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"        String name \u003d tokens[1];","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JudHoka"},"content":"        String dobStr \u003d tokens[2];","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JudHoka"},"content":"        String gender \u003d tokens[3];","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JudHoka"},"content":"        String address \u003d tokens[4];","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"        String contact \u003d tokens[5];","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"        List\u003cString\u003e medHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"        if (tokens.length \u003d\u003d 7 \u0026\u0026 !tokens[6].isBlank()) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JudHoka"},"content":"            medHistory \u003d Arrays.stream(tokens[6].split(\",\"))","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"                    .map(String::trim)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JudHoka"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"        return new Patient(id, name, dobStr, gender, address, contact, medHistory);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"     * @return the patient NRIC","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JudHoka"},"content":"    public String getId() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"        return id;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JudHoka"},"content":"     * @return the patient name","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JudHoka"},"content":"    public String getName() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JudHoka"},"content":"        return name;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JudHoka"},"content":"     * @return the patient\u0027s date of birth","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JudHoka"},"content":"    public LocalDate getDob() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JudHoka"},"content":"        return dob;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JudHoka"},"content":"     * @return the patient\u0027s gender","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JudHoka"},"content":"    public String getGender() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JudHoka"},"content":"        return gender;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JudHoka"},"content":"     * @return the patient\u0027s address","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JudHoka"},"content":"    public String getAddress() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JudHoka"},"content":"        return address;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JudHoka"},"content":"     * @return the patient\u0027s contact number","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JudHoka"},"content":"    public String getContactInfo() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JudHoka"},"content":"        return contactInfo;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JudHoka"},"content":"     * @return the patient\u0027s medical history list","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JudHoka"},"content":"    public List\u003cString\u003e getMedicalHistory() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JudHoka"},"content":"        return medicalHistory;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JudHoka"},"content":"    public void setName(String name) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JudHoka"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JudHoka"},"content":"    public void setDob(LocalDate dob) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JudHoka"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JudHoka"},"content":"    public void setContactInfo(String contactInfo) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JudHoka"},"content":"        this.contactInfo \u003d contactInfo;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JudHoka"},"content":"    public void setGender(String gender) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JudHoka"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JudHoka"},"content":"    public void setAddress(String address) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JudHoka"},"content":"        this.address \u003d address;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JudHoka"},"content":"     * @return the patient\u0027s list of appointments","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JudHoka"},"content":"    public List\u003cAppointment\u003e getAppointments() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JudHoka"},"content":"        return appointments;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JudHoka"},"content":"     * Adds an appointment to the patient.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JudHoka"},"content":"     * @param appointment Appointment to be added.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"chwenyee"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Basudeb2005"},"content":"        assert appointment !\u003d null : \"Appointment cannot be null\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Basudeb2005"},"content":"        assert appointment.getNric().equals(this.id) : \"Appointment NRIC must match patient ID\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"chwenyee"},"content":"        appointments.add(appointment);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JudHoka"},"content":"     * Removes an appointment from the patient by appointment ID.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JudHoka"},"content":"     * @param apptId ID of the appointment to be removed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"chwenyee"},"content":"    public void deleteAppointment(String apptId) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Basudeb2005"},"content":"        assert apptId !\u003d null \u0026\u0026 !apptId.isBlank() : \"Appointment ID cannot be null or blank\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"chwenyee"},"content":"        for (Appointment appt : appointments) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"chwenyee"},"content":"            if (appt.getId().equals(apptId)) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"chwenyee"},"content":"                appointments.remove(appt);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"chwenyee"},"content":"                break;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JudHoka"},"content":"     * Returns a string representation of the patient for display.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JudHoka"},"content":"     * @return Formatted patient details and appointments.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JudHoka"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JudHoka"},"content":"    public String toString() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JudHoka"},"content":"        String formattedMedicalHistory \u003d medicalHistory.isEmpty() ? \"None\" : String.join(\", \", medicalHistory);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"chwenyee"},"content":"        String result \u003d String.format(","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Basudeb2005"},"content":"                \"Patient NRIC: %s\\n\"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Name: %s\\n\"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Date of Birth: %s\\n\"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Gender: %s\\n\"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Address: %s\\n\"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Contact: %s\\n\"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Medical History: %s\",","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JudHoka"},"content":"                id, name, dob.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JudHoka"},"content":"                gender, address, contactInfo, formattedMedicalHistory);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"chwenyee"},"content":"        if (appointments.isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"chwenyee"},"content":"            result +\u003d \"\\nAppointments: None\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"chwenyee"},"content":"        } else {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"chwenyee"},"content":"            result +\u003d \"\\nAppointments:\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"chwenyee"},"content":"            for (Appointment appt : appointments) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"chwenyee"},"content":"                result +\u003d String.format(","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"chwenyee"},"content":"                        \"\\n- [%s][%s]: %s (%s)\",","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"chwenyee"},"content":"                        appt.getId(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"chwenyee"},"content":"                        appt.getStatusIcon(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"chwenyee"},"content":"                        appt.getDateTime().format(Appointment.OUTPUT_FORMAT),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"chwenyee"},"content":"                        appt.getDescription());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"chwenyee"},"content":"        return result;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"JudHoka"},"content":"     * Returns a formatted string for list display.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"JudHoka"},"content":"     * @return Compact patient details for list view.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"chwenyee"},"content":"    public String toStringForListView() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"jyukuan"},"content":"        String result \u003d String.format(","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Basudeb2005"},"content":"                \"Patient NRIC: %s\\n   \"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Name: %s\\n   \"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Date of Birth: %s\\n   \"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Gender: %s\\n   \"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Address: %s\\n   \"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Contact: %s\",","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"JudHoka"},"content":"                id, name, dob.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")), gender, address, contactInfo);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"jyukuan"},"content":"        if (medicalHistory.isEmpty()) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"jyukuan"},"content":"            result +\u003d \"\\n   Medical History: None\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jyukuan"},"content":"        } else {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"jyukuan"},"content":"            result +\u003d \"\\n   Medical History:\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"jyukuan"},"content":"            for (String h : medicalHistory) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"jyukuan"},"content":"                result +\u003d \"\\n   - \" + h;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jyukuan"},"content":"            }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"chwenyee"},"content":"        if (appointments.isEmpty()) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"chwenyee"},"content":"            result +\u003d \"\\n   Appointments: None\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"chwenyee"},"content":"        } else {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"chwenyee"},"content":"            result +\u003d \"\\n   Appointments:\";","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"chwenyee"},"content":"            for (Appointment appt : appointments) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"chwenyee"},"content":"                result +\u003d String.format(","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"chwenyee"},"content":"                        \"\\n   - [%s][%s]: %s (%s)\",","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"chwenyee"},"content":"                        appt.getId(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"chwenyee"},"content":"                        appt.getStatusIcon(),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"chwenyee"},"content":"                        appt.getDateTime().format(Appointment.OUTPUT_FORMAT),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"chwenyee"},"content":"                        appt.getDescription());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"jyukuan"},"content":"        return result;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"JudHoka"},"content":"     * Returns a pipe-delimited string for file storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"JudHoka"},"content":"     * @return File format string.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"JudHoka"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"JudHoka"},"content":"        String history \u003d String.join(\", \", this.medicalHistory);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"JudHoka"},"content":"        return this.id + \"|\" + this.name + \"|\" + dob.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"JudHoka"},"content":"                + \"|\" + this.gender + \"|\" + this.address + \"|\" + this.contactInfo + \"|\" + history;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"JudHoka"},"content":"     * Validates and parses the NRIC format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"JudHoka"},"content":"     * @param ic The NRIC string to validate.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"JudHoka"},"content":"     * @return A validated NRIC string.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"JudHoka"},"content":"     * @throws InvalidInputFormatException If the NRIC format is invalid.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"JudHoka"},"content":"    private String parseValidIC(String ic) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"JudHoka"},"content":"        if (ic \u003d\u003d null || ic.length() !\u003d 9) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"JudHoka"},"content":"            throw new InvalidInputFormatException(\"IC must be exactly 9 characters long.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"JudHoka"},"content":"        String prefix \u003d ic.substring(0, 1).toUpperCase();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"JudHoka"},"content":"        String numberPart \u003d ic.substring(1, 8);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"JudHoka"},"content":"        String suffix \u003d ic.substring(8).toUpperCase();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"JudHoka"},"content":"        if (!prefix.matches(\"[STFGM]\")) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"JudHoka"},"content":"            throw new InvalidInputFormatException(\"IC must start with S, T, F, G, or M.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"JudHoka"},"content":"        if (!numberPart.matches(\"\\\\d{7}\")) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"JudHoka"},"content":"            throw new InvalidInputFormatException(\"IC must contain 7 digits after the prefix.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"JudHoka"},"content":"        if (!suffix.matches(\"[A-Z]\")) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"JudHoka"},"content":"            throw new InvalidInputFormatException(\"IC must end with an uppercase letter.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"JudHoka"},"content":"        return ic;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"JudHoka"},"content":"     * Validates the gender input.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"JudHoka"},"content":"     * @param gender Gender string to validate.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"JudHoka"},"content":"     * @return Validated gender.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"JudHoka"},"content":"     * @throws InvalidInputFormatException If the gender is not M or F.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"JudHoka"},"content":"    private String checkGender(String gender) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"JudHoka"},"content":"        if (gender.equals(\"M\") || gender.equals(\"F\")) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"JudHoka"},"content":"            return gender;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"JudHoka"},"content":"        } else {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"JudHoka"},"content":"            throw new InvalidInputFormatException(\"The gender must be either M (male) or F (female)\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"JudHoka"},"content":"     * Parses and validates the date of birth string.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"JudHoka"},"content":"     * @param dobStr Date of birth in yyyy-MM-dd format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"JudHoka"},"content":"     * @return Parsed LocalDate object.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"JudHoka"},"content":"     * @throws InvalidInputFormatException If format is incorrect or date is in the future.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"JudHoka"},"content":"    private LocalDate parseAndValidateDob(String dobStr) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"JudHoka"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"JudHoka"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"JudHoka"},"content":"            LocalDate dob \u003d LocalDate.parse(dobStr, formatter);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"JudHoka"},"content":"            if (dob.isAfter(LocalDate.now())) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"JudHoka"},"content":"                throw new InvalidInputFormatException(\"Date of birth must be before the current date.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"JudHoka"},"content":"            return dob;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"JudHoka"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"JudHoka"},"content":"            throw new InvalidInputFormatException(\"Invalid date format. Use yyyy-MM-dd.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"JudHoka"},"content":"     * Validates and parses the contact number.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"JudHoka"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"JudHoka"},"content":"     * @param contactInfo Contact number string.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"JudHoka"},"content":"     * @return Validated contact number.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"JudHoka"},"content":"     * @throws InvalidInputFormatException If not an 8-digit number.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"JudHoka"},"content":"    private String parseContactInfo(String contactInfo) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"JudHoka"},"content":"        try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"JudHoka"},"content":"            if (contactInfo.length() !\u003d 8 || !contactInfo.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"JudHoka"},"content":"                throw new InvalidInputFormatException(\"Contact number must be 8 digits.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"JudHoka"},"content":"            return contactInfo;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"JudHoka"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"JudHoka"},"content":"            throw new InvalidInputFormatException(\"Contact number cannot be null.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"dylancmznus":2,"JudHoka":253,"chwenyee":49,"Basudeb2005":34,"jyukuan":22}},{"path":"src/main/java/manager/Prescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"package manager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"import java.util.List;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":" * Represents a medical prescription in the clinic management system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":" * Contains information about the patient, symptoms, prescribed medicines,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":" * and additional notes provided by the doctor.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"//@@author Basudeb2005","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"public class Prescription {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"    private final String patientId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"    private final LocalDateTime timestamp;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"    private final String prescriptionId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"    private final List\u003cString\u003e symptoms;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"    private final List\u003cString\u003e medicines;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"    private final String notes;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"     * Constructs a new Prescription with the current timestamp.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"     * This constructor is used when creating a new prescription in the system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"     * @param patientId The ID of the patient this prescription is for","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"     * @param symptoms  List of patient symptoms","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"     * @param medicines List of prescribed medicines","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"     * @param notes     Additional instructions or notes for the patient","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"    public Prescription(String patientId, List\u003cString\u003e symptoms, List\u003cString\u003e medicines, String notes) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"        this.timestamp \u003d LocalDateTime.now();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"        this.prescriptionId \u003d patientId + \"-\" + \"1\"; // Will be updated to handle numbering","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"        this.symptoms \u003d new ArrayList\u003c\u003e(symptoms);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"        this.medicines \u003d new ArrayList\u003c\u003e(medicines);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"     * Constructs a Prescription with specified prescriptionId and timestamp.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"     * This constructor is primarily used when loading prescriptions from storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"     * @param patientId      The ID of the patient this prescription is for","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"     * @param prescriptionId The unique identifier for this prescription","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"     * @param timestamp      The date and time when the prescription was created","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"     * @param symptoms       List of patient symptoms","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"     * @param medicines      List of prescribed medicines","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"     * @param notes          Additional instructions or notes for the patient","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"    public Prescription(String patientId, String prescriptionId, LocalDateTime timestamp,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"                        List\u003cString\u003e symptoms, List\u003cString\u003e medicines, String notes) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"        this.prescriptionId \u003d prescriptionId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"        this.symptoms \u003d new ArrayList\u003c\u003e(symptoms);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"        this.medicines \u003d new ArrayList\u003c\u003e(medicines);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"     * Gets the patient ID associated with this prescription.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"     * @return The patient\u0027s unique identifier","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"    public String getPatientId() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"        return patientId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"     * Gets the unique identifier for this prescription.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"     * @return The prescription\u0027s ID in format \"patientID-number\"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"    public String getPrescriptionId() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"        return prescriptionId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"     * Gets the timestamp when this prescription was created.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"     * @return LocalDateTime representing when the prescription was written","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"    public LocalDateTime getTimestamp() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"        return timestamp;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Basudeb2005"},"content":"     * Gets the list of symptoms recorded for this prescription.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Basudeb2005"},"content":"     * @return List of symptom descriptions","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Basudeb2005"},"content":"    public List\u003cString\u003e getSymptoms() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Basudeb2005"},"content":"        return symptoms;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Basudeb2005"},"content":"     * Gets the list of medicines prescribed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Basudeb2005"},"content":"     * @return List of medicine names and dosage instructions","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Basudeb2005"},"content":"    public List\u003cString\u003e getMedicines() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Basudeb2005"},"content":"        return medicines;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Basudeb2005"},"content":"     * Gets any additional notes or instructions for this prescription.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Basudeb2005"},"content":"     * @return Notes string or empty if no notes were provided","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Basudeb2005"},"content":"    public String getNotes() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Basudeb2005"},"content":"        return notes;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Basudeb2005"},"content":"     * Returns a string representation of the prescription with formatted details.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Basudeb2005"},"content":"     * Includes prescription ID, timestamp, patient ID, and lists of symptoms and medicines.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Basudeb2005"},"content":"     * @return A formatted multi-line string representation of the prescription","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Basudeb2005"},"content":"    @Override","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Basudeb2005"},"content":"    public String toString() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Basudeb2005"},"content":"        StringBuilder symptomsStr \u003d new StringBuilder();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Basudeb2005"},"content":"        for (String symptom : symptoms) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Basudeb2005"},"content":"            symptomsStr.append(\"- \").append(symptom).append(\"\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Basudeb2005"},"content":"        StringBuilder medicinesStr \u003d new StringBuilder();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Basudeb2005"},"content":"        for (String medicine : medicines) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Basudeb2005"},"content":"            medicinesStr.append(\"- \").append(medicine).append(\"\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Basudeb2005"},"content":"        return String.format(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Basudeb2005"},"content":"                \"Prescription [%s] (%s)\\n\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Patient ID: %s\\n\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Symptoms: \\n%s\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Medicines: \\n%s\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Basudeb2005"},"content":"                        + \"Notes: %s\",","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Basudeb2005"},"content":"                prescriptionId, timestamp.format(DATE_TIME_FORMATTER),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Basudeb2005"},"content":"                patientId, symptomsStr.toString(), medicinesStr.toString(), notes);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Basudeb2005"},"content":"     * Converts the prescription to a storage-friendly string format.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Basudeb2005"},"content":"     * Uses pipe-delimited format to store all prescription attributes.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Basudeb2005"},"content":"     * @return A string representation suitable for file storage","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Basudeb2005"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Basudeb2005"},"content":"        return String.join(\"|\",","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Basudeb2005"},"content":"                prescriptionId,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Basudeb2005"},"content":"                patientId,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Basudeb2005"},"content":"                timestamp.format(DATE_TIME_FORMATTER),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Basudeb2005"},"content":"                String.join(\",\", symptoms),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Basudeb2005"},"content":"                String.join(\",\", medicines),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Basudeb2005"},"content":"                notes);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Basudeb2005"},"content":"     * Creates a Prescription object from a storage file entry.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Basudeb2005"},"content":"     * Parses the pipe-delimited string from storage into a Prescription object.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Basudeb2005"},"content":"     * @param fileEntry The string from the storage file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Basudeb2005"},"content":"     * @return A new Prescription object with the stored data","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Basudeb2005"},"content":"    public static Prescription fromFileFormat(String fileEntry) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Basudeb2005"},"content":"        String[] parts \u003d fileEntry.split(\"\\\\|\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Basudeb2005"},"content":"        // Check if we have sufficient parts to create a valid prescription","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Basudeb2005"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"Warning: Invalid prescription format: \" + fileEntry);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Basudeb2005"},"content":"            return null;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Basudeb2005"},"content":"        String prescriptionId \u003d parts[0];","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Basudeb2005"},"content":"        String patientId \u003d parts[1];","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Basudeb2005"},"content":"        LocalDateTime timestamp \u003d LocalDateTime.parse(parts[2], DATE_TIME_FORMATTER);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e symptoms \u003d parts[3].isEmpty() ? new ArrayList\u003c\u003e() : Arrays.asList(parts[3].split(\",\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e medicines \u003d parts[4].isEmpty() ? new ArrayList\u003c\u003e() : Arrays.asList(parts[4].split(\",\"));","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Basudeb2005"},"content":"        String notes \u003d parts.length \u003e 5 ? parts[5] : \"\"; // Default to empty string if notes aren\u0027t provided","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Basudeb2005"},"content":"        return new Prescription(patientId, prescriptionId, timestamp, symptoms, medicines, notes);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Basudeb2005"},"content":"     * Generates a formatted HTML document for the prescription.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Basudeb2005"},"content":"     * Creates a professional-looking prescription that can be printed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Basudeb2005"},"content":"     * Includes patient details if provided, symptoms, medicines, and notes.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Basudeb2005"},"content":"     * @param patient The Patient object (can be null if patient details unavailable)","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Basudeb2005"},"content":"     * @return A string containing HTML markup for the prescription","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Basudeb2005"},"content":"    public String generateHtml(Patient patient) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Basudeb2005"},"content":"        StringBuilder html \u003d new StringBuilder();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Basudeb2005"},"content":"        html.append(\"\u003c!DOCTYPE html\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"\u003chtml lang\u003d\\\"en\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"\u003chead\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"  \u003cmeta charset\u003d\\\"UTF-8\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"  \u003cmeta name\u003d\\\"viewport\\\" content\u003d\\\"width\u003ddevice-width, initial-scale\u003d1.0\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"  \u003ctitle\u003ePrescription \").append(prescriptionId).append(\"\u003c/title\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"  \u003cstyle\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    body { font-family: Arial, sans-serif; margin: 40px; }\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    .prescription { border: 1px solid #333; padding: \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Basudeb2005"},"content":"                        \"20px; max-width: 800px; margin: 0 auto; }\\n\")","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    .header { text-align: center; border-bottom: 2px solid #333; padding-bottom: 10px;\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"             margin-bottom: 20px; }\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    .section { margin-bottom: 15px; }\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    h1 { color: #333; }\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    h2 { color: #555; margin-bottom: 5px; }\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    .footer { margin-top: 50px; border-top: 1px solid #ccc; padding-top: 10px;\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"             text-align: center; }\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    @media print { .no-print { display: none; } }\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    table { width: 100%; border-collapse: collapse; }\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    td { padding: 5px; }\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    .patient-info td:first-child { font-weight: bold; width: 150px; }\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"  \u003c/style\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"\u003c/head\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"\u003cbody\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"  \u003cdiv class\u003d\\\"prescription\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    \u003cdiv class\u003d\\\"header\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"      \u003ch1\u003eClinicEase Medical Prescription\u003c/h1\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"      \u003cp\u003ePrescription ID: \").append(prescriptionId).append(\"\u003c/p\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"      \u003cp\u003eDate: \").append(timestamp.format(DATE_TIME_FORMATTER)).append(\"\u003c/p\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    \u003c/div\u003e\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Basudeb2005"},"content":"        if (patient !\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Basudeb2005"},"content":"            html.append(\"    \u003cdiv class\u003d\\\"section\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"      \u003ch2\u003ePatient Information\u003c/h2\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"      \u003ctable class\u003d\\\"patient-info\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"        \u003ctr\u003e\u003ctd\u003ePatient ID:\u003c/td\u003e\u003ctd\u003e\").append(patient.getId()).append(\"\u003c/td\u003e\u003c/tr\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"        \u003ctr\u003e\u003ctd\u003eName:\u003c/td\u003e\u003ctd\u003e\").append(patient.getName()).append(\"\u003c/td\u003e\u003c/tr\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"        \u003ctr\u003e\u003ctd\u003eGender:\u003c/td\u003e\u003ctd\u003e\").append(patient.getGender()).append(\"\u003c/td\u003e\u003c/tr\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"        \u003ctr\u003e\u003ctd\u003eDate of Birth:\u003c/td\u003e\u003ctd\u003e\").append(patient.getDob()).append(\"\u003c/td\u003e\u003c/tr\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"        \u003ctr\u003e\u003ctd\u003eContact:\u003c/td\u003e\u003ctd\u003e\").append(patient.getContactInfo()).append(\"\u003c/td\u003e\u003c/tr\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"      \u003c/table\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"    \u003c/div\u003e\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Basudeb2005"},"content":"        } else {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Basudeb2005"},"content":"            html.append(\"    \u003cdiv class\u003d\\\"section\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"      \u003ch2\u003ePatient Information\u003c/h2\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"      \u003ctable class\u003d\\\"patient-info\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"        \u003ctr\u003e\u003ctd\u003ePatient ID:\u003c/td\u003e\u003ctd\u003e\").append(patientId).append(\"\u003c/td\u003e\u003c/tr\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"      \u003c/table\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"    \u003c/div\u003e\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Basudeb2005"},"content":"        html.append(\"    \u003cdiv class\u003d\\\"section\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"      \u003ch2\u003eSymptoms\u003c/h2\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"      \u003cul\u003e\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Basudeb2005"},"content":"        for (String symptom : symptoms) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Basudeb2005"},"content":"            html.append(\"        \u003cli\u003e\").append(symptom).append(\"\u003c/li\u003e\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Basudeb2005"},"content":"        html.append(\"      \u003c/ul\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    \u003c/div\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    \u003cdiv class\u003d\\\"section\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"      \u003ch2\u003ePrescribed Medications\u003c/h2\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"      \u003cul\u003e\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Basudeb2005"},"content":"        for (String medicine : medicines) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Basudeb2005"},"content":"            html.append(\"        \u003cli\u003e\").append(medicine).append(\"\u003c/li\u003e\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Basudeb2005"},"content":"        html.append(\"      \u003c/ul\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    \u003c/div\u003e\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Basudeb2005"},"content":"        if (notes !\u003d null \u0026\u0026 !notes.isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Basudeb2005"},"content":"            html.append(\"    \u003cdiv class\u003d\\\"section\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"      \u003ch2\u003eSpecial Instructions\u003c/h2\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"      \u003cp\u003e\").append(notes).append(\"\u003c/p\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Basudeb2005"},"content":"                    .append(\"    \u003c/div\u003e\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Basudeb2005"},"content":"        html.append(\"    \u003cdiv class\u003d\\\"footer\\\"\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"      \u003cp\u003eThis prescription was generated by ClinicEase System\u003c/p\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"      \u003cbutton class\u003d\\\"no-print\\\" onclick\u003d\\\"window.print();\\\"\u003ePrint Prescription\u003c/button\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"    \u003c/div\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"  \u003c/div\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"\u003c/body\u003e\\n\")","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Basudeb2005"},"content":"                .append(\"\u003c/html\u003e\\n\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Basudeb2005"},"content":"        return html.toString();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Basudeb2005"},"content":"} ","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":288}},{"path":"src/main/java/miscellaneous/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package miscellaneous;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jyukuan"},"content":"import command.AddPatientCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jyukuan"},"content":"import command.Command;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jyukuan"},"content":"import command.DeletePatientCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jyukuan"},"content":"import command.ExitCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jyukuan"},"content":"import command.AddAppointmentCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jyukuan"},"content":"import command.DeleteAppointmentCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jyukuan"},"content":"import command.EditPatientCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"import command.HelpCommand;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jyukuan"},"content":"import command.ListAppointmentCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jyukuan"},"content":"import command.EditPatientHistoryCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jyukuan"},"content":"import command.ListPatientCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"import command.SortAppointmentCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jyukuan"},"content":"import command.StoreMedHistoryCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jyukuan"},"content":"import command.ViewPatientCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jyukuan"},"content":"import command.ViewMedHistoryCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylancmznus"},"content":"import command.MarkApppointmentCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylancmznus"},"content":"import command.UnmarkAppointmentCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylancmznus"},"content":"import command.FindAppointmentCommand;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"import command.AddPrescriptionCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"import command.ViewAllPrescriptionsCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"import command.ViewPrescriptionCommand;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"import exception.UnknownCommandException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"import manager.Patient;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"import manager.Prescription;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JudHoka"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"import static manager.Appointment.INPUT_FORMAT;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"/**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":" * Parses user input strings into executable Command objects.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":" * Handles all command types and parameter extraction for the clinic management system.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":" * Provides methods for parsing different types of commands including patient, appointment,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":" * medical history, and prescription management.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":" */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"public class Parser {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"     * Parses raw user input and returns the corresponding Command object.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"     * @param userInput The full command string entered by the user","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"     * @return A Command object for execution","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"     * @throws InvalidInputFormatException If user input format is invalid","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"     * @throws UnknownCommandException     If command is not recognized","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"    public static Command parse(String userInput) throws InvalidInputFormatException, UnknownCommandException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"        // Handle empty input","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"        if (userInput \u003d\u003d null || userInput.trim().isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"            throw new InvalidInputFormatException(\"Please enter a command.\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"        // Split into two parts to extract the command keyword and its detail","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"        String commandWord \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"        case \"bye\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"        case \"help\":","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"            return new HelpCommand();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"        case \"add-patient\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"            return new AddPatientCommand(parseAddPatient(userInput));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"        case \"delete-patient\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"            return new DeletePatientCommand(parseDeletePatient(userInput));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"        case \"view-patient\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"            return new ViewPatientCommand(parseViewPatient(userInput));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"        case \"list-patient\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"            return new ListPatientCommand();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"        case \"store-history\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"            return new StoreMedHistoryCommand(parseStoreHistory(userInput));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chwenyee"},"content":"        case \"view-history\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chwenyee"},"content":"            return new ViewMedHistoryCommand(parseViewHistory(userInput));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chwenyee"},"content":"        case \"add-appointment\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chwenyee"},"content":"            return new AddAppointmentCommand(parseAddAppointment(userInput));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chwenyee"},"content":"        case \"delete-appointment\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chwenyee"},"content":"            return new DeleteAppointmentCommand(parseDeleteAppointment(userInput));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chwenyee"},"content":"        case \"list-appointment\":","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chwenyee"},"content":"            return new ListAppointmentCommand();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chwenyee"},"content":"        case \"sort-appointment\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chwenyee"},"content":"            return new SortAppointmentCommand(parseSortAppointment(userInput));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jyukuan"},"content":"        case \"edit-patient\":","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jyukuan"},"content":"            return new EditPatientCommand(parseEditPatient(userInput));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jyukuan"},"content":"        case \"edit-history\":","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jyukuan"},"content":"            return new EditPatientHistoryCommand(parseEditHistory(userInput));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylancmznus"},"content":"        case \"mark-appointment\":","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dylancmznus"},"content":"            return new MarkApppointmentCommand(parseMarkAppointment(userInput));","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylancmznus"},"content":"        case \"unmark-appointment\":","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dylancmznus"},"content":"            return new UnmarkAppointmentCommand(parseUnmarkAppointment(userInput));","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dylancmznus"},"content":"        case \"find-appointment\":","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dylancmznus"},"content":"            return new FindAppointmentCommand(parseFindAppointment(userInput));","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Basudeb2005"},"content":"        case \"add-prescription\":","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Basudeb2005"},"content":"            return new AddPrescriptionCommand(parseAddPrescription(userInput));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Basudeb2005"},"content":"        case \"view-all-prescriptions\":","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Basudeb2005"},"content":"            return new ViewAllPrescriptionsCommand(parseViewAllPrescriptions(userInput));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Basudeb2005"},"content":"        case \"view-prescription\":","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Basudeb2005"},"content":"            return new ViewPrescriptionCommand(parseViewPrescription(userInput));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"chwenyee"},"content":"        default:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"chwenyee"},"content":"            throw new UnknownCommandException(\"Unknown command. Please try again.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"chwenyee"},"content":"    private static Patient parseAddPatient(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JudHoka"},"content":"        String temp \u003d input.replaceFirst(\"(?i)add-patient\\\\s*\", \"\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JudHoka"},"content":"        String name \u003d extractValue(temp, \"n/\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JudHoka"},"content":"        String nric \u003d extractValue(temp, \"ic/\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JudHoka"},"content":"        String birthdate \u003d extractValue(temp, \"dob/\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JudHoka"},"content":"        String gender \u003d extractValue(temp, \"g/\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"        String phone \u003d extractValue(temp, \"p/\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JudHoka"},"content":"        String address \u003d extractValue(temp, \"a/\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JudHoka"},"content":"        String history \u003d extractValue(temp, \"h/\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JudHoka"},"content":"        if (name \u003d\u003d null || nric \u003d\u003d null || birthdate \u003d\u003d null || gender \u003d\u003d null || phone \u003d\u003d null || address \u003d\u003d null) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Patient details are incomplete!\" + System.lineSeparator()","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JudHoka"},"content":"                    + \"Please use: add-patient n/NAME ic/NRIC dob/BIRTHDATE(yyyy-MM-dd) g/GENDER p/PHONE a/ADDRESS\");","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JudHoka"},"content":"        List\u003cString\u003e medHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JudHoka"},"content":"        if (history !\u003d null \u0026\u0026 !history.trim().isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JudHoka"},"content":"            String[] entries \u003d history.split(\",\\\\s*\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JudHoka"},"content":"            for (String entry : entries) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JudHoka"},"content":"                medHistory.add(entry.trim());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JudHoka"},"content":"        return new Patient(nric.trim(), name.trim(), birthdate.trim(),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JudHoka"},"content":"                gender.trim(), address.trim(), phone.trim(), medHistory);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"chwenyee"},"content":"    private static String parseDeletePatient(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"chwenyee"},"content":"        if (input.length() \u003c 15) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Invalid command format. Use: delete-patient NRIC\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"chwenyee"},"content":"        String nric \u003d input.substring(15).trim();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"chwenyee"},"content":"        return nric;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"chwenyee"},"content":"    private static String parseViewPatient(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"chwenyee"},"content":"        if (input.length() \u003c 13) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Invalid command format. Use: view-patient NRIC\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"chwenyee"},"content":"        String nric \u003d input.substring(13).trim(); // Extract and trim NRIC","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"chwenyee"},"content":"        if (nric.isEmpty() || !nric.matches(\"(?i)[A-Z]\\\\d{7}[A-Z]\")) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Invalid IC format. Please use a valid IC e.g. S1234567D\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"chwenyee"},"content":"        return nric;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"chwenyee"},"content":"    public static String[] parseViewHistory(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jyukuan"},"content":"        // Remove the command prefix \"view-history\" (case-insensitive) and get the remaining string.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jyukuan"},"content":"        String temp \u003d input.replaceFirst(\"(?i)view-history\\\\s*\", \"\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jyukuan"},"content":"        String type;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jyukuan"},"content":"        String nameOrIc;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jyukuan"},"content":"        // Check if the remaining string starts with \"ic/\" or \"n/\" (case-insensitive).","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jyukuan"},"content":"        if (temp.toLowerCase().startsWith(\"ic/\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jyukuan"},"content":"            type \u003d \"ic\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jyukuan"},"content":"            // Extract the real content after \"ic/\" using extractValue(...)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jyukuan"},"content":"            nameOrIc \u003d extractValue(temp, \"ic/\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jyukuan"},"content":"        } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jyukuan"},"content":"            // If there\u0027s no explicit prefix, try to detect NRIC vs. name.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jyukuan"},"content":"            // Uses a simple regex matching a 9-character format: e.g., S1234567A","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jyukuan"},"content":"            if (temp.matches(\"^[A-Za-z]\\\\d{7}[A-Za-z]$\")) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jyukuan"},"content":"                type \u003d \"ic\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jyukuan"},"content":"                nameOrIc \u003d temp.trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jyukuan"},"content":"            } else {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jyukuan"},"content":"                // Otherwise, assume it\u0027s a name","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jyukuan"},"content":"                type \u003d \"n\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jyukuan"},"content":"                nameOrIc \u003d temp.trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jyukuan"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jyukuan"},"content":"        // Return null if the parsed value is null or empty","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jyukuan"},"content":"        if (nameOrIc \u003d\u003d null || nameOrIc.isEmpty()) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Invalid format. Please use: view-history NRIC or view-history NAME\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jyukuan"},"content":"        // Return the result as [type, value]","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jyukuan"},"content":"        return new String[]{type, nameOrIc};","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"chwenyee"},"content":"    public static String[] parseStoreHistory(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jyukuan"},"content":"        // Remove the command prefix \"store-history\" (case-insensitive)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jyukuan"},"content":"        // and get the remaining string.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jyukuan"},"content":"        String temp \u003d input.replaceFirst(\"(?i)store-history\\\\s*\", \"\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jyukuan"},"content":"        // Extract n/NAME, ic/NRIC, and h/MEDICAL_HISTORY from the remaining string","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jyukuan"},"content":"        String nric \u003d extractValue(temp, \"ic/\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jyukuan"},"content":"        String medHistory \u003d extractValue(temp, \"h/\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jyukuan"},"content":"        // If any part is missing, return null to indicate a parse failure","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jyukuan"},"content":"        if (nric \u003d\u003d null || medHistory \u003d\u003d null) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Invalid format. \" +","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"chwenyee"},"content":"                    \"Please use: store-history ic/NRIC h/MEDICAL_HISTORY\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jyukuan"},"content":"        // Return the trimmed values as an array","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jyukuan"},"content":"        return new String[]{nric.trim(), medHistory.trim()};","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"chwenyee"},"content":"    private static Appointment parseAddAppointment(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"chwenyee"},"content":"        String temp \u003d input.replaceFirst(\"(?i)add-appointment\\\\s+\", \"\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"chwenyee"},"content":"        String nric \u003d extractValue(temp, \"ic/\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"chwenyee"},"content":"        String date \u003d extractValue(temp, \"dt/\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"chwenyee"},"content":"        String time \u003d extractValue(temp, \"t/\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"chwenyee"},"content":"        String desc \u003d extractValue(temp, \"dsc/\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"chwenyee"},"content":"        if (nric \u003d\u003d null || date \u003d\u003d null || time \u003d\u003d null || desc \u003d\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JudHoka"},"content":"            String msg \u003d \"Missing details or wrong format for add-appointment!\" + System.lineSeparator()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JudHoka"},"content":"                    + \"Please use: add-appointment ic/NRIC dt/DATE t/TIME dsc/DESCRIPTION\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JudHoka"},"content":"            throw new InvalidInputFormatException(msg);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"chwenyee"},"content":"        // Check if the input format of Singapore\u0027s NRIC is valid","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"chwenyee"},"content":"        if (!nric.trim().matches(\"(?i)[STFGM]\\\\d{7}[A-Z]\")) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Invalid IC format. Please use a valid IC e.g. S1234567D\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"chwenyee"},"content":"        try {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"chwenyee"},"content":"            String combined \u003d date.trim() + \" \" + time.trim();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"chwenyee"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(combined, INPUT_FORMAT);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"chwenyee"},"content":"            LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"chwenyee"},"content":"            if (dateTime.isBefore(now)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"chwenyee"},"content":"                throw new InvalidInputFormatException","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"chwenyee"},"content":"                (\"The appointment date/time cannot be before the current date/time\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"chwenyee"},"content":"            return new Appointment(nric.trim(), dateTime, desc.trim());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"chwenyee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Invalid date/time format. Please use: dt/yyyy-MM-dd and t/HHmm\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"chwenyee"},"content":"    private static String parseDeleteAppointment(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"chwenyee"},"content":"        if (!input.matches(\"(?i)delete-appointment\\\\s+A\\\\d+\")) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Invalid format! Please use: \" +","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"chwenyee"},"content":"                    \"delete-appointment APPOINTMENT_ID\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"chwenyee"},"content":"        String apptId \u003d input.replaceFirst(\"(?i)delete-appointment\\\\s*\", \"\").trim();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"chwenyee"},"content":"        return apptId;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"chwenyee"},"content":"    private static String parseSortAppointment(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"chwenyee"},"content":"        String temp \u003d input.replaceFirst(\"(?i)sort-appointment\\\\s*\", \"\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"chwenyee"},"content":"        switch (temp.toLowerCase()) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"chwenyee"},"content":"        case \"bydate\":","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"chwenyee"},"content":"            return \"date\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"chwenyee"},"content":"        case \"byid\":","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"chwenyee"},"content":"            return \"id\";","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"chwenyee"},"content":"        default:","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Invalid format! Please use: \u0027sort-appointment byDate\u0027 or \" +","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"chwenyee"},"content":"                    \"\u0027sort-appointment byId\u0027 (case-insensitive).\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"dylancmznus"},"content":"    private static String parseMarkAppointment(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"dylancmznus"},"content":"        String apptId \u003d input.replaceFirst(\"(?i)mark-appointment\\\\s*\", \"\").trim();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"dylancmznus"},"content":"        if (apptId.isEmpty()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"dylancmznus"},"content":"            throw new InvalidInputFormatException(\"Invalid format! Use: mark-appointment APPOINTMENT_ID\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"dylancmznus"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"dylancmznus"},"content":"        return apptId;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"dylancmznus"},"content":"    private static String parseUnmarkAppointment(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"dylancmznus"},"content":"        String apptId \u003d input.replaceFirst(\"(?i)unmark-appointment\\\\s*\", \"\").trim();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"dylancmznus"},"content":"        if (apptId.isEmpty()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"dylancmznus"},"content":"            throw new InvalidInputFormatException(\"Invalid format! Use: unmark-appointment APPOINTMENT_ID\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"dylancmznus"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"dylancmznus"},"content":"        return apptId;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"dylancmznus"},"content":"    private static String parseFindAppointment(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"chwenyee"},"content":"        String patientId \u003d input.replaceFirst(\"(?i)find-appointment\\\\s*\", \"\").trim();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"chwenyee"},"content":"        if (patientId.isEmpty()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Invalid format! Use: find-appointment PATIENT_NRIC\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"dylancmznus"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"chwenyee"},"content":"        return patientId;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"chwenyee"},"content":"     * Extracts parameter values from command strings.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"chwenyee"},"content":"     * @param input  The string containing parameters","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"chwenyee"},"content":"     * @param prefix The parameter prefix to extract (e.g. \"ic/\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"chwenyee"},"content":"     * @return The extracted value or null if not found","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Basudeb2005"},"content":"    private static String extractValue(String input, String prefix) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"chwenyee"},"content":"        assert prefix !\u003d null : \"Prefix cannot be null\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"chwenyee"},"content":"        String lowerInput \u003d input.toLowerCase();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"chwenyee"},"content":"        String lowerPrefix \u003d prefix.toLowerCase();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"chwenyee"},"content":"        int start \u003d -1;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"chwenyee"},"content":"        // Find the first occurrence of the prefix that is either at the start or come before blank space","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Basudeb2005"},"content":"        // Ensure checks are not done at where the prefix can\u0027t fully fit","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"chwenyee"},"content":"        for (int i \u003d 0; i \u003c\u003d lowerInput.length() - lowerPrefix.length(); i++) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"chwenyee"},"content":"            boolean isParamPrefixMatch \u003d lowerInput.startsWith(lowerPrefix, i);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"chwenyee"},"content":"            // Check if the character before the prefix is blank space in input to have a valid input format","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"chwenyee"},"content":"            boolean isParamAtValidPosition \u003d (i \u003d\u003d 0) || Character.isWhitespace(input.charAt(i - 1));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"chwenyee"},"content":"            if (isParamPrefixMatch \u0026\u0026 isParamAtValidPosition) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"chwenyee"},"content":"                start \u003d i;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"chwenyee"},"content":"                break;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Basudeb2005"},"content":"        if (start \u003c 0) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Basudeb2005"},"content":"            return null;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Basudeb2005"},"content":"        start +\u003d prefix.length();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Basudeb2005"},"content":"        String[] possible \u003d {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Basudeb2005"},"content":"            \"n/\", \"ic/\", \"dob/\", \"g/\", \"p/\", \"a/\", \"dt/\", \"t/\",","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Basudeb2005"},"content":"            \"dsc/\", \"h/\", \"old/\", \"new/\", \"s/\", \"m/\", \"nt/\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Basudeb2005"},"content":"        };","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Basudeb2005"},"content":"        int end \u003d input.length();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"chwenyee"},"content":"        // Determine where the current parameter\u0027s detail ends by finding the start of the next parameter","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Basudeb2005"},"content":"        for (String p : possible) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Basudeb2005"},"content":"            if (p.equalsIgnoreCase(prefix)) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Basudeb2005"},"content":"                continue;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Basudeb2005"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"chwenyee"},"content":"            String lowerP \u003d p.toLowerCase();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"chwenyee"},"content":"            // Find the next occurrence of p that is either at the start or come before blank space","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"chwenyee"},"content":"            for (int i \u003d start; i \u003c\u003d lowerInput.length() - lowerP.length(); i++) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"chwenyee"},"content":"                boolean isNextParamPrefixMatch \u003d lowerInput.startsWith(lowerP, i);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"chwenyee"},"content":"                // Check if the character before the prefix is blank space in input to have a valid input format","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Basudeb2005"},"content":"                boolean isNextParamAtValidPosition \u003d (i \u003d\u003d 0)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Basudeb2005"},"content":"                        || Character.isWhitespace(input.charAt(i - 1));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"chwenyee"},"content":"                if (isNextParamPrefixMatch \u0026\u0026 isNextParamAtValidPosition) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"chwenyee"},"content":"                    if (i \u003c end) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"chwenyee"},"content":"                        end \u003d i;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Basudeb2005"},"content":"                    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"chwenyee"},"content":"                    break;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Basudeb2005"},"content":"                }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"chwenyee"},"content":"            }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"chwenyee"},"content":"        String detail \u003d input.substring(start, end).trim();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"chwenyee"},"content":"        return detail.isEmpty() ? null : detail;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"jyukuan"},"content":"    private static String[] parseEditPatient(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"jyukuan"},"content":"        String temp \u003d input.replaceFirst(\"(?i)edit-patient\\\\s*\", \"\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"jyukuan"},"content":"        String nric \u003d extractValue(temp, \"ic/\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"jyukuan"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Missing NRIC! Use: edit-patient ic/NRIC [n/NAME] \" +","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"jyukuan"},"content":"                    \"[dob/BIRTHDATE] [g/GENDER] [a/ADDRESS] [p/PHONE]\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"jyukuan"},"content":"        String name \u003d extractValue(temp, \"n/\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"jyukuan"},"content":"        String dob \u003d extractValue(temp, \"dob/\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"jyukuan"},"content":"        String gender \u003d extractValue(temp, \"g/\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"jyukuan"},"content":"        String address \u003d extractValue(temp, \"a/\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"jyukuan"},"content":"        String phone \u003d extractValue(temp, \"p/\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"jyukuan"},"content":"        return new String[]{nric, name, dob, gender, address, phone};","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"jyukuan"},"content":"    private static String[] parseEditHistory(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"jyukuan"},"content":"        String temp \u003d input.replaceFirst(\"(?i)edit-history\\\\s*\", \"\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"jyukuan"},"content":"        String nric \u003d extractValue(temp, \"ic/\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"jyukuan"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Missing NRIC! Use: edit-history ic/NRIC \" +","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"jyukuan"},"content":"                    \"old/OLD_HISTORY new/NEW_HISTORY\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"jyukuan"},"content":"        String oldHistory \u003d extractValue(temp, \"old/\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"jyukuan"},"content":"        String newHistory \u003d extractValue(temp, \"new/\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"jyukuan"},"content":"        if (oldHistory \u003d\u003d null || newHistory \u003d\u003d null) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"chwenyee"},"content":"            throw new InvalidInputFormatException(\"Missing old or new history text! Use: edit-history \" +","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"jyukuan"},"content":"                    \"ic/NRIC old/OLD_TEXT new/NEW_TEXT\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"jyukuan"},"content":"        return new String[]{nric, oldHistory, newHistory};","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"chwenyee"},"content":"     * Parses patient data from storage format.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"chwenyee"},"content":"     * @param line The pipe-delimited storage string of the patient","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"chwenyee"},"content":"     * @return Patient object or null if invalid","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"JudHoka"},"content":"    public static Patient parseLoadPatient(String line) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"JudHoka"},"content":"        String[] tokens \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"JudHoka"},"content":"        boolean isHistoryNonpresent \u003d tokens.length \u003d\u003d 6;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"JudHoka"},"content":"        if (tokens.length \u003c 6) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"JudHoka"},"content":"            return null;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"JudHoka"},"content":"        String id \u003d tokens[0];","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"JudHoka"},"content":"        String name \u003d tokens[1];","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"JudHoka"},"content":"        String dobStr \u003d tokens[2];","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"JudHoka"},"content":"        String gender \u003d tokens[3];","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"JudHoka"},"content":"        String address \u003d tokens[4];","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"JudHoka"},"content":"        String contact \u003d tokens[5];","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"JudHoka"},"content":"        List\u003cString\u003e medHistory \u003d isHistoryNonpresent ? new ArrayList\u003c\u003e() : Arrays.stream(tokens[6].split(\",\"))","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"JudHoka"},"content":"                .map(String::trim)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"JudHoka"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"JudHoka"},"content":"        return new Patient(id, name, dobStr, gender, address, contact, medHistory);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"chwenyee"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"chwenyee"},"content":"     * Parses appointment data from storage format.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"chwenyee"},"content":"     *","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"chwenyee"},"content":"     * @param line The pipe-delimited storage string of the appointment","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"chwenyee"},"content":"     * @return Appointment object or null if invalid","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"chwenyee"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"JudHoka"},"content":"    public static Appointment parseLoadAppointment(String line) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"JudHoka"},"content":"        if (line.startsWith(\"countId:\")) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"JudHoka"},"content":"            return null;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"JudHoka"},"content":"        String[] tokens \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"JudHoka"},"content":"        if (tokens.length \u003c 5) {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"JudHoka"},"content":"            return null;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"JudHoka"},"content":"        try {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"JudHoka"},"content":"            String id \u003d tokens[0].trim();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"JudHoka"},"content":"            boolean isDone \u003d tokens[1].equals(\"true\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"JudHoka"},"content":"            String nric \u003d tokens[2].trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"JudHoka"},"content":"            String dateTimeStr \u003d tokens[3].trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"JudHoka"},"content":"            String desc \u003d tokens[4].trim();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"JudHoka"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeStr, Appointment.OUTPUT_FORMAT);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"JudHoka"},"content":"            Appointment appointment \u003d new Appointment(\"A\" + id, nric, dateTime, desc);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"JudHoka"},"content":"            appointment.setIsDone(isDone);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"JudHoka"},"content":"            return appointment;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"JudHoka"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"JudHoka"},"content":"            return null;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"Basudeb2005"},"content":"     * Parses input for the add-prescription command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"Basudeb2005"},"content":"     * Extracts patient ID, symptoms, medicines, and optional notes from the input string.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"Basudeb2005"},"content":"     * Symptoms and medicines are converted from comma-separated strings to lists.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"Basudeb2005"},"content":"     * @param input The raw user input string for add-prescription command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"Basudeb2005"},"content":"     * @return A new Prescription object with the parsed data","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"Basudeb2005"},"content":"     * @throws InvalidInputFormatException If required parameters are missing or format is incorrect","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"Basudeb2005"},"content":"    public static Prescription parseAddPrescription(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"Basudeb2005"},"content":"        String temp \u003d input.replaceFirst(\"(?i)add-prescription\\\\s*\", \"\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"Basudeb2005"},"content":"        String patientId \u003d extractValue(temp, \"ic/\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"Basudeb2005"},"content":"        String symptoms \u003d extractValue(temp, \"s/\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"Basudeb2005"},"content":"        String medicines \u003d extractValue(temp, \"m/\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"Basudeb2005"},"content":"        String notes \u003d extractValue(temp, \"nt/\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"Basudeb2005"},"content":"        if (patientId \u003d\u003d null || symptoms \u003d\u003d null || medicines \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"Basudeb2005"},"content":"            String msg \u003d \"Missing details or wrong format for add-prescription!\" + System.lineSeparator()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"Basudeb2005"},"content":"                    + \"Please use: add-prescription ic/PATIENT_ID s/SYMPTOMS m/MEDICINES [nt/NOTES]\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"Basudeb2005"},"content":"            throw new InvalidInputFormatException(msg);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"Basudeb2005"},"content":"        // Split symptoms by comma","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e symptomsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"Basudeb2005"},"content":"        if (symptoms !\u003d null \u0026\u0026 !symptoms.trim().isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"Basudeb2005"},"content":"            String[] entries \u003d symptoms.split(\",\\\\s*\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"Basudeb2005"},"content":"            for (String entry : entries) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"Basudeb2005"},"content":"                symptomsList.add(entry.trim());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"Basudeb2005"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"Basudeb2005"},"content":"        // Split medicines by comma","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e medicinesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"Basudeb2005"},"content":"        if (medicines !\u003d null \u0026\u0026 !medicines.trim().isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"Basudeb2005"},"content":"            String[] entries \u003d medicines.split(\",\\\\s*\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"Basudeb2005"},"content":"            for (String entry : entries) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"Basudeb2005"},"content":"                medicinesList.add(entry.trim());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"Basudeb2005"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"Basudeb2005"},"content":"        // Notes is optional, so it can be null","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"Basudeb2005"},"content":"        String finalNotes \u003d (notes !\u003d null) ? notes.trim() : \"\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"Basudeb2005"},"content":"        return new Prescription(patientId.trim(), symptomsList, medicinesList, finalNotes);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"Basudeb2005"},"content":"     * Parses input for the view-all-prescriptions command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"Basudeb2005"},"content":"     * Extracts patient ID from the command string.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"Basudeb2005"},"content":"     * @param input The raw user input string for view-all-prescriptions command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"Basudeb2005"},"content":"     * @return The patient ID whose prescriptions should be viewed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"Basudeb2005"},"content":"     * @throws InvalidInputFormatException If the input format is incorrect or no patient ID is provided","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"Basudeb2005"},"content":"    public static String parseViewAllPrescriptions(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"Basudeb2005"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"Basudeb2005"},"content":"        if (trimmedInput.equals(\"view-all-prescriptions\") || trimmedInput.length() \u003c\u003d 22) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"Basudeb2005"},"content":"            throw new InvalidInputFormatException(\"Invalid command format. Use: view-all-prescriptions PATIENT_ID\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"Basudeb2005"},"content":"        String patientId \u003d trimmedInput.substring(22).trim();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"Basudeb2005"},"content":"        if (patientId.isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"Basudeb2005"},"content":"            throw new InvalidInputFormatException(\"Invalid command format. Use: view-all-prescriptions PATIENT_ID\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"Basudeb2005"},"content":"        return patientId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"Basudeb2005"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"Basudeb2005"},"content":"     * Parses input for the view-prescription command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"Basudeb2005"},"content":"     * Extracts prescription ID from the command string.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"Basudeb2005"},"content":"     * @param input The raw user input string for view-prescription command","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"Basudeb2005"},"content":"     * @return The prescription ID to be viewed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"Basudeb2005"},"content":"     * @throws InvalidInputFormatException If the input format is incorrect or no prescription ID is provided","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"Basudeb2005"},"content":"    public static String parseViewPrescription(String input) throws InvalidInputFormatException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"Basudeb2005"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"Basudeb2005"},"content":"        if (trimmedInput.equals(\"view-prescription\") || trimmedInput.length() \u003c\u003d 17) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"Basudeb2005"},"content":"            throw new InvalidInputFormatException(\"Invalid command format. Use: view-prescription PRESCRIPTION_ID\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"Basudeb2005"},"content":"        String prescriptionId \u003d trimmedInput.substring(17).trim();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"Basudeb2005"},"content":"        if (prescriptionId.isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"Basudeb2005"},"content":"            throw new InvalidInputFormatException(\"Invalid command format. Use: view-prescription PRESCRIPTION_ID\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"Basudeb2005"},"content":"        return prescriptionId;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"dylancmznus":29,"JudHoka":79,"chwenyee":205,"jyukuan":95,"Basudeb2005":134}},{"path":"src/main/java/miscellaneous/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package miscellaneous;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import manager.Patient;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import java.util.List;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":" * The Ui class handles all user interaction for the clinic management system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":" * It provides methods to display information to the user and collect input.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":" * This class is responsible for formatting output in a consistent way and","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":" * providing a clean interface between the system and the user.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"public class Ui {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"    public static final String DIVIDER \u003d \"-\".repeat(100);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"    public static final DateTimeFormatter OUTPUT_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"    private final Scanner sc;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"    public Ui() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"    public static void showLine() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Welcome to ClinicEase!\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"        System.out.println(\"Type a command, or \u0027bye\u0027 to exit.\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"    public void showBye() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"        System.out.println(message);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"    public void showHelp() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"These are the available commands:\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Patient: \");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- add-patient n/NAME ic/NRIC dob/BIRTHDATE g/GENDER p/PHONE a/ADDRESS\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- delete-patient NRIC\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- edit-patient ic/NRIC [n/NAME] [dob/BIRTHDATE] [g/GENDER] [a/ADDRESS] [p/PHONE]\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- list-patient\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- view-patient NRIC\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- store-history n/NAME ic/NRIC h/MEDICAL_HISTORY\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- view-history NRIC or view-history NAME\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- edit-history ic/NRIC old/OLD_TEXT new/NEW_TEXT\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Appointment: \");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- add-appointment ic/NRIC dt/DATE t/TIME dsc/DESCRIPTION\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- delete-appointment APPOINTMENT_ID\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- list-appointment\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- mark-appointment APPOINTMENT_ID\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- unmark-appointment APPOINTMENT_ID\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- sort-appointment byDate or sort-appointment byId\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- find-appointment PATIENT_NRIC\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Prescription: \");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- add-prescription ic/PATIENT_ID s/SYMPTOMS m/MEDICINES [nt/NOTES]\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- view-all-prescriptions PATIENT_ID\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"- view-prescription PRESCRIPTION_ID\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JudHoka"},"content":"    //@@author judHoka","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"    public void showPatientAdded(List\u003cPatient\u003e patients) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JudHoka"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"Patient added successfully: \" + patients.get(patients.size() - 1).getName());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JudHoka"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"    public void showPatientDeleted(Patient removedPatient, String nric) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JudHoka"},"content":"        if (removedPatient \u003d\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JudHoka"},"content":"            showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\"Patient with NRIC \" + nric + \" not found.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"            showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JudHoka"},"content":"            return;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"Patient deleted successfully: \" + removedPatient.getName());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JudHoka"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dylancmznus"},"content":"    //@@author dylancmznus","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dylancmznus"},"content":"    public void showPatientViewed(Patient matchedPatient, String nric) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dylancmznus"},"content":"        if (matchedPatient \u003d\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dylancmznus"},"content":"            showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dylancmznus"},"content":"            System.out.println(\"Patient with NRIC \" + nric + \" not found.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dylancmznus"},"content":"            showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dylancmznus"},"content":"            return;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dylancmznus"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dylancmznus"},"content":"        System.out.println(\"-\".repeat(42) + \"Patient Details\" + \"-\".repeat(42));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylancmznus"},"content":"        System.out.println(matchedPatient);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylancmznus"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JudHoka"},"content":"    //@@author judHoka","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JudHoka"},"content":"    public void showPatientList(List\u003cPatient\u003e patients) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JudHoka"},"content":"        if (patients.isEmpty()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JudHoka"},"content":"            showLine();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"            System.out.println(\"No patients have been added.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JudHoka"},"content":"            showLine();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JudHoka"},"content":"            return;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JudHoka"},"content":"        System.out.println(\"-\".repeat(42) + \"Patient Details\" + \"-\".repeat(42));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JudHoka"},"content":"        int count \u003d 1;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JudHoka"},"content":"        for (Patient p : patients) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JudHoka"},"content":"            System.out.println(count + \". \" + p.toStringForListView());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JudHoka"},"content":"            showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JudHoka"},"content":"            count++;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jyukuan"},"content":"    //@@author jyukuan","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jyukuan"},"content":"    public static void showPatientHistory(Patient patient) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jyukuan"},"content":"        System.out.println(\"Medical History for \" + patient.getName() + \" (NRIC: \" + patient.getId() + \"):\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jyukuan"},"content":"        List\u003cString\u003e histories \u003d patient.getMedicalHistory();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jyukuan"},"content":"        if (histories.isEmpty()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jyukuan"},"content":"            System.out.println(\"No medical history recorded.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jyukuan"},"content":"        } else {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jyukuan"},"content":"            for (String h : histories) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jyukuan"},"content":"                System.out.println(\"- \" + h);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jyukuan"},"content":"            }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jyukuan"},"content":"            showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jyukuan"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"chwenyee"},"content":"    //@@author chwenyee","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"chwenyee"},"content":"    public void showAppointmentAdded(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"chwenyee"},"content":"        Appointment currentAppointment \u003d appointments.get(appointments.size() - 1);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Appointment added for NRIC: \" + currentAppointment.getNric() + \" on \"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"chwenyee"},"content":"                + currentAppointment.getDate() + \" at \" + currentAppointment.getTime().format(OUTPUT_TIME_FORMAT)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"chwenyee"},"content":"                + \".\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Now you have \" + appointments.size() + \" appointment(s) in the list.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"chwenyee"},"content":"    public void showAppointmentDeleted(List\u003cAppointment\u003e appointments, Appointment removedAppointment, String apptId) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"chwenyee"},"content":"        if (removedAppointment \u003d\u003d null) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"chwenyee"},"content":"            showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"chwenyee"},"content":"            System.out.println(\"No appointment found with ID: \" + apptId + \".\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"chwenyee"},"content":"            showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"chwenyee"},"content":"            return;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"chwenyee"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Appointment \" + apptId + \" is deleted successfully.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"chwenyee"},"content":"        System.out.println(\"Now you have \" + appointments.size() + \" appointment(s) in the list.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"chwenyee"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"dylancmznus"},"content":"    //@@author dylancmznus","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"dylancmznus"},"content":"    public void showAppointmentMarked(List\u003cAppointment\u003e appointments, Appointment markedAppointment, String apptId) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"dylancmznus"},"content":"        if (markedAppointment \u003d\u003d null) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"dylancmznus"},"content":"            showLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dylancmznus"},"content":"            System.out.println(\"No appointment found with ID: \" + apptId + \".\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dylancmznus"},"content":"            showLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"dylancmznus"},"content":"            return;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"dylancmznus"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"dylancmznus"},"content":"        showLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"dylancmznus"},"content":"        System.out.println(\"Appointment \" + apptId + \" is marked successfully.\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"dylancmznus"},"content":"        showLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"dylancmznus"},"content":"    public void showAppointmentUnmarked(List\u003cAppointment\u003e appointments, Appointment markedAppointment, String apptId) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"dylancmznus"},"content":"        if (markedAppointment \u003d\u003d null) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"dylancmznus"},"content":"            showLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"dylancmznus"},"content":"            System.out.println(\"No appointment found with ID: \" + apptId + \".\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"dylancmznus"},"content":"            showLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"dylancmznus"},"content":"            return;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"dylancmznus"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"dylancmznus"},"content":"        showLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"dylancmznus"},"content":"        System.out.println(\"Appointment \" + apptId + \" is unmarked successfully.\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"dylancmznus"},"content":"        showLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Basudeb2005"},"content":"    //@@author Basudeb2005","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Basudeb2005"},"content":"    public void showAppointmentList(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Basudeb2005"},"content":"        if (appointments.isEmpty()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Basudeb2005"},"content":"            showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"No appointments found.\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Basudeb2005"},"content":"            showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Basudeb2005"},"content":"            return;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Basudeb2005"},"content":"        System.out.println(\"-\".repeat(43) + \"Appointments\" + \"-\".repeat(45));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Basudeb2005"},"content":"        int count \u003d 1;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Basudeb2005"},"content":"        for (Appointment a : appointments) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(count + \". \" + a);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Basudeb2005"},"content":"            count++;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Basudeb2005"},"content":"        showLine();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"dylancmznus"},"content":"    //@@author dylancmznus","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"dylancmznus"},"content":"    public void showAppointmentsFound(List\u003cAppointment\u003e appointments, String nric) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"dylancmznus"},"content":"        showLine();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"dylancmznus"},"content":"        if (appointments.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"dylancmznus"},"content":"            System.out.println(\" No appointments found for NRIC: \" + nric);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"dylancmznus"},"content":"        } else {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"dylancmznus"},"content":"            System.out.println(\" Appointments found for NRIC: \" + nric);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"dylancmznus"},"content":"            for (Appointment appt : appointments) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"dylancmznus"},"content":"                System.out.println(\" - \" + appt);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"dylancmznus"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"dylancmznus"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"dylancmznus"},"content":"        showLine();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"dylancmznus"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"dylancmznus":54,"JudHoka":41,"chwenyee":79,"Basudeb2005":43,"jyukuan":14}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package storage;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import manager.Patient;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"import manager.Prescription;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import miscellaneous.Parser;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"import java.io.File;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"import java.util.List;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JudHoka"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JudHoka"},"content":"/**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":" * Handles data persistence for the clinic management system.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":" * Provides methods for saving and loading patients, appointments, prescriptions,","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":" * and generating HTML prescription documents.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":" */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"public class Storage {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JudHoka"},"content":"    private static String directoryPath;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JudHoka"},"content":"    private static String patientFilePath;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"    private static String appointmentFilePath;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"    private static String prescriptionFilePath;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"    private static String prescriptionDirPath;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"    private static Patient patients;","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"     * Constructs a Storage object with specified directory.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"     * Initializes file paths for patients, appointments, and prescriptions.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"     * @param directory The root directory for storage files","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"    public Storage(String directory) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"        directoryPath \u003d directory;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"        patientFilePath \u003d directory + File.separator + \"patient_data.txt\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"        appointmentFilePath \u003d directory + File.separator + \"appointment_data.txt\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"        prescriptionFilePath \u003d directory + File.separator + \"prescription_data.txt\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"        prescriptionDirPath \u003d directory + File.separator + \"prescriptions\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"     * Saves patients to file storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"     * Writes each patient in the list to the patient file in a formatted string.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"     * @param patientList The list of patients to save","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If the storage was not properly initialized","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"     *                                  or if there was an error saving to file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"    public static void savePatients(List\u003cPatient\u003e patientList) throws UnloadedStorageException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"        if (directoryPath \u003d\u003d null || patientFilePath \u003d\u003d null) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"            throw new UnloadedStorageException(\"Storage not initialized with a directory!\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"        File dir \u003d new File(directoryPath);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"            dir.mkdirs();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(patientFilePath))) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"            for (Patient patient : patientList) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JudHoka"},"content":"                writer.write(patient.toFileFormat());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JudHoka"},"content":"                writer.newLine();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"            throw new UnloadedStorageException(\"Unable to save the patient!\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"     * Loads patients from file storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"     * Reads and parses patient data from the patient file.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"     * @return A list of Patient objects loaded from file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If there was an error reading from the file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"     *                                  or if the data could not be properly parsed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"    public static List\u003cPatient\u003e loadPatients() throws UnloadedStorageException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JudHoka"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"        File file \u003d new File(patientFilePath);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JudHoka"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"            return patients;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JudHoka"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JudHoka"},"content":"                Patient patient \u003d Parser.parseLoadPatient(line);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JudHoka"},"content":"                if (patient !\u003d null) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"                    patients.add(patient);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JudHoka"},"content":"                }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JudHoka"},"content":"            throw new UnloadedStorageException(\"Unable to load patient data!\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JudHoka"},"content":"        return patients;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Basudeb2005"},"content":"     * Saves appointments to file storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Basudeb2005"},"content":"     * Writes the running ID counter and each appointment in the list to the appointment file.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Basudeb2005"},"content":"     * @param appointmentList The list of appointments to save","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If the storage was not properly initialized","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Basudeb2005"},"content":"     *                                  or if there was an error saving to file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JudHoka"},"content":"    public static void saveAppointments(List\u003cAppointment\u003e appointmentList) throws UnloadedStorageException {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JudHoka"},"content":"        if (directoryPath \u003d\u003d null || appointmentFilePath \u003d\u003d null) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JudHoka"},"content":"            throw new UnloadedStorageException(\"Storage not initialized with a directory!\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JudHoka"},"content":"        File dir \u003d new File(directoryPath);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JudHoka"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"            dir.mkdirs();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JudHoka"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(appointmentFilePath))) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JudHoka"},"content":"            writer.write(\"countId:\" + Appointment.getRunningId());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JudHoka"},"content":"            writer.newLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JudHoka"},"content":"            for (Appointment appointment : appointmentList) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JudHoka"},"content":"                writer.write(appointment.toFileFormat());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JudHoka"},"content":"                writer.newLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JudHoka"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JudHoka"},"content":"            throw new UnloadedStorageException(\"Unable to save the appointment!\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Basudeb2005"},"content":"     * Loads appointments from file storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Basudeb2005"},"content":"     * Reads and parses appointment data from the appointment file.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Basudeb2005"},"content":"     * Also adds appointments to their respective patients.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Basudeb2005"},"content":"     * @param system The management system used to find patients for appointment association","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Basudeb2005"},"content":"     * @return A list of Appointment objects loaded from file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If there was an error reading from the file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Basudeb2005"},"content":"     *                                  or if the data could not be properly parsed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JudHoka"},"content":"    public static List\u003cAppointment\u003e loadAppointments(ManagementSystem system) throws UnloadedStorageException {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JudHoka"},"content":"        List\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JudHoka"},"content":"        File file \u003d new File(appointmentFilePath);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JudHoka"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JudHoka"},"content":"            return appointments;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JudHoka"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JudHoka"},"content":"            int countId \u003d 100;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JudHoka"},"content":"            if (scanner.hasNextLine()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JudHoka"},"content":"                String firstLine \u003d scanner.nextLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JudHoka"},"content":"                if (firstLine.startsWith(\"countId:\")) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JudHoka"},"content":"                    String[] parts \u003d firstLine.split(\":\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JudHoka"},"content":"                    if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JudHoka"},"content":"                        countId \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JudHoka"},"content":"                    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JudHoka"},"content":"                }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JudHoka"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JudHoka"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JudHoka"},"content":"                if (!line.trim().isEmpty()) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JudHoka"},"content":"                    Appointment appointment \u003d Parser.parseLoadAppointment(line);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JudHoka"},"content":"                    if (appointment !\u003d null) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JudHoka"},"content":"                        appointments.add(appointment);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JudHoka"},"content":"                        Patient patient \u003d system.findPatientByNric(appointment.getNric());","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JudHoka"},"content":"                        if (patient !\u003d null) {","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JudHoka"},"content":"                            patient.addAppointment(appointment);","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JudHoka"},"content":"                        }","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JudHoka"},"content":"                    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JudHoka"},"content":"                }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JudHoka"},"content":"            }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JudHoka"},"content":"            Appointment.setRunningId(countId);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JudHoka"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JudHoka"},"content":"            throw new UnloadedStorageException(\"Unable to load appointment data!\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JudHoka"},"content":"        }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JudHoka"},"content":"        return appointments;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Basudeb2005"},"content":"     * Saves prescriptions to file storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Basudeb2005"},"content":"     * Writes each prescription in the list to the prescription file in a formatted string.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Basudeb2005"},"content":"     * @param prescriptionList The list of prescriptions to save","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If the storage was not properly initialized","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Basudeb2005"},"content":"     *                                  or if there was an error saving to file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Basudeb2005"},"content":"    public static void savePrescriptions(List\u003cPrescription\u003e prescriptionList) throws UnloadedStorageException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Basudeb2005"},"content":"        if (directoryPath \u003d\u003d null || prescriptionFilePath \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Basudeb2005"},"content":"            throw new UnloadedStorageException(\"Storage not initialized with a directory!\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Basudeb2005"},"content":"        File dir \u003d new File(directoryPath);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Basudeb2005"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Basudeb2005"},"content":"            dir.mkdirs();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Basudeb2005"},"content":"        // Create a backup of the existing file if it exists","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Basudeb2005"},"content":"        File file \u003d new File(prescriptionFilePath);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Basudeb2005"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Basudeb2005"},"content":"            File backupFile \u003d new File(prescriptionFilePath + \".bak\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Basudeb2005"},"content":"            file.renameTo(backupFile);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Basudeb2005"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(prescriptionFilePath))) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Basudeb2005"},"content":"            int savedCount \u003d 0;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Basudeb2005"},"content":"            for (Prescription prescription : prescriptionList) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Basudeb2005"},"content":"                if (prescription !\u003d null) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Basudeb2005"},"content":"                    try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Basudeb2005"},"content":"                        String fileFormat \u003d prescription.toFileFormat();","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Basudeb2005"},"content":"                        writer.write(fileFormat);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Basudeb2005"},"content":"                        writer.newLine();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Basudeb2005"},"content":"                        savedCount++;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Basudeb2005"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Basudeb2005"},"content":"                        System.out.println(\"Warning: Unable to save prescription: \" + e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Basudeb2005"},"content":"                    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Basudeb2005"},"content":"                }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Basudeb2005"},"content":"            }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Basudeb2005"},"content":"            System.out.println(\"Saved \" + savedCount + \" prescriptions to storage.\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Basudeb2005"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Basudeb2005"},"content":"            throw new UnloadedStorageException(\"Unable to save prescriptions: \" + e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Basudeb2005"},"content":"     * Loads prescriptions from file storage.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Basudeb2005"},"content":"     * Reads and parses prescription data from the prescription file.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Basudeb2005"},"content":"     * @return A list of Prescription objects loaded from file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If there was an error reading from the file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Basudeb2005"},"content":"     *                                  or if the data could not be properly parsed","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"JudHoka"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Basudeb2005"},"content":"    public static List\u003cPrescription\u003e loadPrescriptions() throws UnloadedStorageException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cPrescription\u003e prescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Basudeb2005"},"content":"        File file \u003d new File(prescriptionFilePath);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Basudeb2005"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Basudeb2005"},"content":"            return prescriptions;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Basudeb2005"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Basudeb2005"},"content":"            int lineNumber \u003d 0;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Basudeb2005"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Basudeb2005"},"content":"                lineNumber++;","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Basudeb2005"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Basudeb2005"},"content":"                if (!line.trim().isEmpty()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Basudeb2005"},"content":"                    try {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Basudeb2005"},"content":"                        Prescription prescription \u003d Prescription.fromFileFormat(line);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Basudeb2005"},"content":"                        if (prescription !\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Basudeb2005"},"content":"                            prescriptions.add(prescription);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Basudeb2005"},"content":"                        } else {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Basudeb2005"},"content":"                            System.out.println(\"Warning: Skipped invalid prescription at line \" + lineNumber);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Basudeb2005"},"content":"                        }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Basudeb2005"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Basudeb2005"},"content":"                        // Log the error but continue processing other prescriptions","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Basudeb2005"},"content":"                        System.out.println(\"Warning: Error parsing prescription at line \" + lineNumber +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Basudeb2005"},"content":"                                \": \" + e.getMessage());","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Basudeb2005"},"content":"                    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Basudeb2005"},"content":"                }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Basudeb2005"},"content":"            }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Basudeb2005"},"content":"            // If no prescriptions were loaded but file exists and has content, this is suspicious","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Basudeb2005"},"content":"            if (prescriptions.isEmpty() \u0026\u0026 lineNumber \u003e 0) {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Basudeb2005"},"content":"                System.out.println(\"Warning: No valid prescriptions were loaded from file with \" +","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Basudeb2005"},"content":"                        lineNumber + \" lines\");","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Basudeb2005"},"content":"            }","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Basudeb2005"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Basudeb2005"},"content":"            throw new UnloadedStorageException(\"Unable to load prescription data: \" + e.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Basudeb2005"},"content":"        return prescriptions;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"JudHoka"},"content":"    /**","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Basudeb2005"},"content":"     * Generates and saves an HTML representation of a prescription.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Basudeb2005"},"content":"     * Creates a formatted HTML file that can be viewed in a browser and printed.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Basudeb2005"},"content":"     *","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Basudeb2005"},"content":"     * @param prescription The prescription to generate HTML for","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Basudeb2005"},"content":"     * @param patient      The patient associated with the prescription, may be null","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Basudeb2005"},"content":"     * @throws UnloadedStorageException If the storage was not properly initialized","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Basudeb2005"},"content":"     *                                  or if there was an error writing the HTML file","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Basudeb2005"},"content":"     */","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Basudeb2005"},"content":"    public static void savePrescriptionHtml(Prescription prescription, Patient patient)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Basudeb2005"},"content":"            throws UnloadedStorageException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Basudeb2005"},"content":"        if (directoryPath \u003d\u003d null || prescriptionDirPath \u003d\u003d null) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Basudeb2005"},"content":"            throw new UnloadedStorageException(\"Storage not initialized with a directory!\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Basudeb2005"},"content":"        File dir \u003d new File(prescriptionDirPath);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Basudeb2005"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Basudeb2005"},"content":"            dir.mkdirs();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Basudeb2005"},"content":"        String fileName \u003d \"prescription_\" + prescription.getPatientId() + \"_\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Basudeb2005"},"content":"                + prescription.getPrescriptionId().split(\"-\")[1] + \".html\";","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Basudeb2005"},"content":"        String filePath \u003d prescriptionDirPath + File.separator + fileName;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Basudeb2005"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Basudeb2005"},"content":"            writer.write(prescription.generateHtml(patient));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Basudeb2005"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Basudeb2005"},"content":"            throw new UnloadedStorageException(\"Unable to generate HTML prescription: \" + e.getMessage());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"JudHoka"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"JudHoka":155,"Basudeb2005":158}},{"path":"src/test/java/command/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import manager.Patient;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"import java.util.List;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"class AddAppointmentCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"    @TempDir","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"    Path tempDir;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"    private ManagementSystem manager;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    void setUp() throws UnloadedStorageException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JudHoka"},"content":"        manager \u003d new ManagementSystem(storage.loadPatients(), storage.loadAppointments(manager));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"    void execute_validAppointment_expectAppointmentAdded() throws Exception {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"        Patient patient \u003d new Patient(\"S1234567D\", \"Billy\", \"1990-10-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"                \"M\", \"124 High St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"        new AddPatientCommand(patient).execute(manager, ui);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2025-03-25 1900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment \u003d new Appointment(\"S1234567D\", dateTime, \"Checkup\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"        new AddAppointmentCommand(appointment).execute(manager, ui);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"        List\u003cAppointment\u003e appointments \u003d manager.getAppointments();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"        assertEquals(1, appointments.size());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"        assertEquals(appointment, appointments.get(0));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"        Patient updatedPatient \u003d manager.viewPatient(\"S1234567D\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"        assertEquals(1, updatedPatient.getAppointments().size());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"        assertEquals(appointment, updatedPatient.getAppointments().get(0));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"JudHoka":2,"chwenyee":54}},{"path":"src/test/java/command/AddPrescriptionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"package command;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"import manager.Patient;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"import manager.Prescription;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"import java.io.File;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"import java.util.List;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"//@@author Basudeb2005","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"public class AddPrescriptionCommandTest {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"    private ManagementSystem system;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"    private Ui ui;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"    private PrintStream originalOut;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"        // Save original System.out","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"        originalOut \u003d System.out;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"        // Redirect System.out to capture output","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"            // Initialize Storage with temp directory","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"            new Storage(System.getProperty(\"java.io.tmpdir\") + File.separator + \"clinicease_test\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"            // Initialize system and UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"            system \u003d new ManagementSystem(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"            // Add a test patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"            Patient patient \u003d new Patient(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"                    \"S1234567A\", \"John Doe\", \"1990-01-01\", \"M\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"                    \"123 Main St\", \"98765432\", new ArrayList\u003c\u003e()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"            );","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"            system.addPatient(patient);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Failed to set up test: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"    public void execute_validPrescription_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"        // Create prescription and command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e symptoms \u003d Arrays.asList(\"Fever\", \"Cough\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e medicines \u003d Arrays.asList(\"Paracetamol\", \"Cough syrup\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d new Prescription(\"S1234567A\", symptoms, medicines, \"Take after meals\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"        AddPrescriptionCommand command \u003d new AddPrescriptionCommand(prescription);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"            // Execute command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"            command.execute(system, ui);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"            // Verify command output indicates success","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"            String output \u003d outputStream.toString();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Successfully added prescription\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"S1234567A-1\")); // Prescription ID","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Fever\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Paracetamol\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Take after meals\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"            // Verify prescription was added to the system","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertEquals(1, system.getPrescriptions().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertNotNull(system.getPrescriptionById(\"S1234567A-1\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"        } catch (UnloadedStorageException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Should not throw exception for a valid prescription: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"    public void execute_nonExistentPatient_showsError() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"        // Create prescription for non-existent patient and command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e symptoms \u003d Arrays.asList(\"Fever\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e medicines \u003d Arrays.asList(\"Paracetamol\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d new Prescription(\"NONEXISTENT\", symptoms, medicines, \"\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Basudeb2005"},"content":"        AddPrescriptionCommand command \u003d new AddPrescriptionCommand(prescription);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Basudeb2005"},"content":"            // Execute command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Basudeb2005"},"content":"            command.execute(system, ui);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Basudeb2005"},"content":"            // Verify command output indicates error","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Basudeb2005"},"content":"            String output \u003d outputStream.toString();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Failed to add prescription\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Patient with NRIC: NONEXISTENT not found\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Basudeb2005"},"content":"            // Verify no prescription was added to the system","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertEquals(0, system.getPrescriptions().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Basudeb2005"},"content":"        } catch (UnloadedStorageException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Should handle patient not found gracefully: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Basudeb2005"},"content":"    public void isExit_returnsFalse() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Basudeb2005"},"content":"        // Create command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e symptoms \u003d Arrays.asList(\"Fever\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e medicines \u003d Arrays.asList(\"Paracetamol\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d new Prescription(\"S1234567A\", symptoms, medicines, \"\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Basudeb2005"},"content":"        AddPrescriptionCommand command \u003d new AddPrescriptionCommand(prescription);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Basudeb2005"},"content":"        // Verify isExit returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertFalse(command.isExit());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Basudeb2005"},"content":"} ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":122}},{"path":"src/test/java/command/DeleteAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.PatientNotFoundException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import exception.AppointmentClashException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import exception.DuplicatePatientIDException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"import manager.Patient;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"class DeleteAppointmentCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    @TempDir","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"    Path tempDir;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    private ManagementSystem manager;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"    void setUp() throws UnloadedStorageException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"        manager \u003d new ManagementSystem(storage.loadPatients(), storage.loadAppointments(manager));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"    void execute_validNric_expectAppointmentDeleted() throws DuplicatePatientIDException, UnloadedStorageException,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"            PatientNotFoundException, AppointmentClashException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"        Patient patient \u003d new Patient(\"S1234567D\", \"Billy\", \"1990-10-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"                \"M\", \"124 High St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"        new AddPatientCommand(patient).execute(manager, ui);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2025-03-25 1900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment \u003d new Appointment(\"S1234567D\", dateTime, \"Checkup\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"        new AddAppointmentCommand(appointment).execute(manager, ui);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"        new DeleteAppointmentCommand(appointment.getId()).execute(manager, ui);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"        assertEquals(0, manager.getAppointments().size(), \"Size of appointment does not match\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"JudHoka":8,"chwenyee":48}},{"path":"src/test/java/command/ListAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.PatientNotFoundException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import exception.AppointmentClashException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import exception.DuplicatePatientIDException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"import manager.Patient;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"import java.util.List;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"class ListAppointmentCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"    @TempDir","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    Path tempDir;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    private ManagementSystem manager;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"    void setUp() throws UnloadedStorageException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"        manager \u003d new ManagementSystem(storage.loadPatients(), storage.loadAppointments(manager));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"    void execute_always_requestsAppointmentsFromManager() throws DuplicatePatientIDException, UnloadedStorageException,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"            PatientNotFoundException, AppointmentClashException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime dateTime1 \u003d LocalDateTime.parse(\"2025-03-25 1900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime dateTime2 \u003d LocalDateTime.parse(\"2025-03-28 2000\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime dateTime3 \u003d LocalDateTime.parse(\"2025-03-23 1200\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"        List\u003cPatient\u003e patients \u003d List.of(","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"                new Patient(\"S1234567D\", \"Billy\", \"1990-10-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"                        \"M\", \"124 High St\", \"81234567\", new ArrayList\u003c\u003e()),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"                new Patient(\"S2345678D\", \"James\", \"1980-12-31\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"                        \"M\", \"133 Main St\", \"81229312\", new ArrayList\u003c\u003e()),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"                new Patient(\"S3456789D\", \"William\", \"1970-08-21\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"                        \"M\", \"17 Cornelia St\", \"81009214\", new ArrayList\u003c\u003e())","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"        );","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"        manager.addPatient(patients.get(0));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"        manager.addPatient(patients.get(1));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"        manager.addPatient(patients.get(2));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"        List\u003cAppointment\u003e appointments \u003d List.of(","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"                new Appointment(\"S1234567D\", dateTime1, \"Checkup\"),","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"                new Appointment(\"S2345678D\", dateTime2, \"CT scan\"),","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"                new Appointment(\"S3456789D\", dateTime3, \"Consultation\")","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"        );","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointments.get(0));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointments.get(1));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointments.get(2));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"        new ListAppointmentCommand().execute(manager, ui);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"        assertEquals(3, manager.getAppointments().size(), \"Size of appointment does not match\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"JudHoka":11,"chwenyee":65}},{"path":"src/test/java/command/SortAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package command;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.PatientNotFoundException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import exception.AppointmentClashException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import exception.DuplicatePatientIDException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"import manager.Patient;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"import java.util.List;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"class SortAppointmentCommandTest {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    @TempDir","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"    Path tempDir;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"    private ManagementSystem manager;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"    void setUp() throws UnloadedStorageException, DuplicatePatientIDException, PatientNotFoundException,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"            AppointmentClashException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"        manager \u003d new ManagementSystem(storage.loadPatients(), storage.loadAppointments(manager));","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"        List\u003cPatient\u003e patients \u003d List.of(","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"                new Patient(\"S1234567D\", \"Billy\", \"1990-10-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"                        \"M\", \"124 High St\", \"81234567\", new ArrayList\u003c\u003e()),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"                new Patient(\"S2345678D\", \"James\", \"1980-12-31\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"                        \"M\", \"133 Main St\", \"81229312\", new ArrayList\u003c\u003e()),","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"                new Patient(\"S3456789D\", \"William\", \"1970-08-20\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"                        \"M\", \"17 Cornelia St\", \"81009214\", new ArrayList\u003c\u003e())","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"        );","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"        manager.addPatient(patients.get(0));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"        manager.addPatient(patients.get(1));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"        manager.addPatient(patients.get(2));","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime dateTime1 \u003d LocalDateTime.parse(\"2025-03-25 1900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime dateTime2 \u003d LocalDateTime.parse(\"2025-03-28 2000\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime dateTime3 \u003d LocalDateTime.parse(\"2025-03-23 1200\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"        List\u003cAppointment\u003e appointments \u003d List.of(","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"                new Appointment(\"S1234567D\", dateTime1, \"Checkup\"),","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"                new Appointment(\"S2345678D\", dateTime2, \"CT scan\"),","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"                new Appointment(\"S3456789D\", dateTime3, \"Consultation\")","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"        );","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointments.get(0));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointments.get(1));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointments.get(2));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"    void execute_appointmentsWithDifferentDateTime_sortsByDateInAscendingOrder() throws DuplicatePatientIDException,","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"            UnloadedStorageException {","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"        new SortAppointmentCommand(\"date\").execute(manager, ui);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"        List\u003cAppointment\u003e sortedAppointments \u003d manager.getAppointments();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"        assertEquals(3, sortedAppointments.size(), \"Size of appointment does not match\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"Consultation\", sortedAppointments.get(0).getDescription());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"Checkup\", sortedAppointments.get(1).getDescription());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"CT scan\", sortedAppointments.get(2).getDescription());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chwenyee"},"content":"    void execute_appointmentsFirstSortedByDateThenId_sortsByIdInAscendingOrder() throws DuplicatePatientIDException,","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chwenyee"},"content":"            UnloadedStorageException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chwenyee"},"content":"        new SortAppointmentCommand(\"date\").execute(manager, ui);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chwenyee"},"content":"        new SortAppointmentCommand(\"id\").execute(manager, ui);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chwenyee"},"content":"        List\u003cAppointment\u003e sortedAppointments \u003d manager.getAppointments();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chwenyee"},"content":"        assertEquals(3, sortedAppointments.size(), \"Size of appointment does not match\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"Checkup\", sortedAppointments.get(0).getDescription());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"CT scan\", sortedAppointments.get(1).getDescription());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"Consultation\", sortedAppointments.get(2).getDescription());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chwenyee"},"content":"    void execute_emptyList_expectEmptyList() throws DuplicatePatientIDException, UnloadedStorageException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem emptyManager \u003d new ManagementSystem(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chwenyee"},"content":"        new SortAppointmentCommand(\"date\").execute(emptyManager, ui);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chwenyee"},"content":"        assertTrue(emptyManager.getAppointments().isEmpty(), \"Appointment list should be empty\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chwenyee"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"JudHoka":11,"chwenyee":92}},{"path":"src/test/java/command/ViewAllPrescriptionsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"package command;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"import manager.Patient;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"import manager.Prescription;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"import java.io.File;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"import java.util.List;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"//@@author Basudeb2005","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"public class ViewAllPrescriptionsCommandTest {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"    private ManagementSystem system;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"    private Ui ui;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"    private Patient testPatient;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"    private PrintStream originalOut;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"        // Save original System.out","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"        originalOut \u003d System.out;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"        // Redirect System.out to capture output","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"            // Initialize Storage with temp directory","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"            new Storage(System.getProperty(\"java.io.tmpdir\") + File.separator + \"clinicease_test\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"            // Initialize system and UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"            system \u003d new ManagementSystem(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"            // Add a test patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"            testPatient \u003d new Patient(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"                    \"S1234567A\", \"John Doe\", \"1990-01-01\", \"M\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"                    \"123 Main St\", \"98765432\", new ArrayList\u003c\u003e()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"            );","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"            system.addPatient(testPatient);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Failed to set up test: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"    public void execute_patientWithPrescriptions_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"            // Add some prescriptions for the test patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e symptoms1 \u003d Arrays.asList(\"Fever\", \"Cough\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e medicines1 \u003d Arrays.asList(\"Paracetamol\", \"Cough syrup\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"            system.addPrescription(new Prescription(testPatient.getId(), symptoms1, medicines1, \"Take after meals\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e symptoms2 \u003d Arrays.asList(\"Headache\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e medicines2 \u003d Arrays.asList(\"Ibuprofen\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"            system.addPrescription(new Prescription(testPatient.getId(), symptoms2, medicines2, \"Take with water\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"            // Create command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"            ViewAllPrescriptionsCommand command \u003d new ViewAllPrescriptionsCommand(testPatient.getId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"            // Execute command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"            command.execute(system, ui);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"            // Verify command output","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"            String output \u003d outputStream.toString();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Prescriptions for patient John Doe\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Fever\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Cough\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Headache\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Paracetamol\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Ibuprofen\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Take after meals\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Take with water\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Total prescriptions: 2\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"        } catch (UnloadedStorageException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Should not throw exception: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Basudeb2005"},"content":"    public void execute_patientWithNoPrescriptions_showsMessage() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Basudeb2005"},"content":"            // Create command for patient with no prescriptions","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Basudeb2005"},"content":"            ViewAllPrescriptionsCommand command \u003d new ViewAllPrescriptionsCommand(testPatient.getId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Basudeb2005"},"content":"            // Execute command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Basudeb2005"},"content":"            command.execute(system, ui);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Basudeb2005"},"content":"            // Verify command output","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Basudeb2005"},"content":"            String output \u003d outputStream.toString();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"No prescriptions found for patient John Doe\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Basudeb2005"},"content":"        } catch (UnloadedStorageException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Should not throw exception for patient with no prescriptions: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Basudeb2005"},"content":"    public void execute_nonExistentPatient_showsError() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Basudeb2005"},"content":"        // Create command for non-existent patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Basudeb2005"},"content":"        ViewAllPrescriptionsCommand command \u003d new ViewAllPrescriptionsCommand(\"NONEXISTENT\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Basudeb2005"},"content":"            // Execute command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Basudeb2005"},"content":"            command.execute(system, ui);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Basudeb2005"},"content":"            // Verify command output indicates error","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Basudeb2005"},"content":"            String output \u003d outputStream.toString();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Patient with ID NONEXISTENT not found\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Basudeb2005"},"content":"        } catch (UnloadedStorageException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Should handle patient not found gracefully: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Basudeb2005"},"content":"    public void isExit_returnsFalse() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Basudeb2005"},"content":"        // Create command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Basudeb2005"},"content":"        ViewAllPrescriptionsCommand command \u003d new ViewAllPrescriptionsCommand(\"S1234567A\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Basudeb2005"},"content":"        // Verify isExit returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertFalse(command.isExit());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Basudeb2005"},"content":"} ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":138}},{"path":"src/test/java/command/ViewPrescriptionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"package command;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"import manager.ManagementSystem;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"import manager.Patient;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"import manager.Prescription;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"import miscellaneous.Ui;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"import java.io.File;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"import java.util.List;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"//@@author Basudeb2005","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"public class ViewPrescriptionCommandTest {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"    private ManagementSystem system;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"    private Ui ui;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"    private Prescription testPrescription;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"    private PrintStream originalOut;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"        // Save original System.out","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"        originalOut \u003d System.out;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"        // Redirect System.out to capture output","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"            // Initialize Storage with temp directory","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"            new Storage(System.getProperty(\"java.io.tmpdir\") + File.separator + \"clinicease_test\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"            // Initialize system and UI","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"            system \u003d new ManagementSystem(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"            // Add a test patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"            Patient patient \u003d new Patient(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"                    \"S1234567A\", \"John Doe\", \"1990-10-01\", \"M\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"                    \"123 Main St\", \"98765432\", new ArrayList\u003c\u003e()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"            );","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"            system.addPatient(patient);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"            // Add a test prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e symptoms \u003d Arrays.asList(\"Fever\", \"Cough\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e medicines \u003d Arrays.asList(\"Paracetamol\", \"Cough syrup\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"            Prescription prescription \u003d new Prescription(\"S1234567A\", symptoms, medicines, \"Take after meals\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"            testPrescription \u003d system.addPrescription(prescription);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Failed to set up test: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"    public void execute_existingPrescription_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"        // Create command for existing prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"        ViewPrescriptionCommand command \u003d new ViewPrescriptionCommand(testPrescription.getPrescriptionId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"            // Execute command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"            command.execute(system, ui);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"            // Verify command output","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"            String output \u003d outputStream.toString();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Prescription details\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(testPrescription.getPrescriptionId()));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Fever\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Paracetamol\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Take after meals\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Prescription HTML file generated\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Basudeb2005"},"content":"        } catch (UnloadedStorageException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Should not throw exception for an existing prescription: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"    public void execute_nonExistentPrescription_showsError() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"        // Create command for non-existent prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"        ViewPrescriptionCommand command \u003d new ViewPrescriptionCommand(\"NONEXISTENT-ID\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Basudeb2005"},"content":"            // Execute command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Basudeb2005"},"content":"            command.execute(system, ui);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Basudeb2005"},"content":"            // Verify command output indicates error","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Basudeb2005"},"content":"            String output \u003d outputStream.toString();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(output.contains(\"Prescription with ID NONEXISTENT-ID not found\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Basudeb2005"},"content":"        } catch (UnloadedStorageException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Should handle prescription not found gracefully: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Basudeb2005"},"content":"    public void isExit_returnsFalse() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Basudeb2005"},"content":"        // Create command","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Basudeb2005"},"content":"        ViewPrescriptionCommand command \u003d new ViewPrescriptionCommand(\"S1234567A-1\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Basudeb2005"},"content":"        // Verify isExit returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertFalse(command.isExit());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Basudeb2005"},"content":"} ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":113}},{"path":"src/test/java/manager/ManagementSystemPrescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"package manager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"import storage.Storage;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"import java.io.File;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"import java.util.List;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"//@@author Basudeb2005","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"public class ManagementSystemPrescriptionTest {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"    private ManagementSystem system;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"    private Patient testPatient;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"        // Create a temporary directory for Storage","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"            // Initialize Storage with temp directory","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"            new Storage(System.getProperty(\"java.io.tmpdir\") + File.separator + \"clinicease_test\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"            // Initialize system with empty lists","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"            system \u003d new ManagementSystem(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"            // Add a test patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"            testPatient \u003d new Patient(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"                    \"S1234567A\", \"John Doe\", \"1990-01-01\", \"M\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"                    \"123 Main St\", \"98765432\", new ArrayList\u003c\u003e()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"            );","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"            system.addPatient(testPatient);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Failed to set up test: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"    public void addPrescription_validPrescription_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"        // Create a prescription for an existing patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e symptoms \u003d Arrays.asList(\"Fever\", \"Cough\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e medicines \u003d Arrays.asList(\"Paracetamol\", \"Cough syrup\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d new Prescription(testPatient.getId(), symptoms, medicines, \"Take after meals\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"            // Add prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"            Prescription addedPrescription \u003d system.addPrescription(prescription);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"            // Verify prescription was added with correct attributes","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertNotNull(addedPrescription);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertEquals(testPatient.getId() + \"-1\", addedPrescription.getPrescriptionId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertEquals(testPatient.getId(), addedPrescription.getPatientId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertEquals(symptoms, addedPrescription.getSymptoms());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertEquals(medicines, addedPrescription.getMedicines());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertEquals(\"Take after meals\", addedPrescription.getNotes());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"            // Verify it was added to the system\u0027s list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertEquals(1, system.getPrescriptions().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Should not throw exception for a valid prescription: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"    public void addPrescription_nonExistentPatient_throwsException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"        // Create a prescription with non-existent patient ID","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e symptoms \u003d Arrays.asList(\"Fever\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e medicines \u003d Arrays.asList(\"Paracetamol\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d new Prescription(\"NONEXISTENT\", symptoms, medicines, \"\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"        // Try to add prescription - should throw IllegalArgumentException","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"        Exception exception \u003d Assertions.assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"            system.addPrescription(prescription);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"        });","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(exception.getMessage().contains(\"Patient with NRIC: NONEXISTENT not found\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"    public void getPrescriptionsForPatient_multipleExistingPrescriptions_returnsAllPrescriptions() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"            // Add two prescriptions for the same patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e symptoms1 \u003d Arrays.asList(\"Fever\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e medicines1 \u003d Arrays.asList(\"Paracetamol\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"            Prescription prescription1 \u003d new Prescription(testPatient.getId(), symptoms1, medicines1, \"\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e symptoms2 \u003d Arrays.asList(\"Headache\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e medicines2 \u003d Arrays.asList(\"Ibuprofen\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Basudeb2005"},"content":"            Prescription prescription2 \u003d new Prescription(testPatient.getId(), symptoms2, medicines2, \"\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Basudeb2005"},"content":"            system.addPrescription(prescription1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Basudeb2005"},"content":"            system.addPrescription(prescription2);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Basudeb2005"},"content":"            // Get prescriptions for patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cPrescription\u003e results \u003d system.getPrescriptionsForPatient(testPatient.getId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Basudeb2005"},"content":"            // Verify both prescriptions are returned","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertEquals(2, results.size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(results.get(0).getSymptoms().contains(\"Fever\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(results.get(1).getSymptoms().contains(\"Headache\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Basudeb2005"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Should not throw exception: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Basudeb2005"},"content":"    public void getPrescriptionsForPatient_noExistingPrescriptions_returnsEmptyList() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Basudeb2005"},"content":"        // Get prescriptions for patient with no prescriptions","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cPrescription\u003e results \u003d system.getPrescriptionsForPatient(testPatient.getId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Basudeb2005"},"content":"        // Verify empty list is returned","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(results.isEmpty());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Basudeb2005"},"content":"    public void getPrescriptionsForPatient_nonExistentPatient_returnsEmptyList() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Basudeb2005"},"content":"        // Get prescriptions for non-existent patient ID","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cPrescription\u003e results \u003d system.getPrescriptionsForPatient(\"NONEXISTENT\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Basudeb2005"},"content":"        // Verify empty list is returned","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(results.isEmpty());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Basudeb2005"},"content":"    public void getPrescriptionById_existingPrescription_returnsPrescription() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Basudeb2005"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Basudeb2005"},"content":"            // Add a prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e symptoms \u003d Arrays.asList(\"Fever\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Basudeb2005"},"content":"            List\u003cString\u003e medicines \u003d Arrays.asList(\"Paracetamol\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Basudeb2005"},"content":"            Prescription added \u003d system.addPrescription(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Basudeb2005"},"content":"                    new Prescription(testPatient.getId(), symptoms, medicines, \"\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Basudeb2005"},"content":"            );","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Basudeb2005"},"content":"            // Get prescription by ID","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Basudeb2005"},"content":"            Prescription result \u003d system.getPrescriptionById(added.getPrescriptionId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Basudeb2005"},"content":"            // Verify prescription is returned","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertNotNull(result);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertEquals(added.getPrescriptionId(), result.getPrescriptionId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertEquals(testPatient.getId(), result.getPatientId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(result.getSymptoms().contains(\"Fever\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.assertTrue(result.getMedicines().contains(\"Paracetamol\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Basudeb2005"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Basudeb2005"},"content":"            Assertions.fail(\"Should not throw exception: \" + e.getMessage());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Basudeb2005"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Basudeb2005"},"content":"    public void getPrescriptionById_nonExistentPrescription_returnsNull() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Basudeb2005"},"content":"        // Get prescription with non-existent ID","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Basudeb2005"},"content":"        Prescription result \u003d system.getPrescriptionById(\"NON-EXISTENT-ID\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Basudeb2005"},"content":"        // Verify null is returned","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertNull(result);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Basudeb2005"},"content":"} ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":162}},{"path":"src/test/java/manager/ManagementSystemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package manager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.PatientNotFoundException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import exception.AppointmentClashException;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import exception.DuplicatePatientIDException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import exception.UnloadedStorageException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"import storage.Storage;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JudHoka"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JudHoka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JudHoka"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JudHoka"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JudHoka"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JudHoka"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JudHoka"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JudHoka"},"content":"class ManagementSystemTest {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JudHoka"},"content":"    private static final String TEST_DIR \u003d \"test-data\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JudHoka"},"content":"    private static final Path TEST_FILE_PATH \u003d Paths.get(TEST_DIR, \"patient_data.txt\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JudHoka"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JudHoka"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JudHoka"},"content":"        new Storage(TEST_DIR);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JudHoka"},"content":"        Files.deleteIfExists(TEST_FILE_PATH);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JudHoka"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JudHoka"},"content":"    void addPatient_validInput_expectPatientAdded() throws DuplicatePatientIDException,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JudHoka"},"content":"            UnloadedStorageException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JudHoka"},"content":"        List\u003cPatient\u003e emptyListPatient \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JudHoka"},"content":"        List\u003cAppointment\u003e emptyListAppoint \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(emptyListPatient, emptyListAppoint);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JudHoka"},"content":"        Patient patient \u003d new Patient(\"S1234567A\", \"John Doe\", \"1990-10-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JudHoka"},"content":"                \"M\", \"123 Main St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JudHoka"},"content":"        manager.addPatient(patient);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JudHoka"},"content":"        assertEquals(1, manager.getPatients().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JudHoka"},"content":"        assertEquals(\"John Doe\", manager.getPatients().get(0).getName());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JudHoka"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JudHoka"},"content":"    void addPatient_duplicateId_expectExceptionThrown() throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JudHoka"},"content":"        List\u003cPatient\u003e existing \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JudHoka"},"content":"        Patient patient \u003d new Patient(\"S1234567A\", \"John Doe\", \"1990-01-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JudHoka"},"content":"                \"M\", \"123 Main St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JudHoka"},"content":"        existing.add(patient);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(existing, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JudHoka"},"content":"        Patient duplicate \u003d new Patient(\"S1234567A\", \"Jane Smith\", \"1992-02-02\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JudHoka"},"content":"                \"F\", \"456 Sample Rd\", \"90000000\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JudHoka"},"content":"        assertThrows(DuplicatePatientIDException.class, () -\u003e manager.addPatient(duplicate));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JudHoka"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JudHoka"},"content":"    void addPatient_validInput_expectPatientAddedAndSaved()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JudHoka"},"content":"            throws DuplicatePatientIDException, UnloadedStorageException, IOException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JudHoka"},"content":"        List\u003cPatient\u003e emptyListPatient \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JudHoka"},"content":"        List\u003cAppointment\u003e emptyListAppoint \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(emptyListPatient, emptyListAppoint);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JudHoka"},"content":"        Patient patient \u003d new Patient(\"S1234567A\", \"John Doe\", \"1990-01-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JudHoka"},"content":"                \"M\", \"123 Main St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JudHoka"},"content":"        manager.addPatient(patient);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JudHoka"},"content":"        assertTrue(Files.exists(TEST_FILE_PATH), \"Patient file was not created.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JudHoka"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(TEST_FILE_PATH);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JudHoka"},"content":"        assertFalse(lines.isEmpty(), \"Patient file is empty.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JudHoka"},"content":"        String line \u003d lines.get(0);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JudHoka"},"content":"        assertTrue(line.contains(\"John Doe\"), \"Saved patient name not found in file.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JudHoka"},"content":"        assertTrue(line.contains(\"S1234567A\"), \"Saved patient NRIC not found in file.\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JudHoka"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylancmznus"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JudHoka"},"content":"    void deletePatient_existingPatient_patientDeleted() throws UnloadedStorageException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylancmznus"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JudHoka"},"content":"        Patient patient \u003d new Patient(\"S1234567A\", \"John Doe\", \"1990-01-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dylancmznus"},"content":"                \"M\", \"123 Main St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dylancmznus"},"content":"        patients.add(patient);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dylancmznus"},"content":"        Patient deletedPatient \u003d manager.deletePatient(\"S1234567A\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dylancmznus"},"content":"        assertNotNull(deletedPatient, \"Patient should be deleted\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dylancmznus"},"content":"        assertEquals(\"John Doe\", deletedPatient.getName(), \"Deleted patient\u0027s name should match\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dylancmznus"},"content":"        assertEquals(\"S1234567A\", deletedPatient.getId(), \"Deleted patient\u0027s NRIC should match\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dylancmznus"},"content":"        assertEquals(0, manager.getPatients().size(), \"Patients list should be empty after deletion\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylancmznus"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JudHoka"},"content":"    void deletePatient_nonExistentPatient_patientNotFound() throws","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JudHoka"},"content":"            UnloadedStorageException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dylancmznus"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JudHoka"},"content":"        Patient patient \u003d new Patient(\"S1234567A\", \"John Doe\", \"1990-01-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dylancmznus"},"content":"                \"M\", \"123 Main St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dylancmznus"},"content":"        patients.add(patient);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dylancmznus"},"content":"        Patient deletedPatient \u003d manager.deletePatient(\"S9999999X\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dylancmznus"},"content":"        assertNull(deletedPatient, \"Patient should not be found and returned as null\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dylancmznus"},"content":"        assertEquals(1, manager.getPatients().size(), \"Patients list should remain unchanged\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dylancmznus"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JudHoka"},"content":"    void deletePatient_emptyList_patientNotFound() throws UnloadedStorageException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dylancmznus"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dylancmznus"},"content":"        Patient deletedPatient \u003d manager.deletePatient(\"S1234567A\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dylancmznus"},"content":"        assertNull(deletedPatient, \"Patient should not be found in an empty system\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dylancmznus"},"content":"        assertEquals(0, manager.getPatients().size(), \"Patients list should remain empty\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dylancmznus"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JudHoka"},"content":"    void viewPatient_validNric_patientFound() throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dylancmznus"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JudHoka"},"content":"        patients.add(new Patient(\"S1234567A\", \"John Doe\", \"1990-01-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dylancmznus"},"content":"                \"M\", \"123 Main St\", \"81234567\", new ArrayList\u003c\u003e()));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dylancmznus"},"content":"        Patient retrievedPatient \u003d manager.viewPatient(\"S1234567A\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dylancmznus"},"content":"        assertNotNull(retrievedPatient, \"Patient should be found\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dylancmznus"},"content":"        assertEquals(\"John Doe\", retrievedPatient.getName(), \"Patient name should match\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dylancmznus"},"content":"        assertEquals(\"S1234567A\", retrievedPatient.getId(), \"Patient NRIC should match\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dylancmznus"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JudHoka"},"content":"    void viewPatient_invalidNric_patientNotFound() throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dylancmznus"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JudHoka"},"content":"        patients.add(new Patient(\"S1234567A\", \"John Doe\", \"1990-01-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dylancmznus"},"content":"                \"M\", \"123 Main St\", \"81234567\", new ArrayList\u003c\u003e()));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dylancmznus"},"content":"        Patient retrievedPatient \u003d manager.viewPatient(\"S9999999X\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dylancmznus"},"content":"        assertNull(retrievedPatient, \"Patient should not be found with this NRIC\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"dylancmznus"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"dylancmznus"},"content":"    void viewPatient_emptySystem_patientNotFound() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"dylancmznus"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"dylancmznus"},"content":"        Patient retrievedPatient \u003d manager.viewPatient(\"S1234567A\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"dylancmznus"},"content":"        assertNull(retrievedPatient, \"Patient should not be found when system is empty\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"chwenyee"},"content":"    void addAppointment_validInput_expectAppointmentAdded() throws UnloadedStorageException, PatientNotFoundException,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JudHoka"},"content":"            AppointmentClashException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"chwenyee"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime1 \u003d LocalDateTime.parse(\"2025-03-20 1900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime2 \u003d LocalDateTime.parse(\"2025-03-22 1200\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JudHoka"},"content":"        Patient patient \u003d new Patient(\"S1234567D\", \"Billy\", \"1990-10-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"chwenyee"},"content":"                \"M\", \"124 High St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"chwenyee"},"content":"        patients.add(patient);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment1 \u003d new Appointment(\"S1234567D\", appointmentTime1, \"Medical Checkup\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment2 \u003d new Appointment(\"S1234567D\", appointmentTime2, \"Consultation\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"chwenyee"},"content":"        String expectedNric \u003d appointment1.getNric();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointment1);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointment2);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"chwenyee"},"content":"        assertEquals(2, manager.getAppointments().size(), \"Size does not match\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"chwenyee"},"content":"        assertEquals(expectedNric, manager.getAppointments().get(0).getNric(), \"NRIC does not match\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"chwenyee"},"content":"        assertEquals(expectedNric, manager.getAppointments().get(1).getNric(), \"NRIC does not match\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"chwenyee"},"content":"        assertEquals(LocalDate.of(2025, 3, 20), manager.getAppointments().get(0).getDate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"chwenyee"},"content":"        assertEquals(LocalTime.of(19, 0), manager.getAppointments().get(0).getTime());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"chwenyee"},"content":"        assertEquals(LocalDate.of(2025, 3, 22), manager.getAppointments().get(1).getDate());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"chwenyee"},"content":"        assertEquals(LocalTime.of(12, 0), manager.getAppointments().get(1).getTime());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"chwenyee"},"content":"    void addAppointment_clashedAppointments_expectException() throws UnloadedStorageException, PatientNotFoundException,","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JudHoka"},"content":"            AppointmentClashException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"chwenyee"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"chwenyee"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime1 \u003d LocalDateTime.parse(\"2025-03-20 1900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime2 \u003d LocalDateTime.parse(\"2025-03-20 1930\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JudHoka"},"content":"        Patient patient \u003d new Patient(\"S1234567D\", \"Billy\", \"1990-10-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"chwenyee"},"content":"                \"M\", \"124 High St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"chwenyee"},"content":"        patients.add(patient);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment1 \u003d new Appointment(\"S1234567D\", appointmentTime1, \"Medical Checkup\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment2 \u003d new Appointment(\"S1234567D\", appointmentTime2, \"X-ray\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointment1);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"chwenyee"},"content":"        assertThrows(AppointmentClashException.class, () -\u003e manager.addAppointment(appointment2));","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"chwenyee"},"content":"    void addAppointment_nonExistingPatient_expectException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"chwenyee"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime \u003d LocalDateTime.parse(\"2025-03-20 1900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment \u003d new Appointment(\"S1234567D\", appointmentTime, \"Medical Checkup\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"chwenyee"},"content":"        assertThrows(PatientNotFoundException.class, () -\u003e manager.addAppointment(appointment));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"chwenyee"},"content":"    void deleteAppointment_validInput_expectAppointmentDeleted() throws UnloadedStorageException,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"JudHoka"},"content":"            PatientNotFoundException, AppointmentClashException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"chwenyee"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime \u003d LocalDateTime.parse(\"2025-03-20 1900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"JudHoka"},"content":"        Patient patient \u003d new Patient(\"S1234567D\", \"Billy\", \"1990-10-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"chwenyee"},"content":"                \"M\", \"124 High St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"chwenyee"},"content":"        patients.add(patient);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment \u003d new Appointment(\"S1234567D\", appointmentTime, \"Medical Checkup\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"chwenyee"},"content":"        String expectedId \u003d appointment.getId();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointment);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"chwenyee"},"content":"        Appointment removedAppointment \u003d manager.deleteAppointment(expectedId);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"chwenyee"},"content":"        assertNotNull(removedAppointment, \"Deleted appointment should be returned\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"chwenyee"},"content":"        assertEquals(expectedId, appointment.getId(), \"Appointment ID does not match\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"chwenyee"},"content":"        assertEquals(0, manager.getAppointments().size(), \"Size does not match\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"chwenyee"},"content":"    void deleteAppointment_nonExistentId_expectNullReturned() throws UnloadedStorageException,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"JudHoka"},"content":"            PatientNotFoundException, AppointmentClashException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"chwenyee"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime \u003d LocalDateTime.parse(\"2025-03-25 2100\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"JudHoka"},"content":"        Patient patient \u003d new Patient(\"S1234567D\", \"Billy\", \"1990-10-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"chwenyee"},"content":"                \"M\", \"124 High St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"chwenyee"},"content":"        patients.add(patient);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment \u003d new Appointment(\"S1234567D\", appointmentTime, \"Medical Checkup\");","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"chwenyee"},"content":"        manager.addAppointment(appointment);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"chwenyee"},"content":"        Appointment removedAppointment \u003d manager.deleteAppointment(\"A999\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"chwenyee"},"content":"        assertEquals(1, manager.getAppointments().size(), \"Size does not match\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"chwenyee"},"content":"        assertNull(removedAppointment, \"Should return null\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"chwenyee"},"content":"    void sortAppointmentsByDateTime_sortByDateTime_appointmentsSortedByDateTime() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"chwenyee"},"content":"        List\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime1 \u003d LocalDateTime.parse(\"2025-03-25 1900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime2 \u003d LocalDateTime.parse(\"2025-03-24 1200\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime3 \u003d LocalDateTime.parse(\"2025-03-25 1000\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment1 \u003d new Appointment(\"S1234567D\", appointmentTime1, \"Checkup\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"chwenyee"},"content":"        appointments.add(appointment1);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment2 \u003d new Appointment(\"S4567890D\", appointmentTime2, \"CT scan\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"chwenyee"},"content":"        appointments.add(appointment2);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment3 \u003d new Appointment(\"S7891234D\", appointmentTime3, \"Consultation\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"chwenyee"},"content":"        appointments.add(appointment3);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"chwenyee"},"content":"        manager.sortAppointmentsByDateTime(appointments);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"CT scan\", appointments.get(0).getDescription());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"Consultation\", appointments.get(1).getDescription());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"Checkup\", appointments.get(2).getDescription());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"chwenyee"},"content":"    void sortAppointmentsById_sortById_appointmentsSortedById() {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"JudHoka"},"content":"        ManagementSystem manager \u003d new ManagementSystem(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"chwenyee"},"content":"        List\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime1 \u003d LocalDateTime.parse(\"2025-03-25 1900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime2 \u003d LocalDateTime.parse(\"2025-03-24 1200\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"chwenyee"},"content":"        LocalDateTime appointmentTime3 \u003d LocalDateTime.parse(\"2025-03-25 1000\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment1 \u003d new Appointment(\"S1234567D\", appointmentTime1, \"Checkup\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"chwenyee"},"content":"        appointments.add(appointment1);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment2 \u003d new Appointment(\"S4567890D\", appointmentTime2, \"CT scan\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"chwenyee"},"content":"        appointments.add(appointment2);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment3 \u003d new Appointment(\"S7891234D\", appointmentTime3, \"Consultation\");","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"chwenyee"},"content":"        appointments.add(appointment3);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"chwenyee"},"content":"        manager.sortAppointmentsByDateTime(appointments);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"chwenyee"},"content":"        manager.sortAppointmentsById(appointments);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"Checkup\", appointments.get(0).getDescription());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"CT scan\", appointments.get(1).getDescription());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"Consultation\", appointments.get(2).getDescription());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"dylancmznus"},"content":"    //@@author dylancmznus","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"dylancmznus"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"dylancmznus"},"content":"    void markAppointment_validInput_expectAppointmentMarked() throws DuplicatePatientIDException,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"dylancmznus"},"content":"            UnloadedStorageException, PatientNotFoundException, AppointmentClashException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"dylancmznus"},"content":"        ManagementSystem manager \u003d new ManagementSystem(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"dylancmznus"},"content":"        Patient patient \u003d new Patient(\"S9876543Z\", \"John Doe\", \"1990-01-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"dylancmznus"},"content":"                \"M\", \"123 Street\", \"12345678\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"dylancmznus"},"content":"        manager.addPatient(patient);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"dylancmznus"},"content":"        LocalDateTime appointmentTime \u003d LocalDateTime.parse(\"2025-04-10 1500\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"dylancmznus"},"content":"        Appointment appointment \u003d new Appointment(\"S9876543Z\", appointmentTime, \"Dental Checkup\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"dylancmznus"},"content":"        manager.addAppointment(appointment);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"dylancmznus"},"content":"        manager.markAppointment(appointment.getId());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"dylancmznus"},"content":"        assertTrue(manager.getAppointments().get(0).isDone(), \"Appointment should be marked\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"dylancmznus"},"content":"    //@@author dylancmznus","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"dylancmznus"},"content":"    @Test","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"dylancmznus"},"content":"    void unmarkAppointment_validInput_expectAppointmentUnmarked() throws DuplicatePatientIDException,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"dylancmznus"},"content":"            UnloadedStorageException, PatientNotFoundException, AppointmentClashException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"dylancmznus"},"content":"        ManagementSystem manager \u003d new ManagementSystem(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"dylancmznus"},"content":"        Patient patient \u003d new Patient(\"S8765432Y\", \"John Doe\", \"1990-01-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"dylancmznus"},"content":"                \"M\", \"123 Street\", \"12345678\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"dylancmznus"},"content":"        manager.addPatient(patient);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"dylancmznus"},"content":"        LocalDateTime appointmentTime \u003d LocalDateTime.parse(\"2025-05-15 1030\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"dylancmznus"},"content":"        Appointment appointment \u003d new Appointment(\"S8765432Y\", appointmentTime, \"Eye Examination\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"dylancmznus"},"content":"        manager.addAppointment(appointment);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"dylancmznus"},"content":"        manager.markAppointment(appointment.getId());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"dylancmznus"},"content":"        manager.unmarkAppointment(appointment.getId());","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"dylancmznus"},"content":"        assertFalse(manager.getAppointments().get(0).isDone(), \"Appointment should be unmarked\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"dylancmznus"},"content":"    //@@author dylancmznus","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"dylancmznus"},"content":"    @Test","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"dylancmznus"},"content":"    void findAppointment_existingAppointment_expectAppointmentFound() throws DuplicatePatientIDException,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"dylancmznus"},"content":"            UnloadedStorageException, PatientNotFoundException, AppointmentClashException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"dylancmznus"},"content":"        ManagementSystem manager \u003d new ManagementSystem(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"dylancmznus"},"content":"        Patient patient \u003d new Patient(\"S7654321X\", \"John Doe\", \"1990-01-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"dylancmznus"},"content":"                \"M\", \"123 Street\", \"12345678\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"dylancmznus"},"content":"        manager.addPatient(patient);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"dylancmznus"},"content":"        LocalDateTime appointmentTime \u003d LocalDateTime.parse(\"2025-06-20 0900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"dylancmznus"},"content":"        Appointment appointment \u003d new Appointment(\"S7654321X\", appointmentTime, \"General Consultation\");","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"dylancmznus"},"content":"        manager.addAppointment(appointment);","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"dylancmznus"},"content":"        List\u003cAppointment\u003e foundAppointments \u003d manager.findAppointmentsByNric(appointment.getNric());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"dylancmznus"},"content":"        assertNotNull(foundAppointments, \"Appointment should be found\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"dylancmznus"},"content":"        assertEquals(appointment.getId(), foundAppointments.get(0).getId(), \"Appointment ID should match\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"dylancmznus"},"content":"    //@@author dylancmznus","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"dylancmznus"},"content":"    @Test","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"dylancmznus"},"content":"    void findAppointment_nonExistentAppointment_expectNullReturned() {","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"dylancmznus"},"content":"        List\u003cPatient\u003e emptyListPatient \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"dylancmznus"},"content":"        List\u003cAppointment\u003e emptyListAppoint \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"dylancmznus"},"content":"        ManagementSystem manager \u003d new ManagementSystem(emptyListPatient, emptyListAppoint);","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"dylancmznus"},"content":"        List\u003cAppointment\u003e foundAppointments \u003d manager.findAppointmentsByNric(\"A999\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"dylancmznus"},"content":"        assertTrue(foundAppointments.isEmpty(), \"Non-existent appointment should return empty list\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"dylancmznus"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"dylancmznus"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"jyukuan"},"content":"    //@@author jyukuan","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"jyukuan"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"jyukuan"},"content":"    void storeMedicalHistory_storeMedHistoryOnNewPatient_expectOneNewPatientWithMedHistory()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"jyukuan"},"content":"            throws UnloadedStorageException, PatientNotFoundException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"jyukuan"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"jyukuan"},"content":"        ManagementSystem mhm \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"jyukuan"},"content":"        LocalDateTime appointmentTime \u003d LocalDateTime.parse(\"2025-03-20 1900\", DATE_TIME_FORMAT);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"jyukuan"},"content":"        Patient patient \u003d new Patient(\"S1234567A\", \"John Doe\", \"1990-10-01\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"jyukuan"},"content":"                \"M\", \"124 High St\", \"81234567\", new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"jyukuan"},"content":"        patients.add(patient);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"jyukuan"},"content":"        mhm.storeMedicalHistory(\"S1234567A\", \"Diabetes, Hypertension\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"jyukuan"},"content":"        assertEquals(1, patients.size(), \"There should be one patient stored\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"jyukuan"},"content":"        Patient storedPatient \u003d patients.get(0);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"jyukuan"},"content":"        assertEquals(\"S1234567A\", storedPatient.getId(), \"Patient NRIC should match\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"jyukuan"},"content":"        List\u003cString\u003e history \u003d storedPatient.getMedicalHistory();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"jyukuan"},"content":"        assertEquals(2, history.size(), \"Medical history should contain 2 entries\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"jyukuan"},"content":"        assertTrue(history.contains(\"Diabetes\"), \"Medical history should contain \u0027Diabetes\u0027\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"jyukuan"},"content":"        assertTrue(history.contains(\"Hypertension\"), \"Medical history should contain \u0027Hypertension\u0027\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"jyukuan"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"jyukuan"},"content":"    void editPatientHistory_oldEntryNotFound_expectNoChange() throws","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"jyukuan"},"content":"            UnloadedStorageException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"jyukuan"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"jyukuan"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"jyukuan"},"content":"        List\u003cString\u003e history \u003d new ArrayList\u003c\u003e(List.of(\"Cold\", \"Migraine\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"jyukuan"},"content":"        Patient patient \u003d new Patient(\"F8888888Q\", \"Ellen\", \"1970-12-12\", \"F\", \"99 Peace Ave\", \"85556666\", history);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"jyukuan"},"content":"        patients.add(patient);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"jyukuan"},"content":"        manager.editPatientHistory(\"F8888888Q\", \"Cancer\", \"Diabetes\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"jyukuan"},"content":"        List\u003cString\u003e updatedHistory \u003d patient.getMedicalHistory();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"jyukuan"},"content":"        assertEquals(2, updatedHistory.size(), \"Unexpected change in history size\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"jyukuan"},"content":"        assertFalse(updatedHistory.contains(\"Diabetes\"), \"Incorrectly added new history\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"jyukuan"},"content":"        assertTrue(updatedHistory.contains(\"Cold\"), \"Valid entry unexpectedly removed\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"jyukuan"},"content":"        assertTrue(updatedHistory.contains(\"Migraine\"), \"Valid entry unexpectedly removed\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"jyukuan"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"jyukuan"},"content":"    void editPatientHistory_validHistory_expectUpdated() throws UnloadedStorageException, InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"jyukuan"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"jyukuan"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"jyukuan"},"content":"        List\u003cString\u003e history \u003d new ArrayList\u003c\u003e(List.of(\"High BP\", \"Migraine\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"jyukuan"},"content":"        Patient patient \u003d new Patient(\"F1234567X\", \"Carol\", \"1975-03-15\", \"F\", \"Blk 999\", \"83334444\", history);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"jyukuan"},"content":"        patients.add(patient);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"jyukuan"},"content":"        manager.editPatientHistory(\"F1234567X\", \"High BP\", \"Hypertension\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"jyukuan"},"content":"        List\u003cString\u003e updatedHistory \u003d patient.getMedicalHistory();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"jyukuan"},"content":"        assertTrue(updatedHistory.contains(\"Hypertension\"), \"Replacement failed\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"jyukuan"},"content":"        assertFalse(updatedHistory.contains(\"High BP\"), \"Old entry not removed\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"jyukuan"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"jyukuan"},"content":"    void editPatientHistory_emptyNewHistory_expectAssertionError() throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"jyukuan"},"content":"        // Setup","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"jyukuan"},"content":"        List\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"jyukuan"},"content":"        ManagementSystem manager \u003d new ManagementSystem(patients, new ArrayList\u003c\u003e());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"jyukuan"},"content":"        List\u003cString\u003e history \u003d new ArrayList\u003c\u003e(List.of(\"Headache\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"jyukuan"},"content":"        Patient patient \u003d new Patient(\"T7654321B\", \"Sarah\", \"1992-03-03\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"jyukuan"},"content":"                \"F\", \"88 Health Ave\", \"81231234\", history);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"jyukuan"},"content":"        patients.add(patient);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"jyukuan"},"content":"        // Verify assertion","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"jyukuan"},"content":"        assertThrows(AssertionError.class,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"jyukuan"},"content":"                () -\u003e manager.editPatientHistory(\"T7654321B\", \"Headache\", \"\"));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"jyukuan"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"jyukuan"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"jyukuan"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"dylancmznus":134,"JudHoka":114,"chwenyee":148,"jyukuan":77}},{"path":"src/test/java/manager/PrescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JudHoka"},"content":"package manager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JudHoka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JudHoka"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"import java.util.List;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"//@@author Basudeb2005","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"public class PrescriptionTest {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"    public void toFileFormat_validPrescription_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"        // Create a sample prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"        String patientId \u003d \"S1234567A\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e symptoms \u003d Arrays.asList(\"Fever\", \"Cough\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e medicines \u003d Arrays.asList(\"Paracetamol\", \"Cough syrup\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"        String notes \u003d \"Take after meals\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"        LocalDateTime timestamp \u003d LocalDateTime.now();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"        String prescriptionId \u003d patientId + \"-1\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d new Prescription(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"                patientId, prescriptionId, timestamp, symptoms, medicines, notes","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"        );","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"        // Convert to file format","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"        String fileFormat \u003d prescription.toFileFormat();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"        // Verify all required components are in the file format","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(fileFormat.contains(prescriptionId));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(fileFormat.contains(patientId));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"        String formattedTimestamp \u003d timestamp.format(formatter);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(fileFormat.contains(formattedTimestamp));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(fileFormat.contains(\"Fever,Cough\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(fileFormat.contains(\"Paracetamol,Cough syrup\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(fileFormat.contains(notes));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"    public void fromFileFormat_validInput_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"        // Create a properly formatted file entry","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"        String fileEntry \u003d \"S1234567A-1|S1234567A|2023-04-01 14:30|\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"                + \"Fever,Cough|Paracetamol,Cough syrup|Take after meals\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"        // Parse from file format","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d Prescription.fromFileFormat(fileEntry);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"        // Verify all fields are correctly parsed","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(\"S1234567A-1\", prescription.getPrescriptionId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(\"S1234567A\", prescription.getPatientId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(2, prescription.getSymptoms().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(prescription.getSymptoms().contains(\"Fever\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(prescription.getSymptoms().contains(\"Cough\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(2, prescription.getMedicines().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(prescription.getMedicines().contains(\"Paracetamol\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(prescription.getMedicines().contains(\"Cough syrup\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(\"Take after meals\", prescription.getNotes());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"    public void fromFileFormat_invalidInput_returnsNull() {","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"        // Create an improperly formatted file entry (missing fields)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"        String invalidFileEntry \u003d \"S1234567A-1|S1234567A\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"        // With our improved implementation, this should return null instead of throwing an exception","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"        Prescription result \u003d Prescription.fromFileFormat(invalidFileEntry);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertNull(result);","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"    public void generateHtml_withPatient_containsPatientInfo()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"            throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"        // Create a sample prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"        String patientId \u003d \"S1234567A\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e symptoms \u003d Arrays.asList(\"Fever\", \"Cough\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e medicines \u003d Arrays.asList(\"Paracetamol\", \"Cough syrup\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"        String notes \u003d \"Take after meals\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"        LocalDateTime timestamp \u003d LocalDateTime.now();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"        String prescriptionId \u003d patientId + \"-1\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d new Prescription(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Basudeb2005"},"content":"                patientId, prescriptionId, timestamp, symptoms, medicines, notes","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Basudeb2005"},"content":"        );","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Basudeb2005"},"content":"        // Create a sample patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Basudeb2005"},"content":"        Patient patient \u003d new Patient(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Basudeb2005"},"content":"                patientId, \"John Doe\", \"1990-01-01\", \"M\",","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Basudeb2005"},"content":"                \"123 Main St\", \"98765432\", new ArrayList\u003c\u003e()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Basudeb2005"},"content":"        );","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Basudeb2005"},"content":"        // Generate HTML","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Basudeb2005"},"content":"        String html \u003d prescription.generateHtml(patient);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Basudeb2005"},"content":"        // Verify HTML contains both prescription and patient information","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"\u003c!DOCTYPE html\u003e\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"\u003ctitle\u003ePrescription \" + prescriptionId + \"\u003c/title\u003e\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"John Doe\"));  // Patient name","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"M\"));     // Patient gender","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"Fever\"));     // Symptom","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"Paracetamol\")); // Medicine","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"Take after meals\")); // Notes","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Basudeb2005"},"content":"    public void generateHtml_withoutPatient_containsOnlyPrescriptionInfo() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Basudeb2005"},"content":"        // Create a sample prescription","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Basudeb2005"},"content":"        String patientId \u003d \"S1234567A\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e symptoms \u003d Arrays.asList(\"Fever\", \"Cough\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e medicines \u003d Arrays.asList(\"Paracetamol\", \"Cough syrup\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Basudeb2005"},"content":"        String notes \u003d \"Take after meals\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Basudeb2005"},"content":"        LocalDateTime timestamp \u003d LocalDateTime.now();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Basudeb2005"},"content":"        String prescriptionId \u003d patientId + \"-1\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d new Prescription(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Basudeb2005"},"content":"                patientId, prescriptionId, timestamp, symptoms, medicines, notes","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Basudeb2005"},"content":"        );","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Basudeb2005"},"content":"        // Generate HTML without patient","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Basudeb2005"},"content":"        String html \u003d prescription.generateHtml(null);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Basudeb2005"},"content":"        // Verify HTML contains prescription info but limited patient info","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"\u003c!DOCTYPE html\u003e\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"\u003ctitle\u003ePrescription \" + prescriptionId + \"\u003c/title\u003e\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertFalse(html.contains(\"John Doe\")); // Should not contain patient name","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(patientId));   // Should contain patient ID","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"Fever\"));     // Should contain symptom","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"Paracetamol\")); // Should contain medicine","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(html.contains(\"Take after meals\")); // Should contain notes","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"JudHoka":12,"Basudeb2005":133}},{"path":"src/test/java/miscellaneous/ParserPrescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Basudeb2005"},"content":"package miscellaneous;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Basudeb2005"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Basudeb2005"},"content":"import manager.Prescription;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Basudeb2005"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Basudeb2005"},"content":"import java.util.List;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Basudeb2005"},"content":"//@@author Basudeb2005","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Basudeb2005"},"content":"public class ParserPrescriptionTest {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Basudeb2005"},"content":"    public void parseAddPrescription_validInput_success() throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Basudeb2005"},"content":"        // Valid input with all fields including optional notes","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Basudeb2005"},"content":"        String input \u003d \"add-prescription ic/S1234567A s/Fever, Cough m/Paracetamol, Cough syrup nt/Take after meals\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d Parser.parseAddPrescription(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Basudeb2005"},"content":"        // Verify all fields are correctly parsed","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(\"S1234567A\", prescription.getPatientId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e symptoms \u003d prescription.getSymptoms();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(2, symptoms.size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(symptoms.contains(\"Fever\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(symptoms.contains(\"Cough\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Basudeb2005"},"content":"        List\u003cString\u003e medicines \u003d prescription.getMedicines();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(2, medicines.size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(medicines.contains(\"Paracetamol\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertTrue(medicines.contains(\"Cough syrup\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(\"Take after meals\", prescription.getNotes());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Basudeb2005"},"content":"    public void parseAddPrescription_missingPatientId_throwsException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Basudeb2005"},"content":"        // Missing the required ic/ parameter","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Basudeb2005"},"content":"        String input \u003d \"add-prescription s/Fever m/Paracetamol nt/Take after meals\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertThrows(InvalidInputFormatException.class, () -\u003e {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Basudeb2005"},"content":"            Parser.parseAddPrescription(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Basudeb2005"},"content":"        });","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Basudeb2005"},"content":"    public void parseAddPrescription_missingSymptoms_throwsException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Basudeb2005"},"content":"        // Missing the required s/ parameter","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Basudeb2005"},"content":"        String input \u003d \"add-prescription ic/S1234567A m/Paracetamol nt/Take after meals\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertThrows(InvalidInputFormatException.class, () -\u003e {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Basudeb2005"},"content":"            Parser.parseAddPrescription(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Basudeb2005"},"content":"        });","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Basudeb2005"},"content":"    public void parseAddPrescription_missingMedicines_throwsException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Basudeb2005"},"content":"        // Missing the required m/ parameter","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Basudeb2005"},"content":"        String input \u003d \"add-prescription ic/S1234567A s/Fever nt/Take after meals\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertThrows(InvalidInputFormatException.class, () -\u003e {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Basudeb2005"},"content":"            Parser.parseAddPrescription(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Basudeb2005"},"content":"        });","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Basudeb2005"},"content":"    public void parseAddPrescription_noOptionalNotes_success() throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Basudeb2005"},"content":"        // Valid input with only required fields","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Basudeb2005"},"content":"        String input \u003d \"add-prescription ic/S1234567A s/Fever m/Paracetamol\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Basudeb2005"},"content":"        Prescription prescription \u003d Parser.parseAddPrescription(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Basudeb2005"},"content":"        // Verify required fields are parsed and optional field is empty","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(\"S1234567A\", prescription.getPatientId());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(1, prescription.getSymptoms().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(1, prescription.getMedicines().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(\"\", prescription.getNotes());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Basudeb2005"},"content":"    public void parseViewAllPrescriptions_validInput_success() throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Basudeb2005"},"content":"        // Valid command format","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Basudeb2005"},"content":"        String input \u003d \"view-all-prescriptions S1234567A\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Basudeb2005"},"content":"        String patientId \u003d Parser.parseViewAllPrescriptions(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(\"S1234567A\", patientId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Basudeb2005"},"content":"    public void parseViewAllPrescriptions_missingPatientId_throwsException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Basudeb2005"},"content":"        // Command without patient ID - needs to be shorter than 22 characters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Basudeb2005"},"content":"        String input \u003d \"view-all-prescriptions\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertThrows(InvalidInputFormatException.class, () -\u003e {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Basudeb2005"},"content":"            Parser.parseViewAllPrescriptions(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Basudeb2005"},"content":"        });","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Basudeb2005"},"content":"    public void parseViewPrescription_validInput_success() throws InvalidInputFormatException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Basudeb2005"},"content":"        // Valid command format","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Basudeb2005"},"content":"        String input \u003d \"view-prescription S1234567A-1\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Basudeb2005"},"content":"        String prescriptionId \u003d Parser.parseViewPrescription(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertEquals(\"S1234567A-1\", prescriptionId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Basudeb2005"},"content":"    public void parseViewPrescription_missingPrescriptionId_throwsException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Basudeb2005"},"content":"        // Command without prescription ID - needs to be shorter than 17 characters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Basudeb2005"},"content":"        String input \u003d \"view-prescription\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Basudeb2005"},"content":"        Assertions.assertThrows(InvalidInputFormatException.class, () -\u003e {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Basudeb2005"},"content":"            Parser.parseViewPrescription(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Basudeb2005"},"content":"        });","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Basudeb2005"},"content":"} ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Basudeb2005":121}},{"path":"src/test/java/miscellaneous/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chwenyee"},"content":"package miscellaneous;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chwenyee"},"content":"import command.AddAppointmentCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chwenyee"},"content":"import command.Command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chwenyee"},"content":"import command.DeleteAppointmentCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chwenyee"},"content":"import command.ExitCommand;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chwenyee"},"content":"import command.HelpCommand;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chwenyee"},"content":"import command.ListAppointmentCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chwenyee"},"content":"import command.SortAppointmentCommand;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chwenyee"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chwenyee"},"content":"import exception.UnknownCommandException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chwenyee"},"content":"import manager.Appointment;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chwenyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chwenyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chwenyee"},"content":"import static manager.Appointment.INPUT_FORMAT;","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chwenyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chwenyee"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chwenyee"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chwenyee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chwenyee"},"content":"class ParserTest {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chwenyee"},"content":"    private Appointment extractAppointment(String input) throws InvalidInputFormatException,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chwenyee"},"content":"            UnknownCommandException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chwenyee"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chwenyee"},"content":"        assertInstanceOf(AddAppointmentCommand.class, command);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chwenyee"},"content":"        return ((AddAppointmentCommand) command).getAppointment();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chwenyee"},"content":"    private String extractAppointmentId(String input) throws InvalidInputFormatException,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chwenyee"},"content":"            UnknownCommandException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chwenyee"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chwenyee"},"content":"        assertInstanceOf(DeleteAppointmentCommand.class, command);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chwenyee"},"content":"        return ((DeleteAppointmentCommand) command).getApptId();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chwenyee"},"content":"    void parse_validInputToAddAppointment_returnCorrectAddAppointmentCommand() throws Exception {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chwenyee"},"content":"        String input \u003d \"add-appointment ic/S1234567D dt/2025-09-20 t/1430 dsc/Checkup\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chwenyee"},"content":"        Appointment appointment \u003d extractAppointment(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chwenyee"},"content":"        assertNotNull(appointment);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"S1234567D\", appointment.getNric());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chwenyee"},"content":"        assertEquals(LocalDateTime.parse(\"2025-09-20 1430\", INPUT_FORMAT), appointment.getDateTime());","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"Checkup\", appointment.getDescription());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chwenyee"},"content":"    void parse_dateTimeInThePastOfAddAppointment_expectException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chwenyee"},"content":"        String input \u003d \"add-appointment ic/S1234567D dt/2025-03-20 t/1300 dsc/Checkup\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(input));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chwenyee"},"content":"    void parse_invalidIcFormatToAddAppointment_expectException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chwenyee"},"content":"        String input1 \u003d \"add-appointment ic/S1234567 dt/2025-03-20 t/1300 dsc/Checkup\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(input1));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chwenyee"},"content":"        String input2 \u003d \"add-appointment ic/S123467D dt/2025-03-20 t/1300 dsc/Checkup\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(input2));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chwenyee"},"content":"        String input3 \u003d \"add-appointment ic/123467D dt/2025-03-20 t/1300 dsc/Checkup\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(input3));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chwenyee"},"content":"        String input4 \u003d \"add-appointment ic/123467 dt/2025-03-20 t/1300 dsc/Checkup\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(input4));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chwenyee"},"content":"    void parse_invalidDateTimeFormat_expectException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chwenyee"},"content":"        String input1 \u003d \"add-appointment ic/S1234567D dt/03-19 t/1900 dsc/Checkup\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(input1));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chwenyee"},"content":"        String input2 \u003d \"add-appointment ic/S1234567D dt/2025-03-20 t/7:00PM dsc/Checkup\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(input2));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chwenyee"},"content":"    void parse_validInputToDeleteAppointment_expectSuccess() throws InvalidInputFormatException,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chwenyee"},"content":"            UnknownCommandException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chwenyee"},"content":"        String input \u003d \"delete-appointment A100\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chwenyee"},"content":"        String result \u003d extractAppointmentId(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"A100\", result, \"Appointment ID does not match\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chwenyee"},"content":"    void parse_extraSpacesToDeleteAppointment_expectSuccess() throws InvalidInputFormatException,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chwenyee"},"content":"            UnknownCommandException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chwenyee"},"content":"        String input \u003d \"delete-appointment    A100\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chwenyee"},"content":"        String result \u003d extractAppointmentId(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"A100\", result, \"Appointment ID does not match\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chwenyee"},"content":"    void parse_invalidAppointmentIdToDeleteAppointment_expectException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chwenyee"},"content":"        String input \u003d \"delete-appointment 100\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(input));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"chwenyee"},"content":"    void parse_lowercaseInputToDeleteAppointment_expectSuccess() throws InvalidInputFormatException,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"chwenyee"},"content":"            UnknownCommandException {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chwenyee"},"content":"        String input \u003d \"delete-appointment a100\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chwenyee"},"content":"        String result \u003d extractAppointmentId(input);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"chwenyee"},"content":"        assertEquals(\"a100\", result, \"Appointment ID does not match\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"chwenyee"},"content":"    void parseAddPatient_invalidInputFormat_expectException() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JudHoka"},"content":"        String input \u003d \"add-patient n/John Doe ic/ dob/1999-12-12 g/M \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JudHoka"},"content":"                + \"p/98765432 a/123 Main Street h/Diabetes, Hypertension\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(input));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Basudeb2005"},"content":"    void parseViewHistory_validNric() throws InvalidInputFormatException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Basudeb2005"},"content":"        String[] result \u003d Parser.parseViewHistory(\"view-history S1234567D\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Basudeb2005"},"content":"        assertEquals(\"ic\", result[0]);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Basudeb2005"},"content":"        assertEquals(\"S1234567D\", result[1]);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Basudeb2005"},"content":"    void parseViewHistory_validName() throws InvalidInputFormatException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Basudeb2005"},"content":"        String[] result \u003d Parser.parseViewHistory(\"view-history John Doe\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Basudeb2005"},"content":"        assertEquals(\"n\", result[0]);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Basudeb2005"},"content":"        assertEquals(\"John Doe\", result[1]);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Basudeb2005"},"content":"    void parseViewHistory_explicitNricPrefix() throws InvalidInputFormatException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Basudeb2005"},"content":"        String[] result \u003d Parser.parseViewHistory(\"view-history ic/S1234567A\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Basudeb2005"},"content":"        assertEquals(\"ic\", result[0]);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Basudeb2005"},"content":"        assertEquals(\"S1234567A\", result[1]);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Basudeb2005"},"content":"    void parseViewHistory_invalidInput_expectException() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JudHoka"},"content":"        assertThrows(InvalidInputFormatException.class,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JudHoka"},"content":"                () -\u003e Parser.parseViewHistory(\"view-history\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JudHoka"},"content":"        assertThrows(InvalidInputFormatException.class,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JudHoka"},"content":"                () -\u003e Parser.parseViewHistory(\"view-history  \"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Basudeb2005"},"content":"    void parseStoreHistory_validInput_expectSuccess() throws InvalidInputFormatException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jyukuan"},"content":"        String[] result \u003d Parser.parseStoreHistory(\"store-history ic/S1234567D h/Allergic to nuts\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jyukuan"},"content":"        assertEquals(\"S1234567D\", result[0]);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jyukuan"},"content":"        assertEquals(\"Allergic to nuts\", result[1]);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Basudeb2005"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Basudeb2005"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Basudeb2005"},"content":"    void parseStoreHistory_missingFields_expectException() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JudHoka"},"content":"        assertThrows(InvalidInputFormatException.class,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jyukuan"},"content":"                () -\u003e Parser.parseStoreHistory(\"store-history ic/S1234567D\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JudHoka"},"content":"        assertThrows(InvalidInputFormatException.class,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jyukuan"},"content":"                () -\u003e Parser.parseStoreHistory(\"store-history h/Allergic to nuts\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Basudeb2005"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"chwenyee"},"content":"    void parse_addAppointmentCommand_expectAddAppointmentCommand() throws InvalidInputFormatException,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"chwenyee"},"content":"            UnknownCommandException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"chwenyee"},"content":"        Command command \u003d Parser.parse(\"add-appointment ic/S1234567D dt/2025-09-20 t/1900 dsc/Checkup\");","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"chwenyee"},"content":"        assertInstanceOf(AddAppointmentCommand.class, command);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"chwenyee"},"content":"    void parse_wrongFormatAddAppointment_expectInvalidInputFormatException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"chwenyee"},"content":"        String unfilledParams \u003d \"add-appointment ic/ dt/ t/ dsc/\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(unfilledParams));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"chwenyee"},"content":"        String missingIc \u003d \"add-appointment ic/ dt/2025-03-19 t/1200 dsc/medical check-up\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(missingIc));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"chwenyee"},"content":"        String missingDate \u003d \"add-appointment ic/S1234567D dt/ t/1200 dsc/medical check-up\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(missingDate));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"chwenyee"},"content":"        String missingTime \u003d \"add-appointment ic/S1234567D dt/2025-03-19 t/ dsc/medical check-up\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(missingTime));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"chwenyee"},"content":"        String missingDescription \u003d \"add-appointment ic/S1234567D dt/2025-03-19 t/1200 dsc/\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(missingDescription));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"chwenyee"},"content":"    void parse_deleteAppointmentCommand_expectDeleteAppointmentCommand() throws InvalidInputFormatException,","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"chwenyee"},"content":"            UnknownCommandException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"chwenyee"},"content":"        Command command \u003d Parser.parse(\"delete-appointment A100\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"chwenyee"},"content":"        assertInstanceOf(DeleteAppointmentCommand.class, command);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"chwenyee"},"content":"    void parse_listAppointmentCommand_expectListAppointmentCommand() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"chwenyee"},"content":"        Command command \u003d Parser.parse(\"list-appointment\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"chwenyee"},"content":"        assertInstanceOf(ListAppointmentCommand.class, command);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"chwenyee"},"content":"    void parse_unknownCommand_expectUnknownCommandException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"chwenyee"},"content":"        String userInput \u003d \"bee-boo\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"chwenyee"},"content":"        assertThrows(UnknownCommandException.class, () -\u003e Parser.parse(userInput));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"chwenyee"},"content":"    void parse_sortAppointmentCommand_expectSortAppointmentCommand() throws InvalidInputFormatException,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"chwenyee"},"content":"            UnknownCommandException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"chwenyee"},"content":"        Command byDate \u003d Parser.parse(\"sort-appointment byDate\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"chwenyee"},"content":"        assertInstanceOf(SortAppointmentCommand.class, byDate);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"chwenyee"},"content":"        Command byId \u003d Parser.parse(\"sort-appointment byId\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"chwenyee"},"content":"        assertInstanceOf(SortAppointmentCommand.class, byId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"chwenyee"},"content":"    void parse_invalidSortAppointmentCommand_expectException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(\"sort-appointment\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"chwenyee"},"content":"    void parse_byeCommand_expectByeCommand() throws InvalidInputFormatException,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"chwenyee"},"content":"            UnknownCommandException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"chwenyee"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"chwenyee"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"chwenyee"},"content":"    void parse_helpCommand_expectHelpCommand() throws InvalidInputFormatException,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"chwenyee"},"content":"            UnknownCommandException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"chwenyee"},"content":"        Command command \u003d Parser.parse(\"help\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"chwenyee"},"content":"        assertInstanceOf(HelpCommand.class, command);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"chwenyee"},"content":"    void parse_nullInput_expectException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(null));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"chwenyee"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"chwenyee"},"content":"    void parse_emptyInput_expectException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"chwenyee"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.parse(\"\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"chwenyee"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"chwenyee"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Basudeb2005"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"JudHoka":8,"chwenyee":204,"Basudeb2005":33,"jyukuan":5}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JudHoka"},"content":"call gradlew clean test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"if %errorlevel% equ 0 (","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JudHoka"},"content":"    echo All tests passed!","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"    exit /b 0","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":") else (","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"    echo Some tests failed!","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JudHoka"},"content":"    exit /b 1","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JudHoka":8,"-":6}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JudHoka"},"content":"# Change to script directory","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JudHoka"},"content":"# Run Gradle tests","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JudHoka"},"content":"./gradlew clean test","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JudHoka"},"content":"# Check test results","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JudHoka"},"content":"if [ $? -eq 0 ]; then","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JudHoka"},"content":"    echo \"All tests passed!\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JudHoka"},"content":"    echo \"Some tests failed!\"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JudHoka":7,"-":10}}]
